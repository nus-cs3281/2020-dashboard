[{"path":".eslintrc.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    \"env\": {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"        \"browser\": true"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extends\": \"airbnb-base\","},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"rules\": {"},{"lineNumber":7,"author":{"gitId":"Tejas2805"},"content":"        \"no-param-reassign\": 0,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        \"arrow-parens\": [\"error\", \"always\"],"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        \"indent\": [\"error\", 2, {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"            \"MemberExpression\": 2,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"            \"CallExpression\": { \"arguments\": 2 },"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            \"ArrayExpression\": 2,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"ignoredNodes\": ["},{"lineNumber":14,"author":{"gitId":"-"},"content":"                \"ConditionalExpression\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"            ]"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        }],"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \"func-names\": [\"error\", \"as-needed\"],"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \"no-alert\": 0,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \"linebreak-style\": 0"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Tejas2805":1,"-":20}},{"path":".github/ISSUE_TEMPLATE/bug-report.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yash-chowdhary"},"content":"---"},{"lineNumber":2,"author":{"gitId":"yash-chowdhary"},"content":"name: Bug Report"},{"lineNumber":3,"author":{"gitId":"yash-chowdhary"},"content":"about: Something isn\u0027t working as expected? Create a report to help us improve."},{"lineNumber":4,"author":{"gitId":"yash-chowdhary"},"content":"labels: \"c.Bug\""},{"lineNumber":5,"author":{"gitId":"yash-chowdhary"},"content":"---"},{"lineNumber":6,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":7,"author":{"gitId":"yash-chowdhary"},"content":"\u003c!--"},{"lineNumber":8,"author":{"gitId":"yash-chowdhary"},"content":"  Before opening a new issue, please search existing issues:  https://github.com/reposense/RepoSense/issues"},{"lineNumber":9,"author":{"gitId":"yash-chowdhary"},"content":"--\u003e"},{"lineNumber":10,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":11,"author":{"gitId":"yash-chowdhary"},"content":"**Tell us about your environment**"},{"lineNumber":12,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":13,"author":{"gitId":"yash-chowdhary"},"content":"* **RepoSense Version:**"},{"lineNumber":14,"author":{"gitId":"yash-chowdhary"},"content":"* **OS and Version:**"},{"lineNumber":15,"author":{"gitId":"yash-chowdhary"},"content":"* **Web Browser and Version (if applicable):**"},{"lineNumber":16,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":17,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":18,"author":{"gitId":"yash-chowdhary"},"content":"**Please include the steps to reproduce the bug.**"},{"lineNumber":19,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":20,"author":{"gitId":"yash-chowdhary"},"content":"1."},{"lineNumber":21,"author":{"gitId":"yash-chowdhary"},"content":"1."},{"lineNumber":22,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":23,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":24,"author":{"gitId":"yash-chowdhary"},"content":"**What was expected to happen?**"},{"lineNumber":25,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":26,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":27,"author":{"gitId":"yash-chowdhary"},"content":"**What actually happened? Please include a screenshot of the output.**"},{"lineNumber":28,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":29,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":30,"author":{"gitId":"yash-chowdhary"},"content":"**If possible, include the URL to your RepoSense report or log files (if any).**"},{"lineNumber":31,"author":{"gitId":"yash-chowdhary"},"content":""}],"authorContributionMap":{"yash-chowdhary":31}},{"path":".github/ISSUE_TEMPLATE/documentation.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yash-chowdhary"},"content":"---"},{"lineNumber":2,"author":{"gitId":"yash-chowdhary"},"content":"name: Documentation"},{"lineNumber":3,"author":{"gitId":"yash-chowdhary"},"content":"about: Suggest better documentation coverage for a particular tool or process."},{"lineNumber":4,"author":{"gitId":"yash-chowdhary"},"content":"labels: \"a-Docs\""},{"lineNumber":5,"author":{"gitId":"yash-chowdhary"},"content":"---"},{"lineNumber":6,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":7,"author":{"gitId":"yash-chowdhary"},"content":"\u003c!--"},{"lineNumber":8,"author":{"gitId":"yash-chowdhary"},"content":"  Before opening a new issue, please search existing issues:  https://github.com/reposense/RepoSense/issues"},{"lineNumber":9,"author":{"gitId":"yash-chowdhary"},"content":"--\u003e"},{"lineNumber":10,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":11,"author":{"gitId":"yash-chowdhary"},"content":"**What problem(s) did you run into that caused you to request additional documentation? What, if any, existing documentation relates to this proposal?**"},{"lineNumber":12,"author":{"gitId":"yash-chowdhary"},"content":"\u003c!--"},{"lineNumber":13,"author":{"gitId":"yash-chowdhary"},"content":"    Mention the part of the documentation you\u0027re referring to"},{"lineNumber":14,"author":{"gitId":"yash-chowdhary"},"content":"    and how it relates to your request."},{"lineNumber":15,"author":{"gitId":"yash-chowdhary"},"content":"--\u003e"},{"lineNumber":16,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":17,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":18,"author":{"gitId":"yash-chowdhary"},"content":"**What would you like added or modified in the documentation?**"},{"lineNumber":19,"author":{"gitId":"yash-chowdhary"},"content":"\u003c!--"},{"lineNumber":20,"author":{"gitId":"yash-chowdhary"},"content":"    Summarize the suggested addition to or"},{"lineNumber":21,"author":{"gitId":"yash-chowdhary"},"content":"    modification of existing documentation."},{"lineNumber":22,"author":{"gitId":"yash-chowdhary"},"content":"--\u003e"}],"authorContributionMap":{"yash-chowdhary":22}},{"path":".github/ISSUE_TEMPLATE/feature-request.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yash-chowdhary"},"content":"---"},{"lineNumber":2,"author":{"gitId":"yash-chowdhary"},"content":"name: Feature Request"},{"lineNumber":3,"author":{"gitId":"yash-chowdhary"},"content":"about: Suggest a new idea/feature for RepoSense"},{"lineNumber":4,"author":{"gitId":"yash-chowdhary"},"content":"labels: \"c.Feature\""},{"lineNumber":5,"author":{"gitId":"yash-chowdhary"},"content":"---"},{"lineNumber":6,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":7,"author":{"gitId":"yash-chowdhary"},"content":"\u003c!--"},{"lineNumber":8,"author":{"gitId":"yash-chowdhary"},"content":"  Before opening a new issue, please search existing issues:  https://github.com/reposense/RepoSense/issues"},{"lineNumber":9,"author":{"gitId":"yash-chowdhary"},"content":"--\u003e"},{"lineNumber":10,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":11,"author":{"gitId":"yash-chowdhary"},"content":"**What feature(s) would you like to see in RepoSense?**"},{"lineNumber":12,"author":{"gitId":"yash-chowdhary"},"content":"\u003c!--"},{"lineNumber":13,"author":{"gitId":"yash-chowdhary"},"content":"  Provide a clear and concise description of the feature."},{"lineNumber":14,"author":{"gitId":"yash-chowdhary"},"content":"--\u003e"},{"lineNumber":15,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":16,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":17,"author":{"gitId":"yash-chowdhary"},"content":"**Is the feature request related to a problem?**"},{"lineNumber":18,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":19,"author":{"gitId":"yash-chowdhary"},"content":"\u003c!--"},{"lineNumber":20,"author":{"gitId":"yash-chowdhary"},"content":"  Provide a clear and concise description of what the problem is."},{"lineNumber":21,"author":{"gitId":"yash-chowdhary"},"content":"  Ex. I have an issue when [...]"},{"lineNumber":22,"author":{"gitId":"yash-chowdhary"},"content":"--\u003e"},{"lineNumber":23,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":24,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":25,"author":{"gitId":"yash-chowdhary"},"content":"**If possible, describe the solution**"},{"lineNumber":26,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":27,"author":{"gitId":"yash-chowdhary"},"content":"\u003c!--"},{"lineNumber":28,"author":{"gitId":"yash-chowdhary"},"content":"  Here would be a good place to talk about the solution or the"},{"lineNumber":29,"author":{"gitId":"yash-chowdhary"},"content":"  approach that can be taken."},{"lineNumber":30,"author":{"gitId":"yash-chowdhary"},"content":"--\u003e"},{"lineNumber":31,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":32,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":33,"author":{"gitId":"yash-chowdhary"},"content":"**If applicable, describe alternatives you\u0027ve considered**"},{"lineNumber":34,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":35,"author":{"gitId":"yash-chowdhary"},"content":"\u003c!--"},{"lineNumber":36,"author":{"gitId":"yash-chowdhary"},"content":"  Let us know about other solutions you\u0027ve tried or researched."},{"lineNumber":37,"author":{"gitId":"yash-chowdhary"},"content":"--\u003e"},{"lineNumber":38,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":39,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":40,"author":{"gitId":"yash-chowdhary"},"content":"**Additional context**"},{"lineNumber":41,"author":{"gitId":"yash-chowdhary"},"content":""},{"lineNumber":42,"author":{"gitId":"yash-chowdhary"},"content":"\u003c!--"},{"lineNumber":43,"author":{"gitId":"yash-chowdhary"},"content":"  Is there anything else that can be added about the proposal?"},{"lineNumber":44,"author":{"gitId":"yash-chowdhary"},"content":"  You might want to link related issues here if you haven\u0027t already."},{"lineNumber":45,"author":{"gitId":"yash-chowdhary"},"content":"--\u003e"}],"authorContributionMap":{"yash-chowdhary":45}},{"path":".github/workflows/stale.yml","fileType":"yml","lines":[{"lineNumber":1,"author":{"gitId":"Tejas2805"},"content":"name: Close Stale Pull Requests"},{"lineNumber":2,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":3,"author":{"gitId":"Tejas2805"},"content":"on:"},{"lineNumber":4,"author":{"gitId":"Tejas2805"},"content":"  schedule:"},{"lineNumber":5,"author":{"gitId":"Tejas2805"},"content":"  # Runs every day at 00:00 UTC"},{"lineNumber":6,"author":{"gitId":"Tejas2805"},"content":"  - cron: \u00270 0 * * *\u0027"},{"lineNumber":7,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":8,"author":{"gitId":"Tejas2805"},"content":"jobs:"},{"lineNumber":9,"author":{"gitId":"Tejas2805"},"content":"  stale:"},{"lineNumber":10,"author":{"gitId":"Tejas2805"},"content":"    runs-on: ubuntu-18.04"},{"lineNumber":11,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":12,"author":{"gitId":"Tejas2805"},"content":"    steps:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    - uses: actions/stale@v3"},{"lineNumber":14,"author":{"gitId":"Tejas2805"},"content":"      with:"},{"lineNumber":15,"author":{"gitId":"Tejas2805"},"content":"        repo-token: ${{ secrets.GITHUB_TOKEN }}"},{"lineNumber":16,"author":{"gitId":"Tejas2805"},"content":"        days-before-stale: 30"},{"lineNumber":17,"author":{"gitId":"Tejas2805"},"content":"        days-before-close: 7"},{"lineNumber":18,"author":{"gitId":"Tejas2805"},"content":"        exempt-pr-labels: \u0027s.DoNotMerge\u0027"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        remove-stale-when-updated: true"},{"lineNumber":20,"author":{"gitId":"Tejas2805"},"content":"        stale-pr-label: \u0027Stale\u0027"},{"lineNumber":21,"author":{"gitId":"Tejas2805"},"content":"        stale-pr-message: |"},{"lineNumber":22,"author":{"gitId":"Tejas2805"},"content":"          Hi,"},{"lineNumber":23,"author":{"gitId":"Tejas2805"},"content":"          We are going to mark this PR as stale because it has been inactive for the past 30 days."},{"lineNumber":24,"author":{"gitId":"Tejas2805"},"content":"          If no further activity occurs within the following 7 days, it will be automatically closed so that others can take up the issue."},{"lineNumber":25,"author":{"gitId":"Tejas2805"},"content":"          If you are still working on this PR, please make a follow-up commit within 7 days and leave a comment to remove the stale label."},{"lineNumber":26,"author":{"gitId":"Tejas2805"},"content":"          Do let us know if you are stuck so that we can help you!\u0027"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        close-pr-message: |"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          This PR was closed because it has been marked as stale for 7 days with no activity."},{"lineNumber":29,"author":{"gitId":"-"},"content":"          Feel free to reopen this PR if you would like to continue working on it."}],"authorContributionMap":{"Tejas2805":24,"-":5}},{"path":".pug-lintrc.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"Tejas2805"},"content":"{"},{"lineNumber":2,"author":{"gitId":"Tejas2805"},"content":"  \"disallowAttributeConcatenation\": true,"},{"lineNumber":3,"author":{"gitId":"Tejas2805"},"content":"  \"disallowAttributeTemplateString\": null,"},{"lineNumber":4,"author":{"gitId":"Tejas2805"},"content":"  \"disallowClassAttributeWithStaticValue\": true,"},{"lineNumber":5,"author":{"gitId":"Tejas2805"},"content":"  \"disallowIdAttributeWithStaticValue\": true,"},{"lineNumber":6,"author":{"gitId":"Tejas2805"},"content":"  \"disallowHtmlText\": null,"},{"lineNumber":7,"author":{"gitId":"Tejas2805"},"content":"  \"disallowMultipleLineBreaks\": true,"},{"lineNumber":8,"author":{"gitId":"Tejas2805"},"content":"  \"disallowTemplateString\": null,"},{"lineNumber":9,"author":{"gitId":"Tejas2805"},"content":"  \"disallowTrailingSpaces\": true,"},{"lineNumber":10,"author":{"gitId":"Tejas2805"},"content":"  \"maximumLineLength\": 120,"},{"lineNumber":11,"author":{"gitId":"Tejas2805"},"content":"  \"requireClassLiteralsBeforeAttributes\": true,"},{"lineNumber":12,"author":{"gitId":"Tejas2805"},"content":"  \"requireIdLiteralsBeforeAttributes\": true,"},{"lineNumber":13,"author":{"gitId":"Tejas2805"},"content":"  \"requireLineFeedAtFileEnd\": true,"},{"lineNumber":14,"author":{"gitId":"Tejas2805"},"content":"  \"requireLowerCaseAttributes\": true,"},{"lineNumber":15,"author":{"gitId":"Tejas2805"},"content":"  \"requireLowerCaseTags\": true,"},{"lineNumber":16,"author":{"gitId":"Tejas2805"},"content":"  \"requireStrictEqualityOperators\": true,"},{"lineNumber":17,"author":{"gitId":"Tejas2805"},"content":"  \"validateAttributeSeparator\": { \"separator\": \", \", \"multiLineSeparator\": \",\\n  \" },"},{"lineNumber":18,"author":{"gitId":"Tejas2805"},"content":"  \"validateDivTags\": true,"},{"lineNumber":19,"author":{"gitId":"Tejas2805"},"content":"  \"validateIndentation\": 2"},{"lineNumber":20,"author":{"gitId":"Tejas2805"},"content":"}"},{"lineNumber":21,"author":{"gitId":"Tejas2805"},"content":" /**"},{"lineNumber":22,"author":{"gitId":"Tejas2805"},"content":"  * TODO"},{"lineNumber":23,"author":{"gitId":"Tejas2805"},"content":"  * Add rule for line wraps when available"},{"lineNumber":24,"author":{"gitId":"Tejas2805"},"content":"  */"}],"authorContributionMap":{"Tejas2805":24}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# RepoSense"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![Build Status](https://travis-ci.org/reposense/RepoSense.svg?branch\u003dmaster)](https://travis-ci.org/reposense/RepoSense)"},{"lineNumber":3,"author":{"gitId":"-"},"content":"[![Build status](https://ci.appveyor.com/api/projects/status/gsbkj5qby3pjd6nw/branch/master?svg\u003dtrue)](https://ci.appveyor.com/project/eugenepeh/reposense/branch/master)"},{"lineNumber":4,"author":{"gitId":"-"},"content":"[![Codacy Badge](https://api.codacy.com/project/badge/Grade/08a3527378464ed4a5ad62e27f590d6a)](https://www.codacy.com/app/reposense/RepoSense?utm_source\u003dgithub.com\u0026amp;utm_medium\u003dreferral\u0026amp;utm_content\u003dreposense/RepoSense\u0026amp;utm_campaign\u003dBadge_Grade)"},{"lineNumber":5,"author":{"gitId":"-"},"content":"[![codecov.io](https://codecov.io/gh/reposense/RepoSense/branch/master/graphs/badge.svg?branch\u003dmaster)](http://codecov.io/github/reposense/RepoSense?branch\u003dmaster)"},{"lineNumber":6,"author":{"gitId":"jamessspanggg"},"content":"[![Netlify Status](https://api.netlify.com/api/v1/badges/260983b3-589e-4619-a2e8-0bfb7a2b4422/deploy-status)](https://app.netlify.com/sites/reposense/deploys)"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"anubh-v"},"content":"RepoSense is a contribution analysis tool for Git repositories. It is particularly useful for those who want a chronological visualisation of the code contributions and commits made to a group of repositories. Educators can use RepoSense to track the work done in class projects, while team leads may use it to oversee their project teams."},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"* **User documentation** i.e., if you are interested in using RepoSense"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * [**Product website**](https://reposense.org)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * [**User guide**](https://reposense.org/ug/index.html)"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * [**About us**](https://reposense.org/about.html)"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* **Developer documentation** i.e., if you are interested in contributing code to RepoSense"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * [Developer guide](https://reposense.github.io/RepoSense/dg/index.html)"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * [User Guide for the latest `master` (not yet released to users)](https://reposense.github.io/RepoSense)"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"---------------------------------------"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"**Acknowledgements**: The web previews of RepoSense is powered by Netlify and Surge."},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003ca href\u003d\"https://www.netlify.com\"\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cimg src\u003d\"https://www.netlify.com/img/global/badges/netlify-color-bg.svg\"/\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003c/a\u003e"},{"lineNumber":25,"author":{"gitId":"jamessspanggg"},"content":"\u003ca href\u003d\"https://surge.sh\"\u003e"},{"lineNumber":26,"author":{"gitId":"jamessspanggg"},"content":"  \u003cimg width\u003d\"55px\" src\u003d\"https://surge.sh/images/logos/svg/surge-logo.svg\"\u003e"},{"lineNumber":27,"author":{"gitId":"jamessspanggg"},"content":"\u003c/a\u003e"}],"authorContributionMap":{"anubh-v":1,"jamessspanggg":4,"-":22}},{"path":"_reposense/config.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\t\"ignoreGlobList\": [\"**.adoc\", \"collate**\"],"},{"lineNumber":3,"author":{"gitId":"jamessspanggg"},"content":"\t\"formats\": [\"gradle\", \"pug\", \"java\", \"js\", \"md\", \"scss\", \"yml\"],"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\t\"ignoreCommitList\": [\"7b96c563eb2d3612aa5275364333664a18f01491\","},{"lineNumber":5,"author":{"gitId":"-"},"content":"\t\t\"90018e49f129ce7e0abdc8b18e91c9813588c601\","},{"lineNumber":6,"author":{"gitId":"-"},"content":"\t\t\"b8dbc3cf3c7c334665a828cf4236dcb442228c94\","},{"lineNumber":7,"author":{"gitId":"-"},"content":"\t\t\"832dd728bbfa203d92e4548325d64d5a151c013f\","},{"lineNumber":8,"author":{"gitId":"-"},"content":"\t\t\"503c43ed1c90e8dcb46173c8f7c8e62f9286acbf\","},{"lineNumber":9,"author":{"gitId":"-"},"content":"\t\t\"14faede3d27097a74063fd407b210f8a5f7e3de5\"],"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\t\"authors\":"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\t["},{"lineNumber":12,"author":{"gitId":"-"},"content":"\t\t{"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"eugenepeh\","},{"lineNumber":14,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Eugene\","},{"lineNumber":15,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Eugene Peh\"]"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\t\t},"},{"lineNumber":17,"author":{"gitId":"jamessspanggg"},"content":"\t\t{"},{"lineNumber":18,"author":{"gitId":"jamessspanggg"},"content":"\t\t\t\"githubId\": \"jamessspanggg\","},{"lineNumber":19,"author":{"gitId":"jamessspanggg"},"content":"\t\t\t\"displayName\": \"James\","},{"lineNumber":20,"author":{"gitId":"jamessspanggg"},"content":"\t\t\t\"authorNames\": [\"James Pang\"]"},{"lineNumber":21,"author":{"gitId":"jamessspanggg"},"content":"\t\t},"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\t\t{"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"ongspxm\","},{"lineNumber":24,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Metta\","},{"lineNumber":25,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Metta Ong\"]"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\t\t},"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\t\t{"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"yamidark\","},{"lineNumber":29,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Jun An\","},{"lineNumber":30,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Jun An\"],"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\t\t\t\"ignoreGlobList\": [\"**.html\", \"**.jade\"]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\t\t},"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\t\t{"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\t\t\t\"githubId\": \"yong24s\","},{"lineNumber":35,"author":{"gitId":"-"},"content":"\t\t\t\"displayName\": \"Yong Hao\","},{"lineNumber":36,"author":{"gitId":"-"},"content":"\t\t\t\"authorNames\": [\"Yong Hao TENG\"],"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\t\t\t\"ignoreGlobList\": [\"**.css\", \"**.html\", \"**.jade\", \"**.js\"]"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\t\t}"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\t]"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jamessspanggg":6,"-":34}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027idea\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":7,"author":{"gitId":"Tejas2805"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.2.0\u0027"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    id \u0027com.liferay.node\u0027 version \u00274.4.0\u0027"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    id \u0027com.github.psxpaul.execfork\u0027 version \u00270.1.8\u0027"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    id \u0027com.palantir.git-version\u0027 version \u00270.12.3\u0027"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027reposense.RepoSense\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"node.nodeVersion \u003d \u002710.16.0\u0027"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_1_8"},{"lineNumber":18,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_1_8"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"configurations {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    systemtestImplementation.extendsFrom testImplementation"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    systemtestRuntime.extendsFrom testRuntime"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    implementation  group: \u0027com.google.code.gson\u0027 ,name: \u0027gson\u0027, version:\u00272.8.5\u0027"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    implementation  group: \u0027net.freeutils\u0027, name: \u0027jlhttp\u0027, version: \u00272.4\u0027"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    implementation  group: \u0027net.sourceforge.argparse4j\u0027, name: \u0027argparse4j\u0027, version: \u00270.8.1\u0027"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    implementation  group: \u0027org.apache.ant\u0027, name: \u0027ant\u0027, version: \u00271.10.3\u0027"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    implementation  group: \u0027org.apache.commons\u0027, name: \u0027commons-csv\u0027, version: \u00271.6\u0027"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.apache.commons\u0027, name: \u0027commons-text\u0027, version: \u00271.9\u0027"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    implementation  group: \u0027org.fusesource.jansi\u0027, name: \u0027jansi\u0027, version: \u00271.18\u0027"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027junit\u0027, name: \u0027junit\u0027, version: \u00274.12\u0027"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"sourceSets {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    systemtest {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        compileClasspath +\u003d main.output + test.output"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        runtimeClasspath +\u003d main.output + test.output"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        java.srcDir file(\u0027src/systemtest/java\u0027)"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        resources.srcDir file(\u0027src/systemtest/resources\u0027)"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"wrapper {"},{"lineNumber":51,"author":{"gitId":"Tejas2805"},"content":"    gradleVersion \u003d \u00275.2.1\u0027"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    //the second arguments indicates the default value associated with the property."},{"lineNumber":56,"author":{"gitId":"-"},"content":"    args System.getProperty(\u0027args\u0027, \u0027\u0027).split()"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    systemProperty \"version\", getRepoSenseVersion()"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.1\u0027"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    configDir \u003d file(\"$rootProject.projectDir/config/checkstyle\")"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"idea {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    module {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        sourceSets.systemtest.allSource.srcDirs.each { srcDir -\u003e module.testSourceDirs +\u003d srcDir }"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"jacoco {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    toolVersion \u003d \"0.8.3\""},{"lineNumber":73,"author":{"gitId":"-"},"content":"}"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"jacocoTestReport {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    reports {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        html.enabled \u003d true"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        xml.enabled true"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        csv.enabled false"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        html.destination file(\"${buildDir}/jacocoHtml\")"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        events \u0027passed\u0027, \u0027skipped\u0027, \u0027failed\u0027"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d true"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027RepoSense.jar\u0027"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    destinationDir \u003d file(\"${buildDir}/jar/\")"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    manifest {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \tattributes \u0027Implementation-Version\u0027: getRepoSenseVersion()"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"task zipReport(dependsOn: \u0027npmRunSpuild\u0027, type: Zip) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    from \u0027frontend/build/\u0027"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    baseName \u003d \u0027templateZip\u0027"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    destinationDir \u003d file(\u0027src/main/resources\u0027)"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"tasks.shadowJar.dependsOn(\u0027zipReport\u0027);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"tasks.compileJava.dependsOn(\u0027zipReport\u0027);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"tasks.run.dependsOn(\u0027compileJava\u0027);"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"task systemtest(dependsOn: \u0027zipReport\u0027, type: Test) {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    testClassesDirs \u003d sourceSets.systemtest.output.classesDirs"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    classpath \u003d sourceSets.systemtest.runtimeClasspath"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        events \u0027passed\u0027, \u0027skipped\u0027, \u0027failed\u0027"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d true"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"task startServerInBackground(dependsOn: \u0027classes\u0027, type: com.github.psxpaul.task.JavaExecFork) {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    main \u003d mainClassName"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    classpath \u003d sourceSets.main.runtimeClasspath"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    args \u003d [\u0027--repo\u0027, \u0027https://github.com/reposense/RepoSense.git\u0027, \u0027https://github.com/reposense/testrepo-Empty.git\u0027, \u0027--since\u0027, \u0027d1\u0027, \u0027--view\u0027]"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    String versionJvmArgs \u003d \u0027-Dversion\u003d\u0027 + getRepoSenseVersion()"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    jvmArgs \u003d [ versionJvmArgs ]"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    waitForPort \u003d 9000"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"task installCypress(type: com.liferay.gradle.plugins.node.tasks.NpmInstallTask) {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    workingDir \u003d file(\u0027frontend/cypress/\u0027)"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"task cypress(dependsOn: [\u0027installCypress\u0027, \u0027startServerInBackground\u0027], type: com.liferay.gradle.plugins.node.tasks.ExecuteNpmTask) {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    tasks.startServerInBackground.mustRunAfter(\u0027installCypress\u0027)"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"    workingDir \u003d file(\u0027frontend/cypress/\u0027)"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    args \u003d [\"run-script\", \"debug\"]"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"task frontendTest(dependsOn: [\u0027installCypress\u0027, \u0027startServerInBackground\u0027], type: com.liferay.gradle.plugins.node.tasks.ExecuteNpmTask) {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    tasks.startServerInBackground.mustRunAfter(\u0027installCypress\u0027)"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"    workingDir \u003d file(\u0027frontend/cypress/\u0027)"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    args \u003d [\"run-script\", \"tests\"]"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"    // Run tests in CI without slow motion"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    if (project.hasProperty(\u0027ci\u0027)) {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        args \u003d [\"run-script\", \"ci\"]"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"tasks.withType(Copy) {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    includeEmptyDirs \u003d true"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {"},{"lineNumber":157,"author":{"gitId":"Tejas2805"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)"},{"lineNumber":158,"author":{"gitId":"Tejas2805"},"content":"    classDirectories.from files(sourceSets.main.output)"},{"lineNumber":159,"author":{"gitId":"Tejas2805"},"content":"    executionData.from files(jacocoTestReport.executionData)"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"    afterEvaluate {"},{"lineNumber":162,"author":{"gitId":"Tejas2805"},"content":"        classDirectories.from files(classDirectories.files.collect {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        })"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"    reports {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        html.enabled \u003d true"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"String getRepoSenseVersion() {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    String repoSenseVersion \u003d project.property(\"version\")"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    if (repoSenseVersion.equals(\"unspecified\")) {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        repoSenseVersion \u003d versionDetails().commitDistance \u003d\u003d 0 ? versionDetails().lastTag : versionDetails().gitHash"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    return repoSenseVersion"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"Tejas2805"},"content":"jacocoTestReport.executionData(systemtest)"},{"lineNumber":182,"author":{"gitId":"Tejas2805"},"content":"jacocoTestReport.executionData(frontendTest)"},{"lineNumber":183,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027build\u0027, \u0027systemtest\u0027, \u0027frontendTest\u0027, \u0027coverage\u0027"}],"authorContributionMap":{"Tejas2805":9,"-":175}},{"path":"config/gh-actions/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"-"},"content":"# Checks for trailing whitespace"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"anubh-v"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 \u0027:/!*/require_trailing_whitespaces/*\u0027 |"},{"lineNumber":5,"author":{"gitId":"-"},"content":"awk \u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    BEGIN {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        FS \u003d \":\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"        OFS \u003d \":\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"        ret \u003d 0"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        # which do not properly handle trailing whitespace."},{"lineNumber":14,"author":{"gitId":"-"},"content":"        # (e.g. GitHub web editor)"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        if ($1 ~ /\\.md$/) {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            severity \u003d \"WARN\""},{"lineNumber":17,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            severity \u003d \"ERROR\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"            ret \u003d 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        print severity, $1, $2, \" trailing whitespace.\""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    END {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exit ret"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u0027"}],"authorContributionMap":{"anubh-v":1,"-":25}},{"path":"docs/_markbind/variables.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"jamessspanggg"},"content":"{"},{"lineNumber":2,"author":{"gitId":"jamessspanggg"},"content":"    \"jsonVariableExample\": \"Your variables can be defined here as well\""},{"lineNumber":3,"author":{"gitId":"jamessspanggg"},"content":"}"}],"authorContributionMap":{"jamessspanggg":3}},{"path":"docs/_markbind/variables.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_announcement\"\u003e\u003cmd\u003e:fas-bell:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_book\"\u003e\u003cmd\u003e:fas-book:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_calendar\"\u003e\u003cmd\u003e:fas-calendar-alt:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_dislike\"\u003e\u003cmd\u003e:fas-thumbs-down:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_example\"\u003e\u003cmd\u003e:fas-cube:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_embedding\"\u003e\u003cmd\u003e:glyphicon-log-in:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_exercise\"\u003e\u003cmd\u003e:fas-dumbbell:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_extra\"\u003e\u003cspan class\u003d\u0027badge badge-pill badge-secondary\u0027\u003e\u003cmd\u003e:fas-plus: extra\u003c/md\u003e\u003c/span\u003e\u003c/span\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_info\"\u003e\u003cmd\u003e:fas-info-circle:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_like\"\u003e\u003cmd\u003e:fas-thumbs-up:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_linux\"\u003e\u003cmd\u003e:fab-linux:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_level_basic\"\u003e\u003cmd\u003e\u003cspan class\u003d\"badge badge-pill badge-danger\"\u003e:far-star:\u003c/span\u003e\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_level_intermediate\"\u003e\u003cmd\u003e\u003cspan class\u003d\"badge badge-pill badge-warning text-white\"\u003e:far-star::far-star:\u003c/span\u003e\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_level_advanced\"\u003e\u003cmd\u003e\u003cspan class\u003d\"badge badge-pill badge-success\"\u003e:far-star::far-star::far-star:\u003c/span\u003e\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_important_big_red\"\u003e\u003cfont color\u003d\"red\"\u003e\u003cbig\u003e:glyphicon-exclamation-sign:\u003c/big\u003e\u003c/font\u003e\u003c/span\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_important\"\u003e\u003cmd\u003e:glyphicon-exclamation-sign:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_new_window\"\u003e\u003cmd\u003e:glyphicon-new-window:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_outcome\"\u003e\u003cmd\u003e:fas-trophy:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_output\"\u003e\u003cmd\u003e:fas-arrow-down:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_output_right\"\u003e\u003cmd\u003e:fas-arrow-right:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_print\"\u003e\u003cmd\u003e:glyphicon-print:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_prereq\"\u003e\u003cmd\u003e:glyphicon-education:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_preview\"\u003e\u003cmd\u003e:glyphicon-eye-open:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_pro_tip\"\u003e\u003cspan class\u003d\"badge badge-pill badge-warning\"\u003e:fas-lightbulb: PRO TIP\u003c/span\u003e\u003c/span\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_Q\"\u003e\u003cmd\u003e:glyphicon-question-sign:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_Q_A\"\u003e{{ icon_Q | safe }}:glyphicon-ok-sign:\u003c/span\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_resource\"\u003e\u003cmd\u003e:fas-paperclip:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_terminal\"\u003e\u003csmal\u003e\u003cspan class\u003d\"badge badge-secondary\"\u003e\u0026gt;_\u003c/span\u003e\u003c/smal\u003e\u003c/span\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_text\"\u003e\u003cmd\u003e:far-file-alt:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_tick\"\u003e\u003cmd\u003e:fas-check:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_tip\"\u003e\u003cspan class\u003d\"badge badge-pill badge-warning\"\u003e:fas-lightbulb:\u003c/span\u003e\u003c/span\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_tick_green\"\u003e\u003cspan style\u003d\"color:green\"\u003e{{ icon_tick | safe }}\u003c/span\u003e\u003c/span\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_todo\"\u003e\u003cmd\u003e:glyphicon-check:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_slides\"\u003e\u003cmd\u003e:far-images:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_video\"\u003e\u003cmd\u003e:glyphicon-facetime-video:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_windows\"\u003e\u003cmd\u003e:fab-windows:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_x\"\u003e\u003cmd\u003e:fas-times:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_x_red\"\u003e\u003cspan style\u003d\"color:red\"\u003e{{ icon_x | safe }}\u003c/span\u003e\u003c/span\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"bad\"\u003e\u003cfont color\u003d\"red\"\u003e\u003cmd\u003e**{{ icon_dislike | safe }} Bad**\u003c/md\u003e\u003c/font\u003e\u003c/span\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"good\"\u003e\u003cfont color\u003d\"green\"\u003e\u003cmd\u003e**{{ icon_like | safe }} Good**\u003c/md\u003e\u003c/font\u003e\u003c/span\u003e"},{"lineNumber":41,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":42,"author":{"gitId":"jamessspanggg"},"content":"\u003cvariable from\u003d\"variables.json\" /\u003e"}],"authorContributionMap":{"jamessspanggg":2,"-":40}},{"path":"docs/about.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cvariable name\u003d\"title\"\u003eAbout us\u003c/variable\u003e"},{"lineNumber":2,"author":{"gitId":"jamessspanggg"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"jamessspanggg"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":5,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-3\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"Tejas2805"},"content":"RepoSense is a project based in the [National University of Singapore, School of Computing](http://www.comp.nus.edu.sg/), funded by a _Teaching Enhancement Grant_ from the [NUS Center for Development of Teaching and Learning](http://www.cdtl.nus.edu.sg/)."},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Current team"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"### [Damith C. Rajapakse](http://www.comp.nus.edu.sg/~damithch)"},{"lineNumber":15,"author":{"gitId":"-"},"content":"![](https://avatars.githubusercontent.com/u/1673303?s\u003d150\u0026v\u003d4)\u003cbr/\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Role**: Project Advisor"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"### [Wang Chao](https://github.com/fzdy1914)"},{"lineNumber":21,"author":{"gitId":"-"},"content":"![](https://avatars3.githubusercontent.com/u/35621726?s\u003d150\u0026v\u003d4)\u003cbr/\u003e"},{"lineNumber":22,"author":{"gitId":"jamessspanggg"},"content":"**Role**: Project Lead [2021 Jan - ]\u003cbr/\u003e"},{"lineNumber":23,"author":{"gitId":"jamessspanggg"},"content":"Maintainer [2020 May- 2021 Jan]\u003cbr/\u003e"},{"lineNumber":24,"author":{"gitId":"jamessspanggg"},"content":"Committer [2019 May - 2020 May]\u003cbr/\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Contributor [2018 Dec - 2019 May]\u003cbr/\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"jamessspanggg"},"content":"### [Peh Xian Bin, Eugene](https://github.com/eugenepeh)"},{"lineNumber":30,"author":{"gitId":"jamessspanggg"},"content":"![](https://avatars.githubusercontent.com/u/19277206?s\u003d150\u0026v\u003d4)\u003cbr/\u003e"},{"lineNumber":31,"author":{"gitId":"jamessspanggg"},"content":"**Role**: Maintainer [2020 May - ]\u003cbr/\u003e"},{"lineNumber":32,"author":{"gitId":"jamessspanggg"},"content":"Project Lead [2018 May - 2020 May]\u003cbr/\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"### [James Pang Mun Wai](https://github.com/jamessspanggg)"},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"![](https://avatars1.githubusercontent.com/u/32864116?s\u003d150\u0026v\u003d4)\u003cbr/\u003e"},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":"**Role**: Maintainer [2021 Jan - ]\u003cbr/\u003e"},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":"Committer [2020 May - 2021 Jan]\u003cbr/\u003e"},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":"Contributor [2019 May - 2020 May]\u003cbr/\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"anubh-v"},"content":"### [Liu Yiwen](https://github.com/0blivious)"},{"lineNumber":44,"author":{"gitId":"anubh-v"},"content":"**Role**: Contributor [2019 August - ]\u003cbr/\u003e"},{"lineNumber":45,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":47,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":48,"author":{"gitId":"anubh-v"},"content":"### [Tejas Bhuwania](https://github.com/Tejas2805)"},{"lineNumber":49,"author":{"gitId":"anubh-v"},"content":"![](https://avatars2.githubusercontent.com/u/35946746?s\u003d150\u0026v\u003d4)\u003cbr/\u003e"},{"lineNumber":50,"author":{"gitId":"anubh-v"},"content":"**Role**: Contributor [2019 August - ]\u003cbr/\u003e"},{"lineNumber":51,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":53,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":54,"author":{"gitId":"anubh-v"},"content":"### [Anubhav](https://github.com/anubh-v)"},{"lineNumber":55,"author":{"gitId":"anubh-v"},"content":"**Role**: Contributor [2019 September - ]\u003cbr/\u003e"},{"lineNumber":56,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":58,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":59,"author":{"gitId":"anubh-v"},"content":"### [Ang Ze Yu](https://github.com/ang-zeyu)"},{"lineNumber":60,"author":{"gitId":"anubh-v"},"content":"**Role**: Contributor [2020 January - ]\u003cbr/\u003e"},{"lineNumber":61,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":63,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":64,"author":{"gitId":"jamessspanggg"},"content":"### [Chan Ger Hean](https://github.com/gerhean)"},{"lineNumber":65,"author":{"gitId":"jamessspanggg"},"content":"**Role**: Contributor [2021 January - ]\u003cbr/\u003e"},{"lineNumber":66,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":68,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":69,"author":{"gitId":"jamessspanggg"},"content":"### [Hsu Zhong Jun](https://github.com/dcshzj)"},{"lineNumber":70,"author":{"gitId":"jamessspanggg"},"content":"**Role**: Contributor [2021 January - ]\u003cbr/\u003e"},{"lineNumber":71,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":73,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":74,"author":{"gitId":"jamessspanggg"},"content":"### [Huang Chengyu](https://github.com/HCY123902)"},{"lineNumber":75,"author":{"gitId":"jamessspanggg"},"content":"**Role**: Contributor [2021 January - ]\u003cbr/\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"jamessspanggg"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":78,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":79,"author":{"gitId":"jamessspanggg"},"content":"### [Roland Yu Wenyang](https://github.com/rolandyuwy)"},{"lineNumber":80,"author":{"gitId":"jamessspanggg"},"content":"**Role**: Contributor [2021 January - ]\u003cbr/\u003e"},{"lineNumber":81,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":82,"author":{"gitId":"jamessspanggg"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"## Past Members"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"### [Ma Tanghao](https://github.com/harryggg)"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Main developer for the initial version [2017 May - 2018 May]"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"anubh-v"},"content":"### [Ong Shu Peng](https://github.com/ongspxm)"},{"lineNumber":92,"author":{"gitId":"anubh-v"},"content":"![](https://avatars0.githubusercontent.com/u/1430854?s\u003d150\u0026v\u003d4)\u003cbr/\u003e"},{"lineNumber":93,"author":{"gitId":"anubh-v"},"content":"**Role**: Area Lead for UI [2018 Dec - 2019 May]\u003cbr/\u003e"},{"lineNumber":94,"author":{"gitId":"anubh-v"},"content":"Committer [2018 Aug - 2018 Dec]\u003cbr/\u003e"},{"lineNumber":95,"author":{"gitId":"anubh-v"},"content":"Contributor [2018 May - 2018 Aug]\u003cbr/\u003e"},{"lineNumber":96,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":98,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":99,"author":{"gitId":"anubh-v"},"content":"### [Tan Jun An](https://github.com/yamidark)"},{"lineNumber":100,"author":{"gitId":"anubh-v"},"content":"![](https://avatars3.githubusercontent.com/u/18352498?s\u003d150\u0026v\u003d4)\u003cbr/\u003e"},{"lineNumber":101,"author":{"gitId":"anubh-v"},"content":"**Role**: Area Lead for Code Quality [2018 Aug - 2019 April]\u003cbr/\u003e"},{"lineNumber":102,"author":{"gitId":"anubh-v"},"content":"Committer [2018 May - 2018 Aug]\u003cbr/\u003e"},{"lineNumber":103,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":105,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":106,"author":{"gitId":"jamessspanggg"},"content":"### [Teng Yong Hao](https://github.com/yong24s)"},{"lineNumber":107,"author":{"gitId":"jamessspanggg"},"content":"![](https://avatars2.githubusercontent.com/u/2003406?s\u003d150\u0026v\u003d4)\u003cbr/\u003e"},{"lineNumber":108,"author":{"gitId":"jamessspanggg"},"content":"**Role**: "},{"lineNumber":109,"author":{"gitId":"jamessspanggg"},"content":"Mentor [2018 Dec - 2020 May]\u003cbr/\u003e"},{"lineNumber":110,"author":{"gitId":"jamessspanggg"},"content":"Committer [2018 Aug - 2018 Dec]\u003cbr/\u003e"},{"lineNumber":111,"author":{"gitId":"jamessspanggg"},"content":"Contributor [2018 May - 2018 Aug]\u003cbr/\u003e"},{"lineNumber":112,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":113,"author":{"gitId":"jamessspanggg"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":114,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"### [Aditya Agarwal](https://github.com/adityaa1998)"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Contributor [2018 May - 2018 Aug]"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"### [Apoorva Ullas](https://github.com/apoorva17)"},{"lineNumber":121,"author":{"gitId":"-"},"content":"Contributor [2018 Aug - 2019 May]"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"### [Chelsey Ong Hee](https://github.com/chelseyong)"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Contributor [2018 Dec - 2019 May]"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"### [Gilbert Emerson](https://github.com/emer7)"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Contributor [2018 Dec - 2019 May]"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"### [Teo Ming Yi](https://github.com/myteo)"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Contributor [2018 Dec - 2019 May]"},{"lineNumber":137,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":139,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":140,"author":{"gitId":"anubh-v"},"content":"### [Jin Minjia](https://github.com/bluein-green)"},{"lineNumber":141,"author":{"gitId":"anubh-v"},"content":"**Role**: Contributor [2019 May - 2019 Aug]\u003cbr/\u003e"},{"lineNumber":142,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":143,"author":{"gitId":"jamessspanggg"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":144,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":145,"author":{"gitId":"jamessspanggg"},"content":"### [Lee Jin Yao](https://github.com/jylee-git)"},{"lineNumber":146,"author":{"gitId":"jamessspanggg"},"content":"![](https://avatars3.githubusercontent.com/u/35756209?s\u003d150\u0026v\u003d4)\u003cbr/\u003e"},{"lineNumber":147,"author":{"gitId":"jamessspanggg"},"content":"**Role**: Contributor [2019 May - 2020 May]\u003cbr/\u003e"},{"lineNumber":148,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":149,"author":{"gitId":"jamessspanggg"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":150,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":151,"author":{"gitId":"jamessspanggg"},"content":"### [Chong Chee Yuan](https://github.com/ccyccyccy)"},{"lineNumber":152,"author":{"gitId":"jamessspanggg"},"content":"**Role**: Contributor [2020 January - 2020 May]\u003cbr/\u003e"},{"lineNumber":153,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":154,"author":{"gitId":"jamessspanggg"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":155,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":156,"author":{"gitId":"jamessspanggg"},"content":"### [Ni Tianzhen](https://github.com/niqiukun)"},{"lineNumber":157,"author":{"gitId":"jamessspanggg"},"content":"**Role**: Contributor [2020 January - 2020 May]\u003cbr/\u003e"},{"lineNumber":158,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":159,"author":{"gitId":"jamessspanggg"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":160,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":161,"author":{"gitId":"jamessspanggg"},"content":"### [Yash Chowdhary](https://github.com/yash-chowdhary)"},{"lineNumber":162,"author":{"gitId":"jamessspanggg"},"content":"![](https://avatars2.githubusercontent.com/u/21968718?s\u003d150\u0026v\u003d4)\u003cbr/\u003e"},{"lineNumber":163,"author":{"gitId":"jamessspanggg"},"content":"**Role**: Contributor [2020 January - 2020 May]\u003cbr/\u003e"}],"authorContributionMap":{"anubh-v":38,"Tejas2805":1,"jamessspanggg":58,"-":66}},{"path":"docs/dg/architecture.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cvariable name\u003d\"title\"\u003eArchitecture\u003c/variable\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":" ![architecture](../images/architecture.png)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"*Figure 1. Overall architecture of RepoSense*"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Parser(ConfigParser)"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"[`Parser`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/parser) contains three components:"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * [`ArgsParser`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/parser/ArgsParser.java): Parses the user-supplied command line arguments into a `CliArguments` object."},{"lineNumber":18,"author":{"gitId":"-"},"content":" * [`CsvParser`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/parser/CsvParser.java): Abstract generic class for CSV parsing functionality. The following three classes extend `CsvParser`."},{"lineNumber":19,"author":{"gitId":"-"},"content":"   * [`AuthorConfigCsvParser`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/parser/AuthorConfigCsvParser.java): Parses the `author-config.csv` config file into a list of `AuthorConfiguration` for each repository to analyze."},{"lineNumber":20,"author":{"gitId":"-"},"content":"   * [`GroupConfigCsvParser`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/parser/GroupConfigCsvParser.java): Parses the `group-config.csv` config file into a list of `GroupConfiguration` for each repository to analyze."},{"lineNumber":21,"author":{"gitId":"-"},"content":"   * [`RepoConfigCsvParser`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/parser/RepoConfigCsvParser.java): Parses the `repo-config.csv` config file into a list of `RepoConfiguration` for each repository to analyze."},{"lineNumber":22,"author":{"gitId":"-"},"content":" * [`JsonParser`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/parser/JsonParser.java): Abstract generic class for JSON parsing functionality. The following class extends `JsonParser` class:"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   * [`StandaloneConfigJsonParser`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/parser/StandaloneConfigJsonParser.java): Parses the `_reposense/config.json` config file into a `StandaloneConfig`."},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Git"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"[`Git`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git) package contains the wrapper classes for respective *git* commands."},{"lineNumber":30,"author":{"gitId":"-"},"content":" * [`GitBlame`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitBlame.java): Wrapper class for `git blame` functionality. Traces the revision and author last modified each line of a file."},{"lineNumber":31,"author":{"gitId":"-"},"content":" * [`GitBranch`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitBranch.java): Wrapper class for `git branch` functionality. Gets the name of the working branch of the target repo."},{"lineNumber":32,"author":{"gitId":"-"},"content":" * [`GitCheckout`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitCheckout.java): Wrapper class for `git checkout` functionality. Checks out the repository by branch name or commit hash."},{"lineNumber":33,"author":{"gitId":"-"},"content":" * [`GitClone`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitClone.java): Wrapper class for `git clone` functionality. Clones the repository from *GitHub* into a temporary folder in order to run the analysis."},{"lineNumber":34,"author":{"gitId":"-"},"content":" * [`GitDiff`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitDiff.java): Wrapper class for `git diff` functionality. Obtains the changes between commits."},{"lineNumber":35,"author":{"gitId":"-"},"content":" * [`GitLog`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitLog.java): Wrapper class for `git log` functionality. Obtains the commit logs and the authors\u0027 info."},{"lineNumber":36,"author":{"gitId":"-"},"content":" * [`GitLsTree`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitLsTree.java): Wrapper class for `git ls-tree` functionality. Ensures that the tracked files do not contain any paths with illegal characters for Windows users."},{"lineNumber":37,"author":{"gitId":"-"},"content":" * [`GitRevList`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitRevList.java): Wrapper class for `git rev-list` functionality. Retrieves the commit objects in reverse chronological order."},{"lineNumber":38,"author":{"gitId":"-"},"content":" * [`GitRevParse`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitRevParse.java): Wrapper class for `git rev-parse` functionality. Ensures that the branch of the repo is to be analyzed exists."},{"lineNumber":39,"author":{"gitId":"-"},"content":" * [`GitShortlog`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitShortlog.java): Wrapper class for `git shortlog` functionality. Obtains the list of authors who have contributed to the target repo."},{"lineNumber":40,"author":{"gitId":"-"},"content":" * [`GitUtil`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitUtil.java): Contains helper functions used by the other Git classes above."},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"## CommitsReporter"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"Tejas2805"},"content":"[`CommitsReporter`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/commits/CommitsReporter.java) is responsible for analyzing the **commit** history and generating a [`CommitContributionSummary`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/commits/model/CommitContributionSummary.java) for each repository. `CommitContributionSummary` contains information such as each author\u0027s daily and weekly contribution and the variance of their contribution. `CommitsReporter`"},{"lineNumber":47,"author":{"gitId":"Tejas2805"},"content":" 1. uses [`CommitInfoExtractor`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/commits/CommitInfoExtractor.java) to run the `git log` command, which generates each commit\u0027s statistics within the date range."},{"lineNumber":48,"author":{"gitId":"-"},"content":" 1. generates a [`CommitInfo`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/commits/model/CommitInfo.java) for each commit, which contains the `infoLine` and `statLine`."},{"lineNumber":49,"author":{"gitId":"-"},"content":" 1. uses [`CommitInfoAnalyzer`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/commits/CommitInfoAnalyzer.java) to extract the relevant data from `CommitInfo` into a [`CommitResult`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/commits/model/CommitResult.java), such as the number of line insertions and deletions in the commit and the author of the commit."},{"lineNumber":50,"author":{"gitId":"-"},"content":" 1. uses [`CommitResultAggregator`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/commits/CommitResultAggregator.java) to aggregate all `CommitResult` into a [`CommitContributionSummary`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/commits/model/CommitContributionSummary.java)."},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"## AuthorshipReporter"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"Tejas2805"},"content":"[`AuthorshipReporter`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/authorship/AuthorshipReporter.java) is responsible for analyzing the whitelisted **files**, traces the original author for each line of text/code, and generating an [`AuthorshipSummary`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/authorship/model/AuthorshipSummary.java) for each repository. `AuthorshipSummary` contains the analysis results of the whitelisted files and the number of line contributions each author made. `AuthorshipReporter`"},{"lineNumber":57,"author":{"gitId":"-"},"content":" 1. uses [`FileInfoExtractor`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/authorship/FileInfoExtractor.java) to traverse the repository to find all relevant files."},{"lineNumber":58,"author":{"gitId":"-"},"content":" 1. generates a [`FileInfo`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/authorship/model/FileInfo.java) for each relevant file, which contains the path to the file and a list of [`LineInfo`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/authorship/model/LineInfo.java) representing each line of the file."},{"lineNumber":59,"author":{"gitId":"-"},"content":" 1. uses [`FileInfoAnalyzer`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/authorship/FileInfoAnalyzer.java) to analyze each file, using `git blame` or annotations, and finds the `Author` for each `LineInfo`."},{"lineNumber":60,"author":{"gitId":"-"},"content":" 1. generates a [`FileResult`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/authorship/model/FileResult.java) for each file, which consolidates the authorship results into a *Map* of each author\u0027s line contribution to the file."},{"lineNumber":61,"author":{"gitId":"-"},"content":" 1. uses [`FileResultAggregator`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/authorship/FileResultAggregator.java) to aggregate all `FileResult` into an `AuthorshipSummary`."},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"## ReportGenerator(Main)"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"Tejas2805"},"content":"[`ReportGenerator`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/report/ReportGenerator.java)"},{"lineNumber":68,"author":{"gitId":"-"},"content":" 1. clones repositories using the `GitClone` API in a multi-threaded fashion."},{"lineNumber":69,"author":{"gitId":"-"},"content":"    * By default, 4 threads are used for cloning; the number of threads can be specified using the CLI argument `--cloning-threads \u003cthreads\u003e`."},{"lineNumber":70,"author":{"gitId":"-"},"content":" 1. analyzes the repositories using the `CommitReporter` and `AuthorshipReporter` in a multi-threaded fashion."},{"lineNumber":71,"author":{"gitId":"-"},"content":"    * First, copies the template files into the designated output directory. "},{"lineNumber":72,"author":{"gitId":"-"},"content":"    * Then, uses `CommitReporter` and `AuthorshipReporter` to produce the commit and authorship summary, respectively."},{"lineNumber":73,"author":{"gitId":"-"},"content":"    * By default, the number of threads used for analysis is equal to the number of CPU cores available; the number of threads can be specified using the CLI argument `--analysis-threads \u003cthreads\u003e`. "},{"lineNumber":74,"author":{"gitId":"-"},"content":" 1. generates the `JSON` files needed to generate the `HTML` report."},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"## System"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"[`System`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/system) contains the classes that interact with the Operating System and external processes."},{"lineNumber":81,"author":{"gitId":"Tejas2805"},"content":" * [`CommandRunner`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/system/CommandRunner.java) creates processes that execute commands on the terminal. It consists of many *git* commands."},{"lineNumber":82,"author":{"gitId":"-"},"content":" * [`LogsManager`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/system/LogsManager.java) uses the `java.util.logging` package for logging. The `LogsManager` class is used to manage the logging levels and logging destinations. Log messages are output through: `Console` and to a `.log` file."},{"lineNumber":83,"author":{"gitId":"-"},"content":" * [`ReportServer`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/system/ReportServer.java) starts a server to display the report on the browser. It depends on the `net.freeutils.httpserver` package."},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"## Model"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"[`Model`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/model) holds the data structures that are commonly used by the different aspects of *RepoSense*."},{"lineNumber":90,"author":{"gitId":"Tejas2805"},"content":" * [`Author`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/model/Author.java) stores the `GitHub ID` of an author. Any contributions or commits made by the author, using his/her `GitHub ID` or aliases, will be attributed to the same `Author` object. `AuthorshipReporter` and `CommitsReporter` use it to attribute the commit and file contributions to the respective authors."},{"lineNumber":91,"author":{"gitId":"Tejas2805"},"content":" * [`CliArguments`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/model/CliArguments.java) stores the parsed command-line arguments supplied by the user. It contains the configuration settings such as the CSV config file to read from, the directory to output the report to, and the date range of commits to analyze. These configuration settings are passed into `RepoConfiguration`."},{"lineNumber":92,"author":{"gitId":"-"},"content":" * [`FileTypeManager`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/model/FileTypeManager.java) stores the file format to be analyzed and the custom groups specified by the user for any repository."},{"lineNumber":93,"author":{"gitId":"Tejas2805"},"content":" * [`RepoConfiguration`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/model/RepoConfiguration.java) stores the configuration information from the CSV config file for a single repository: the repository\u0027s organization, name, branch, list of authors to analyse, date range to analyze commits, and files from `CliArguments`."},{"lineNumber":94,"author":{"gitId":"Tejas2805"},"content":" This configuration information is used by:"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    - `GitClone` to determine the location to clone the repository from and which branch to check out to."},{"lineNumber":96,"author":{"gitId":"-"},"content":"    - `AuthorshipReporter` and `CommitsReporter` to determine the range of commits and files to analyze."},{"lineNumber":97,"author":{"gitId":"-"},"content":"    - `ReportGenerator` to determine the directory to output the report."}],"authorContributionMap":{"Tejas2805":9,"-":88}},{"path":"docs/dg/index.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cvariable name\u003d\"title\"\u003eDeveloper guide\u003c/variable\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-3\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Contributing"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"lead\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"**Thank you for your interest in contributing to RepoSense!** We welcome PRs, especially from students."},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"Here is a quick overview of how to get started."},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"Tejas2805"},"content":"1. **Set up the project** on your computer (see [the _Setting up_ page](settingUp.html))"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. **Learn the basics** of the required background knowledge (see [the _Learning Basics_ page](learningBasics.html))"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. **Learn our workflow** (see [the _Workflow_ page](workflow.html))"},{"lineNumber":20,"author":{"gitId":"-"},"content":"1. **Submit PRs** as per the workflow. If you encounter any problems, post in [our issue tracker](https://github.com/reposense/RepoSense/issues)."},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"To gain a more solid understanding of the project implementation and workflow, you may want to start by working on [issues that are suitable for first timers](https://github.com/reposense/RepoSense/issues?q\u003dis%3Aopen+is%3Aissue+label%3Ad.FirstTimers). "},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"We look forward to your PR. Happy coding!"}],"authorContributionMap":{"Tejas2805":1,"-":26}},{"path":"docs/dg/projectManagement.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cvariable name\u003d\"title\"\u003eProject management\u003c/variable\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"lead\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"This page contains information about project management tasks. The target audience is senior developers (and above)."},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Merging PRs"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Use the \u0027squash and merge\u0027 option** unless the situation warrants a different option."},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **For the merge commit**, follow conventions at [_GitHub conventions_ @SE-EDU](https://se-education.org/guides/conventions/github.html)."},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Making a release on Github"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"Before making a release, please check the following prerequisites:"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Ensure that you have **JDK `1.8.0`** installed (\u003d\u003dNot other major release versions such as **JDK `9`** or **JDK `11`**\u003d\u003d)."},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Ensure that the `JAVA_HOME` environment variable is correctly set to your JDK installation directory. You can refer to the [JDK Installation Guide](https://docs.oracle.com/cd/E19182-01/821-0917/inst_jdk_javahome_t/index.html)."},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"To make a release for RepoSense on Github, please follow the `Creating a release` section in the [Github Docs](https://docs.github.com/en/github/administering-a-repository/managing-releases-in-a-repository).\u003cbr\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  "},{"lineNumber":33,"author":{"gitId":"-"},"content":"Take note of the following when making the release according to the above guide:"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* When entering a release version number, use semantic versioning with some small tweaks:"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * Use `MAJOR.MINOR` as the version number when the release includes new features and/or major changes."},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * Use `MAJOR.MINOR.PATCH` as the version number when the release only includes bug fixes and/or minor changes."},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * Append `rc` to the version number to indicate that the release is a pre-release that is not ready to be used in production."},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Enter the release title as `RepoSense vxxx` where `xxx` is the version number. Enter the release description by referring to the previous [RepoSense releases](https://github.com/reposense/RepoSense/releases). "},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Before launching the release, generate the `RepoSense.jar` file and attach it to the release."},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Change the directory to the project root directory."},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * In the terminal, run `gradlew --version` to check that the JDK version is 1.8.0."},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * Run `gradlew shadowJar`, and the Jar file will be generated at `{buildDir}/jar/`."},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Check that the Jar file is working. You may need to check that the report can be generated from the Jar file both locally and remotely by following the [Generating Reports Guide](../ug/generatingReports.html). "},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"After making the release, please also remember to deploy the production website using the [deploy guide](#deploying-the-production-website)."},{"lineNumber":46,"author":{"gitId":"-"},"content":"  "},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"## Deploying the production website"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"We have two versions of the website:"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"1. **Production website** at https://reposense.org"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * matches the latest released version"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * deployed manually after each new release"},{"lineNumber":56,"author":{"gitId":"-"},"content":"1. **Dev website** at https://reposense.org/RepoSense"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   * matches the latest `master` branch"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   * deployed automatically by Travis whenever the `master` branch is updated"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"Tejas2805"},"content":"The production website differs from the dev website in some ways, e.g.,"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"* It has a `CNAME` file (to indicate that it is the target destination for the `reposense.org` domain name)"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Its DG pages show a warning that it is not the latest version of the DG."},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"Tejas2805"},"content":"MarkBind mainly manages these variations via the `site.config` file. That is why the `site.config` file in the `release` branch is slightly different from the one in the `master` branch."},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"After each release, do the following steps to deploy the production website:"},{"lineNumber":68,"author":{"gitId":"-"},"content":"1. Switch to the `release` branch"},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. `cd docs`"},{"lineNumber":70,"author":{"gitId":"-"},"content":"1. `markbind build`"},{"lineNumber":71,"author":{"gitId":"-"},"content":"1. `markbind deploy`"},{"lineNumber":72,"author":{"gitId":"-"},"content":"1. After a few minutes, check https://reposense.org to ensure it has been updated as intended."}],"authorContributionMap":{"Tejas2805":2,"-":70}},{"path":"docs/dg/report.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cvariable name\u003d\"title\"\u003eHTML report\u003c/variable\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"Tejas2805"},"content":"The report\u0027s source files are located in [`frontend/src`](https://github.com/reposense/RepoSense/blob/master/frontend/src) and are built by [spuild](https://github.com/ongspxm/spuild2) before being packaged into the JAR file to be extracted as part of the report."},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"The main HTML file is generated from [`frontend/src/index.pug`](https://github.com/reposense/RepoSense/blob/master/frontend/src/index.pug)."},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"Tejas2805"},"content":"[Vue](https://vuejs.org/v2/api/) (pronounced /vjuː/, like view) is a progressive framework for building user interfaces. It is heavily utilized in the report to update the information in the various views dynamically. (Style guide available [here](https://vuejs.org/v2/style-guide/), Developer tool available [here](https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd)). Vue lifecycle hooks are the defined methods that get executed in a particular stage of the Vue object lifespan. The following is the Vue lifecycle diagram taken from [here](https://vuejs.org/v2/guide/instance.html#Lifecycle-Diagram) indicating the hook sequence:"},{"lineNumber":14,"author":{"gitId":"-"},"content":"![vue lifecycle diagram](../images/vue-lifecycle-diagram.png)"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"The following is a snapshot of the report:"},{"lineNumber":17,"author":{"gitId":"-"},"content":"![report screenshot](../images/report-summary.png)"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Report architecture"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"![report architecture](../images/report-architecture.png)"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"Tejas2805"},"content":"The main Vue object (`window.app`) is responsible for loading the report (through `summary.json`). Its `repos` attribute is tied to the global `window.REPOS`, and is passed into the various other modules when the information is needed."},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"`window.app` is broken down into two main parts"},{"lineNumber":28,"author":{"gitId":"-"},"content":"- the summary view"},{"lineNumber":29,"author":{"gitId":"-"},"content":"- and the tabbed interface"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"Tejas2805"},"content":"The summary view acts as the main report, which shows the various calculations. \u003c/br\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The tabbed interface is responsible for loading various modules such as authorship and zoom to display additional information."},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Javascript files"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"- [**main.js**](#main-main-js) - main controller that pushes content into different modules"},{"lineNumber":39,"author":{"gitId":"-"},"content":"- [**api.js**](#data-loader-api-js) - loading and parsing of the report content"},{"lineNumber":40,"author":{"gitId":"-"},"content":"- [**v_summary.js**](#summary-view-v-summary-js) - module that supports the summary view"},{"lineNumber":41,"author":{"gitId":"-"},"content":"- [**v_authorship.js**](#authorship-view-v-authorship-js) - module that supports the authorship tab view"},{"lineNumber":42,"author":{"gitId":"-"},"content":"- [**v_zoom.js**](#zoom-view-v-zoom-js) - module that supports the zoom tab view"},{"lineNumber":43,"author":{"gitId":"-"},"content":"- [**v_ramp.js**](#ramp-view-v-ramp-js) - module that supports the ramp chart view"},{"lineNumber":44,"author":{"gitId":"-"},"content":"- [**v_segment.js**](#segment-view-v-segment-js) - module that supports the code segment view"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"## JSON report files"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"- **summary.json** - a list of all the repositories and their respective details"},{"lineNumber":51,"author":{"gitId":"Tejas2805"},"content":"- **projName/commits.json** - contains information of the users\u0027 commits information (e.g., line deletion, insertion, etc.), grouped by date"},{"lineNumber":52,"author":{"gitId":"-"},"content":"- **projName/authorship.json** - contains information from git blame, detailing the author of each line for all the processed files"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Main ([main.js](https://github.com/reposense/RepoSense/blob/master/frontend/src/static/js/main.js))"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"Tejas2805"},"content":"This contains the logic for the main VueJS object, `window.app`, which is responsible for passing the necessary data into the relevant modules to be loaded."},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"Tejas2805"},"content":"`v_summary`, `v_authorship`, `v_zoom`, `v_segment`, and `v_ramp` are components embedded into the report and will render the corresponding content based on the data passed into it from the main `window.app`."},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Loading of report information"},{"lineNumber":63,"author":{"gitId":"Tejas2805"},"content":"The main Vue object depends on the `summary.json` data to determine the right `commits.json` files to load into memory. This is handled by `api.js`, which loads the relevant file information from the network files if available; otherwise, a report archive, `archive.zip`, has to be used."},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"Once the relevant `commit.json` files are loaded, all the repo information will be passed into `v_summary` to be loaded in the summary view as the relevant ramp charts."},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"### Activating additional view modules"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Most activity or actions should happen within the module itself, but in the case where there is a need to spawn or alter the view of another module, an event is emitted from the first module to the main Vue object (`window.app`), which then handles the data received and passes it along to the relevant modules."},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"### Hash link"},{"lineNumber":71,"author":{"gitId":"Tejas2805"},"content":"Other than the global main Vue object, another global variable we have is the `window.hashParams`. This object is responsible for generating the relevant permalink for a specific view of the report\u0027s summary module."},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"## Data loader ([api.js](https://github.com/reposense/RepoSense/blob/master/frontend/src/static/js/api.js))"},{"lineNumber":74,"author":{"gitId":"-"},"content":"This is the module that is in charge of loading and parsing the data files generated as part of the report."},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Loading from ZIP file"},{"lineNumber":77,"author":{"gitId":"Tejas2805"},"content":"Due to security design, most modern browsers (e.g., Chrome) do not allow web pages to obtain local files using the directory alone. As such, a ZIP archive of the report information will be produced alongside the report generation."},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"Tejas2805"},"content":"This archive will be used in place of the network files to load information into the report when the network files are unavailable."},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"Tejas2805"},"content":"The API module will be handling all requests for all the JSON data files. If the network file is not available, the files will be obtained from the zip archive provided."},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"### Retrieving and parsing information"},{"lineNumber":84,"author":{"gitId":"-"},"content":"After the JSON files are loaded from their respective sources, the data will be parsed as objects and included inside the global storage object, `window.REPOS`,  in the right format."},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"For the basic skeleton of `window.REPOS`, refer to the generated `summary.json` file in the report for more details."},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"## Summary view ([v_summary.js](https://github.com/reposense/RepoSense/blob/master/frontend/src/static/js/v_summary.js))"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"The `v_summary` module is in charge of loading the ramp charts from the corresponding `commits.json`."},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ReportArchitectureSummary.puml\"/\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Initializing the data for the ramp charts"},{"lineNumber":97,"author":{"gitId":"-"},"content":"The summary module is activated after the information is loaded from the main Vue.JS object. At creation, the `repo` attribute is populated with the `window.REPOS` object, which contains information loaded from `summary.json`."},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"### Filtering users and repositories"},{"lineNumber":100,"author":{"gitId":"-"},"content":"The commits information is retrieved from the corresponding project folders for each repository. This information will be filtered and sorted before being passed into the template to be displayed as ramp charts."},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"## Authorship view ([v_authorship.js](https://github.com/reposense/RepoSense/blob/master/frontend/src/static/js/v_authorship.js))"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"The authorship module retrieves the relevant information from the corresponding `authorship.json` file if it is not yet loaded. If it has been loaded, the data will be written into `window.REPOS` and be read from there instead."},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ReportArchitectureAuthorship.puml\"/\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"### Showing relevant information by authors"},{"lineNumber":111,"author":{"gitId":"Tejas2805"},"content":"The files will be filtered, picking only files the selected author has written in. The lines are then split into chunks of \"touched\" and \"untouched\" code segments displayed in the tab view which will be popped up on the right side of the screen."},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"## Zoom view ([v_zoom.js](https://github.com/reposense/RepoSense/blob/master/frontend/src/static/js/v_zoom.js))"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"Tejas2805"},"content":"The `v_zoom` module is in charge of filtering and displaying the commits from the ramp chart\u0027s selected sub-range."},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"## Ramp view ([v_ramp.js](https://github.com/reposense/RepoSense/blob/master/frontend/src/static/js/v_ramp.js))"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `v_ramp` module is responsible for receiving the relevant information from `v_summary` and generating ramp charts that contain ramp slices."},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"### Padding for dates"},{"lineNumber":126,"author":{"gitId":"-"},"content":"For ramps between the date ranges, the slices will be selected and it will be pre and post padded with empty slices to align the ramp slice between the `sinceDate` and `untilDate`. The ramps will then be rendered with the slices in the right position."},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"## Segment view ([v_segment.js](https://github.com/reposense/RepoSense/blob/master/frontend/src/static/js/v_segment.js))"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"The `v-segment` module is used as a component in `v_authorship`. It separates the code in terms of \"touched\" and \"untouched\" segments and only loads each \"untouched\" segment when it is toggled."}],"authorContributionMap":{"Tejas2805":14,"-":118}},{"path":"docs/index.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cvariable name\u003d\"title\"\u003eHome\u003c/variable\u003e"},{"lineNumber":2,"author":{"gitId":"jamessspanggg"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"jamessspanggg"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":5,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"{% from \u0027scripts/macros.njk\u0027 import show_sitenav_items, thumbnail with context %}"},{"lineNumber":7,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003cheader\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"jumbotron jumbotron-fluid text-center\" style\u003d\"padding-top: inherit; padding-bottom: inherit\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"container\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003ch1 class\u003d\"display-3\"\u003eRepoSense\u003c/h1\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"lead\"\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"Visualize programmer activities across git repositories..."},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/reposenseOverview.png\" width\u003d\"909\" alt\u003d\"RepoSense overview\"/\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003c/header\u003e"},{"lineNumber":22,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"overview\"\u003e"},{"lineNumber":24,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":25,"author":{"gitId":"Tejas2805"},"content":"**RepoSense can generate interactive visualizations of programmer activities, even across multiple repositories.** It\u0027s ideal for educators and managers to get insights into the programming activities of their mentees. The visualizations can be **easily shared** with others (e.g., as an online dashboard), and updating the visualizations periodically **can be automated**."},{"lineNumber":26,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"{% macro heading(icon, text) %}\u003ch4\u003e{{ thumbnail(icon) }} \u003cspan class\u003d\"lead font-weight-bold text-green\"\u003e{{ text }}\u003c/span\u003e\u003c/h4\u003e{% endmacro %}"},{"lineNumber":28,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"Some example insights RepoSense can provide:"},{"lineNumber":30,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":31,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"{{ heading(\":fas-code:\", \"Insights about the code\") }}"},{"lineNumber":33,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"* Which part of the code was written by Tom? How many lines? How many files?"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* Which test cases were written by Kim?"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Which commit messages were written by Serene?"},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"{{ heading(\":fas-chart-pie:\", \"Insights about the type of work\") }}"},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Which portion of Jacob\u0027s code is documentation?"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Who hasn\u0027t written any test code yet?"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Which project did Jolene contribute to in the last month?"},{"lineNumber":43,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"{{ heading(\":fas-business-time:\", \"Insights about the timing of work\") }}"},{"lineNumber":45,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Who is putting in the consistent effort?"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Who waits till the deadline to do the work?"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Who hasn\u0027t started any work yet?"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"{{ heading(\":fas-list-ol:\", \"Insights based on comparisons\") }}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Which programmers/teams are falling behind?"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* How does everyone compare in their front-end coding work over the past two weeks?"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Who are the the top 10 code contributors?"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003c/span\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"jumbotron jumbotron-fluid pt-2\"\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"container\"\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"container pt-2\"\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-sm\"\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"[**SHOWCASE** of use cases](showcase.html)"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"[**ABOUT** us](about.html)"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"[**CONTACT** us](contact.html)"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"[**:fab-github: GitHub**](https://github.com/reposense/RepoSense)"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"----"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003csmall\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"This website was built using MarkBind."},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"[\u003cimg src\u003d\"https://markbind.org/images/logo-lightbackground.png\" width\u003d\"150\"\u003e](http://markbind.org)"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"Deploy previews are powered by Netlify and Surge."},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"[\u003cimg src\u003d\"https://www.netlify.com/img/global/badges/netlify-color-bg.svg\"/\u003e](https://www.netlify.com)"},{"lineNumber":85,"author":{"gitId":"-"},"content":"[\u003cimg width\u003d\"55px\" src\u003d\"https://surge.sh/images/logos/svg/surge-logo.svg\"\u003e](https://surge.sh)"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003c/small\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-sm\"\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"****USER GUIDE****"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"{% from \"_markbind/navigation/ugSiteNav.md\" import ug_sitenav_items %}"},{"lineNumber":94,"author":{"gitId":"-"},"content":"{{ show_sitenav_items(ug_sitenav_items, is_flat\u003dtrue) }}"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-sm\"\u003e"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"****DEVELOPER GUIDE****"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"{% from \"_markbind/navigation/dgSiteNav.md\" import dg_sitenav_items %}"},{"lineNumber":104,"author":{"gitId":"-"},"content":"{{ show_sitenav_items(dg_sitenav_items, is_flat\u003dtrue) }}"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":112,"author":{"gitId":"jamessspanggg"},"content":""}],"authorContributionMap":{"anubh-v":6,"Tejas2805":1,"jamessspanggg":10,"-":95}},{"path":"docs/showcase.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cvariable name\u003d\"title\"\u003eShowcase\u003c/variable\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-3\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"### Case 1: Monitoring student programmers (**individual** projects)"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"* **Scenario:** RepoSense is used to monitor a Software Engineering course in which students build a project over 8 weeks."},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"Tejas2805"},"content":"* **Links:** [report](https://nus-cs2103-ay2021s1.github.io/ip-dashboard/#sort\u003dgroupTitle\u0026groupSelect\u003dgroupByAuthors\u0026search\u003d\u0026sortWithin\u003dtitle\u0026since\u003d2020-08-14\u0026until\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026breakdown\u003dfalse) | [repo containing the settings](https://github.com/nus-cs2103-AY2021S1/ip-dashboard)"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Example usages:**"},{"lineNumber":16,"author":{"gitId":"Tejas2805"},"content":"  * To compare students based on the amount of code written, we can sort by contribution, as done in [this view](https://nus-cs2103-ay2021s1.github.io/ip-dashboard/#sort\u003dtotalCommits%20dsc\u0026groupSelect\u003dgroupByAuthors\u0026search\u003d\u0026sortWithin\u003dtitle\u0026since\u003d2020-08-14\u0026until\u003d2020-09-27\u0026timeframe\u003dday\u0026mergegroup\u003d\u0026breakdown\u003dfalse)."},{"lineNumber":17,"author":{"gitId":"Tejas2805"},"content":"  * [This view](https://nus-cs2103-ay2021s1.github.io/ip-dashboard/#sort\u003dgroupTitle\u0026groupSelect\u003dgroupByAuthors\u0026search\u003d\u0026sortWithin\u003dtitle\u0026since\u003d2020-08-14\u0026until\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dsc-arecrow\u0026tabRepo\u003dsc-arecrow%2Fip%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003djava~md~fxml~sh~bat~gradle~txt) shows us code written by a specific student."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Case 2: Monitoring student programmers (**team** projects)"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"Tejas2805"},"content":"* **Scenario:** Similar to case 1 above, but this time students are doing team projects."},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"Tejas2805"},"content":"* **Links:** [report](https://nus-cs2103-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-08-14\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other) | [settings](https://github.com/nus-cs2103-AY2021S1/tp-dashboard)"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"* **Example usages:**"},{"lineNumber":28,"author":{"gitId":"Tejas2805"},"content":"  * To find the breakdown of the work done, we can tick the `breakdown by file type` checkbox, as shown in [this view](https://nus-cs2103-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-08-14\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003dtest-code~other~functional-code~docs). After that, we can filter out certain file types by un-ticking the file type."},{"lineNumber":29,"author":{"gitId":"Tejas2805"},"content":"  * To find how teams compare in terms of total work done, we can tick the `merge group` check-box and sort groups by `Contribution`, as seen in [this view](https://nus-cs2103-ay2021s1.github.io/tp-dashboard/#breakdown\u003dfalse\u0026search\u003d\u0026sort\u003dtotalCommits%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2020-08-14\u0026timeframe\u003dweek\u0026mergegroup\u003dAY2021S1-CS2103-F09-1%2Ftp%5Bmaster%5D~AY2021S1-CS2103-F09-2%2Ftp%5Bmaster%5D~AY2021S1-CS2103-F09-3%2Ftp%5Bmaster%5D~AY2021S1-CS2103-F09-4%2Ftp%5Bmaster%5D~AY2021S1-CS2103-F10-1%2Ftp%5Bmaster%5D~AY2021S1-CS2103-F10-2%2Ftp%5Bmaster%5D~AY2021S1-CS2103-F10-3%2Ftp%5Bmaster%5D~AY2021S1-CS2103-F10-4%2Ftp%5Bmaster%5D~AY2021S1-CS2103-T14-1%2Ftp%5Bmaster%5D~AY2021S1-CS2103-T14-2%2Ftp%5Bmaster%5D~AY2021S1-CS2103-T14-3%2Ftp%5Bmaster%5D~AY2021S1-CS2103-T14-4%2Ftp%5Bmaster%5D~AY2021S1-CS2103-T16-1%2Ftp%5Bmaster%5D~AY2021S1-CS2103-T16-2%2Ftp%5Bmaster%5D~AY2021S1-CS2103-T16-3%2Ftp%5Bmaster%5D~AY2021S1-CS2103-T16-4%2Ftp%5Bmaster%5D~AY2021S1-CS2103-W14-1%2Ftp%5Bmaster%5D~AY2021S1-CS2103-W14-2%2Ftp%5Bmaster%5D~AY2021S1-CS2103-W14-3%2Ftp%5Bmaster%5D~AY2021S1-CS2103-W14-4%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-F11-1%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-F11-2%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-F11-3%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-F11-4%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-F12-1%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-F12-2%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-F12-3%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-F12-4%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-F13-1%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-F13-2%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-F13-3%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-F13-4%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T09-1%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T09-2%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T09-3%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T09-4%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T10-1%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T10-2%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T10-3%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T10-4%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T11-1%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T11-2%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T11-3%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T11-4%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T12-1%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T12-2%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T12-3%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T12-4%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T13-1%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T13-2%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T13-3%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T13-4%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T15-1%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T15-2%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T15-3%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T15-4%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T17-1%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T17-2%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T17-3%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-T17-4%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W10-1%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W10-2%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W10-3%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W10-4%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W11-1%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W11-2%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W11-3%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W11-4%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W12-1%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W12-2%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W12-3%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W12-4%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W13-1%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W13-2%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W13-3%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W13-4%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W15-1%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W15-2%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W15-3%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W15-4%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W16-1%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W16-2%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W16-3%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W16-4%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W17-1%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W17-2%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W17-3%2Ftp%5Bmaster%5D~AY2021S1-CS2103T-W17-4%2Ftp%5Bmaster%5D\u0026groupSelect\u003dgroupByRepos). Also, note how \u003ctooltip content\u003d\"i.e., each ramp represents the work done by the entire team in the whole week\"\u003ethe `granularity` of the ramps is set to `Week`\u003c/tooltip\u003e to reduce clutter."},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * [This view](https://nus-cs2113-ay1920s2.github.io/tp-dashboard/#search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-04-06\u0026timeframe\u003dcommit\u0026mergegroup\u003dfalse\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue) shows the activities near the submission deadline (note how some have overshot the deadline and some others show a frenzy of activities very near to the deadline)."},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"### Case 3: Monitoring student programmers (**multiple** external projects)"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"Tejas2805"},"content":"* **Scenario:** Similar to cases 1 and 2 above, but this time, each student works on multiple projects. Furthermore, most projects are external OSS projects, not within the control of the teacher."},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"* **Links:** [report](https://nus-cs3281.github.io/2020-dashboard/#search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003dfalse\u0026groupSelect\u003dgroupByAuthors\u0026breakdown\u003dfalse\u0026since\u003d2019-12-01) | [settings](https://github.com/nus-cs2113-AY1920S2/tp-dashboard)"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"* **Example usages:**"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [This view](https://nus-cs3281.github.io/2020-dashboard/#search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2019-12-01\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zA\u003danubh-v\u0026zR\u003dCATcher-org%2FCATcher%5Bmaster%5D\u0026zACS\u003d118.09969788519638\u0026zS\u003d2019-12-01\u0026zFS\u003d\u0026zU\u003d2020-06-05\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos) shows the commit messages written by a specific student."},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Note how we can use the `group by` drop-down to organize activities around projects or individual authors."},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Similarly, we can use the `merge all groups` check-box to see the sum of activities in a specific project or by a specific student."}],"authorContributionMap":{"Tejas2805":8,"-":36}},{"path":"docs/site.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"jamessspanggg"},"content":"{"},{"lineNumber":2,"author":{"gitId":"jamessspanggg"},"content":"  \"baseUrl\": \"\","},{"lineNumber":3,"author":{"gitId":"jamessspanggg"},"content":"  \"titlePrefix\": \"RepoSense\","},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \"style\": {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"codeTheme\": \"light\""},{"lineNumber":6,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":7,"author":{"gitId":"jamessspanggg"},"content":"  \"ignore\": ["},{"lineNumber":8,"author":{"gitId":"jamessspanggg"},"content":"    \"_markbind/layouts/*\","},{"lineNumber":9,"author":{"gitId":"jamessspanggg"},"content":"    \"_markbind/logs/*\","},{"lineNumber":10,"author":{"gitId":"jamessspanggg"},"content":"    \"_site/*\","},{"lineNumber":11,"author":{"gitId":"jamessspanggg"},"content":"    \"site.json\","},{"lineNumber":12,"author":{"gitId":"jamessspanggg"},"content":"    \"*.md\","},{"lineNumber":13,"author":{"gitId":"jamessspanggg"},"content":"    \"*.mbd\","},{"lineNumber":14,"author":{"gitId":"jamessspanggg"},"content":"    \"*.mbdf\","},{"lineNumber":15,"author":{"gitId":"jamessspanggg"},"content":"    \"*.njk\","},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \".git/*\","},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"diagrams/*\","},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"CNAME\""},{"lineNumber":19,"author":{"gitId":"jamessspanggg"},"content":"  ],"},{"lineNumber":20,"author":{"gitId":"jamessspanggg"},"content":"  \"pages\": ["},{"lineNumber":21,"author":{"gitId":"jamessspanggg"},"content":"    {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \"glob\": [\"**/*.+(md|mbd)\"]"},{"lineNumber":23,"author":{"gitId":"jamessspanggg"},"content":"    },"},{"lineNumber":24,"author":{"gitId":"jamessspanggg"},"content":"    {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \"glob\": [\"dg/*.+(md|mbd)\"],"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \"frontmatter\": {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \"siteNav\": \"dgSiteNav.md\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":29,"author":{"gitId":"jamessspanggg"},"content":"    },"},{"lineNumber":30,"author":{"gitId":"jamessspanggg"},"content":"    {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \"glob\": [\"ug/*.+(md|mbd)\"],"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \"frontmatter\": {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \"header\": \"devSiteHeader.md\","},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \"siteNav\": \"ugSiteNav.md\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":"  ],"},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":"  \"deploy\": {"},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":"    \"message\": \"Site Update.\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \"plugins\": [\"filterTags\"],"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \"pluginsContext\": {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \"filterTags\" : {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \"tags\": [\"-production\", \"dev\"]"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"jamessspanggg"},"content":"  }"},{"lineNumber":47,"author":{"gitId":"jamessspanggg"},"content":"}"}],"authorContributionMap":{"jamessspanggg":25,"-":22}},{"path":"docs/ug/cli.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cvariable name\u003d\"title\"\u003eAppendix: CLI syntax reference\u003c/variable\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"lead\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"The command `java -jar RepoSense.jar` takes several flags."},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cbox\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Examples**:"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"An example of a command using most parameters:\u003cbr\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"`java -jar RepoSense.jar --repos https://github.com/reposense/RepoSense.git --output ./report_folder --since 31/1/2017 --until 31/12/2018 --formats java adoc xml --view --ignore-standalone-config --last-modified-date --timezone UTC+08`"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"Same command as above but using most parameters in alias format:\u003cbr\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"`java -jar RepoSense.jar -r https://github.com/reposense/RepoSense.git -o ./report_folder -s 31/1/2017 -u 31/12/2018 -f java adoc xml -v -i -l -t UTC+08`"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"The section below provides explanations for each of the flags."},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c!-- --------------------------◘---------------------------------------------------------------------------- --\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"### `--assets`, `-a`"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"section-config\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"**`--assets ASSETS_DIRECTORY`**: Specifies where to place assets for report generation."},{"lineNumber":34,"author":{"gitId":"-"},"content":"* Parameter: `ASSETS_DIRECTORY` The directory containing the assets files. A `favicon.ico` file can be placed here to customize the favicon of the dashboard."},{"lineNumber":35,"author":{"gitId":"-"},"content":"* Alias: `-a`"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Example: `--assets ./assets` or `-a ./assets`"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"* If `--assets` is not specified, RepoSense looks for assets in the `./assets` directory."},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c!-- --------------------------◘---------------------------------------------------------------------------- --\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"### `--config`, `-c`"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"section-config\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"**`--config CONFIG_DIRECTORY`**: Specifies that config files located in `CONFIG_DIRECTORY` should be used to customize the report."},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Parameter: `CONFIG_DIRECTORY` The directory containing the config files. Should contain a `repo-config.csv` file. Optionally, can contain an `author-config.csv` file or/and a `group-config.csv` file or/and a `report-config.json` file."},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Alias: `-c`"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Example: `java -jar RepoSense.jar --config  ./config`"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Cannot be used with `--repos`."},{"lineNumber":58,"author":{"gitId":"-"},"content":"* If both `--repos` and `--config` are not specified, RepoSense looks for config files in the `./config` directory."},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"### `--formats`, `-f`"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"**`--formats LIST_OF_FORMATS`**: Specifies which file extensions to be included in the analysis."},{"lineNumber":67,"author":{"gitId":"-"},"content":"* Parameter: `LIST_OF_FORMATS` A space-separated list of file extensions that should be included in the analysis.\u003cbr\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  Default: all file formats"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Alias: `-f`"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* Example:`--formats css fxml gradle` or `-f css fxml gradle`"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"Binary file formats, such as `jpg`, `png`,`exe`,`zip`, `rar`, `docx`, and `pptx`, all will be labelled as the file type `binary` in the generated report."},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"### `--help`, `-h`"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"**`--help`**: Shows the help message."},{"lineNumber":81,"author":{"gitId":"-"},"content":"* Alias: `-h`"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"Cannot be used with any other flags."},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"### `--ignore-standalone-config`, `-i`"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"**`--ignore-standalone-config`**: Specifies that the standalone config file in the repo should be ignored."},{"lineNumber":92,"author":{"gitId":"-"},"content":"* Default: the standalone config file is not ignored"},{"lineNumber":93,"author":{"gitId":"-"},"content":"* Alias: `-i`"},{"lineNumber":94,"author":{"gitId":"-"},"content":"* Example:`--ignore-standalone-config` or `-i`"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"This flag overrides the `Ignore standalone config` field in the CSV config file."},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"jamessspanggg"},"content":"### `--last-modified-date`, `-l`"},{"lineNumber":104,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"**`--last-modified-date`**: Specifies that the last modified date of each line of code should be added to `authorship.json`."},{"lineNumber":106,"author":{"gitId":"jamessspanggg"},"content":"* Default: the last modified date of each line of code will not be added to `authorship.json`"},{"lineNumber":107,"author":{"gitId":"jamessspanggg"},"content":"* Alias: `-l` (lowercase L)"},{"lineNumber":108,"author":{"gitId":"jamessspanggg"},"content":"* Example:`--last-modified-date` or `-l`"},{"lineNumber":109,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"* Cannot be used with `--shallow-cloning`."},{"lineNumber":113,"author":{"gitId":"-"},"content":"* The last modified dates will be in the same timezone specified with the `--timezone` flag."},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":115,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":116,"author":{"gitId":"jamessspanggg"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":117,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"### `--output`, `-o`"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"**`--output OUTPUT_DIRECTORY`**: Indicates where to save the report generated."},{"lineNumber":121,"author":{"gitId":"-"},"content":"* Parameter: `OUTPUT_DIRECTORY` The location for the generated `reposense-report` folder.\u003cbr\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  Default: current directory"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* Alias: `-o`"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* Example: `--output ./foo` or `-o ./foo` (the report will be in the `./foo/reposense-report` folder)"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":127,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":128,"author":{"gitId":"niqiukun"},"content":"### `--period`, `-p`"},{"lineNumber":129,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":130,"author":{"gitId":"niqiukun"},"content":"**`--period PERIOD`**: Specifies the period of analysis window."},{"lineNumber":131,"author":{"gitId":"-"},"content":"* Parameter: `PERIOD` The period of analysis window, in the format `nd` (for n days) or `nw` (for n weeks). It is used to calculate end date if only start date is specified, or calculate end date if only start date is specified."},{"lineNumber":132,"author":{"gitId":"niqiukun"},"content":"* Alias: `-p`"},{"lineNumber":133,"author":{"gitId":"niqiukun"},"content":"* Example: `--period 30d` or `--period 4w`"},{"lineNumber":134,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":135,"author":{"gitId":"niqiukun"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":136,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":137,"author":{"gitId":"niqiukun"},"content":"* If both start date and end date are not specified, the date of generating the report will be taken as the end date."},{"lineNumber":138,"author":{"gitId":"niqiukun"},"content":"* Cannot be used with both `--since` and `--until`."},{"lineNumber":139,"author":{"gitId":"niqiukun"},"content":"\u003c/box\u003e"},{"lineNumber":140,"author":{"gitId":"niqiukun"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"### `--repos`, `-r`"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"**`--repos REPO_LOCATION`**: Specifies which repositories to analyze."},{"lineNumber":145,"author":{"gitId":"-"},"content":"* Parameter: `REPO_LOCATION` A list of URLs or the disk location of the git repositories to analyze, separated by spaces."},{"lineNumber":146,"author":{"gitId":"-"},"content":"* Alias: `-r`"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* Examples:"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  * `--repos https://github.com/reposense/RepoSense.git`"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  * `--repos https://github.com/reposense/RepoSense.git c:/myRepose/foo/bar`: analyzes the two specified repos (one remote, one local) and generates one report containing details of both."},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"Cannot be used with `--config`."},{"lineNumber":154,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":155,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"### `--shallow-cloning`, `-S`"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"**`--shallow-cloning`**: Clones repositories using Git\u0027s shallow cloning functionality, which can significantly reduce the time taken to clone large repositories. However, the flag should not be used for smaller repositories where the `.git` file is smaller than 500 MB, as it would create overhead."},{"lineNumber":160,"author":{"gitId":"-"},"content":"* Default: RepoSense does not clone repositories using Git\u0027s shallow cloning functionality."},{"lineNumber":161,"author":{"gitId":"-"},"content":"* Alias: `-S` (uppercase S)"},{"lineNumber":162,"author":{"gitId":"-"},"content":"* Example:`--shallow-cloning` or `-S`"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"Cannot be used with `--last-modified-date`."},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"### `--since`, `-s`"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"**`--since START_DATE`**: Specifies the start date for the period to be analyzed."},{"lineNumber":174,"author":{"gitId":"-"},"content":"* Parameter: `START_DATE` The first day of the period to be analyzed, in the format `DD/MM/YYYY`.\u003cbr\u003e"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  Default: one month before the current date"},{"lineNumber":176,"author":{"gitId":"-"},"content":"* Alias: `-s`"},{"lineNumber":177,"author":{"gitId":"-"},"content":"* Example:`--since 21/10/2017` or `-s 21/10/2017`"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"* If the start date is not specified, only commits made one month before the end date (if specified) or the date of generating the report, will be captured and analyzed."},{"lineNumber":182,"author":{"gitId":"-"},"content":"* If `d1` is specified as the start date (`--since d1` or `-s d1`), then the earliest commit date of all repositories will be taken as the since date."},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"### `--timezone`, `-t`"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"**`--timezone ZONE_ID`**: Indicates the timezone to be used for the analysis."},{"lineNumber":189,"author":{"gitId":"-"},"content":"* Parameter: `ZONE_ID` The timezone in the format `ZONE_ID[±hh[mm]]`.\u003cbr\u003e"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  Default: system\u0027s default timezone"},{"lineNumber":191,"author":{"gitId":"-"},"content":"* Alias: `-t`"},{"lineNumber":192,"author":{"gitId":"-"},"content":"* Example:`--timezone UTC+08` or `-t UTC-1030`"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"### `--until`, `-u`"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"**`--until END_DATE`**: Specifies the end date of the analysis period."},{"lineNumber":199,"author":{"gitId":"-"},"content":"* Parameter: `END_DATE` The last date of the period to be analyzed, in the format `DD/MM/YYYY`.\u003cbr\u003e"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  Default: current date"},{"lineNumber":201,"author":{"gitId":"-"},"content":"* Alias: `-u`"},{"lineNumber":202,"author":{"gitId":"-"},"content":"* Example:`--until 21/10/2017` or `-u 21/10/2017`"},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"Note: If the end date is not specified, the date of generating the report will be taken as the end date."},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"### `--version`, `-V`"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"**`--version`**: Shows the version of RepoSense."},{"lineNumber":214,"author":{"gitId":"-"},"content":"* Alias: `-V` (upper case)"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"Cannot be used with any other flags."},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"-"},"content":"### `--view`, `-v`"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"**`--view [REPORT_FOLDER]`**: Specifies that the report should be opened in the default browser."},{"lineNumber":225,"author":{"gitId":"-"},"content":"* Parameter: `REPORT_FOLDER` Optional. If specified, no analysis will be performed and the report specified by the argument will be opened.\u003cbr\u003e"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  Default: `./reposense-report`"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* Alias: `-v`"},{"lineNumber":228,"author":{"gitId":"-"},"content":"* Example:`--view` or `-v`"}],"authorContributionMap":{"niqiukun":13,"jamessspanggg":9,"-":206}},{"path":"docs/ug/configFiles.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cvariable name\u003d\"title\"\u003eAppendix: Config files format\u003c/variable\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cvariable name\u003d\"mandatory\"\u003e\u003cspan class\u003d\"badge badge-danger\"\u003emandatory\u003c/span\u003e\u003c/variable\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"lead\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"Given below are the details of the various config files used by RepoSense."},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"**RepoSense ignores the order of column headers in the CSV config files. However, the spelling of the column headers must match the specified headers exactly, or the column would be ignored by RepoSense.**  "},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"Tejas2805"},"content":"**A value in a config file is optional to provide unless it is specified as {{ mandatory }}**."},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"## `repo-config.csv`"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"**`repo-config.csv` file contains repo-level config data.** Each row represents a repository\u0027s configuration ([example](repo-config.csv))."},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"Column Name | Explanation"},{"lineNumber":33,"author":{"gitId":"-"},"content":"----------- | -----------"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Repository\u0027s Location {{ mandatory }}| The `GitHub URL` or `Disk Path` to the git repository e.g., `https://github.com/foo/bar.git` or `C:\\Users\\user\\Desktop\\GitHub\\foo\\bar`"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Branch | The branch to analyze in the target repository e.g., `master`. Default: the default branch of the repo"},{"lineNumber":36,"author":{"gitId":"-"},"content":"File formats\u003csup\u003e*+\u003c/sup\u003e | The file extensions to analyze. Binary file formats, such as `png` and `jpg`, will be automatically labelled as the file type `binary` in the generated report. Default: all file formats"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Ignore Glob List\u003csup\u003e*+\u003c/sup\u003e | The list of file path globs to ignore during analysis for each author e.g., `test/**;temp/**`. Refer to the [_glob format_](https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob) for the path glob syntax."},{"lineNumber":38,"author":{"gitId":"-"},"content":"Ignore standalone config | To ignore the standalone config file (if any) in target repository, enter **`yes`**. If the cell is empty, the standalone config file in the repo (if any) will take precedence over configurations provided in the csv files."},{"lineNumber":39,"author":{"gitId":"-"},"content":"Ignore Commit List\u003csup\u003e*+\u003c/sup\u003e | The list of commits to ignore during analysis. For accurate results, the commits should be provided with their full hash. Additionally, a range of commits can be specified using the `..` notation e.g. `abc123..def456` (both inclusive)."},{"lineNumber":40,"author":{"gitId":"-"},"content":"Ignore Authors List\u003csup\u003e*+\u003c/sup\u003e | The list of authors to ignore during analysis. Authors should be specified by their [Git Author Name](#a-note-about-git-author-name)."},{"lineNumber":41,"author":{"gitId":"-"},"content":"Shallow Cloning | Enter **`yes`** to clone the repository using Git\u0027s shallow cloning functionality. This option can significantly reduce the time taken to clone large repositories. However, the option should ideally be disabled for smaller repositories where the `.git` file is smaller than 500 MB, as it would create overhead."},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"The Shallow Cloning option is incompatible with the \"--last-modified-date\" CLI flag."},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003csup\u003e* **Multi-value column**: multiple values can be entered in this column using a semicolon `;` as the separator.\u003c/sup\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003csup\u003e+ **Overrideable column**: prepend with `override:` to use entered value(s) instead of value(s) from standalone config.\u003c/sup\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"When using [standalone config](#config-json-standalone-config-file) (if it is not ignored), it is possible to override specific values from the standalone config by prepending the entered value with `override:`."},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"## `author-config.csv`"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"Tejas2805"},"content":"Optionally, you can use an `author-config.csv` (which should be in the same directory as the `repo-config.csv` file) to provide more details about the authors to analyze ([example](author-config.csv)). It should contain the following columns:"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"Column Name | Explanation"},{"lineNumber":62,"author":{"gitId":"-"},"content":"----------- | -----------"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Repository\u0027s Location | Same as `repo-config.csv`. Default: all the repos in `repo-config.csv`"},{"lineNumber":64,"author":{"gitId":"Tejas2805"},"content":"Branch | The branch to analyze for this author, e.g., `master`. Default: the author will be bound to all the repos in `repo-config.csv` that has the same repo\u0027s location, regardless of branch."},{"lineNumber":65,"author":{"gitId":"Tejas2805"},"content":"Author\u0027s GitHub ID {{ mandatory }}| GitHub username of the target author, e.g., `JohnDoe`"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Author\u0027s Emails\u003csup\u003e*\u003c/sup\u003e | Associated Github emails of the author. This can be found in your [GitHub settings](https://github.com/settings/emails)."},{"lineNumber":67,"author":{"gitId":"-"},"content":"Author\u0027s Display Name | The name to display for the author. Default: author\u0027s GitHub username."},{"lineNumber":68,"author":{"gitId":"-"},"content":"Author\u0027s Git Author Name\u003csup\u003e*\u003c/sup\u003e | The meaning of _Git Author Name_ is explained in [_A note about git author name_](#a-note-about-git-author-name)."},{"lineNumber":69,"author":{"gitId":"-"},"content":"Ignore Glob List\u003csup\u003e*\u003c/sup\u003e | Files to ignore for this author, in addition to files ignored by the patterns specified in `repo-config.csv`. The path glob syntax is the same as that of Ignore Glob List in `repo-config.csv`."},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003csup\u003e* **Multi-value column**: multiple values can be entered in this column using a semicolon `;` as the separator.\u003c/sup\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"Tejas2805"},"content":"If `author-config.csv` is not given and the repo has not provided author details in a standalone config file, all the authors of the repositories within the date range specified (if any) will be analyzed."},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"## `group-config.csv`"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"Optionally, you can provide a `group-config.csv`(which should be in the same directory as `repo-config.csv` file) to provide details on any custom groupings for files in specified repositories ([example](group-config.csv)). It should contain the following columns:"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"Column Name | Explanation"},{"lineNumber":82,"author":{"gitId":"-"},"content":"----------- | -----------"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Repository\u0027s Location | Same as `repo-config.csv`. Default: all the repos in `repo-config.csv`"},{"lineNumber":84,"author":{"gitId":"Tejas2805"},"content":"Group Name {{ mandatory }}| Name of the group, e.g.,`test`."},{"lineNumber":85,"author":{"gitId":"Tejas2805"},"content":"Globs * {{ mandatory }}| The list of file path globs to include for specified group, e.g.,`**/test/*;**.java`."},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003csup\u003e* **Multi-value column**: multiple values can be entered in this column using a semicolon `;` as the separator.\u003c/sup\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"Note that a file in a given repository should only be tagged to one group. \u003cbr\u003e"},{"lineNumber":90,"author":{"gitId":"Tejas2805"},"content":"e.g.: `example.java` in `example-repo` can either be in the `test` group or the `code` group, but not in both `test` and `code` group. If multiple groups are specified for a given file, the latter group (i.e., `code` group) is set for the file."},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"## `report-config.json`"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"You can optionally use `report-config.json` to customize report generation by providing the following information. ([example](report-config.csv))"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"**Fields to provide**:"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* `title`: Title of the generated report, which is also the title of the deployed dashboard. Default: \"RepoSense Report\""},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"section-standalone\"\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"## `config.json` (standalone config file)"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"Repo owners can provide the following additional information to RepoSense using a config file that we call the **_standalone config file_**:"},{"lineNumber":108,"author":{"gitId":"-"},"content":"* which files/authors/commits to analyze/omit"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* which git and GitHub usernames belong to which authors"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* the display of an author"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"To use this feature, add a `_reposense/config.json` to the root of your repo using the format in the example below ([another example](https://github.com/reposense/RepoSense/blob/master/_reposense/config.json)) and **commit it** (reason: RepoSense can see committed code only):"},{"lineNumber":113,"author":{"gitId":"-"},"content":"```json {.no-line-numbers}"},{"lineNumber":114,"author":{"gitId":"-"},"content":"{"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  \"ignoreGlobList\": [\"about-us/**\", \"**index.html\"],"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  \"formats\": [\"html\", \"css\"],"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  \"ignoreCommitList\": [\"90018e49f129ce7e0abdc8b18e91c9813588c601\", \"67890def\", \"abc123..def456\"],"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \"ignoreAuthorList\": [\"charlie\"],"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  \"authors\":"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  ["},{"lineNumber":121,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      \"githubId\": \"alice\","},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \"emails\": [\"alice@example.com\", \"alicet@example.com\"],"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \"displayName\": \"Alice T.\","},{"lineNumber":125,"author":{"gitId":"-"},"content":"      \"authorNames\": [\"AT\", \"A\"],"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      \"ignoreGlobList\": [\"**.css\"]"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \"githubId\": \"bob\""},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  ]"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}"},{"lineNumber":133,"author":{"gitId":"-"},"content":"```"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Note: all fields are optional unless specified otherwise."},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"**Fields to provide _repository-level_ info**:"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"* `ignoreGlobList`: Folders/files to ignore, specified using the [_glob format_](https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob)."},{"lineNumber":139,"author":{"gitId":"-"},"content":"* `formats`: File formats to analyze. Binary file formats, such as `png` and `jpg`, will be automatically labelled as the file type `binary` in the generated report. Default: all file formats"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* `ignoreCommitList`: The list of commits to ignore during analysis. For accurate results, the commits should be provided with their full hash. Additionally, a range of commits can be specified using the `..` notation e.g. `abc123..def456` (both inclusive)."},{"lineNumber":141,"author":{"gitId":"-"},"content":"* `ignoreAuthorList`: The list of authors to ignore during analysis. Authors specified in `authors` field or `author-config.csv` will be also be omitted if they are in this list. Authors should be specified by their [Git Author Name](#a-note-about-git-author-name)."},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"**Fields to provide _author-level_ info**:\u003cbr\u003e"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Note: `authors` field should contain _all_ authors that should be captured in the analysis."},{"lineNumber":145,"author":{"gitId":"-"},"content":"* `githubId`: GitHub username of the author. {{ mandatory }} field."},{"lineNumber":146,"author":{"gitId":"-"},"content":"* `emails`: Associated GitHub emails of the author. This can be found in your [GitHub settings](https://github.com/settings/emails)."},{"lineNumber":147,"author":{"gitId":"-"},"content":"* `displayName`: Name to display on the report for this author."},{"lineNumber":148,"author":{"gitId":"Tejas2805"},"content":"* `authorNames`: Git Author Name(s) used in the author\u0027s commits. By default, RepoSense assumes an author would use her GitHub username as the Git username too. The meaning of _Git Author Name_ is explained in [_A note about git author name_](#a-note-about-git-author-name)."},{"lineNumber":149,"author":{"gitId":"-"},"content":"* `ignoreGlobList`: _Additional_ (i.e. on top of the repo-level `ignoreGlobList`) folders/files to ignore for a specific author. The path glob syntax is specified by the [_glob format_](https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob). In the example above, the actual `ignoreGlobList` for `alice` would be `[\"about-us/**\", \"**index.html\", \"**.css\"]`."},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"To verify your standalone configuration is as intended, add the `_reposense/config.json` to your local copy of repo and run RepoSense against it as follows:\u003cbr\u003e"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* Format: `java -jar RepoSense.jar --repo LOCAL_REPO_LOCATION` \u003cbr\u003e"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* Example: `java -jar RepoSense.jar --repo c:/myRepose/foo/bar`\u003cbr\u003e"},{"lineNumber":154,"author":{"gitId":"-"},"content":"After that, view the report to see if the configuration you specified in the config file is being reflected correctly in the report."},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"## A note about git author name"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"`Git Author Name` refers to the customizable author\u0027s display name set in the local `.gitconfig` file. For example, in the Git Log\u0027s display:"},{"lineNumber":159,"author":{"gitId":"-"},"content":"``` {.no-line-numbers}"},{"lineNumber":160,"author":{"gitId":"-"},"content":"..."},{"lineNumber":161,"author":{"gitId":"-"},"content":"commit cd7f610e0becbdf331d5231887d8010a689f87c7"},{"lineNumber":162,"author":{"gitId":"-"},"content":"Author: ConfiguredAuthorName \u003cauthor@example.com\u003e"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Date:   Fri Feb 9 19:14:41 2018 +0800"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"    Make some changes to show my new author\u0027s name"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"commit e3f699fd4ef128eebce98d5b4e5b3bb06a512f49"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Author: ActualGitHubId \u003cauthor@example.com\u003e"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Date:   Fri Feb 9 19:13:13 2018 +0800"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"    Initial commit"},{"lineNumber":172,"author":{"gitId":"-"},"content":" ..."},{"lineNumber":173,"author":{"gitId":"-"},"content":"```"},{"lineNumber":174,"author":{"gitId":"-"},"content":"`ActualGitHubId` and `ConfiguredAuthorName` are both `Git Author Name` of the same author.\u003cbr\u003e"},{"lineNumber":175,"author":{"gitId":"-"},"content":"To find the author name that you are currently using for your current git repository, run the following command within your git repository:"},{"lineNumber":176,"author":{"gitId":"-"},"content":"``` {.no-line-numbers}"},{"lineNumber":177,"author":{"gitId":"-"},"content":"git config user.name"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```"},{"lineNumber":179,"author":{"gitId":"-"},"content":"To set the author name to the value you want (e.g., to set it to your GitHub username) for your current git repository, you can use the following command ([more info](https://www.git-tower.com/learn/git/faq/change-author-name-email)):"},{"lineNumber":180,"author":{"gitId":"-"},"content":"``` {.no-line-numbers}"},{"lineNumber":181,"author":{"gitId":"-"},"content":"git config user.name \"YOUR_AUTHOR_NAME”"},{"lineNumber":182,"author":{"gitId":"-"},"content":"```"},{"lineNumber":183,"author":{"gitId":"-"},"content":"To set the author name to use a default value you want for future git repositories, you can use the following command:"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` {.no-line-numbers}"},{"lineNumber":185,"author":{"gitId":"-"},"content":"git config --global user.name \"YOUR_AUTHOR_NAME”"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```"},{"lineNumber":187,"author":{"gitId":"-"},"content":"RepoSense expects the Git Author Name to be the same as author\u0027s GitHub username. If an author\u0027s `Git Author Name` is different from her `GitHub ID`, the `Git Author Name` needs to be specified in the standalone config file. If the author has more than one `Git Author Name`, multiple values can be entered too."},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"Note: Symbols such as `\"`, `!`, `/` etc. in your author name will be omitted, which may reduce the accuracy of the analysis if 2 names in the repository are approximately similar."},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"Tejas2805":9,"-":185}},{"path":"docs/ug/faq.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cvariable name\u003d\"title\"\u003eAppendix: FAQ\u003c/variable\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"### Q: Does RepoSense work on private repositories?"},{"lineNumber":12,"author":{"gitId":"Tejas2805"},"content":"**A:** *RepoSense* will first clone the git repository to be analyzed; thus, if you do not have access to the repository, we cannot run the analysis.\u003cbr\u003e"},{"lineNumber":13,"author":{"gitId":"Tejas2805"},"content":"To enable *RepoSense* to work on private repositories, ensure that you have enabled access to your private repository in your git terminal first before running the analysis."},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"Tejas2805"},"content":"### Q: How do formats work?"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**A:** **Formats** are the [file extensions](https://techterms.com/definition/fileextension), which is the **suffix** at the end of a filename that indicates what type of file it is.\u003cbr\u003e"},{"lineNumber":19,"author":{"gitId":"Tejas2805"},"content":"The formats/file extensions to be analyzed by *RepoSense* can be specified through the [standalone config file](#provide-data-using-a-json-config-file), [repo-config file](#repo-configcsv), and [command line](#customize-using-command-line-parameters)."},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"### Q: How does ignore glob list work?"},{"lineNumber":24,"author":{"gitId":"-"},"content":"**A:** [Glob](https://en.wikipedia.org/wiki/Glob_(programming)) is the pattern to specify a set of filenames with [wildcard characters](https://www.computerhope.com/jargon/w/wildcard.htm). **Ignore glob list** is the list of patterns to specify all the files in the repository which should be ignored from analysis.\u003cbr\u003e"},{"lineNumber":25,"author":{"gitId":"Tejas2805"},"content":"The ignore glob list can be specified through the [standalone config file](#provide-data-using-a-json-config-file), [repo-config file](#repo-config-csv), and [author-config file](#author-config-csv)."}],"authorContributionMap":{"Tejas2805":5,"-":20}},{"path":"docs/ug/generatingReports.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cvariable name\u003d\"title\"\u003eGenerating a report\u003c/variable\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"{% from \u0027scripts/macros.njk\u0027 import embed with context %}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"lead\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"Let\u0027s look at different ways to generate RepoSense reports."},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"Tejas2805"},"content":"* **If you have Java on your computer**, the straight-forward way to generate a report is to use the RepoSense executable to generate the report locally on your computer, as explained in the [_Generating reports locally_](#generating-reports-locally) section below."},{"lineNumber":18,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":19,"author":{"gitId":"Tejas2805"},"content":"* **If you don\u0027t have Java on your computer or do not wish to run the executable on your computer**, some alternatives are provided in the [_Generating reports remotely_](#generating-reports-remotely) section below."},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Generating reports locally"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Ensure you have the prerequisites**:"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   * **Java 8** (JRE `1.8.0_60`) or later ([download :fas-download:](https://www.java.com/en/))."},{"lineNumber":27,"author":{"gitId":"-"},"content":"   * **git `2.14`** or later on the command line. ([download :fas-download:](https://git-scm.com/downloads)).\u003cbr\u003e run `git --version` in your OS terminal to confirm the version."},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. **Download the latest JAR file** from our [releases](https://github.com/reposense/RepoSense/releases/latest)."},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. **Generate a report**: The simplest use case for RepoSense is to generate a report for the recent history of a repo.\u003cbr\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  command: `java -jar RepoSense.jar --repos LIST_OF_REPO_URLS --view`\u003cbr\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  Examples:"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * `java -jar RepoSense.jar --repos https://github.com/reposense/RepoSense.git --view` (note the `.git` at the end of the repo URL)"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * `java -jar RepoSense.jar --repos https://github.com/reposense/RepoSense.git c:/myRepose/foo/bar --view` analyzes the two specified repos (one remote, one local)."},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"   The above commands will analyze the given repo(s) for commits done within \u003d\u003dthe last month\u003d\u003d and open the report in your default Browser."},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"**To learn how to generate a report using \u003ctooltip content\u003d\"e.g., generate a report for a different period, for specific file types, for specific authors, etc.\"\u003eother settings\u003c/tooltip\u003e**, head over to the [_**Customizing reports**_](customizingReports.html) section."},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Generating reports remotely"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"**You can generate a RepoSense report remotely without installing/running anything on your computer.** This is particularly useful when you are deciding whether to adopt RepoSense."},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"**The easiest option is to use Netlify.** The instructions are given below."},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"{{ embed(\"Appendix: **Using RepoSense with Netlify → Setting up**\", \"withNetlify.md#section-setting-up\") }}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"**You can also use the following options.** While they are more work to set up, they are more suitable as a permanent solution due to their generous free tier."},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"{{ embed(\"Appendix: **Using RepoSense with GitHub Actions → Setting up**\", \"withGithubActions.md#section-setting-up\") }}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"{{ embed(\"Appendix: **Using RepoSense with Travis → Setting up**\", \"withTravis.md#section-setting-up\") }}"}],"authorContributionMap":{"Tejas2805":3,"-":52}},{"path":"docs/ug/sharingReports.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cvariable name\u003d\"title\"\u003eSharing reports\u003c/variable\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"{% from \u0027scripts/macros.njk\u0027 import embed with context %}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"lead\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"**Often, you would want to share the RepoSense report with others.** For example, a teacher using RepoSense for a programming class might want to share the report privately with tutors or publish it so that everyone can see it."},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"Tejas2805"},"content":"The sections below explain various ways of sharing a RepoSense report."},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"### Share privately"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"To share a RepoSense report privately, simply find a way to share the folder containing the report (by default, it will be in a folder named `reposense-report`). For example, you can zip that folder and share it with the intended recipients."},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"You can point the recipients to the [_**Using reports**_](usingReports.html) section for guidance on how to view reports."},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Publish on the web"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"As RepoSense reports are in a web page format, you can publish a report by simply uploading it onto any web hosting service. Given below are several options that not only allow to publish reports, but **also enable various levels of automating** the entire process (e.g., automatically update the report daily)."},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"{{ embed(\"Appendix: **Using RepoSense with GitHub Actions**\", \"withGithubActions.md\") }}"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"{{ embed(\"Appendix: **Using RepoSense with Travis**\", \"withTravis.md\") }}"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"{{ embed(\"Appendix: **Using RepoSense with Netlify**\", \"withNetlify.md\") }}"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"Tejas2805":1,"-":37}},{"path":"docs/ug/troubleshooting.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cvariable name\u003d\"title\"\u003eAppendix: Troubleshooting\u003c/variable\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"### Contributions missing in the ramp chart (but appear in the contribution bar and code panel)"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"Tejas2805"},"content":"This is probably a case of giving an incorrect author name alias (or GitHub ID) in your [author-config file](#author-config-csv).\u003cbr\u003e"},{"lineNumber":14,"author":{"gitId":"Tejas2805"},"content":"Please refer to [A Note About Git Author Name](#a-note-about-git-author-name) above on how to find out the correct author name you are using and how to change it.\u003cbr\u003e"},{"lineNumber":15,"author":{"gitId":"Tejas2805"},"content":"Also, ensure that you have added all author name aliases you may be using (if you are using multiple computers or have previously changed your author name).\u003cbr\u003e"},{"lineNumber":16,"author":{"gitId":"Tejas2805"},"content":"Alternatively, you may choose to configure *RepoSense* to track using your GitHub email instead of in your [standalone config file](#provide-data-using-a-json-config-file) or [author-config file](#author-config-csv), which is more accurate compared to author name aliases. The associated GitHub email you are using can be found in your [GitHub settings](https://github.com/settings/emails)."},{"lineNumber":17,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Contribution bar and code panel is empty (despite a non-empty ramp chart)"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"Tejas2805"},"content":"The contribution bar and code panel records the lines you have authored to the **latest** commit of the repository and branch you are analyzing.  As such, it is possible that while you have lots of committed contributions, your final authorship contribution is low. This happens if you have only deleted lines or someone else has overwritten your code and taken authorship for it (currently, RepoSense does not have the functionality to track overwritten lines)..\u003cbr\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"It is also possible that another user has overridden the authorship of your lines using the [@@author tags](#provide-data-using-author-tags)."},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"### RepoSense is not using the standalone config file in my local repository"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"Ensure that you have committed the changes to your standalone config file first before running the analysis, as *RepoSense* is unable to detect uncommitted changes to your local repository."},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"### RepoSense fails on Windows (but works on Linux/Mac OS)"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"Possibly, you may have some file names with [special characters](https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file#naming-conventions) in them, which is disallowed in Windows OS. As such, *RepoSense* is unable to clone your repository fully, thus failing the analysis."},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"### Some file types are not shown in the file type filter even if I have included them in the file formats when generating the report"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"The files of these types may be [binary files](https://en.wikipedia.org/wiki/Binary_file). *RepoSense* will group binary files under one single file type `binary`. Common binary files include images (`.jpg`, `.png`), applications (`.exe`), zip files (`.zip`, `.rar`) and certain document types (`.docx`, `.pptx`)."}],"authorContributionMap":{"Tejas2805":6,"-":36}},{"path":"docs/ug/usingReports.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cvariable name\u003d\"title\"\u003eUsing reports\u003c/variable\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"lead\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"Let\u0027s look at how to view, interpret, and interact with a RepoSense report."},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Viewing the report"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"As a report consists of web pages, it can be viewed using a Web Browser. Here are the ways to view the report in different situations."},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Situation 1: The report has been hosted on a website**"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  * Simply go to the URL of the report ([example](https://nus-cs2113-ay1920s2.github.io/tp-dashboard)) in your browser."},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Situation 2: You generated the report in your computer earlier**"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Run RepoSense with the `--view` option:\u003cbr\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Format: `java -jar RepoSense.jar --view REPORT_FOLDER`\u003cbr\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    e.g., `java -jar RepoSense.jar --view ./myReport/reposense-report`"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* **Situation 3: The report was given to you as a zip file or as a folder**"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  1. If it is a zip file, unzip it."},{"lineNumber":28,"author":{"gitId":"-"},"content":"  1. Open the `index.html` (in the unzipped report directory) using a browser."},{"lineNumber":29,"author":{"gitId":"-"},"content":"  1. If the report was not loaded automatically, click on the `choose file` button in the shown web page, and select the `archive.zip` (in the same directory) manually.\u003cbr\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     If even the `choose file` button is not showing up, try a different browser."},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Report structure"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"Here is an example of how a typical report looks like:"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"![report](../images/report-features.png)"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"The report is divided into two sections: [_**Chart panel**_](#chart-panel) and the [_**Code panel**_](#code-panel). In some situations, the [_**Commits panel**_](#commits-panel) will appear in place of the _code panel_. All three are explained in the sections below."},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Chart panel"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"![Ramp Charts](../images/rampchart.png)\u003cbr\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"The `Chart panel` (an example is shown above) contains a series of _ramp chart_ + _contribution bar_ pairs, possibly organized into sub-groups, with a _tool bar_ at the top."},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"#### Ramp charts"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"definition\" seamless\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"Tejas2805"},"content":"**Ramp chart**: This is a visualization of the frequency and quantity of contributions of an author for a specific repository. Each ramp chart (i.e., light blue rectangle) represents an author\u0027s contribution timeline for a particular repository. Contributions appear as ramps in the timeline."},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"definition\" seamless\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"**Ramp**: The name we use to refer to the triangular saw-tooth-like shape that represents a code contribution. A ramp can represent a single commit, a sum of the commits done in a certain period, depending on the granularity used."},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"Tejas2805"},"content":"* The ramp\u0027s area is proportional to the amount of contribution the author made at that time period."},{"lineNumber":63,"author":{"gitId":"-"},"content":"* The position of the right edge of the ramp (perpendicular to the blue bar) represents the period (the day or the week) in which the contribution was made."},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Hover the pointer over a ramp to see the total number of lines represented by that ramp."},{"lineNumber":65,"author":{"gitId":"-"},"content":"* Click on the ramp to see on GitHub the list of commits represented by that ramp."},{"lineNumber":66,"author":{"gitId":"Tejas2805"},"content":"* To make the comparison between two authors easier, the color of the ramps that represent different authors\u0027 contributions at the same time period are the same."},{"lineNumber":67,"author":{"gitId":"Tejas2805"},"content":"* Ramps representing big contributions can overlap with earlier time periods. This represents the possibility that if the work committed during a specific period is big, it could have started at an earlier time period."},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"#### Contribution bars"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"definition\" seamless\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"**Contribution bar**: It\u0027s the bar that appears below each ramp chart. Its length represents the total amount of code contributed by an author during the _total analysis period_."},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"* Hover over a contribution bar to see the exact amount of the contribution."},{"lineNumber":77,"author":{"gitId":"Tejas2805"},"content":"* If an author contributed significantly higher than other authors, the contribution bar could _overflow_ into multiple lines."},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"Tejas2805"},"content":"We allow contribution bars to overflow into multiple lines (rather than adjust the scale to fit the maximum bar length) to prevent a minority of \u003ctooltip content\u003d\"i.e., those contributing an unusually high amount of code\"\u003eoutliers\u003c/tooltip\u003e from affecting the scale of the majority."},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"#### Tool bar"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"The `Tool Bar` at the top of the Chart panel provides a set of configuration options that control the Chart panel."},{"lineNumber":87,"author":{"gitId":"-"},"content":"* `Search`: filters the author and repository by keywords."},{"lineNumber":88,"author":{"gitId":"-"},"content":"  * Multiple keywords/terms can be used, separated by spaces."},{"lineNumber":89,"author":{"gitId":"-"},"content":"  * Entries that contain _any_ (not necessarily _all_) of the search terms will be displayed."},{"lineNumber":90,"author":{"gitId":"Tejas2805"},"content":"  * The keywords used to filter the author and repository are case-insensitive."},{"lineNumber":91,"author":{"gitId":"-"},"content":"* `Group by`: grouping criteria for the rows of results."},{"lineNumber":92,"author":{"gitId":"-"},"content":"  * `None`: results will not be grouped in any particular way."},{"lineNumber":93,"author":{"gitId":"-"},"content":"  * `Repo/Branch`: results will be grouped by repositories and its\u0027 associating branches."},{"lineNumber":94,"author":{"gitId":"-"},"content":"  * `Author`: results will be grouped by the name of the author. Contributions made to multiple repositories by a particular author will be grouped under the author."},{"lineNumber":95,"author":{"gitId":"-"},"content":"* `Sort groups by`: sorting criteria for the main group. See note [1] below."},{"lineNumber":96,"author":{"gitId":"-"},"content":"  * `Group title`: groups will be sorted by the title of the group (in bold text) in alphabetical order."},{"lineNumber":97,"author":{"gitId":"-"},"content":"  * `Contribution`: groups will be sorted by the combined contributions within a group, in the order of number of lines added."},{"lineNumber":98,"author":{"gitId":"Tejas2805"},"content":"  * `Variance`: groups will be sorted by how far the daily contributions are spread out from their average value among all authors involved. A detailed definition of variance is located [here](https://en.wikipedia.org/wiki/Variance)."},{"lineNumber":99,"author":{"gitId":"-"},"content":"* `Sort within groups by`: sorting criteria within each group."},{"lineNumber":100,"author":{"gitId":"Tejas2805"},"content":"  * `Title`: each group will be internally sorted by it\u0027s title in alphabetical order."},{"lineNumber":101,"author":{"gitId":"-"},"content":"  * `Contribution`: each group will be internally sorted by individual contributions in the order of number of lines added."},{"lineNumber":102,"author":{"gitId":"Tejas2805"},"content":"  * `Variance`: each group will be internally sorted by how far the daily contributions are spread out from their average value by each author into a particular repo. A detailed definition of variance is located [here](https://en.wikipedia.org/wiki/Variance)."},{"lineNumber":103,"author":{"gitId":"-"},"content":"* `Granularity`: the period of time for which commits are aggregated in the Ramp Chart."},{"lineNumber":104,"author":{"gitId":"-"},"content":"    * `Commit`: each commit made is shown as one ramp."},{"lineNumber":105,"author":{"gitId":"-"},"content":"    * `Day`: commits within a day (commits made within 00:00 to 23:59) are shown as one ramp."},{"lineNumber":106,"author":{"gitId":"-"},"content":"    * `Week`: commits within a week (from Monday 00:00 to Sunday 23:59) are shown as one ramp."},{"lineNumber":107,"author":{"gitId":"-"},"content":"* `Since`, `Until`: the date range for the Ramp Chart (not applied to the Contribution Bars)."},{"lineNumber":108,"author":{"gitId":"-"},"content":"* `Reset date range`: resets the date range of the Ramp Chart to the default date range."},{"lineNumber":109,"author":{"gitId":"-"},"content":"* `Breakdown by file type`: toggles the contribution bar to either display the bar by :"},{"lineNumber":110,"author":{"gitId":"Tejas2805"},"content":"    * the total lines of codes added (if the checkbox is left unchecked), or"},{"lineNumber":111,"author":{"gitId":"Tejas2805"},"content":"    * a breakdown of the number of lines of codes added to each file type (if the checkbox is checked). More info on note [3] below."},{"lineNumber":112,"author":{"gitId":"-"},"content":"* `Merge group`: merges all the ramp charts of each group into a single ramp chart; aggregates the contribution of each group."},{"lineNumber":113,"author":{"gitId":"-"},"content":"    * viewing of authored code of the group as a whole is available when `group by repos`."},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"Notes:\u003cbr\u003e"},{"lineNumber":116,"author":{"gitId":"-"},"content":"[1] **`Sort groups by`**: each main group has its own index and percentile according to its ranking position after sorting (e.g., if the groups are sorted by contribution in descending order, a 25% percentile indicates that the group is in the top 25% of the whole cohort in terms of contribution)\u003cbr\u003e."},{"lineNumber":117,"author":{"gitId":"Tejas2805"},"content":"[2] **`Repo/Branch`**: the repo/branch name is constructed as `ORGANIZATION/REPOSITORY[BRANCH]` (e.g., `reposense/reposense[master]`)\u003cbr\u003e"},{"lineNumber":118,"author":{"gitId":"Tejas2805"},"content":"[3] The total contribution of each group will get updated based on the checked file types and will be taken into account when the sorting criteria is contribution."},{"lineNumber":119,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"Tejas2805"},"content":"**RepoSense support _intelligent_ bookmarks**: Note how the browser URL changes as you modify settings in the report. If you send that URL to someone else, that person will be able to use that URL to view the report in the same _view configuration_ you had when you copied the URL. For example, [this URL](https://nus-cs2113-ay1920s2.github.io/tp-dashboard/) and [this URL](https://nus-cs2113-ay1920s2.github.io/tp-dashboard/#search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-03-01\u0026timeframe\u003dday\u0026mergegroup\u003dtrue\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue) give two different views of the same report."},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"## Code panel"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/code-panel.png\" alt\u003d\"code panel\" width\u003d\"468\"\u003e"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"Tejas2805"},"content":"The `Code panel` allows users to see the code attributed to a specific author. Click on the `\u003c/\u003e` icon beside the author\u0027s name in the `Chart panel` to display the `Code panel` on the right."},{"lineNumber":132,"author":{"gitId":"Tejas2805"},"content":"* The Code panel shows the files that contain the author\u0027s contributions, sorted by the number of lines written."},{"lineNumber":133,"author":{"gitId":"-"},"content":"* Select the radio button to enable one of the following 2 filters. Note that only 1 of the 2 filters is active at any time."},{"lineNumber":134,"author":{"gitId":"-"},"content":"    * Type file path glob in glob filter to include files matching the glob expression."},{"lineNumber":135,"author":{"gitId":"-"},"content":"    * Select the checkboxes to include files of preferred file extensions. "},{"lineNumber":136,"author":{"gitId":"-"},"content":"    The number right beside the file extension shows the total number of lines written by the author in such file extension files. In contrast, the number inside the parenthesis indicates the number of non-blank lines written by the author."},{"lineNumber":137,"author":{"gitId":"-"},"content":"* Clicking the file title toggles the file content."},{"lineNumber":138,"author":{"gitId":"Tejas2805"},"content":"* Clicking the first icon beside the file title opens the history view of the file on GitHub."},{"lineNumber":139,"author":{"gitId":"Tejas2805"},"content":"* Clicking the second icon beside the file title opens the blame view of the file on GitHub."},{"lineNumber":140,"author":{"gitId":"-"},"content":"* Code attributed to the author is highlighted in green."},{"lineNumber":141,"author":{"gitId":"Tejas2805"},"content":"* Non-trivial code segments that the selected author does not write are hidden by default, but you can toggle them by clicking on the %%:fas-plus-circle:%% icon."},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"Changing binary files, such as images (`.jpg`, `.png`), applications (`.exe`), zip files (`.zip`, `.rar`) and certain document types (`.docx`, `.pptx`), is not counted towards the total number of lines of code contributed by an author."},{"lineNumber":146,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"## Commits panel"},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/commits-panel.png\" alt\u003d\"commits panel\" width\u003d\"468\"\u003e"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"The `Commits panel` allows users to see the commits attributed to a specific author."},{"lineNumber":154,"author":{"gitId":"-"},"content":"* To view all commits attributed to an author, locate the author\u0027s ramp chart in the chart panel, and click on the %%:fas-list-ul:%% icon above the ramp chart."},{"lineNumber":155,"author":{"gitId":"-"},"content":"* To view commits of a specific period, locate the author\u0027s ramp chart in the chart panel, hold down the \u003ckbd\u003eCtrl\u003c/kbd\u003e key (\u003ckbd\u003e\u0026#8984;\u003c/kbd\u003e in MacOS), and click on the start and end positions of the period (on the ramp chart) you want to view. \u003cbr\u003e"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"![Opening commits panel](../images/opening-commits-panel.gif)"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"* The commits can be sorted by the date it was committed or by LoC."},{"lineNumber":160,"author":{"gitId":"Tejas2805"},"content":"* The tags of the commits will also be displayed on top if any. Clicking on a tag will direct you to the commit having that particular tag."},{"lineNumber":161,"author":{"gitId":"-"},"content":"* The date range for the `Chart panel` can be updated by clicking on the \"Show ramp chart for this period\" below the name of the author."},{"lineNumber":162,"author":{"gitId":"-"},"content":"* The ramp chart at the top of the `Commits panel` represents individual commits (not weekly or daily contributions)."},{"lineNumber":163,"author":{"gitId":"-"},"content":"* The commit messages body can be expanded or collapsed by clicking on the %%:fas-ellipsis-h:%% icon beside each commit message title."},{"lineNumber":164,"author":{"gitId":"-"},"content":"* To promote and encourage the 50/72 rule for commit messages, a dotted vertical line will be shown for:"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  * Commit message subject that exceeds 50 characters."},{"lineNumber":166,"author":{"gitId":"-"},"content":"  * Commit message body after the 72nd character mark."}],"authorContributionMap":{"Tejas2805":22,"-":144}},{"path":"frontend/cypress/.eslintrc.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    \"extends\": ["},{"lineNumber":3,"author":{"gitId":"-"},"content":"        \"../../.eslintrc.json\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"    ],"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"globals\": {"},{"lineNumber":6,"author":{"gitId":"Tejas2805"},"content":"        \"Cypress\": true,"},{"lineNumber":7,"author":{"gitId":"Tejas2805"},"content":"        \"cy\": true,"},{"lineNumber":8,"author":{"gitId":"Tejas2805"},"content":"        \"describe\": true,"},{"lineNumber":9,"author":{"gitId":"Tejas2805"},"content":"        \"it\": true,"},{"lineNumber":10,"author":{"gitId":"Tejas2805"},"content":"        \"beforeEach\": true"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"rules\": {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \"no-unused-expressions\": \"off\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Tejas2805":5,"-":10}},{"path":"frontend/cypress/tests/chartView/chartView_contributionBar.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"describe(\u0027contribution bar\u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  it(\u0027same length when breakdown selected\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    let expectedWidthSum \u003d 0;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    cy.get(\u0027.summary-chart__contrib--bar\u0027).then((ele) \u003d\u003e {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      let i;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      for (i \u003d 0; i \u003c ele.length; i +\u003d 1) {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        expectedWidthSum +\u003d parseFloat(ele[i].style.width.split(\u0027%\u0027)[0]);"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary-wrapper label\u0027).contains(\u0027breakdown by file type\u0027).siblings().filter(\u0027input\u0027)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        .check();"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Cypress.wait();"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    let actualWidthSum \u003d 0;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    cy.get(\u0027.summary-chart__contrib--bar\u0027).then((ele) \u003d\u003e {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      let i;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      for (i \u003d 0; i \u003c ele.length; i +\u003d 1) {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        actualWidthSum +\u003d parseFloat(ele[i].style.width.split(\u0027%\u0027)[0]);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    expect(actualWidthSum.toFixed(3)).to.be.equal(expectedWidthSum.toFixed(3));"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":25,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":26,"author":{"gitId":"0blivious"},"content":"  it(\u0027no contribution bar when breakdown selected and all file types unchecked\u0027, () \u003d\u003e {"},{"lineNumber":27,"author":{"gitId":"0blivious"},"content":"    cy.get(\u0027#summary-wrapper label\u0027).contains(\u0027breakdown by file type\u0027).siblings().filter(\u0027input\u0027)"},{"lineNumber":28,"author":{"gitId":"0blivious"},"content":"        .check();"},{"lineNumber":29,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":30,"author":{"gitId":"0blivious"},"content":"    cy.get(\u0027#summary-wrapper label\u0027).contains(\u0027All\u0027).siblings().filter(\u0027input\u0027)"},{"lineNumber":31,"author":{"gitId":"0blivious"},"content":"        .uncheck();"},{"lineNumber":32,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    cy.get(\u0027.summary-chart__contrib--bar\u0027).should(\u0027not.exist\u0027);"},{"lineNumber":34,"author":{"gitId":"0blivious"},"content":"  });"},{"lineNumber":35,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":36,"author":{"gitId":"0blivious"},"content":"  it(\u0027display selected file types only\u0027, () \u003d\u003e {"},{"lineNumber":37,"author":{"gitId":"0blivious"},"content":"    let expectedWidthSum \u003d 0;"},{"lineNumber":38,"author":{"gitId":"0blivious"},"content":"    cy.get(\u0027#summary-wrapper label\u0027).contains(\u0027breakdown by file type\u0027).siblings().filter(\u0027input\u0027)"},{"lineNumber":39,"author":{"gitId":"0blivious"},"content":"        .check();"},{"lineNumber":40,"author":{"gitId":"0blivious"},"content":"    cy.get(\u0027.summary-chart__contrib--bar\u0027).then((ele) \u003d\u003e {"},{"lineNumber":41,"author":{"gitId":"0blivious"},"content":"      expectedWidthSum +\u003d parseFloat(ele[0].style.width.split(\u0027%\u0027)[0]);"},{"lineNumber":42,"author":{"gitId":"0blivious"},"content":"    });"},{"lineNumber":43,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":44,"author":{"gitId":"0blivious"},"content":"    cy.get(\u0027#summary-wrapper label\u0027).contains(\u0027All\u0027).siblings().filter(\u0027input\u0027)"},{"lineNumber":45,"author":{"gitId":"0blivious"},"content":"        .uncheck();"},{"lineNumber":46,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":47,"author":{"gitId":"0blivious"},"content":"    cy.get(\u0027#summary-wrapper label\u0027).contains(\u0027gradle\u0027).siblings().filter(\u0027input\u0027)"},{"lineNumber":48,"author":{"gitId":"0blivious"},"content":"        .check();"},{"lineNumber":49,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":50,"author":{"gitId":"0blivious"},"content":"    Cypress.wait();"},{"lineNumber":51,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":52,"author":{"gitId":"0blivious"},"content":"    let actualWidthSum \u003d 0;"},{"lineNumber":53,"author":{"gitId":"0blivious"},"content":"    cy.get(\u0027.summary-chart__contrib--bar\u0027).then((ele) \u003d\u003e {"},{"lineNumber":54,"author":{"gitId":"0blivious"},"content":"      let i;"},{"lineNumber":55,"author":{"gitId":"0blivious"},"content":"      for (i \u003d 0; i \u003c ele.length; i +\u003d 1) {"},{"lineNumber":56,"author":{"gitId":"0blivious"},"content":"        actualWidthSum +\u003d parseFloat(ele[i].style.width.split(\u0027%\u0027)[0]);"},{"lineNumber":57,"author":{"gitId":"0blivious"},"content":"      }"},{"lineNumber":58,"author":{"gitId":"0blivious"},"content":"    });"},{"lineNumber":59,"author":{"gitId":"0blivious"},"content":"    expect(actualWidthSum.toFixed(3)).to.be.equal(expectedWidthSum.toFixed(3));"},{"lineNumber":60,"author":{"gitId":"0blivious"},"content":"  });"},{"lineNumber":61,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":26,"0blivious":35}},{"path":"frontend/cypress/tests/chartView/chartView_filterBreakdown.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"jamessspanggg"},"content":"describe(\u0027filter breakdown\u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"jamessspanggg"},"content":"  it(\u0027check breakdown by file type should show file types\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"jamessspanggg"},"content":"    Cypress.wait();"},{"lineNumber":4,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":5,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.filter-breakdown input:visible\u0027)"},{"lineNumber":6,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":7,"author":{"gitId":"jamessspanggg"},"content":"        .check()"},{"lineNumber":8,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.checked\u0027);"},{"lineNumber":9,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":10,"author":{"gitId":"jamessspanggg"},"content":"    // should show file type checkboxes"},{"lineNumber":11,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary div.fileTypes\u0027)"},{"lineNumber":12,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":13,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":14,"author":{"gitId":"jamessspanggg"},"content":"    // should show file type legends"},{"lineNumber":15,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary-charts div.summary-charts__fileType--breakdown\u0027)"},{"lineNumber":16,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":17,"author":{"gitId":"jamessspanggg"},"content":"  });"},{"lineNumber":18,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":19,"author":{"gitId":"jamessspanggg"},"content":"  it(\u0027uncheck all file types should show no file types\u0027, () \u003d\u003e {"},{"lineNumber":20,"author":{"gitId":"jamessspanggg"},"content":"    Cypress.wait();"},{"lineNumber":21,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":22,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.filter-breakdown input:visible\u0027)"},{"lineNumber":23,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":24,"author":{"gitId":"jamessspanggg"},"content":"        .check()"},{"lineNumber":25,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.checked\u0027);"},{"lineNumber":26,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":27,"author":{"gitId":"jamessspanggg"},"content":"    // uncheck all file types"},{"lineNumber":28,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary div.fileTypes input:visible[id\u003d\"all\"]\u0027)"},{"lineNumber":29,"author":{"gitId":"jamessspanggg"},"content":"        .uncheck()"},{"lineNumber":30,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027not.be.checked\u0027);"},{"lineNumber":31,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":32,"author":{"gitId":"jamessspanggg"},"content":"    // should not show file type legends"},{"lineNumber":33,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary-charts div.summary-charts__fileType--breakdown\u0027)"},{"lineNumber":34,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027not.be.visible\u0027);"},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"  });"},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":"  it(\u0027uncheck file type should uncheck all option and not show legend\u0027, () \u003d\u003e {"},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":"    Cypress.wait();"},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":40,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.filter-breakdown input:visible\u0027)"},{"lineNumber":41,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":42,"author":{"gitId":"jamessspanggg"},"content":"        .check()"},{"lineNumber":43,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.checked\u0027);"},{"lineNumber":44,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":45,"author":{"gitId":"jamessspanggg"},"content":"    // uncheck gradle file type"},{"lineNumber":46,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary div.fileTypes input[id\u003d\"gradle\"]\u0027)"},{"lineNumber":47,"author":{"gitId":"jamessspanggg"},"content":"        .uncheck()"},{"lineNumber":48,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027not.be.checked\u0027);"},{"lineNumber":49,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":50,"author":{"gitId":"jamessspanggg"},"content":"    // should not show gradle file type legend"},{"lineNumber":51,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary-charts \u003e div \u003e div.summary-charts__fileType--breakdown span\u0027)"},{"lineNumber":52,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027not.contain.text\u0027, \u0027gradle\u0027);"},{"lineNumber":53,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":54,"author":{"gitId":"jamessspanggg"},"content":"    // all option should be unchecked"},{"lineNumber":55,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary div.fileTypes input[id\u003d\"all\"]\u0027)"},{"lineNumber":56,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027not.be.checked\u0027);"},{"lineNumber":57,"author":{"gitId":"jamessspanggg"},"content":"  });"},{"lineNumber":58,"author":{"gitId":"jamessspanggg"},"content":"});"}],"authorContributionMap":{"jamessspanggg":58}},{"path":"frontend/cypress/tests/chartView/chartView_mergeGroup.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"jamessspanggg"},"content":"describe(\u0027merge group\u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"jamessspanggg"},"content":"  it(\u0027check and uncheck merge group when group by repos\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"jamessspanggg"},"content":"    Cypress.wait();"},{"lineNumber":4,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":5,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)"},{"lineNumber":6,"author":{"gitId":"jamessspanggg"},"content":"        .select(\u0027groupByRepos\u0027);"},{"lineNumber":7,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":8,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)"},{"lineNumber":9,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":10,"author":{"gitId":"jamessspanggg"},"content":"        .check()"},{"lineNumber":11,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.checked\u0027);"},{"lineNumber":12,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":13,"author":{"gitId":"jamessspanggg"},"content":"    // after checking merge group, only one merged repo group will show"},{"lineNumber":14,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary-charts\u0027).find(\u0027.summary-chart\u0027)"},{"lineNumber":15,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027have.length\u0027, 1);"},{"lineNumber":16,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":17,"author":{"gitId":"jamessspanggg"},"content":"    Cypress.wait();"},{"lineNumber":18,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":19,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)"},{"lineNumber":20,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":21,"author":{"gitId":"jamessspanggg"},"content":"        .uncheck()"},{"lineNumber":22,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027not.be.checked\u0027);"},{"lineNumber":23,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":24,"author":{"gitId":"jamessspanggg"},"content":"    // after un-checking merge group, all 5 summary charts will show"},{"lineNumber":25,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary-charts\u0027).find(\u0027.summary-chart\u0027)"},{"lineNumber":26,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027have.length\u0027, 5);"},{"lineNumber":27,"author":{"gitId":"jamessspanggg"},"content":"  });"},{"lineNumber":28,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":29,"author":{"gitId":"jamessspanggg"},"content":"  it(\u0027check and uncheck merge group when group by authors\u0027, () \u003d\u003e {"},{"lineNumber":30,"author":{"gitId":"jamessspanggg"},"content":"    Cypress.wait();"},{"lineNumber":31,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":32,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)"},{"lineNumber":33,"author":{"gitId":"jamessspanggg"},"content":"        .select(\u0027groupByAuthors\u0027);"},{"lineNumber":34,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)"},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":"        .check()"},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.checked\u0027);"},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":40,"author":{"gitId":"jamessspanggg"},"content":"    // after checking merge group, 5 merged author groups will show"},{"lineNumber":41,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary-charts\u0027).find(\u0027.summary-chart\u0027)"},{"lineNumber":42,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027have.length\u0027, 5);"},{"lineNumber":43,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":44,"author":{"gitId":"jamessspanggg"},"content":"    Cypress.wait();"},{"lineNumber":45,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":46,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)"},{"lineNumber":47,"author":{"gitId":"jamessspanggg"},"content":"        .first()"},{"lineNumber":48,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":49,"author":{"gitId":"jamessspanggg"},"content":"        .uncheck()"},{"lineNumber":50,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027not.be.checked\u0027);"},{"lineNumber":51,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":52,"author":{"gitId":"jamessspanggg"},"content":"    // after un-checking merge group, all 5 summary charts will show"},{"lineNumber":53,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary-charts\u0027).find(\u0027.summary-chart\u0027)"},{"lineNumber":54,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027have.length\u0027, 5);"},{"lineNumber":55,"author":{"gitId":"jamessspanggg"},"content":"  });"},{"lineNumber":56,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":57,"author":{"gitId":"jamessspanggg"},"content":"  it(\u0027merge group option should be disabled when group by none\u0027, () \u003d\u003e {"},{"lineNumber":58,"author":{"gitId":"jamessspanggg"},"content":"    Cypress.wait();"},{"lineNumber":59,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":60,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)"},{"lineNumber":61,"author":{"gitId":"jamessspanggg"},"content":"        .select(\u0027groupByNone\u0027);"},{"lineNumber":62,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":63,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)"},{"lineNumber":64,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":65,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.disabled\u0027);"},{"lineNumber":66,"author":{"gitId":"jamessspanggg"},"content":"  });"},{"lineNumber":67,"author":{"gitId":"jamessspanggg"},"content":"});"}],"authorContributionMap":{"jamessspanggg":67}},{"path":"frontend/cypress/tests/chartView/chartView_reload.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"jamessspanggg"},"content":"describe(\u0027reload page\u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"jamessspanggg"},"content":"  it(\u0027reload page should restore all controls\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"jamessspanggg"},"content":"    Cypress.wait();"},{"lineNumber":4,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":5,"author":{"gitId":"jamessspanggg"},"content":"    // search"},{"lineNumber":6,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-textfield.search_box \u003e input:visible\u0027)"},{"lineNumber":7,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":8,"author":{"gitId":"jamessspanggg"},"content":"        .type(\u0027eugene\u0027);"},{"lineNumber":9,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":10,"author":{"gitId":"jamessspanggg"},"content":"    // group by"},{"lineNumber":11,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)"},{"lineNumber":12,"author":{"gitId":"jamessspanggg"},"content":"        .select(\u0027groupByAuthors\u0027);"},{"lineNumber":13,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":14,"author":{"gitId":"jamessspanggg"},"content":"    // sort groups by"},{"lineNumber":15,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-select.sort-group \u003e select:visible\u0027)"},{"lineNumber":16,"author":{"gitId":"jamessspanggg"},"content":"        .select(\u0027↓ contribution\u0027);"},{"lineNumber":17,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":18,"author":{"gitId":"jamessspanggg"},"content":"    // sort within groups by"},{"lineNumber":19,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-select.sort-within-group \u003e select:visible\u0027)"},{"lineNumber":20,"author":{"gitId":"jamessspanggg"},"content":"        .select(\u0027↓ contribution\u0027);"},{"lineNumber":21,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":22,"author":{"gitId":"jamessspanggg"},"content":"    // granularity"},{"lineNumber":23,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-select.granularity \u003e select:visible\u0027)"},{"lineNumber":24,"author":{"gitId":"jamessspanggg"},"content":"        .select(\u0027week\u0027);"},{"lineNumber":25,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":26,"author":{"gitId":"jamessspanggg"},"content":"    // since date"},{"lineNumber":27,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027input[name\u003d\"since\"]:visible\u0027)"},{"lineNumber":28,"author":{"gitId":"jamessspanggg"},"content":"        .type(\u00272018-06-10\u0027);"},{"lineNumber":29,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":30,"author":{"gitId":"jamessspanggg"},"content":"    // until date"},{"lineNumber":31,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027input[name\u003d\"until\"]:visible\u0027)"},{"lineNumber":32,"author":{"gitId":"jamessspanggg"},"content":"        .type(\u00272019-06-10\u0027);"},{"lineNumber":33,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":34,"author":{"gitId":"jamessspanggg"},"content":"    // break down by file type"},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.filter-breakdown \u003e input:visible\u0027)"},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":"        .check()"},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.checked\u0027);"},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":40,"author":{"gitId":"jamessspanggg"},"content":"    // merge group"},{"lineNumber":41,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)"},{"lineNumber":42,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":43,"author":{"gitId":"jamessspanggg"},"content":"        .check()"},{"lineNumber":44,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.checked\u0027);"},{"lineNumber":45,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":46,"author":{"gitId":"jamessspanggg"},"content":"    cy.reload();"},{"lineNumber":47,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":48,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-textfield.search_box \u003e input:visible\u0027)"},{"lineNumber":49,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027have.value\u0027, \u0027eugene\u0027);"},{"lineNumber":50,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":51,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)"},{"lineNumber":52,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027have.value\u0027, \u0027groupByAuthors\u0027);"},{"lineNumber":53,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":54,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-select.sort-group \u003e select:visible\u0027)"},{"lineNumber":55,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027have.value\u0027, \u0027totalCommits dsc\u0027);"},{"lineNumber":56,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":57,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-select.sort-within-group \u003e select:visible\u0027)"},{"lineNumber":58,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027have.value\u0027, \u0027totalCommits dsc\u0027);"},{"lineNumber":59,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":60,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027div.mui-select.granularity \u003e select:visible\u0027)"},{"lineNumber":61,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027have.value\u0027, \u0027week\u0027);"},{"lineNumber":62,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":63,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027input[name\u003d\"since\"]:visible\u0027)"},{"lineNumber":64,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027have.value\u0027, \u00272018-06-10\u0027);"},{"lineNumber":65,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":66,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027input[name\u003d\"until\"]:visible\u0027)"},{"lineNumber":67,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027have.value\u0027, \u00272019-06-10\u0027);"},{"lineNumber":68,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":69,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.filter-breakdown \u003e input:visible\u0027)"},{"lineNumber":70,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.checked\u0027);"},{"lineNumber":71,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":72,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)"},{"lineNumber":73,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.checked\u0027);"},{"lineNumber":74,"author":{"gitId":"jamessspanggg"},"content":"  });"},{"lineNumber":75,"author":{"gitId":"jamessspanggg"},"content":"});"}],"authorContributionMap":{"jamessspanggg":75}},{"path":"frontend/cypress/tests/chartView/chartView_toolBar_searchBox.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"describe(\u0027search bar\u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  it(\u0027non-existent author shows no result\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"ang-zeyu"},"content":"    cy.get(\u0027#app #tab-resize .tab-close\u0027).click();"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary-wrapper input[type\u003dtext]\u0027)"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        .type(\u0027abcdef\u0027)"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        .type(\u0027{enter}\u0027);"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"    Cypress.wait();"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"    // Enter does not work. Related issue: https://github.com/cypress-io/cypress/issues/3405"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    // Let\u0027s manually submit form"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary-wrapper form.summary-picker\u0027)"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        .submit();"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Cypress.wait();"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary-wrapper #summary-charts\u0027).then(($ele) \u003d\u003e {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      const content \u003d $ele.html();"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"      expect(content).to.be.empty;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"  it(\u0027unique author shows one result\u0027, () \u003d\u003e {"},{"lineNumber":25,"author":{"gitId":"ang-zeyu"},"content":"    cy.get(\u0027#app #tab-resize .tab-close\u0027).click();"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary-wrapper input[type\u003dtext]\u0027)"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        .type(\u0027Yong Hao TENG\u0027)"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        .type(\u0027{enter}\u0027);"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    Cypress.wait();"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // Enter does not work. Related issue: https://github.com/cypress-io/cypress/issues/3405"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Let\u0027s manually submit form"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary-wrapper form.summary-picker\u0027)"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        .submit();"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    Cypress.wait();"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary-wrapper #summary-charts\u0027).then(($ele) \u003d\u003e {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      const children \u003d $ele.children().length;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      expect(children).to.equal(1);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":44,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":42,"ang-zeyu":2}},{"path":"frontend/cypress/tests/chartView/chartView_zoomFeature.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"jamessspanggg"},"content":"describe(\u0027zoom features in code view\u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"jamessspanggg"},"content":"  const zoomKey \u003d Cypress.platform \u003d\u003d\u003d \u0027darwin\u0027 ? \u0027{meta}\u0027 : \u0027{ctrl}\u0027;"},{"lineNumber":3,"author":{"gitId":"jamessspanggg"},"content":"  it(\u0027click on view commits button\u0027, () \u003d\u003e {"},{"lineNumber":4,"author":{"gitId":"jamessspanggg"},"content":"    Cypress.wait();"},{"lineNumber":5,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":6,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":7,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":8,"author":{"gitId":"jamessspanggg"},"content":"        .first()"},{"lineNumber":9,"author":{"gitId":"jamessspanggg"},"content":"        .click();"},{"lineNumber":10,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":11,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#tab-zoom\u0027)"},{"lineNumber":12,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":13,"author":{"gitId":"jamessspanggg"},"content":"  });"},{"lineNumber":14,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":15,"author":{"gitId":"jamessspanggg"},"content":"  it(\u0027zoom into ramp\u0027, () \u003d\u003e {"},{"lineNumber":16,"author":{"gitId":"jamessspanggg"},"content":"    Cypress.wait();"},{"lineNumber":17,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":18,"author":{"gitId":"jamessspanggg"},"content":"    // clicking from the 10th px to the 50th px in the ramp"},{"lineNumber":19,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027body\u0027).type(zoomKey, { release: false })"},{"lineNumber":20,"author":{"gitId":"jamessspanggg"},"content":"        .get(\u0027#summary-charts .summary-chart__ramp .ramp\u0027)"},{"lineNumber":21,"author":{"gitId":"jamessspanggg"},"content":"        .first()"},{"lineNumber":22,"author":{"gitId":"jamessspanggg"},"content":"        .click(10, 20)"},{"lineNumber":23,"author":{"gitId":"jamessspanggg"},"content":"        .click(50, 20);"},{"lineNumber":24,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":25,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#tab-zoom\u0027)"},{"lineNumber":26,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":27,"author":{"gitId":"jamessspanggg"},"content":"  });"},{"lineNumber":28,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":29,"author":{"gitId":"jamessspanggg"},"content":"  it(\u0027zoom into ramp when merge group\u0027, () \u003d\u003e {"},{"lineNumber":30,"author":{"gitId":"jamessspanggg"},"content":"    Cypress.wait();"},{"lineNumber":31,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":32,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)"},{"lineNumber":33,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":34,"author":{"gitId":"jamessspanggg"},"content":"        .check()"},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.checked\u0027);"},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":"    // clicking from the 10th px to the 50th px in the ramp"},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027body\u0027).type(zoomKey, { release: false })"},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":"        .get(\u0027#summary-charts .summary-chart__ramp .ramp\u0027)"},{"lineNumber":40,"author":{"gitId":"jamessspanggg"},"content":"        .first()"},{"lineNumber":41,"author":{"gitId":"jamessspanggg"},"content":"        .click(10, 20)"},{"lineNumber":42,"author":{"gitId":"jamessspanggg"},"content":"        .click(50, 20);"},{"lineNumber":43,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":44,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#tab-zoom\u0027)"},{"lineNumber":45,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":46,"author":{"gitId":"jamessspanggg"},"content":"  });"},{"lineNumber":47,"author":{"gitId":"jamessspanggg"},"content":"});"}],"authorContributionMap":{"jamessspanggg":47}},{"path":"frontend/cypress/tests/codeView/codeView.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"describe(\u0027code view\u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  it(\u0027at first start shows tutorial message\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tabs-wrapper\u0027)"},{"lineNumber":4,"author":{"gitId":"-"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-empty \u003e .title\u0027).then(($ele) \u003d\u003e {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      const expected \u003d \u0027Welcome to this RepoSense report!The charts on the left show the contribution activities, grouped by repository and author.To view the code attributed to a specific author, click the    icon next to that author\\\u0027s name.To view the breakdown of commits made by a specific author, click the    icon next to that author\\\u0027s name.To hide the code view and show only the activity charts, click the    icon on the centre divider.See the  User Guide  to get a better understanding of how to interpret the report.\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      const message \u003d $ele.text();"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"      expect(expected).to.equal(message);"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"  it(\u0027can be closed\u0027, () \u003d\u003e {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tabs-wrapper\u0027)"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Cypress.wait();"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"ang-zeyu"},"content":"    cy.get(\u0027#app #tab-resize .tab-close\u0027)"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        .click();"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    Cypress.wait();"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tabs-wrapper\u0027)"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        .should(\u0027not.exist\u0027);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":28,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":29,"author":{"gitId":"jamessspanggg"},"content":"  it(\u0027merge group and view code for entire repository\u0027, () \u003d\u003e {"},{"lineNumber":30,"author":{"gitId":"jamessspanggg"},"content":"    Cypress.wait(); // ensure everything is loaded"},{"lineNumber":31,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":32,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input\u0027)"},{"lineNumber":33,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":34,"author":{"gitId":"jamessspanggg"},"content":"        .check({ force: true })"},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.checked\u0027);"},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":"    Cypress.wait();"},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":40,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":41,"author":{"gitId":"jamessspanggg"},"content":"        .first()"},{"lineNumber":42,"author":{"gitId":"jamessspanggg"},"content":"        .click();"},{"lineNumber":43,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":44,"author":{"gitId":"jamessspanggg"},"content":"    cy.get(\u0027#tab-authorship .files\u0027, { timeout: 90000 })"},{"lineNumber":45,"author":{"gitId":"jamessspanggg"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":46,"author":{"gitId":"jamessspanggg"},"content":"  });"},{"lineNumber":47,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"jamessspanggg":19,"-":27,"ang-zeyu":1}},{"path":"frontend/cypress/tests/codeView/codeView_checkFileTypes.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"Tejas2805"},"content":"describe(\u0027check file types\u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"Tejas2805"},"content":"  it(\u0027check if all files types are visible by default\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"Tejas2805"},"content":"    Cypress.wait();"},{"lineNumber":4,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":5,"author":{"gitId":"Tejas2805"},"content":"    // open the code panel"},{"lineNumber":6,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":7,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":8,"author":{"gitId":"Tejas2805"},"content":"        .first()"},{"lineNumber":9,"author":{"gitId":"Tejas2805"},"content":"        .click();"},{"lineNumber":10,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":11,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship .files\u0027, { timeout: 90000 })"},{"lineNumber":12,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":13,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":14,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"all\"]\u0027)"},{"lineNumber":15,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.checked\u0027);"},{"lineNumber":16,"author":{"gitId":"Tejas2805"},"content":"  });"},{"lineNumber":17,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":18,"author":{"gitId":"Tejas2805"},"content":"  it(\u0027uncheck all files types should show no files\u0027, () \u003d\u003e {"},{"lineNumber":19,"author":{"gitId":"Tejas2805"},"content":"    Cypress.wait();"},{"lineNumber":20,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":21,"author":{"gitId":"Tejas2805"},"content":"    // open the code panel"},{"lineNumber":22,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":23,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":24,"author":{"gitId":"Tejas2805"},"content":"        .first()"},{"lineNumber":25,"author":{"gitId":"Tejas2805"},"content":"        .click();"},{"lineNumber":26,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":27,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship .files\u0027, { timeout: 90000 })"},{"lineNumber":28,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":29,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":30,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"all\"]\u0027)"},{"lineNumber":31,"author":{"gitId":"Tejas2805"},"content":"        .uncheck()"},{"lineNumber":32,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027not.be.checked\u0027);"},{"lineNumber":33,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":34,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship .files\u0027)"},{"lineNumber":35,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027not.be.visible\u0027);"},{"lineNumber":36,"author":{"gitId":"Tejas2805"},"content":"  });"},{"lineNumber":37,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":38,"author":{"gitId":"Tejas2805"},"content":"  it(\u0027uncheck file type should uncheck all option and not show legend\u0027, () \u003d\u003e {"},{"lineNumber":39,"author":{"gitId":"Tejas2805"},"content":"    Cypress.wait();"},{"lineNumber":40,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":41,"author":{"gitId":"Tejas2805"},"content":"    // open the code panel"},{"lineNumber":42,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":43,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":44,"author":{"gitId":"Tejas2805"},"content":"        .first()"},{"lineNumber":45,"author":{"gitId":"Tejas2805"},"content":"        .click();"},{"lineNumber":46,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":47,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship .files\u0027, { timeout: 90000 })"},{"lineNumber":48,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":49,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":50,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"java\"]\u0027)"},{"lineNumber":51,"author":{"gitId":"Tejas2805"},"content":"        .uncheck()"},{"lineNumber":52,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027not.be.checked\u0027);"},{"lineNumber":53,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":54,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"all\"]\u0027)"},{"lineNumber":55,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027not.be.checked\u0027);"},{"lineNumber":56,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":57,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027.file \u003e .title \u003e .fileTypeLabel\u0027)"},{"lineNumber":58,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027not.contain.text\u0027, \u0027java\u0027);"},{"lineNumber":59,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":60,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027.file \u003e .title \u003e .fileTypeLabel\u0027)"},{"lineNumber":61,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027contain.text\u0027, \u0027gradle\u0027);"},{"lineNumber":62,"author":{"gitId":"Tejas2805"},"content":"  });"},{"lineNumber":63,"author":{"gitId":"Tejas2805"},"content":"});"}],"authorContributionMap":{"Tejas2805":63}},{"path":"frontend/cypress/tests/codeView/codeView_hideFileDetails.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"Tejas2805"},"content":"describe(\u0027hide all file details\u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"Tejas2805"},"content":"  it(\u0027check hide all file details hides the content of all the files\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"Tejas2805"},"content":"    Cypress.wait();"},{"lineNumber":4,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":5,"author":{"gitId":"Tejas2805"},"content":"    // open the code panel"},{"lineNumber":6,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":7,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":8,"author":{"gitId":"Tejas2805"},"content":"        .first()"},{"lineNumber":9,"author":{"gitId":"Tejas2805"},"content":"        .click();"},{"lineNumber":10,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":11,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship .files\u0027, { timeout: 90000 })"},{"lineNumber":12,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":13,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":14,"author":{"gitId":"Tejas2805"},"content":"    // the contents of all the files should be visible"},{"lineNumber":15,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":16,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":17,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":18,"author":{"gitId":"Tejas2805"},"content":"    // hide the details of all the files"},{"lineNumber":19,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship .toolbar--multiline\u0027)"},{"lineNumber":20,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":21,"author":{"gitId":"Tejas2805"},"content":"        .click();"},{"lineNumber":22,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":23,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship .files\u0027)"},{"lineNumber":24,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":25,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":26,"author":{"gitId":"Tejas2805"},"content":"    // the contents of all the files should be hidden"},{"lineNumber":27,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":28,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027not.be.visible\u0027);"},{"lineNumber":29,"author":{"gitId":"Tejas2805"},"content":"  });"},{"lineNumber":30,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":31,"author":{"gitId":"Tejas2805"},"content":"  it(\u0027check details of one file are shown, rest are hidden\u0027, () \u003d\u003e {"},{"lineNumber":32,"author":{"gitId":"Tejas2805"},"content":"    Cypress.wait();"},{"lineNumber":33,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":34,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":35,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":36,"author":{"gitId":"Tejas2805"},"content":"        .first()"},{"lineNumber":37,"author":{"gitId":"Tejas2805"},"content":"        .click();"},{"lineNumber":38,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":39,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship .files\u0027, { timeout: 90000 })"},{"lineNumber":40,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":41,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":42,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship .toolbar--multiline\u0027)"},{"lineNumber":43,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":44,"author":{"gitId":"Tejas2805"},"content":"        .click();"},{"lineNumber":45,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":46,"author":{"gitId":"Tejas2805"},"content":"    // should show \u0027show all file details\u0027 only"},{"lineNumber":47,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship .toolbar--multiline a\u0027)"},{"lineNumber":48,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027not.contain.text\u0027, \u0027hide all file details\u0027)"},{"lineNumber":49,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027contain.text\u0027, \u0027show all file details\u0027);"},{"lineNumber":50,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":51,"author":{"gitId":"Tejas2805"},"content":"    // open contents of the first file"},{"lineNumber":52,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship .title .path\u0027)"},{"lineNumber":53,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":54,"author":{"gitId":"Tejas2805"},"content":"        .first()"},{"lineNumber":55,"author":{"gitId":"Tejas2805"},"content":"        .click();"},{"lineNumber":56,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":57,"author":{"gitId":"Tejas2805"},"content":"    // should show both \u0027show/hide all file details\u0027"},{"lineNumber":58,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship .toolbar--multiline a\u0027)"},{"lineNumber":59,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027contain.text\u0027, \u0027hide all file details\u0027)"},{"lineNumber":60,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027contain.text\u0027, \u0027show all file details\u0027);"},{"lineNumber":61,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":62,"author":{"gitId":"Tejas2805"},"content":"    // contents of the first file should be visible"},{"lineNumber":63,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":64,"author":{"gitId":"Tejas2805"},"content":"        .first()"},{"lineNumber":65,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":66,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":67,"author":{"gitId":"Tejas2805"},"content":"    // contents of the last file should be hidden"},{"lineNumber":68,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":69,"author":{"gitId":"Tejas2805"},"content":"        .last()"},{"lineNumber":70,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027not.be.visible\u0027);"},{"lineNumber":71,"author":{"gitId":"Tejas2805"},"content":"  });"},{"lineNumber":72,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":73,"author":{"gitId":"Tejas2805"},"content":"  it(\u0027check show all file details shows the content of all the files\u0027, () \u003d\u003e {"},{"lineNumber":74,"author":{"gitId":"Tejas2805"},"content":"    Cypress.wait();"},{"lineNumber":75,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":76,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":77,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":78,"author":{"gitId":"Tejas2805"},"content":"        .first()"},{"lineNumber":79,"author":{"gitId":"Tejas2805"},"content":"        .click();"},{"lineNumber":80,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":81,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship .files\u0027, { timeout: 90000 })"},{"lineNumber":82,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":83,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":84,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":85,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":86,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":87,"author":{"gitId":"Tejas2805"},"content":"    // hide the content of all the files"},{"lineNumber":88,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship .toolbar--multiline\u0027)"},{"lineNumber":89,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":90,"author":{"gitId":"Tejas2805"},"content":"        .click();"},{"lineNumber":91,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":92,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":93,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027not.be.visible\u0027);"},{"lineNumber":94,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":95,"author":{"gitId":"Tejas2805"},"content":"    // show the content of all the files"},{"lineNumber":96,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship .toolbar--multiline\u0027)"},{"lineNumber":97,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":98,"author":{"gitId":"Tejas2805"},"content":"        .click();"},{"lineNumber":99,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":100,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":101,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":102,"author":{"gitId":"Tejas2805"},"content":"  });"},{"lineNumber":103,"author":{"gitId":"Tejas2805"},"content":"});"}],"authorContributionMap":{"Tejas2805":103}},{"path":"frontend/cypress/tests/codeView/codeView_load_benchmark.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"describe(\u0027load code view benchmark\u0027, function() {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  const NUM_TRIALS \u003d 5;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  const THRESHOLD_LOADING_TIME \u003d 8000;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  const THRESHOLD_LOADING_TIME_SECONDS \u003d THRESHOLD_LOADING_TIME / 1000;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"  const BUFFER_PERCENTAGE \u003d 0.1;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  const BUFFER_SUGGESTED_TIME \u003d 3000;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  const ALLOWED_BUFFER_TIME \u003d BUFFER_PERCENTAGE * THRESHOLD_LOADING_TIME \u003e\u003d BUFFER_SUGGESTED_TIME"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                              ? BUFFER_PERCENTAGE * THRESHOLD_LOADING_TIME : BUFFER_SUGGESTED_TIME;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  const ALLOWED_BUFFER_TIME_SECONDS \u003d ALLOWED_BUFFER_TIME / 1000;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"  const MAXIMUM_LOADING_TIME \u003d THRESHOLD_LOADING_TIME + ALLOWED_BUFFER_TIME;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"  let isATrialWithinMaxTime \u003d false;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"  const timeTrial \u003d function(i) {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      let startTime;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"      // ensure that icons are loaded"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      Cypress.wait();"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"      cy.get(\u0027#summary-wrapper .sort-within-group select\u0027)"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        .select(\u0027totalCommits dsc\u0027);"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"Tejas2805"},"content":"      cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        .first()"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        .click()"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        .then(() \u003d\u003e {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          startTime \u003d performance.now();"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"      cy.get(\u0027#tab-authorship .files\u0027, { timeout: 90000 })"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        .then(() \u003d\u003e {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          const endTime \u003d performance.now();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          const loadingTime \u003d endTime - startTime;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          const loadingTimeSeconds \u003d loadingTime / 1000;"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"          cy.log(`trial ${i+1} loading time: ${loadingTimeSeconds.toFixed(3)}s`);"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"          if (loadingTime \u003c\u003d MAXIMUM_LOADING_TIME) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            isATrialWithinMaxTime \u003d true;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"  for (let i \u003d 0; i \u003c NUM_TRIALS; i++) {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    it(`time taken to load code view (trial ${i+1})`, function() {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      if (isATrialWithinMaxTime) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.skip();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      timeTrial(i);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"  it(`at least one trial is within ${THRESHOLD_LOADING_TIME_SECONDS}(+${ALLOWED_BUFFER_TIME_SECONDS})s`, function() {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    assert.isTrue(isATrialWithinMaxTime);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":61,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"Tejas2805":1,"-":60}},{"path":"frontend/cypress/tests/codeView/codeView_reload.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"Tejas2805"},"content":"describe(\u0027reload page\u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"Tejas2805"},"content":"  it(\u0027reload page should restore all controls\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"Tejas2805"},"content":"    Cypress.wait();"},{"lineNumber":4,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":5,"author":{"gitId":"Tejas2805"},"content":"    // open the code panel"},{"lineNumber":6,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":7,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":8,"author":{"gitId":"Tejas2805"},"content":"        .first()"},{"lineNumber":9,"author":{"gitId":"Tejas2805"},"content":"        .click();"},{"lineNumber":10,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"    // change sort by"},{"lineNumber":12,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .sorting \u003e .sort-by \u003e select\u0027)"},{"lineNumber":13,"author":{"gitId":"Tejas2805"},"content":"        .select(\u0027LoC\u0027);"},{"lineNumber":14,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // change sort order"},{"lineNumber":16,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .sorting \u003e .sort-order \u003e select\u0027)"},{"lineNumber":17,"author":{"gitId":"Tejas2805"},"content":"        .select(\u0027Descending\u0027);"},{"lineNumber":18,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":19,"author":{"gitId":"Tejas2805"},"content":"    // select radio-button"},{"lineNumber":20,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes \u003e .radio-button--checkbox\u0027)"},{"lineNumber":21,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":22,"author":{"gitId":"Tejas2805"},"content":"        .check()"},{"lineNumber":23,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.checked\u0027);"},{"lineNumber":24,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":25,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"all\"]\u0027)"},{"lineNumber":26,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.checked\u0027);"},{"lineNumber":27,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":28,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"gradle\"]\u0027)"},{"lineNumber":29,"author":{"gitId":"Tejas2805"},"content":"        .uncheck()"},{"lineNumber":30,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027not.be.checked\u0027);"},{"lineNumber":31,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":32,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"pug\"]\u0027)"},{"lineNumber":33,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.checked\u0027);"},{"lineNumber":34,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":35,"author":{"gitId":"Tejas2805"},"content":"    cy.reload();"},{"lineNumber":36,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":37,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .sorting \u003e .sort-by \u003e select\u0027)"},{"lineNumber":38,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027have.value\u0027, \u0027lineOfCode\u0027);"},{"lineNumber":39,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":40,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .sorting \u003e .sort-order \u003e select\u0027)"},{"lineNumber":41,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027have.value\u0027, \u0027true\u0027);"},{"lineNumber":42,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":43,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes \u003e .radio-button--checkbox\u0027)"},{"lineNumber":44,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.checked\u0027);"},{"lineNumber":45,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":46,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"all\"]\u0027)"},{"lineNumber":47,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027not.be.checked\u0027);"},{"lineNumber":48,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":49,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"gradle\"]\u0027)"},{"lineNumber":50,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027not.be.checked\u0027);"},{"lineNumber":51,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":52,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"pug\"]\u0027)"},{"lineNumber":53,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.checked\u0027);"},{"lineNumber":54,"author":{"gitId":"Tejas2805"},"content":"  });"},{"lineNumber":55,"author":{"gitId":"Tejas2805"},"content":"});"}],"authorContributionMap":{"Tejas2805":53,"-":2}},{"path":"frontend/cypress/tests/zoomView/zoomView_hideCommitMessages.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"Tejas2805"},"content":"describe(\u0027hide all commit messages \u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"Tejas2805"},"content":"  it(\u0027check hide all commit messages hides the commit messages\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"Tejas2805"},"content":"    Cypress.wait();"},{"lineNumber":4,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":5,"author":{"gitId":"Tejas2805"},"content":"    // open the commit panel"},{"lineNumber":6,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":7,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":8,"author":{"gitId":"Tejas2805"},"content":"        .first()"},{"lineNumber":9,"author":{"gitId":"Tejas2805"},"content":"        .click();"},{"lineNumber":10,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":11,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-zoom .commit-message\u0027, { timeout: 90000 })"},{"lineNumber":12,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":13,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":14,"author":{"gitId":"Tejas2805"},"content":"    // the messages of all the commits should be visible"},{"lineNumber":15,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-zoom .commit-message .body\u0027)"},{"lineNumber":16,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":17,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":18,"author":{"gitId":"Tejas2805"},"content":"    // hides all the commit messages"},{"lineNumber":19,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline\u0027)"},{"lineNumber":20,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":21,"author":{"gitId":"Tejas2805"},"content":"        .click();"},{"lineNumber":22,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":23,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-zoom .commit-message\u0027)"},{"lineNumber":24,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":25,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":26,"author":{"gitId":"Tejas2805"},"content":"    // the messages of all the commits should be hidden"},{"lineNumber":27,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-zoom .commit-message .body\u0027)"},{"lineNumber":28,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027not.be.visible\u0027);"},{"lineNumber":29,"author":{"gitId":"Tejas2805"},"content":"  });"},{"lineNumber":30,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":31,"author":{"gitId":"Tejas2805"},"content":"  it(\u0027check show all commit messages show the commit messages\u0027, () \u003d\u003e {"},{"lineNumber":32,"author":{"gitId":"Tejas2805"},"content":"    Cypress.wait();"},{"lineNumber":33,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":34,"author":{"gitId":"Tejas2805"},"content":"    // open the commit panel"},{"lineNumber":35,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":36,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":37,"author":{"gitId":"Tejas2805"},"content":"        .first()"},{"lineNumber":38,"author":{"gitId":"Tejas2805"},"content":"        .click();"},{"lineNumber":39,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":40,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-zoom .commit-message\u0027, { timeout: 90000 })"},{"lineNumber":41,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":42,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":43,"author":{"gitId":"Tejas2805"},"content":"    // hides all the commit messages"},{"lineNumber":44,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline\u0027)"},{"lineNumber":45,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":46,"author":{"gitId":"Tejas2805"},"content":"        .click();"},{"lineNumber":47,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":48,"author":{"gitId":"Tejas2805"},"content":"    // the messages of all the commits should be hidden"},{"lineNumber":49,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-zoom .commit-message .body\u0027)"},{"lineNumber":50,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027not.be.visible\u0027);"},{"lineNumber":51,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":52,"author":{"gitId":"Tejas2805"},"content":"    // show the messages of all the commits"},{"lineNumber":53,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline\u0027)"},{"lineNumber":54,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":55,"author":{"gitId":"Tejas2805"},"content":"        .click();"},{"lineNumber":56,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":57,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-zoom .commit-message .body\u0027)"},{"lineNumber":58,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027);"},{"lineNumber":59,"author":{"gitId":"Tejas2805"},"content":"  });"},{"lineNumber":60,"author":{"gitId":"Tejas2805"},"content":"});"}],"authorContributionMap":{"Tejas2805":60}},{"path":"frontend/cypress/tests/zoomView/zoomView_reload.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"Tejas2805"},"content":"describe(\u0027reload page\u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"Tejas2805"},"content":"  it(\u0027reload page should restore all controls\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"Tejas2805"},"content":"    Cypress.wait();"},{"lineNumber":4,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":5,"author":{"gitId":"Tejas2805"},"content":"    // open the commit panel"},{"lineNumber":6,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":7,"author":{"gitId":"Tejas2805"},"content":"        .should(\u0027be.visible\u0027)"},{"lineNumber":8,"author":{"gitId":"Tejas2805"},"content":"        .first()"},{"lineNumber":9,"author":{"gitId":"Tejas2805"},"content":"        .click();"},{"lineNumber":10,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"    // change sort by"},{"lineNumber":12,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-zoom \u003e .sorting \u003e .sort-by \u003e select:visible\u0027)"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        .select(\u0027LoC\u0027);"},{"lineNumber":14,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // change sort order"},{"lineNumber":16,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-zoom \u003e .sorting \u003e .sort-order \u003e select:visible\u0027)"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        .select(\u0027Ascending\u0027);"},{"lineNumber":18,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .fileTypes input[value\u003d\"gradle\"]\u0027)"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        .uncheck()"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        .should(\u0027not.be.checked\u0027);"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .fileTypes input[value\u003d\"scss\"]\u0027)"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        .uncheck()"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        .should(\u0027not.be.checked\u0027);"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"Tejas2805"},"content":"    cy.reload();"},{"lineNumber":28,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":29,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-zoom \u003e .sorting \u003e .sort-by \u003e select:visible\u0027)"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        .should(\u0027have.value\u0027, \u0027lineOfCode\u0027);"},{"lineNumber":31,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":32,"author":{"gitId":"Tejas2805"},"content":"    cy.get(\u0027#tab-zoom \u003e .sorting \u003e .sort-order \u003e select:visible\u0027)"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        .should(\u0027have.value\u0027, \u0027false\u0027);"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .fileTypes input[value\u003d\"all\"]\u0027)"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        .should(\u0027not.be.checked\u0027);"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .fileTypes input[value\u003d\"gradle\"]\u0027)"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        .should(\u0027not.be.checked\u0027);"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .fileTypes input[value\u003d\"scss\"]\u0027)"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        .should(\u0027not.be.checked\u0027);"},{"lineNumber":43,"author":{"gitId":"Tejas2805"},"content":"  });"},{"lineNumber":44,"author":{"gitId":"Tejas2805"},"content":"});"}],"authorContributionMap":{"Tejas2805":21,"-":23}},{"path":"frontend/src/index.pug","fileType":"pug","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE html\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"html"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  head"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    title RepoSense Report"},{"lineNumber":5,"author":{"gitId":"Tejas2805"},"content":"    link(rel\u003d\"shortcut icon\", type\u003d\"image/x-icon\", href\u003d\"favicon.ico\")"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    link(rel\u003d\"stylesheet\", href\u003d\"https://fonts.googleapis.com/css?family\u003dTitillium+Web\")"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    link(rel\u003d\"stylesheet\", href\u003d\"https://cdn.jsdelivr.net/npm/normalize.css@8.0/normalize.min.css\")"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    link(rel\u003d\"stylesheet\", href\u003d\"https://cdn.jsdelivr.net/npm/muicss@0.9/dist/css/mui.min.css\")"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    link(rel\u003d\"stylesheet\", href\u003d\"https://cdn.jsdelivr.net/npm/highlight.js@10.7.1/styles/color-brewer.min.css\")"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    link(rel\u003d\"stylesheet\", href\u003d\"https://cdn.jsdelivr.net/npm/vue-loading-overlay@3/dist/vue-loading.css\")"},{"lineNumber":11,"author":{"gitId":"Tejas2805"},"content":"    link(rel\u003d\"stylesheet\", href\u003d\"static/css/panels.css\")"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    link(rel\u003d\"stylesheet\", href\u003d\"static/css/style.css\")"},{"lineNumber":13,"author":{"gitId":"Tejas2805"},"content":"    link(rel\u003d\"stylesheet\", href\u003d\"static/css/v_authorship.css\")"},{"lineNumber":14,"author":{"gitId":"Tejas2805"},"content":"    link(rel\u003d\"stylesheet\", href\u003d\"static/css/v_ramp.css\")"},{"lineNumber":15,"author":{"gitId":"Tejas2805"},"content":"    link(rel\u003d\"stylesheet\", href\u003d\"static/css/v_summary.css\")"},{"lineNumber":16,"author":{"gitId":"Tejas2805"},"content":"    link(rel\u003d\"stylesheet\", href\u003d\"static/css/v_zoom.css\")"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"0blivious"},"content":"    // indirect dependencies"},{"lineNumber":19,"author":{"gitId":"0blivious"},"content":"    script(src\u003d\"https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.auto.js\")"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    script(src\u003d\"https://use.fontawesome.com/releases/v5.0.13/js/all.js\", defer\u003dTrue)"},{"lineNumber":21,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":22,"author":{"gitId":"ccyccyccy"},"content":"    script(src\u003d\"https://cdn.jsdelivr.net/npm/@fortawesome/vue-fontawesome@0.1.9/index.min.js\")"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    script(src\u003d\"https://cdn.jsdelivr.net/npm/jszip@3.1/dist/jszip.min.js\")"},{"lineNumber":24,"author":{"gitId":"jamessspanggg"},"content":"    script(src\u003d\"https://cdn.jsdelivr.net/npm/seedrandom@3.0.5/seedrandom.min.js\")"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    script(src\u003d\"https://cdn.jsdelivr.net/npm/vue-loading-overlay@3\")"},{"lineNumber":26,"author":{"gitId":"0blivious"},"content":"    script(src\u003d\"https://cdn.jsdelivr.net/npm/vue@2.5/dist/vue.js\")"},{"lineNumber":27,"author":{"gitId":"0blivious"},"content":"    script(src\u003d\"https://unpkg.com/vuex@3.1.3/dist/vuex.js\")"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    script(src\u003d\"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.7.1/build/highlight.min.js\")"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    script(src\u003d\"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.7.1/build/languages/asciidoc.min.js\")"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    script(src\u003d\"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.7.1/build/languages/gradle.min.js\")"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    script(src\u003d\"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.7.1/build/languages/plaintext.min.js\")"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    script(src\u003d\"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.7.1/build/languages/scss.min.js\")"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    script(src\u003d\"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.7.1/build/languages/yaml.min.js\")"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  body"},{"lineNumber":36,"author":{"gitId":"Tejas2805"},"content":"    #app"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      loading-overlay.overlay-loader("},{"lineNumber":38,"author":{"gitId":"-"},"content":"        v-cloak,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        v-bind:active.sync\u003d\"isLoadingOverlayEnabled\","},{"lineNumber":40,"author":{"gitId":"-"},"content":"        v-bind:opacity\u003d\u0027loadingOverlayOpacity\u0027,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        v-bind:is-full-page\u003d\"true\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        i.overlay-loading-icon.fa.fa-spinner.fa-spin(slot\u003d\u0027default\u0027)"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        h3(slot\u003d\u0027after\u0027) {{ loadingOverlayMessage }}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"jamessspanggg"},"content":"      template(v-if\u003d\"userUpdated\")"},{"lineNumber":47,"author":{"gitId":"ang-zeyu"},"content":"        v-resizer("},{"lineNumber":48,"author":{"gitId":"ang-zeyu"},"content":"          v-bind:is-tab-active\u003d\"isTabActive\","},{"lineNumber":49,"author":{"gitId":"ang-zeyu"},"content":"          v-on:close-tab\u003d\"deactivateTab\""},{"lineNumber":50,"author":{"gitId":"ang-zeyu"},"content":"        )"},{"lineNumber":51,"author":{"gitId":"ang-zeyu"},"content":"          #summary-wrapper(slot\u003d\"left\")"},{"lineNumber":52,"author":{"gitId":"0blivious"},"content":"            v-summary.tab-padding("},{"lineNumber":53,"author":{"gitId":"-"},"content":"              ref\u003d\"summary\","},{"lineNumber":54,"author":{"gitId":"-"},"content":"              v-bind:repos\u003d\"users\","},{"lineNumber":55,"author":{"gitId":"-"},"content":"              v-bind:error-messages\u003d\"errorMessages\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .timestamp-footer"},{"lineNumber":58,"author":{"gitId":"-"},"content":"              span Generated by\u0026nbsp;"},{"lineNumber":59,"author":{"gitId":"Tejas2805"},"content":"              a("},{"lineNumber":60,"author":{"gitId":"Tejas2805"},"content":"                v-bind:href\u003d\"getSpecificCommitLink()\", target\u003d\"_blank\""},{"lineNumber":61,"author":{"gitId":"Tejas2805"},"content":"              )"},{"lineNumber":62,"author":{"gitId":"Tejas2805"},"content":"                strong this version"},{"lineNumber":63,"author":{"gitId":"Tejas2805"},"content":"              span \u0026nbsp;of\u0026nbsp;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"              a("},{"lineNumber":65,"author":{"gitId":"Tejas2805"},"content":"                v-bind:href\u003d\"getRepoSenseHomeLink()\", target\u003d\"_blank\""},{"lineNumber":66,"author":{"gitId":"-"},"content":"              )"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                strong RepoSense"},{"lineNumber":68,"author":{"gitId":"-"},"content":"              span \u0026nbsp;("},{"lineNumber":69,"author":{"gitId":"-"},"content":"              a("},{"lineNumber":70,"author":{"gitId":"Tejas2805"},"content":"                v-bind:href\u003d\"getUserGuideLink()\", target \u003d\"_blank\""},{"lineNumber":71,"author":{"gitId":"-"},"content":"              )"},{"lineNumber":72,"author":{"gitId":"Tejas2805"},"content":"                strong User Guide"},{"lineNumber":73,"author":{"gitId":"-"},"content":"              span ) on {{ creationDate }}"},{"lineNumber":74,"author":{"gitId":"anubh-v"},"content":"            .report-generation-time(style\u003d\"display: none;\")"},{"lineNumber":75,"author":{"gitId":"anubh-v"},"content":"              span {{ reportGenerationTime }}"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"ang-zeyu"},"content":"          #tabs-wrapper(ref\u003d\"tabWrapper\", slot\u003d\"right\")"},{"lineNumber":78,"author":{"gitId":"Tejas2805"},"content":"            .tab-content.panel-padding"},{"lineNumber":79,"author":{"gitId":"-"},"content":"              .tab-pane"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                v-authorship#tab-authorship(v-if\u003d\"tabType \u003d\u003d\u003d \u0027authorship\u0027\")"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                v-zoom#tab-zoom(v-else-if\u003d\"tabType \u003d\u003d\u003d \u0027zoom\u0027\")"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                #tab-empty(v-else)"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                  .title"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                    h2 Welcome to this RepoSense report!"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                    p The charts on the left show the contribution activities, grouped by repository and author."},{"lineNumber":86,"author":{"gitId":"-"},"content":"                    p"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                      | To view the code attributed to a specific author, click the \u0026nbsp;"},{"lineNumber":88,"author":{"gitId":"ccyccyccy"},"content":"                      font-awesome-icon(icon\u003d\"code\")"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                      | \u0026nbsp; icon next to that author\u0027s name."},{"lineNumber":90,"author":{"gitId":"-"},"content":"                      br"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                      | To view the breakdown of commits made by a specific author, click the \u0026nbsp;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                      font-awesome-icon(icon\u003d\"list-ul\")"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                      | \u0026nbsp; icon next to that author\u0027s name."},{"lineNumber":94,"author":{"gitId":"-"},"content":"                      br"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                      | To hide the code view and show only the activity charts, click the \u0026nbsp;"},{"lineNumber":96,"author":{"gitId":"ccyccyccy"},"content":"                      font-awesome-icon(icon\u003d\"caret-right\")"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                      | \u0026nbsp; icon on the centre divider."},{"lineNumber":98,"author":{"gitId":"-"},"content":"                    p"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                      | See the \u0026nbsp;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                      a("},{"lineNumber":101,"author":{"gitId":"-"},"content":"                        v-bind:href\u003d\"getUsingReportsUserGuideLink()\", target\u003d\"_blank\""},{"lineNumber":102,"author":{"gitId":"-"},"content":"                      )"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                        strong User Guide"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                      | \u0026nbsp; to get a better understanding of how to interpret the report."},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"      template(v-else)"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        .empty Please upload a .zip file generated by RepoSense."},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"        form#file-upload(onsubmit\u003d\"return false;\")"},{"lineNumber":110,"author":{"gitId":"-"},"content":"          input(type\u003d\"file\", accept\u003d\".zip\", v-on:change\u003d\"updateReportZip\")"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"ang-zeyu"},"content":"    vuetemplate#v_resizer"},{"lineNumber":113,"author":{"gitId":"ang-zeyu"},"content":"      include resizer.pug"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    vuetemplate#v_summary"},{"lineNumber":116,"author":{"gitId":"0blivious"},"content":"      include summary.pug"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"0blivious"},"content":"    vuetemplate#v_summary_charts"},{"lineNumber":119,"author":{"gitId":"0blivious"},"content":"      include summary_charts.pug"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"    vuetemplate#v_ramp"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      include ramp.pug"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"    vuetemplate#v_zoom"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      include tabs/zoom.pug"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"    vuetemplate#v_segment"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      include tabs/segment.pug"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"    vuetemplate#v_authorship"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      include tabs/authorship.pug"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"    script(src\u003d\"static/js/api.js\")"},{"lineNumber":134,"author":{"gitId":"0blivious"},"content":"    script(type\u003d\"module\", src\u003d\"static/js/store.js\")"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    script(src\u003d\"static/js/safari_date.js\")"},{"lineNumber":136,"author":{"gitId":"ang-zeyu"},"content":"    script(src\u003d\"static/js/v_resizer.js\")"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    script(src\u003d\"static/js/v_ramp.js\")"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    script(src\u003d\"static/js/v_zoom.js\")"},{"lineNumber":139,"author":{"gitId":"0blivious"},"content":"    script(src\u003d\"static/js/v_summary_charts.js\")"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    script(src\u003d\"static/js/v_segment.js\")"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    script(src\u003d\"static/js/v_summary.js\")"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    script(type\u003d\"module\", src\u003d\"static/js/v_authorship.js\")"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    script(src\u003d\"static/js/utils/ramp_colour_generator.js\")"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    script(src\u003d\"static/js/utils/repo_sorter.js\")"},{"lineNumber":145,"author":{"gitId":"0blivious"},"content":"    script(type\u003d\"module\", src\u003d\"static/js/main.js\")"}],"authorContributionMap":{"ccyccyccy":3,"anubh-v":2,"Tejas2805":16,"jamessspanggg":2,"-":101,"0blivious":12,"ang-zeyu":9}},{"path":"frontend/src/ramp.pug","fileType":"pug","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".ramp"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  template(v-if\u003d\"tframe \u003d\u003d\u003d \u0027commit\u0027\")"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    template(v-for\u003d\"(slice, j) in user.commits\")"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      a.ramp__slice("},{"lineNumber":5,"author":{"gitId":"-"},"content":"        draggable\u003d\"false\","},{"lineNumber":6,"author":{"gitId":"ang-zeyu"},"content":"        v-on:click\u003d\"rampClick\","},{"lineNumber":7,"author":{"gitId":"-"},"content":"        v-for\u003d\"(commit, k) in slice.commitResults\","},{"lineNumber":8,"author":{"gitId":"-"},"content":"        v-if\u003d\"commit.insertions\u003e0\","},{"lineNumber":9,"author":{"gitId":"-"},"content":"        v-bind:href\u003d\"getLink(user, commit)\", target\u003d\"_blank\","},{"lineNumber":10,"author":{"gitId":"0blivious"},"content":"        v-bind:title\u003d\"getContributionMessage(slice, commit)\","},{"lineNumber":11,"author":{"gitId":"-"},"content":"        v-bind:class\u003d\"\u0027ramp__slice--color\u0027 + getSliceColor(slice.date)\","},{"lineNumber":12,"author":{"gitId":"-"},"content":"        v-bind:style\u003d\"{\\"},{"lineNumber":13,"author":{"gitId":"-"},"content":"          zIndex: user.commits.length - j,\\"},{"lineNumber":14,"author":{"gitId":"-"},"content":"          borderLeftWidth: getWidth(commit) + \u0027em\u0027,\\"},{"lineNumber":15,"author":{"gitId":"-"},"content":"          right: ((getSlicePos(slice.date)\\"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + (getCommitPos(k, slice.commitResults.length))) * 100) + \u0027%\u0027\\"},{"lineNumber":17,"author":{"gitId":"-"},"content":"          }\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"  template(v-else)"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    a.ramp__slice("},{"lineNumber":22,"author":{"gitId":"-"},"content":"      draggable\u003d\"false\","},{"lineNumber":23,"author":{"gitId":"-"},"content":"      v-for\u003d\"(slice, j) in user.commits\","},{"lineNumber":24,"author":{"gitId":"-"},"content":"      v-if\u003d\"slice.insertions \u003e 0\","},{"lineNumber":25,"author":{"gitId":"0blivious"},"content":"      v-bind:title\u003d\"getContributionMessage(slice)\","},{"lineNumber":26,"author":{"gitId":"0blivious"},"content":"      v-on:click\u003d\"openTabZoom(user, slice, $event)\","},{"lineNumber":27,"author":{"gitId":"-"},"content":"      v-bind:class\u003d\"\u0027ramp__slice--color\u0027 + getSliceColor(slice.date)\","},{"lineNumber":28,"author":{"gitId":"0blivious"},"content":"      v-bind:style\u003d\"{\\"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        zIndex: user.commits.length - j,\\"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        borderLeftWidth: getWidth(slice) + \u0027em\u0027,\\"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        right: (getSlicePos(tframe \u003d\u003d\u003d \u0027day\u0027 ? slice.date : slice.endDate) * 100) + \u0027%\u0027 \\"},{"lineNumber":32,"author":{"gitId":"0blivious"},"content":"        }\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    )"}],"authorContributionMap":{"-":27,"0blivious":5,"ang-zeyu":1}},{"path":"frontend/src/resizer.pug","fileType":"pug","lines":[{"lineNumber":1,"author":{"gitId":"ang-zeyu"},"content":"#app-wrapper("},{"lineNumber":2,"author":{"gitId":"ang-zeyu"},"content":"  v-bind:style\u003d\"appStyles\","},{"lineNumber":3,"author":{"gitId":"ang-zeyu"},"content":"  @mousemove\u003d\"mouseMove\","},{"lineNumber":4,"author":{"gitId":"ang-zeyu"},"content":"  @mouseup\u003d\"deregisterMouseMove\","},{"lineNumber":5,"author":{"gitId":"ang-zeyu"},"content":"  @mouseleave\u003d\"deregisterMouseMove\""},{"lineNumber":6,"author":{"gitId":"ang-zeyu"},"content":")"},{"lineNumber":7,"author":{"gitId":"ang-zeyu"},"content":"  #tab-resize-guide(v-bind:style\u003d\"guideStyles\")"},{"lineNumber":8,"author":{"gitId":"ang-zeyu"},"content":"  .left-resize-container"},{"lineNumber":9,"author":{"gitId":"ang-zeyu"},"content":"    slot(name\u003d\"left\")"},{"lineNumber":10,"author":{"gitId":"ang-zeyu"},"content":"  #tab-resize("},{"lineNumber":11,"author":{"gitId":"ang-zeyu"},"content":"    @mousedown.left\u003d\"registerMouseMove\","},{"lineNumber":12,"author":{"gitId":"ang-zeyu"},"content":"    v-show\u003d\"isTabActive\""},{"lineNumber":13,"author":{"gitId":"ang-zeyu"},"content":"  )"},{"lineNumber":14,"author":{"gitId":"ang-zeyu"},"content":"    .tab-close(v-on:click\u003d\"$emit(\u0027close-tab\u0027)\")"},{"lineNumber":15,"author":{"gitId":"ang-zeyu"},"content":"      i.fas.fa-caret-right"},{"lineNumber":16,"author":{"gitId":"ang-zeyu"},"content":"  .right-resize-container("},{"lineNumber":17,"author":{"gitId":"ang-zeyu"},"content":"    v-bind:style\u003d\"rightContainerStyles\","},{"lineNumber":18,"author":{"gitId":"ang-zeyu"},"content":"    v-if\u003d\"isTabActive\""},{"lineNumber":19,"author":{"gitId":"ang-zeyu"},"content":"  )"},{"lineNumber":20,"author":{"gitId":"ang-zeyu"},"content":"    slot(name\u003d\"right\")"}],"authorContributionMap":{"ang-zeyu":20}},{"path":"frontend/src/static/css/_colors.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"anubh-v"},"content":"@import \u0027utils\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"-"},"content":" * MUI Colors module"},{"lineNumber":4,"author":{"gitId":"-"},"content":" */"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// COLOR FUNCTION"},{"lineNumber":8,"author":{"gitId":"-"},"content":"// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@function mui-color($mui-key1, $mui-key2: \u0027500\u0027) {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  // check key1"},{"lineNumber":12,"author":{"gitId":"anubh-v"},"content":"  @if validate-map-key($mui-colors, $mui-key1) \u003d\u003d false {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @return null;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"  $mui-mapVal: map-get($mui-colors, $mui-key1);"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  // use second key"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  @if type-of($mui-mapVal) \u003d\u003d \u0027map\u0027 {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // check key2"},{"lineNumber":21,"author":{"gitId":"anubh-v"},"content":"    @if validate-map-key($mui-mapVal, $mui-key2) \u003d\u003d false {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      @return null;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    $mui-mapVal: map-get($mui-mapVal, $mui-key2);"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  @return $mui-mapVal;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":32,"author":{"gitId":"-"},"content":"// COLOR MAP"},{"lineNumber":33,"author":{"gitId":"-"},"content":"// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":34,"author":{"gitId":"-"},"content":"$mui-colors: ("},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u0027red\u0027: ("},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u002750\u0027: #FFEBEE,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u0027100\u0027: #FFCDD2,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u0027200\u0027: #EF9A9A,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u0027300\u0027: #E57373,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u0027400\u0027: #EF5350,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u0027500\u0027: #F44336,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u0027600\u0027: #E53935,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u0027700\u0027: #D32F2F,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u0027800\u0027: #C62828,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u0027900\u0027: #B71C1C,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \u0027A100\u0027: #FF8A80,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u0027A200\u0027: #FF5252,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u0027A400\u0027: #FF1744,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u0027A700\u0027: #D50000,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  ),"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u0027pink\u0027: ("},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \u002750\u0027: #FCE4EC,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    \u0027100\u0027: #F8BBD0,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u0027200\u0027: #F48FB1,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u0027300\u0027: #F06292,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u0027400\u0027: #EC407A,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u0027500\u0027: #E91E63,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u0027600\u0027: #D81B60,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u0027700\u0027: #C2185B,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \u0027800\u0027: #AD1457,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \u0027900\u0027: #880E4F,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    \u0027A100\u0027: #FF80AB,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    \u0027A200\u0027: #FF4081,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u0027A400\u0027: #F50057,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u0027A700\u0027: #C51162,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  ),"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  \u0027purple\u0027: ("},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \u002750\u0027: #F3E5F5,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    \u0027100\u0027: #E1BEE7,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \u0027200\u0027: #CE93D8,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    \u0027300\u0027: #BA68C8,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u0027400\u0027: #AB47BC,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    \u0027500\u0027: #9C27B0,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u0027600\u0027: #8E24AA,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    \u0027700\u0027: #7B1FA2,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    \u0027800\u0027: #6A1B9A,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    \u0027900\u0027: #4A148C,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u0027A100\u0027: #EA80FC,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    \u0027A200\u0027: #E040FB,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    \u0027A400\u0027: #D500F9,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    \u0027A700\u0027: #AA00FF,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  ),"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  \u0027deep-purple\u0027: ("},{"lineNumber":84,"author":{"gitId":"-"},"content":"    \u002750\u0027: #EDE7F6,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    \u0027100\u0027: #D1C4E9,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \u0027200\u0027: #B39DDB,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \u0027300\u0027: #9575CD,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    \u0027400\u0027: #7E57C2,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    \u0027500\u0027: #673AB7,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u0027600\u0027: #5E35B1,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    \u0027700\u0027: #512DA8,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \u0027800\u0027: #4527A0,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    \u0027900\u0027: #311B92,"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    \u0027A100\u0027: #B388FF,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    \u0027A200\u0027: #7C4DFF,"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \u0027A400\u0027: #651FFF,"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \u0027A700\u0027: #6200EA,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  ),"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  \u0027indigo\u0027: ("},{"lineNumber":100,"author":{"gitId":"-"},"content":"    \u002750\u0027: #E8EAF6,"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    \u0027100\u0027: #C5CAE9,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    \u0027200\u0027: #9FA8DA,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    \u0027300\u0027: #7986CB,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u0027400\u0027: #5C6BC0,"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \u0027500\u0027: #3F51B5,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \u0027600\u0027: #3949AB,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \u0027700\u0027: #303F9F,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    \u0027800\u0027: #283593,"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    \u0027900\u0027: #1A237E,"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    \u0027A100\u0027: #8C9EFF,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    \u0027A200\u0027: #536DFE,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    \u0027A400\u0027: #3D5AFE,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    \u0027A700\u0027: #304FFE,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  ),"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  \u0027blue\u0027: ("},{"lineNumber":116,"author":{"gitId":"-"},"content":"    \u002750\u0027: #E3F2FD,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    \u0027100\u0027: #BBDEFB,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    \u0027200\u0027: #90CAF9,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    \u0027300\u0027: #64B5F6,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u0027400\u0027: #42A5F5,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    \u0027500\u0027: #2196F3,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    \u0027600\u0027: #1E88E5,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    \u0027700\u0027: #1976D2,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    \u0027800\u0027: #1565C0,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    \u0027900\u0027: #0D47A1,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    \u0027A100\u0027: #82B1FF,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    \u0027A200\u0027: #448AFF,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    \u0027A400\u0027: #2979FF,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    \u0027A700\u0027: #2962FF,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  ),"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  \u0027light-blue\u0027: ("},{"lineNumber":132,"author":{"gitId":"-"},"content":"    \u002750\u0027: #E1F5FE,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    \u0027100\u0027: #B3E5FC,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    \u0027200\u0027: #81D4FA,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    \u0027300\u0027: #4FC3F7,"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    \u0027400\u0027: #29B6F6,"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    \u0027500\u0027: #03A9F4,"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \u0027600\u0027: #039BE5,"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    \u0027700\u0027: #0288D1,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    \u0027800\u0027: #0277BD,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u0027900\u0027: #01579B,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    \u0027A100\u0027: #80D8FF,"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    \u0027A200\u0027: #40C4FF,"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    \u0027A400\u0027: #00B0FF,"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    \u0027A700\u0027: #0091EA,"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  ),"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u0027cyan\u0027: ("},{"lineNumber":148,"author":{"gitId":"-"},"content":"    \u002750\u0027: #E0F7FA,"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    \u0027100\u0027: #B2EBF2,"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    \u0027200\u0027: #80DEEA,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    \u0027300\u0027: #4DD0E1,"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    \u0027400\u0027: #26C6DA,"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    \u0027500\u0027: #00BCD4,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    \u0027600\u0027: #00ACC1,"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    \u0027700\u0027: #0097A7,"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    \u0027800\u0027: #00838F,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    \u0027900\u0027: #006064,"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    \u0027A100\u0027: #84FFFF,"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    \u0027A200\u0027: #18FFFF,"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    \u0027A400\u0027: #00E5FF,"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    \u0027A700\u0027: #00B8D4,"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  ),"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  \u0027teal\u0027: ("},{"lineNumber":164,"author":{"gitId":"-"},"content":"    \u002750\u0027: #E0F2F1,"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    \u0027100\u0027: #B2DFDB,"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    \u0027200\u0027: #80CBC4,"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    \u0027300\u0027: #4DB6AC,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    \u0027400\u0027: #26A69A,"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    \u0027500\u0027: #009688,"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    \u0027600\u0027: #00897B,"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    \u0027700\u0027: #00796B,"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    \u0027800\u0027: #00695C,"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    \u0027900\u0027: #004D40,"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    \u0027A100\u0027: #A7FFEB,"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    \u0027A200\u0027: #64FFDA,"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    \u0027A400\u0027: #1DE9B6,"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    \u0027A700\u0027: #00BFA5,"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  ),"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  \u0027green\u0027: ("},{"lineNumber":180,"author":{"gitId":"-"},"content":"    \u002750\u0027: #E8F5E9,"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    \u0027100\u0027: #C8E6C9,"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    \u0027200\u0027: #A5D6A7,"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    \u0027300\u0027: #81C784,"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    \u0027400\u0027: #66BB6A,"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    \u0027500\u0027: #4CAF50,"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    \u0027600\u0027: #43A047,"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    \u0027700\u0027: #388E3C,"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u0027800\u0027: #2E7D32,"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    \u0027900\u0027: #1B5E20,"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    \u0027A100\u0027: #B9F6CA,"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    \u0027A200\u0027: #69F0AE,"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    \u0027A400\u0027: #00E676,"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    \u0027A700\u0027: #00C853,"},{"lineNumber":194,"author":{"gitId":"-"},"content":"  ),"},{"lineNumber":195,"author":{"gitId":"-"},"content":"  \u0027light-green\u0027: ("},{"lineNumber":196,"author":{"gitId":"-"},"content":"    \u002750\u0027: #F1F8E9,"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    \u0027100\u0027: #DCEDC8,"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    \u0027200\u0027: #C5E1A5,"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    \u0027300\u0027: #AED581,"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    \u0027400\u0027: #9CCC65,"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    \u0027500\u0027: #8BC34A,"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    \u0027600\u0027: #7CB342,"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    \u0027700\u0027: #689F38,"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    \u0027800\u0027: #558B2F,"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    \u0027900\u0027: #33691E,"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    \u0027A100\u0027: #CCFF90,"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    \u0027A200\u0027: #B2FF59,"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    \u0027A400\u0027: #76FF03,"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    \u0027A700\u0027: #64DD17,"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  ),"},{"lineNumber":211,"author":{"gitId":"-"},"content":"  \u0027lime\u0027: ("},{"lineNumber":212,"author":{"gitId":"-"},"content":"    \u002750\u0027: #F9FBE7,"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    \u0027100\u0027: #F0F4C3,"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    \u0027200\u0027: #E6EE9C,"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u0027300\u0027: #DCE775,"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    \u0027400\u0027: #D4E157,"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    \u0027500\u0027: #CDDC39,"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    \u0027600\u0027: #C0CA33,"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    \u0027700\u0027: #AFB42B,"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    \u0027800\u0027: #9E9D24,"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    \u0027900\u0027: #827717,"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    \u0027A100\u0027: #F4FF81,"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    \u0027A200\u0027: #EEFF41,"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    \u0027A400\u0027: #C6FF00,"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    \u0027A700\u0027: #AEEA00,"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  ),"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  \u0027yellow\u0027: ("},{"lineNumber":228,"author":{"gitId":"-"},"content":"    \u002750\u0027: #FFFDE7,"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    \u0027100\u0027: #FFF9C4,"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    \u0027200\u0027: #FFF59D,"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    \u0027300\u0027: #FFF176,"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    \u0027400\u0027: #FFEE58,"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    \u0027500\u0027: #FFEB3B,"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    \u0027600\u0027: #FDD835,"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    \u0027700\u0027: #FBC02D,"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    \u0027800\u0027: #F9A825,"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    \u0027900\u0027: #F57F17,"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    \u0027A100\u0027: #FFFF8D,"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    \u0027A200\u0027: #FFFF00,"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    \u0027A400\u0027: #FFEA00,"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    \u0027A700\u0027: #FFD600,"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  ),"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  \u0027amber\u0027: ("},{"lineNumber":244,"author":{"gitId":"-"},"content":"    \u002750\u0027: #FFF8E1,"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    \u0027100\u0027: #FFECB3,"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    \u0027200\u0027: #FFE082,"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    \u0027300\u0027: #FFD54F,"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    \u0027400\u0027: #FFCA28,"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    \u0027500\u0027: #FFC107,"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    \u0027600\u0027: #FFB300,"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0027700\u0027: #FFA000,"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    \u0027800\u0027: #FF8F00,"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    \u0027900\u0027: #FF6F00,"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    \u0027A100\u0027: #FFE57F,"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    \u0027A200\u0027: #FFD740,"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    \u0027A400\u0027: #FFC400,"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    \u0027A700\u0027: #FFAB00,"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  ),"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  \u0027orange\u0027: ("},{"lineNumber":260,"author":{"gitId":"-"},"content":"    \u002750\u0027: #FFF3E0,"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    \u0027100\u0027: #FFE0B2,"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    \u0027200\u0027: #FFCC80,"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    \u0027300\u0027: #FFB74D,"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    \u0027400\u0027: #FFA726,"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    \u0027500\u0027: #FF9800,"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    \u0027600\u0027: #FB8C00,"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    \u0027700\u0027: #F57C00,"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    \u0027800\u0027: #EF6C00,"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    \u0027900\u0027: #E65100,"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    \u0027A100\u0027: #FFD180,"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    \u0027A200\u0027: #FFAB40,"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    \u0027A400\u0027: #FF9100,"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    \u0027A700\u0027: #FF6D00,"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  ),"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  \u0027deep-orange\u0027: ("},{"lineNumber":276,"author":{"gitId":"-"},"content":"    \u002750\u0027: #FBE9E7,"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    \u0027100\u0027: #FFCCBC,"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    \u0027200\u0027: #FFAB91,"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    \u0027300\u0027: #FF8A65,"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    \u0027400\u0027: #FF7043,"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    \u0027500\u0027: #FF5722,"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    \u0027600\u0027: #F4511E,"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    \u0027700\u0027: #E64A19,"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    \u0027800\u0027: #D84315,"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    \u0027900\u0027: #BF360C,"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    \u0027A100\u0027: #FF9E80,"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    \u0027A200\u0027: #FF6E40,"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    \u0027A400\u0027: #FF3D00,"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    \u0027A700\u0027: #DD2C00,"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  ),"},{"lineNumber":291,"author":{"gitId":"-"},"content":"  \u0027brown\u0027: ("},{"lineNumber":292,"author":{"gitId":"-"},"content":"    \u002750\u0027: #EFEBE9,"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    \u0027100\u0027: #D7CCC8,"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    \u0027200\u0027: #BCAAA4,"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    \u0027300\u0027: #A1887F,"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    \u0027400\u0027: #8D6E63,"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    \u0027500\u0027: #795548,"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    \u0027600\u0027: #6D4C41,"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    \u0027700\u0027: #5D4037,"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    \u0027800\u0027: #4E342E,"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    \u0027900\u0027: #3E2723,"},{"lineNumber":302,"author":{"gitId":"-"},"content":"  ),"},{"lineNumber":303,"author":{"gitId":"Tejas2805"},"content":"  \u0027github\u0027: ("},{"lineNumber":304,"author":{"gitId":"Tejas2805"},"content":"    \u0027title-background\u0027: #FAFBFC,"},{"lineNumber":305,"author":{"gitId":"Tejas2805"},"content":"    \u0027border\u0027: #E1E4E8,"},{"lineNumber":306,"author":{"gitId":"Tejas2805"},"content":"    \u0027authored-code-background\u0027: #E6FFED,"},{"lineNumber":307,"author":{"gitId":"Tejas2805"},"content":"  ),"},{"lineNumber":308,"author":{"gitId":"-"},"content":"  \u0027grey\u0027: ("},{"lineNumber":309,"author":{"gitId":"-"},"content":"    \u002750\u0027: #FAFAFA,"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    \u0027100\u0027: #F5F5F5,"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    \u0027200\u0027: #EEEEEE,"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    \u0027300\u0027: #E0E0E0,"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    \u0027400\u0027: #BDBDBD,"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    \u0027500\u0027: #9E9E9E,"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    \u0027600\u0027: #757575,"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    \u0027700\u0027: #616161,"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    \u0027800\u0027: #424242,"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    \u0027900\u0027: #212121,"},{"lineNumber":319,"author":{"gitId":"-"},"content":"  ),"},{"lineNumber":320,"author":{"gitId":"-"},"content":"  \u0027blue-grey\u0027: ("},{"lineNumber":321,"author":{"gitId":"-"},"content":"    \u002750\u0027: #ECEFF1,"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    \u0027100\u0027: #CFD8DC,"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    \u0027200\u0027: #B0BEC5,"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    \u0027300\u0027: #90A4AE,"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    \u0027400\u0027: #78909C,"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    \u0027500\u0027: #607D8B,"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    \u0027600\u0027: #546E7A,"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    \u0027700\u0027: #455A64,"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    \u0027800\u0027: #37474F,"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    \u0027900\u0027: #263238,"},{"lineNumber":331,"author":{"gitId":"-"},"content":"  ),"},{"lineNumber":332,"author":{"gitId":"-"},"content":"  \u0027black\u0027: #000,"},{"lineNumber":333,"author":{"gitId":"-"},"content":"  \u0027white\u0027: #FFF,"},{"lineNumber":334,"author":{"gitId":"-"},"content":"  \u0027black-alpha-12\u0027: rgba(#000, .12),"},{"lineNumber":335,"author":{"gitId":"-"},"content":"  \u0027black-alpha-38\u0027: rgba(#000, .38),"},{"lineNumber":336,"author":{"gitId":"-"},"content":"  \u0027black-alpha-54\u0027: rgba(#000, .54),"},{"lineNumber":337,"author":{"gitId":"-"},"content":"  \u0027black-alpha-87\u0027: rgba(#000, .87),"},{"lineNumber":338,"author":{"gitId":"-"},"content":"  \u0027white-alpha-12\u0027: rgba(#FFF, .12),"},{"lineNumber":339,"author":{"gitId":"-"},"content":"  \u0027white-alpha-30\u0027: rgba(#FFF, .30),"},{"lineNumber":340,"author":{"gitId":"-"},"content":"  \u0027white-alpha-70\u0027: rgba(#FFF, .70),"},{"lineNumber":341,"author":{"gitId":"-"},"content":");"}],"authorContributionMap":{"anubh-v":3,"Tejas2805":5,"-":333}},{"path":"frontend/src/static/css/_utils.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"anubh-v"},"content":"@function validate-map-key($map, $key) {"},{"lineNumber":2,"author":{"gitId":"anubh-v"},"content":"  @if map-has-key($map, $key) \u003d\u003d false {"},{"lineNumber":3,"author":{"gitId":"anubh-v"},"content":"    @error \u0027Key `#{$key}` not found\u0027;"},{"lineNumber":4,"author":{"gitId":"anubh-v"},"content":"    @return false;"},{"lineNumber":5,"author":{"gitId":"anubh-v"},"content":"  }"},{"lineNumber":6,"author":{"gitId":"anubh-v"},"content":"  @return true;"},{"lineNumber":7,"author":{"gitId":"anubh-v"},"content":"}"},{"lineNumber":8,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":9,"author":{"gitId":"Tejas2805"},"content":"@mixin mini-font {"},{"lineNumber":10,"author":{"gitId":"Tejas2805"},"content":"  font-size: .65rem;"},{"lineNumber":11,"author":{"gitId":"Tejas2805"},"content":"  font-weight: normal;"},{"lineNumber":12,"author":{"gitId":"Tejas2805"},"content":"}"},{"lineNumber":13,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":14,"author":{"gitId":"Tejas2805"},"content":"@mixin medium-font {"},{"lineNumber":15,"author":{"gitId":"Tejas2805"},"content":"  font-size: .875rem;"},{"lineNumber":16,"author":{"gitId":"Tejas2805"},"content":"  font-weight: normal;"},{"lineNumber":17,"author":{"gitId":"Tejas2805"},"content":"}"},{"lineNumber":18,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":19,"author":{"gitId":"Tejas2805"},"content":"@mixin large-font {"},{"lineNumber":20,"author":{"gitId":"Tejas2805"},"content":"  font-size: 1.5rem;"},{"lineNumber":21,"author":{"gitId":"Tejas2805"},"content":"  font-weight: bold;"},{"lineNumber":22,"author":{"gitId":"Tejas2805"},"content":"}"}],"authorContributionMap":{"anubh-v":7,"Tejas2805":15}},{"path":"frontend/src/static/css/_z-indices.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"anubh-v"},"content":"@import \u0027utils\u0027;"},{"lineNumber":2,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":3,"author":{"gitId":"anubh-v"},"content":"@function z-index($key) {"},{"lineNumber":4,"author":{"gitId":"anubh-v"},"content":"  @if validate-map-key($z-indices, $key) \u003d\u003d false {"},{"lineNumber":5,"author":{"gitId":"anubh-v"},"content":"    @return null;"},{"lineNumber":6,"author":{"gitId":"anubh-v"},"content":"  }"},{"lineNumber":7,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":8,"author":{"gitId":"anubh-v"},"content":"  $mapVal: map-get($z-indices, $key);"},{"lineNumber":9,"author":{"gitId":"anubh-v"},"content":"  @return $mapVal;"},{"lineNumber":10,"author":{"gitId":"anubh-v"},"content":"}"},{"lineNumber":11,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":12,"author":{"gitId":"anubh-v"},"content":"$z-indices: ("},{"lineNumber":13,"author":{"gitId":"anubh-v"},"content":"  \u0027app-wrapper\u0027: 50,"},{"lineNumber":14,"author":{"gitId":"anubh-v"},"content":"  \u0027center-divider\u0027: 100,"},{"lineNumber":15,"author":{"gitId":"anubh-v"},"content":"  \u0027header\u0027: 100,"},{"lineNumber":16,"author":{"gitId":"anubh-v"},"content":"  \u0027loader\u0027: 10,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u0027tooltip\u0027: 100,"},{"lineNumber":18,"author":{"gitId":"anubh-v"},"content":");"}],"authorContributionMap":{"anubh-v":17,"-":1}},{"path":"frontend/src/static/css/panels.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"Tejas2805"},"content":"@import \u0027colors\u0027;"},{"lineNumber":2,"author":{"gitId":"Tejas2805"},"content":"@import \u0027z-indices\u0027;"},{"lineNumber":3,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":4,"author":{"gitId":"Tejas2805"},"content":".panel-padding {"},{"lineNumber":5,"author":{"gitId":"Tejas2805"},"content":"  padding: 2rem 1.5rem 2rem 2.2rem;"},{"lineNumber":6,"author":{"gitId":"Tejas2805"},"content":"}"},{"lineNumber":7,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":8,"author":{"gitId":"Tejas2805"},"content":"#app-wrapper {"},{"lineNumber":9,"author":{"gitId":"Tejas2805"},"content":"  display: flex;"},{"lineNumber":10,"author":{"gitId":"Tejas2805"},"content":"  height: 100vh;"},{"lineNumber":11,"author":{"gitId":"Tejas2805"},"content":"  left: 0;"},{"lineNumber":12,"author":{"gitId":"Tejas2805"},"content":"  position: absolute;"},{"lineNumber":13,"author":{"gitId":"Tejas2805"},"content":"  top: 0;"},{"lineNumber":14,"author":{"gitId":"Tejas2805"},"content":"  width: 100%;"},{"lineNumber":15,"author":{"gitId":"Tejas2805"},"content":"  z-index: z-index(\u0027app-wrapper\u0027);"},{"lineNumber":16,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":17,"author":{"gitId":"ang-zeyu"},"content":"  #tab-resize {"},{"lineNumber":18,"author":{"gitId":"Tejas2805"},"content":"    background-color: mui-color(\u0027black\u0027);"},{"lineNumber":19,"author":{"gitId":"Tejas2805"},"content":"    cursor: col-resize;"},{"lineNumber":20,"author":{"gitId":"Tejas2805"},"content":"    height: 100%;"},{"lineNumber":21,"author":{"gitId":"ang-zeyu"},"content":"    width: 13.250px;"},{"lineNumber":22,"author":{"gitId":"Tejas2805"},"content":"    z-index: z-index(\u0027center-divider\u0027);"},{"lineNumber":23,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":24,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":25,"author":{"gitId":"Tejas2805"},"content":"  .tab-close {"},{"lineNumber":26,"author":{"gitId":"Tejas2805"},"content":"    cursor: pointer;"},{"lineNumber":27,"author":{"gitId":"ang-zeyu"},"content":"    position: relative;"},{"lineNumber":28,"author":{"gitId":"Tejas2805"},"content":"    top: calc(50vh - 3rem);"},{"lineNumber":29,"author":{"gitId":"Tejas2805"},"content":"    z-index: z-index(\u0027center-divider\u0027);"},{"lineNumber":30,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":31,"author":{"gitId":"Tejas2805"},"content":"    svg {"},{"lineNumber":32,"author":{"gitId":"Tejas2805"},"content":"      background-color: mui-color(\u0027grey\u0027, \u0027300\u0027);"},{"lineNumber":33,"author":{"gitId":"Tejas2805"},"content":"      color: mui-color(\u0027black\u0027);"},{"lineNumber":34,"author":{"gitId":"Tejas2805"},"content":"      padding: 3rem .25rem;"},{"lineNumber":35,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":37,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":38,"author":{"gitId":"ang-zeyu"},"content":"  .left-resize-container {"},{"lineNumber":39,"author":{"gitId":"ang-zeyu"},"content":"    flex-grow: 1;"},{"lineNumber":40,"author":{"gitId":"ang-zeyu"},"content":"    height: 100%;"},{"lineNumber":41,"author":{"gitId":"ang-zeyu"},"content":"    min-width: 0;"},{"lineNumber":42,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":43,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":44,"author":{"gitId":"ang-zeyu"},"content":"  .right-resize-container {"},{"lineNumber":45,"author":{"gitId":"ang-zeyu"},"content":"    flex: 0 0 50%;"},{"lineNumber":46,"author":{"gitId":"ang-zeyu"},"content":"    height: 100%;"},{"lineNumber":47,"author":{"gitId":"ang-zeyu"},"content":"    min-width: 0;"},{"lineNumber":48,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":49,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":50,"author":{"gitId":"ang-zeyu"},"content":"  #tab-resize-guide {"},{"lineNumber":51,"author":{"gitId":"ang-zeyu"},"content":"    $tabs-width: 50%;"},{"lineNumber":52,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":53,"author":{"gitId":"Tejas2805"},"content":"    background-color: mui-color(\u0027black\u0027);"},{"lineNumber":54,"author":{"gitId":"Tejas2805"},"content":"    cursor: col-resize;"},{"lineNumber":55,"author":{"gitId":"ang-zeyu"},"content":"    display: none;"},{"lineNumber":56,"author":{"gitId":"Tejas2805"},"content":"    height: 100%;"},{"lineNumber":57,"author":{"gitId":"Tejas2805"},"content":"    position: fixed;"},{"lineNumber":58,"author":{"gitId":"ang-zeyu"},"content":"    right: $tabs-width;"},{"lineNumber":59,"author":{"gitId":"ang-zeyu"},"content":"    width: 2px;"},{"lineNumber":60,"author":{"gitId":"Tejas2805"},"content":"    z-index: z-index(\u0027center-divider\u0027);"},{"lineNumber":61,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":62,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":63,"author":{"gitId":"ang-zeyu"},"content":"  #tabs-wrapper {"},{"lineNumber":64,"author":{"gitId":"ang-zeyu"},"content":"    height: 100%;"},{"lineNumber":65,"author":{"gitId":"ang-zeyu"},"content":"    overflow-y: scroll;"},{"lineNumber":66,"author":{"gitId":"ang-zeyu"},"content":"    position: relative;"},{"lineNumber":67,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":68,"author":{"gitId":"ang-zeyu"},"content":"    .tab-content {"},{"lineNumber":69,"author":{"gitId":"ang-zeyu"},"content":"      display: flex;"},{"lineNumber":70,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"      .tab-pane {"},{"lineNumber":72,"author":{"gitId":"ang-zeyu"},"content":"        text-align: left;"},{"lineNumber":73,"author":{"gitId":"ang-zeyu"},"content":"        width: 100%;"},{"lineNumber":74,"author":{"gitId":"ang-zeyu"},"content":"      }"},{"lineNumber":75,"author":{"gitId":"ang-zeyu"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":77,"author":{"gitId":"Tejas2805"},"content":"}"},{"lineNumber":78,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":79,"author":{"gitId":"0blivious"},"content":".fileTypes {"},{"lineNumber":80,"author":{"gitId":"0blivious"},"content":"  align-items: center;"},{"lineNumber":81,"author":{"gitId":"niqiukun"},"content":"  display: flex;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  margin: 5px 0 5px 0;"},{"lineNumber":83,"author":{"gitId":"0blivious"},"content":"  text-align: left;"},{"lineNumber":84,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":85,"author":{"gitId":"0blivious"},"content":"  .checkboxes {"},{"lineNumber":86,"author":{"gitId":"0blivious"},"content":"    label {"},{"lineNumber":87,"author":{"gitId":"0blivious"},"content":"      align-items: center;"},{"lineNumber":88,"author":{"gitId":"0blivious"},"content":"      border-radius: 5px;"},{"lineNumber":89,"author":{"gitId":"0blivious"},"content":"      display: inline-flex;"},{"lineNumber":90,"author":{"gitId":"0blivious"},"content":"      margin: 0 5px 5px 0;"},{"lineNumber":91,"author":{"gitId":"0blivious"},"content":"      padding: 0 5px;"},{"lineNumber":92,"author":{"gitId":"0blivious"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":94,"author":{"gitId":"0blivious"},"content":"    span {"},{"lineNumber":95,"author":{"gitId":"0blivious"},"content":"      margin-left: .25rem;"},{"lineNumber":96,"author":{"gitId":"0blivious"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"0blivious"},"content":"  }"},{"lineNumber":98,"author":{"gitId":"0blivious"},"content":"}"},{"lineNumber":99,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":".fileTypeLabel {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  border-radius: 5px;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  display: inline-block;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  margin: 0 5px 5px 0;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  padding: 0 5px;"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"  \u0026.binary {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    background-color: mui-color(\u0027white\u0027);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    border: 1px solid mui-color(\u0027grey\u0027, \u0027800\u0027);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    color: mui-color(\u0027grey\u0027, \u0027800\u0027);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"Tejas2805"},"content":".toolbar {"},{"lineNumber":114,"author":{"gitId":"Tejas2805"},"content":"  cursor: pointer;"},{"lineNumber":115,"author":{"gitId":"Tejas2805"},"content":"  float: right;"},{"lineNumber":116,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":117,"author":{"gitId":"niqiukun"},"content":"  \u0026--multiline {"},{"lineNumber":118,"author":{"gitId":"niqiukun"},"content":"    float: right;"},{"lineNumber":119,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":120,"author":{"gitId":"niqiukun"},"content":"    \u003e a {"},{"lineNumber":121,"author":{"gitId":"niqiukun"},"content":"      display: block;"},{"lineNumber":122,"author":{"gitId":"niqiukun"},"content":"      margin: 1px 0;"},{"lineNumber":123,"author":{"gitId":"niqiukun"},"content":"      text-align: end;"},{"lineNumber":124,"author":{"gitId":"niqiukun"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"niqiukun"},"content":"  }"},{"lineNumber":126,"author":{"gitId":"Tejas2805"},"content":"}"},{"lineNumber":127,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":128,"author":{"gitId":"Tejas2805"},"content":".sorting {"},{"lineNumber":129,"author":{"gitId":"Tejas2805"},"content":"  align-items: center;"},{"lineNumber":130,"author":{"gitId":"Tejas2805"},"content":"  display: flex;"},{"lineNumber":131,"author":{"gitId":"Tejas2805"},"content":"  margin-top: 1.0rem;"},{"lineNumber":132,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":133,"author":{"gitId":"Tejas2805"},"content":"  .mui-select {"},{"lineNumber":134,"author":{"gitId":"Tejas2805"},"content":"    cursor: pointer;"},{"lineNumber":135,"author":{"gitId":"Tejas2805"},"content":"    padding-right: 15px;"},{"lineNumber":136,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":137,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":138,"author":{"gitId":"Tejas2805"},"content":"  select {"},{"lineNumber":139,"author":{"gitId":"Tejas2805"},"content":"    @include medium-font;"},{"lineNumber":140,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":141,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":142,"author":{"gitId":"Tejas2805"},"content":"  label {"},{"lineNumber":143,"author":{"gitId":"Tejas2805"},"content":"    @include medium-font;"},{"lineNumber":144,"author":{"gitId":"Tejas2805"},"content":"    overflow-y: hidden;"},{"lineNumber":145,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":146,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":147,"author":{"gitId":"Tejas2805"},"content":"  \u0026 \u003e label {"},{"lineNumber":148,"author":{"gitId":"Tejas2805"},"content":"    margin-left: 10px;"},{"lineNumber":149,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":150,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":151,"author":{"gitId":"Tejas2805"},"content":"  span {"},{"lineNumber":152,"author":{"gitId":"Tejas2805"},"content":"    margin-left: .25rem;"},{"lineNumber":153,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":154,"author":{"gitId":"Tejas2805"},"content":"}"},{"lineNumber":155,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":156,"author":{"gitId":"Tejas2805"},"content":".panel-title {"},{"lineNumber":157,"author":{"gitId":"Tejas2805"},"content":"  @include large-font;"},{"lineNumber":158,"author":{"gitId":"Tejas2805"},"content":"  display: inline;"},{"lineNumber":159,"author":{"gitId":"Tejas2805"},"content":"}"},{"lineNumber":160,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":161,"author":{"gitId":"Tejas2805"},"content":".panel-heading {"},{"lineNumber":162,"author":{"gitId":"Tejas2805"},"content":"  .group-name {"},{"lineNumber":163,"author":{"gitId":"Tejas2805"},"content":"    @include large-font;"},{"lineNumber":164,"author":{"gitId":"Tejas2805"},"content":"    cursor: pointer;"},{"lineNumber":165,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":166,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":167,"author":{"gitId":"Tejas2805"},"content":"  .author {"},{"lineNumber":168,"author":{"gitId":"Tejas2805"},"content":"    @include medium-font;"},{"lineNumber":169,"author":{"gitId":"Tejas2805"},"content":"    margin-left: .3rem;"},{"lineNumber":170,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":171,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":172,"author":{"gitId":"Tejas2805"},"content":"  .period {"},{"lineNumber":173,"author":{"gitId":"Tejas2805"},"content":"    @include medium-font;"},{"lineNumber":174,"author":{"gitId":"Tejas2805"},"content":"    margin-left: 2rem;"},{"lineNumber":175,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":176,"author":{"gitId":"Tejas2805"},"content":"}"},{"lineNumber":177,"author":{"gitId":"Tejas2805"},"content":""}],"authorContributionMap":{"niqiukun":11,"Tejas2805":101,"-":15,"0blivious":19,"ang-zeyu":31}},{"path":"frontend/src/static/css/style.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@import \u0027colors\u0027;"},{"lineNumber":2,"author":{"gitId":"anubh-v"},"content":"@import \u0027z-indices\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"/** global **/"},{"lineNumber":5,"author":{"gitId":"-"},"content":"body {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  font-family: \u0027Titillium Web\u0027, sans-serif;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"vuetemplate {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  display: none;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"a {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  cursor: pointer;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"[v-cloak] {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  display: none;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":".wrapper {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":".content {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  max-width: 40rem;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  text-align: left;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":".empty {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  margin: 3rem 5rem;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":".overlay-loader {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":".overlay-loading-icon {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  font-size: 3em;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":".tab-padding {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  padding: 2rem 1.5rem;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":".warn {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  color: mui-color(\u0027red\u0027);"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"  .summary-charts__title--contribution {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    color: mui-color(\u0027black\u0027);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":".tooltip {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  display: inline-block;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  position: relative;"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  .tooltip-text {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @include medium-font;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    background-color: mui-color(\u0027black\u0027);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    border-radius: .25rem;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    bottom: 125%;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    color: mui-color(\u0027white\u0027);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    left: 50%;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    margin-left: -3.5rem;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    opacity: 0;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    padding: .25rem .5rem;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    position: absolute;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    text-align: center;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    transition: opacity .3s;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    visibility: hidden;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    width: 6rem;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    z-index: z-index(\u0027tooltip\u0027);"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    \u0026::after {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      border-color: mui-color(\u0027black\u0027) transparent transparent transparent;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      border-style: solid;"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      border-width: .4rem;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      content: \u0027\u0027;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      left: 50%;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      margin-left: -.4rem;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      position: absolute;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      top: 100%;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"  \u0026:hover {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    .tooltip-text {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      opacity: 1;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      visibility: visible;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"/** navigation bar **/"},{"lineNumber":97,"author":{"gitId":"-"},"content":"header {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  display: flex;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  justify-content: center;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  position: relative;"},{"lineNumber":101,"author":{"gitId":"anubh-v"},"content":"  z-index: z-index(\u0027header\u0027);"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"  .content {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    align-items: center;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    display: flex;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    flex-grow: 1;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    justify-content: space-between;"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"  .repo,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  .logo {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    margin: 0;"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"#file-upload {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"#app-wrapper {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  #summary-wrapper {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    height: 100%;"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    overflow-y: scroll;"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-align: center;"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"    .timestamp-footer {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      color: mui-color(\u0027grey\u0027, \u0027700\u0027);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      margin-bottom: 1em;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      margin-left: 1em;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"    .error-message-box {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      background-color: mui-color(\u0027red\u0027, \u0027100\u0027);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      border: .1rem solid mui-color(\u0027red\u0027, \u0027900\u0027);"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      border-radius: .25rem;"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      color: mui-color(\u0027red\u0027, \u0027900\u0027);"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      font-size: .75rem;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      margin-bottom: .9rem;"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      padding: .9rem;"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      text-align: left;"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"      \u0026__close-button {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        cursor: pointer;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        float: right;"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        font-size: 1.4rem;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        font-weight: bold;"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        line-height: .625rem;"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"        \u0026:hover {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"          color: mui-color(\u0027white\u0027);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"      \u0026__message {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        border-bottom: .1rem solid;"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        font-weight: bolder;"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        padding-bottom: .5rem;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"      .icon {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        padding-right: .4rem;"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        padding-top: .2rem;"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        width: 1rem;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"      \u0026__failed-repo {"},{"lineNumber":167,"author":{"gitId":"Tejas2805"},"content":"        .fa-exclamation {"},{"lineNumber":168,"author":{"gitId":"Tejas2805"},"content":"          @include mini-font;"},{"lineNumber":169,"author":{"gitId":"Tejas2805"},"content":"        }"},{"lineNumber":170,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"        \u0026--name {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"          font-weight: bolder;"},{"lineNumber":173,"author":{"gitId":"-"},"content":"          padding-left: .2rem;"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"        \u0026--reason {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"          padding-left: 3rem;"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":179,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"anubh-v":2,"Tejas2805":4,"-":176}},{"path":"frontend/src/static/css/v_authorship.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"Tejas2805"},"content":"@import \u0027colors\u0027;"},{"lineNumber":2,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":3,"author":{"gitId":"Tejas2805"},"content":"/* Authorship */"},{"lineNumber":4,"author":{"gitId":"Tejas2805"},"content":"#tab-authorship {"},{"lineNumber":5,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":6,"author":{"gitId":"Tejas2805"},"content":"  .file-content {"},{"lineNumber":7,"author":{"gitId":"Tejas2805"},"content":"    background-color: mui-color(\u0027github\u0027, \u0027title-background\u0027);"},{"lineNumber":8,"author":{"gitId":"Tejas2805"},"content":"    border: solid mui-color(\u0027github\u0027, \u0027border\u0027);"},{"lineNumber":9,"author":{"gitId":"Tejas2805"},"content":"    border-radius: 0 0 4px 4px;"},{"lineNumber":10,"author":{"gitId":"Tejas2805"},"content":"    border-width: 0 1px 1px 1px;"},{"lineNumber":11,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":12,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":13,"author":{"gitId":"Tejas2805"},"content":"  .title {"},{"lineNumber":14,"author":{"gitId":"Tejas2805"},"content":"    .contribution {"},{"lineNumber":15,"author":{"gitId":"Tejas2805"},"content":"      .radio-button--search {"},{"lineNumber":16,"author":{"gitId":"Tejas2805"},"content":"        float: left;"},{"lineNumber":17,"author":{"gitId":"Tejas2805"},"content":"        margin: 1.75rem 2.0rem 0 0;"},{"lineNumber":18,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":19,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":20,"author":{"gitId":"Tejas2805"},"content":"      .radio-button--checkbox {"},{"lineNumber":21,"author":{"gitId":"Tejas2805"},"content":"        float: left;"},{"lineNumber":22,"author":{"gitId":"niqiukun"},"content":"        margin: 0 2.0rem 0 0;"},{"lineNumber":23,"author":{"gitId":"Tejas2805"},"content":"        vertical-align: middle;"},{"lineNumber":24,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":25,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":26,"author":{"gitId":"Tejas2805"},"content":"      #search {"},{"lineNumber":27,"author":{"gitId":"Tejas2805"},"content":"        @include medium-font;"},{"lineNumber":28,"author":{"gitId":"Tejas2805"},"content":"        margin-top: 1.25rem;"},{"lineNumber":29,"author":{"gitId":"Tejas2805"},"content":"        padding: .5rem 1.0rem .25rem 1.0rem;"},{"lineNumber":30,"author":{"gitId":"Tejas2805"},"content":"        width: 30%;"},{"lineNumber":31,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":32,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":33,"author":{"gitId":"Tejas2805"},"content":"      #submit-button {"},{"lineNumber":34,"author":{"gitId":"Tejas2805"},"content":"        @include medium-font;"},{"lineNumber":35,"author":{"gitId":"Tejas2805"},"content":"        background-color: mui-color(\u0027blue\u0027);"},{"lineNumber":36,"author":{"gitId":"Tejas2805"},"content":"        color: mui-color(\u0027white\u0027);"},{"lineNumber":37,"author":{"gitId":"Tejas2805"},"content":"        margin: 1.0rem 0 0 .25rem;"},{"lineNumber":38,"author":{"gitId":"Tejas2805"},"content":"        padding: .5rem 1.0rem .25rem 1.0rem;"},{"lineNumber":39,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":40,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":41,"author":{"gitId":"ang-zeyu"},"content":"      .searchbox {"},{"lineNumber":42,"author":{"gitId":"ang-zeyu"},"content":"        margin-bottom: 1em;"},{"lineNumber":43,"author":{"gitId":"ang-zeyu"},"content":"      }"},{"lineNumber":44,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":45,"author":{"gitId":"Tejas2805"},"content":"      .select {"},{"lineNumber":46,"author":{"gitId":"Tejas2805"},"content":"        font-weight: bold;"},{"lineNumber":47,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":48,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":49,"author":{"gitId":"Tejas2805"},"content":"      .loc {"},{"lineNumber":50,"author":{"gitId":"Tejas2805"},"content":"        font-weight: bolder;"},{"lineNumber":51,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":52,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":53,"author":{"gitId":"Tejas2805"},"content":"      .mui-checkbox--fileType {"},{"lineNumber":54,"author":{"gitId":"Tejas2805"},"content":"        vertical-align: middle;"},{"lineNumber":55,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"      .binary-fileType {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        background-color: mui-color(\u0027white\u0027);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        color: mui-color(\u0027grey\u0027, \u0027800\u0027);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        float: right;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":62,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":64,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":65,"author":{"gitId":"Tejas2805"},"content":"  .files {"},{"lineNumber":66,"author":{"gitId":"Tejas2805"},"content":"    clear: left;"},{"lineNumber":67,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":68,"author":{"gitId":"Tejas2805"},"content":"    .file {"},{"lineNumber":69,"author":{"gitId":"Tejas2805"},"content":"      pre {"},{"lineNumber":70,"author":{"gitId":"ang-zeyu"},"content":"        display: grid;"},{"lineNumber":71,"author":{"gitId":"jamessspanggg"},"content":"        // GitHub\u0027s font family and font size"},{"lineNumber":72,"author":{"gitId":"jamessspanggg"},"content":"        font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace;"},{"lineNumber":73,"author":{"gitId":"jamessspanggg"},"content":"        font-size: 12px;"},{"lineNumber":74,"author":{"gitId":"Tejas2805"},"content":"        margin-top: 0;"},{"lineNumber":75,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":76,"author":{"gitId":"Tejas2805"},"content":"        .hljs {"},{"lineNumber":77,"author":{"gitId":"Tejas2805"},"content":"          // overwrite hljs library"},{"lineNumber":78,"author":{"gitId":"Tejas2805"},"content":"          display: inherit;"},{"lineNumber":79,"author":{"gitId":"Tejas2805"},"content":"          padding: 0;"},{"lineNumber":80,"author":{"gitId":"jamessspanggg"},"content":"          white-space: pre-wrap;"},{"lineNumber":81,"author":{"gitId":"Tejas2805"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":83,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":85,"author":{"gitId":"Tejas2805"},"content":"    .title {"},{"lineNumber":86,"author":{"gitId":"Tejas2805"},"content":"      background-color: mui-color(\u0027github\u0027, \u0027title-background\u0027);"},{"lineNumber":87,"author":{"gitId":"Tejas2805"},"content":"      border: 1px solid mui-color(\u0027github\u0027, \u0027border\u0027);"},{"lineNumber":88,"author":{"gitId":"Tejas2805"},"content":"      border-radius: 4px 4px 0 0;"},{"lineNumber":89,"author":{"gitId":"jamessspanggg"},"content":"      font-size: medium;"},{"lineNumber":90,"author":{"gitId":"Tejas2805"},"content":"      font-weight: bold;"},{"lineNumber":91,"author":{"gitId":"Tejas2805"},"content":"      margin-top: 1rem;"},{"lineNumber":92,"author":{"gitId":"Tejas2805"},"content":"      padding: .3em .5em;"},{"lineNumber":93,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":94,"author":{"gitId":"Tejas2805"},"content":"      .path {"},{"lineNumber":95,"author":{"gitId":"Tejas2805"},"content":"        cursor: pointer;"},{"lineNumber":96,"author":{"gitId":"jamessspanggg"},"content":"        overflow-wrap: break-word;"},{"lineNumber":97,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":98,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":99,"author":{"gitId":"Tejas2805"},"content":"      .loc {"},{"lineNumber":100,"author":{"gitId":"Tejas2805"},"content":"        color: mui-color(\u0027grey\u0027);"},{"lineNumber":101,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":102,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":103,"author":{"gitId":"Tejas2805"},"content":"      .button {"},{"lineNumber":104,"author":{"gitId":"Tejas2805"},"content":"        color: mui-color(\u0027grey\u0027);"},{"lineNumber":105,"author":{"gitId":"Tejas2805"},"content":"        margin-left: .5rem;"},{"lineNumber":106,"author":{"gitId":"Tejas2805"},"content":"        text-decoration: none;"},{"lineNumber":107,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":108,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":109,"author":{"gitId":"0blivious"},"content":"      .icons {"},{"lineNumber":110,"author":{"gitId":"0blivious"},"content":"        margin-right: 8px;"},{"lineNumber":111,"author":{"gitId":"0blivious"},"content":"        vertical-align: middle;"},{"lineNumber":112,"author":{"gitId":"0blivious"},"content":"      }"},{"lineNumber":113,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    .binary-segment {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      background-color: mui-color(\u0027white\u0027);"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"      .indicator {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        float: left;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        font-weight: bold;"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        padding-left: 1rem;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"      .bin-text {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        color: mui-color(\u0027grey\u0027, \u0027800\u0027);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        padding-left: 4rem;"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"Tejas2805"},"content":"    .segment {"},{"lineNumber":131,"author":{"gitId":"Tejas2805"},"content":"      border-left: .25rem solid mui-color(\u0027green\u0027);"},{"lineNumber":132,"author":{"gitId":"Tejas2805"},"content":"      .code {"},{"lineNumber":133,"author":{"gitId":"Tejas2805"},"content":"        background-color: mui-color(\u0027github\u0027, \u0027authored-code-background\u0027);"},{"lineNumber":134,"author":{"gitId":"Tejas2805"},"content":"        padding-left: 1rem;"},{"lineNumber":135,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":136,"author":{"gitId":"Tejas2805"},"content":"      .line-number {"},{"lineNumber":137,"author":{"gitId":"Tejas2805"},"content":"        color: mui-color(\u0027grey\u0027);"},{"lineNumber":138,"author":{"gitId":"Tejas2805"},"content":"        float: left;"},{"lineNumber":139,"author":{"gitId":"Tejas2805"},"content":"        // Not allowing user to select text"},{"lineNumber":140,"author":{"gitId":"Tejas2805"},"content":"        -webkit-touch-callout: none; /* iOS Safari */"},{"lineNumber":141,"author":{"gitId":"Tejas2805"},"content":"        -webkit-user-select: none; /* Safari */"},{"lineNumber":142,"author":{"gitId":"Tejas2805"},"content":"        -khtml-user-select: none; /* Konqueror HTML */"},{"lineNumber":143,"author":{"gitId":"Tejas2805"},"content":"        -moz-user-select: none; /* Firefox */"},{"lineNumber":144,"author":{"gitId":"Tejas2805"},"content":"        -ms-user-select: none; /* Internet Explorer/Edge */"},{"lineNumber":145,"author":{"gitId":"Tejas2805"},"content":"        user-select: none; /* Non-prefixed version, currently supported by Chrome and Opera */"},{"lineNumber":146,"author":{"gitId":"Tejas2805"},"content":"        width: 2rem;"},{"lineNumber":147,"author":{"gitId":"Tejas2805"},"content":"        // overwrite all hljs colours"},{"lineNumber":148,"author":{"gitId":"Tejas2805"},"content":"        [class^\u003d\u0027hljs\u0027] {"},{"lineNumber":149,"author":{"gitId":"Tejas2805"},"content":"          color: mui-color(\u0027grey\u0027);"},{"lineNumber":150,"author":{"gitId":"Tejas2805"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":152,"author":{"gitId":"Tejas2805"},"content":"      .line-content {"},{"lineNumber":153,"author":{"gitId":"Tejas2805"},"content":"        padding-left: 2rem;"},{"lineNumber":154,"author":{"gitId":"jamessspanggg"},"content":"        word-break: break-word;"},{"lineNumber":155,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":156,"author":{"gitId":"Tejas2805"},"content":"      \u0026.untouched {"},{"lineNumber":157,"author":{"gitId":"Tejas2805"},"content":"        $grey: mui-color(\u0027grey\u0027, \u0027400\u0027);"},{"lineNumber":158,"author":{"gitId":"Tejas2805"},"content":"        border-left: .25rem solid $grey;"},{"lineNumber":159,"author":{"gitId":"Tejas2805"},"content":"        height: 20px; /* height of a single line of code */"},{"lineNumber":160,"author":{"gitId":"Tejas2805"},"content":"        position: relative;"},{"lineNumber":161,"author":{"gitId":"Tejas2805"},"content":"        \u0026.active {"},{"lineNumber":162,"author":{"gitId":"Tejas2805"},"content":"          height: auto;"},{"lineNumber":163,"author":{"gitId":"Tejas2805"},"content":"          .code {"},{"lineNumber":164,"author":{"gitId":"Tejas2805"},"content":"            background-color: mui-color(\u0027white\u0027);"},{"lineNumber":165,"author":{"gitId":"Tejas2805"},"content":"          }"},{"lineNumber":166,"author":{"gitId":"Tejas2805"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"Tejas2805"},"content":"        .closer {"},{"lineNumber":168,"author":{"gitId":"Tejas2805"},"content":"          cursor: pointer;"},{"lineNumber":169,"author":{"gitId":"Tejas2805"},"content":"          // custom margin for position of toggle icon"},{"lineNumber":170,"author":{"gitId":"Tejas2805"},"content":"          margin: .2rem 0 0 -.45rem;"},{"lineNumber":171,"author":{"gitId":"Tejas2805"},"content":"          position: absolute;"},{"lineNumber":172,"author":{"gitId":"Tejas2805"},"content":"          \u0026.bottom {"},{"lineNumber":173,"author":{"gitId":"Tejas2805"},"content":"            //custom margin for position of toggle icon at the bottom of segment"},{"lineNumber":174,"author":{"gitId":"Tejas2805"},"content":"            margin: -1.05rem 0 0 -.45rem;"},{"lineNumber":175,"author":{"gitId":"Tejas2805"},"content":"          }"},{"lineNumber":176,"author":{"gitId":"Tejas2805"},"content":"          .icon {"},{"lineNumber":177,"author":{"gitId":"Tejas2805"},"content":"            background-color: mui-color(\u0027white\u0027);"},{"lineNumber":178,"author":{"gitId":"Tejas2805"},"content":"            color: mui-color(\u0027grey\u0027);"},{"lineNumber":179,"author":{"gitId":"Tejas2805"},"content":"            width: .75em;"},{"lineNumber":180,"author":{"gitId":"Tejas2805"},"content":"          }"},{"lineNumber":181,"author":{"gitId":"Tejas2805"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":183,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":185,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":186,"author":{"gitId":"Tejas2805"},"content":"  .empty {"},{"lineNumber":187,"author":{"gitId":"Tejas2805"},"content":"    text-align: center;"},{"lineNumber":188,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":189,"author":{"gitId":"Tejas2805"},"content":"}"}],"authorContributionMap":{"niqiukun":1,"Tejas2805":150,"jamessspanggg":7,"-":21,"0blivious":5,"ang-zeyu":5}},{"path":"frontend/src/static/css/v_ramp.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"Tejas2805"},"content":"@import \u0027colors\u0027;"},{"lineNumber":2,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":3,"author":{"gitId":"Tejas2805"},"content":"/* Ramp */"},{"lineNumber":4,"author":{"gitId":"Tejas2805"},"content":".ramp {"},{"lineNumber":5,"author":{"gitId":"Tejas2805"},"content":"  $height: 3rem;"},{"lineNumber":6,"author":{"gitId":"Tejas2805"},"content":"  background-color: mui-color(\u0027blue\u0027, \u002750\u0027);"},{"lineNumber":7,"author":{"gitId":"Tejas2805"},"content":"  font-size: 100%;"},{"lineNumber":8,"author":{"gitId":"Tejas2805"},"content":"  height: $height;"},{"lineNumber":9,"author":{"gitId":"0blivious"},"content":"  overflow: hidden;"},{"lineNumber":10,"author":{"gitId":"Tejas2805"},"content":"  position: relative;"},{"lineNumber":11,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":12,"author":{"gitId":"Tejas2805"},"content":"  \u0026__slice {"},{"lineNumber":13,"author":{"gitId":"Tejas2805"},"content":"    border-left-color: rgba(0, 0, 0, 0);"},{"lineNumber":14,"author":{"gitId":"Tejas2805"},"content":"    border-left-style: solid;"},{"lineNumber":15,"author":{"gitId":"Tejas2805"},"content":"    display: block;"},{"lineNumber":16,"author":{"gitId":"Tejas2805"},"content":"    height: 0;"},{"lineNumber":17,"author":{"gitId":"Tejas2805"},"content":"    position: absolute;"},{"lineNumber":18,"author":{"gitId":"Tejas2805"},"content":"    width: 0;"},{"lineNumber":19,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":20,"author":{"gitId":"Tejas2805"},"content":"    \u0026--color0 {"},{"lineNumber":21,"author":{"gitId":"Tejas2805"},"content":"      border-bottom: $height rgba(mui-color(\u0027orange\u0027), .5) solid;"},{"lineNumber":22,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":24,"author":{"gitId":"Tejas2805"},"content":"    \u0026--color1 {"},{"lineNumber":25,"author":{"gitId":"Tejas2805"},"content":"      border-bottom: $height rgba(mui-color(\u0027light-blue\u0027), .5) solid;"},{"lineNumber":26,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":28,"author":{"gitId":"Tejas2805"},"content":"    \u0026--color2 {"},{"lineNumber":29,"author":{"gitId":"Tejas2805"},"content":"      border-bottom: $height rgba(mui-color(\u0027green\u0027), .5) solid;"},{"lineNumber":30,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":32,"author":{"gitId":"Tejas2805"},"content":"    \u0026--color3 {"},{"lineNumber":33,"author":{"gitId":"Tejas2805"},"content":"      border-bottom: $height rgba(mui-color(\u0027indigo\u0027), .5) solid;"},{"lineNumber":34,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":36,"author":{"gitId":"Tejas2805"},"content":"    \u0026--color4 {"},{"lineNumber":37,"author":{"gitId":"Tejas2805"},"content":"      border-bottom: $height rgba(mui-color(\u0027pink\u0027), .5) solid;"},{"lineNumber":38,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":40,"author":{"gitId":"Tejas2805"},"content":"}"}],"authorContributionMap":{"Tejas2805":39,"0blivious":1}},{"path":"frontend/src/static/css/v_summary.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"Tejas2805"},"content":"@import \u0027colors\u0027;"},{"lineNumber":2,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":3,"author":{"gitId":"0blivious"},"content":"/* Summary */"},{"lineNumber":4,"author":{"gitId":"0blivious"},"content":"#summary {"},{"lineNumber":5,"author":{"gitId":"Tejas2805"},"content":"  .summary-status {"},{"lineNumber":6,"author":{"gitId":"Tejas2805"},"content":"    text-align: center;"},{"lineNumber":7,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":8,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":9,"author":{"gitId":"Tejas2805"},"content":"  .icon-button {"},{"lineNumber":10,"author":{"gitId":"Tejas2805"},"content":"    color: mui-color(\u0027grey\u0027);"},{"lineNumber":11,"author":{"gitId":"Tejas2805"},"content":"    cursor: pointer;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    padding: 0 1.2px 0 1.2px;"},{"lineNumber":13,"author":{"gitId":"Tejas2805"},"content":"    text-decoration: none;"},{"lineNumber":14,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":15,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":16,"author":{"gitId":"Tejas2805"},"content":"  .summary-picker {"},{"lineNumber":17,"author":{"gitId":"Tejas2805"},"content":"    align-items: center;"},{"lineNumber":18,"author":{"gitId":"Tejas2805"},"content":"    display: flex;"},{"lineNumber":19,"author":{"gitId":"Tejas2805"},"content":"    flex-flow: row wrap;"},{"lineNumber":20,"author":{"gitId":"Tejas2805"},"content":"    justify-content: center;"},{"lineNumber":21,"author":{"gitId":"Tejas2805"},"content":"    margin-bottom: 2rem;"},{"lineNumber":22,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":23,"author":{"gitId":"Tejas2805"},"content":"    \u0026__section {"},{"lineNumber":24,"author":{"gitId":"Tejas2805"},"content":"      align-items: inherit;"},{"lineNumber":25,"author":{"gitId":"Tejas2805"},"content":"      display: flex;"},{"lineNumber":26,"author":{"gitId":"Tejas2805"},"content":"      flex: 0 1 auto;"},{"lineNumber":27,"author":{"gitId":"Tejas2805"},"content":"      flex-flow: inherit;"},{"lineNumber":28,"author":{"gitId":"Tejas2805"},"content":"      justify-content: inherit;"},{"lineNumber":29,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":31,"author":{"gitId":"Tejas2805"},"content":"    \u0026__checkboxes {"},{"lineNumber":32,"author":{"gitId":"Tejas2805"},"content":"      label {"},{"lineNumber":33,"author":{"gitId":"Tejas2805"},"content":"        margin-left: .5rem;"},{"lineNumber":34,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":35,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":36,"author":{"gitId":"Tejas2805"},"content":"      span {"},{"lineNumber":37,"author":{"gitId":"Tejas2805"},"content":"        margin-left: .25rem;"},{"lineNumber":38,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":39,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":41,"author":{"gitId":"Tejas2805"},"content":"    .mui-textfield,"},{"lineNumber":42,"author":{"gitId":"Tejas2805"},"content":"    .mui-select {"},{"lineNumber":43,"author":{"gitId":"Tejas2805"},"content":"      margin: .5rem;"},{"lineNumber":44,"author":{"gitId":"Tejas2805"},"content":"      padding-right: 10px;"},{"lineNumber":45,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":47,"author":{"gitId":"Tejas2805"},"content":"    .mui-btn {"},{"lineNumber":48,"author":{"gitId":"Tejas2805"},"content":"      background: transparent;"},{"lineNumber":49,"author":{"gitId":"Tejas2805"},"content":"      box-shadow: none;"},{"lineNumber":50,"author":{"gitId":"Tejas2805"},"content":"      color: mui-color(\u0027grey\u0027);"},{"lineNumber":51,"author":{"gitId":"Tejas2805"},"content":"      font-size: .75rem;"},{"lineNumber":52,"author":{"gitId":"Tejas2805"},"content":"      font-weight: bold;"},{"lineNumber":53,"author":{"gitId":"Tejas2805"},"content":"      left: -8px;"},{"lineNumber":54,"author":{"gitId":"Tejas2805"},"content":"      margin: 0;"},{"lineNumber":55,"author":{"gitId":"Tejas2805"},"content":"      padding: 0;"},{"lineNumber":56,"author":{"gitId":"Tejas2805"},"content":"      vertical-align: middle;"},{"lineNumber":57,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":59,"author":{"gitId":"Tejas2805"},"content":"    .search_box {"},{"lineNumber":60,"author":{"gitId":"Tejas2805"},"content":"      align-items: center;"},{"lineNumber":61,"author":{"gitId":"Tejas2805"},"content":"      display: flex;"},{"lineNumber":62,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":64,"author":{"gitId":"Tejas2805"},"content":"    input {"},{"lineNumber":65,"author":{"gitId":"Tejas2805"},"content":"      font-size: .75rem;"},{"lineNumber":66,"author":{"gitId":"Tejas2805"},"content":"      padding-right: 10px;"},{"lineNumber":67,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":69,"author":{"gitId":"Tejas2805"},"content":"    label {"},{"lineNumber":70,"author":{"gitId":"Tejas2805"},"content":"      font-size: .75rem;"},{"lineNumber":71,"author":{"gitId":"Tejas2805"},"content":"      overflow-y: hidden;"},{"lineNumber":72,"author":{"gitId":"Tejas2805"},"content":"      text-align: left;"},{"lineNumber":73,"author":{"gitId":"Tejas2805"},"content":"      width: fit-content;"},{"lineNumber":74,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":76,"author":{"gitId":"Tejas2805"},"content":"    input,"},{"lineNumber":77,"author":{"gitId":"Tejas2805"},"content":"    select {"},{"lineNumber":78,"author":{"gitId":"Tejas2805"},"content":"      font-size: .75rem;"},{"lineNumber":79,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":81,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":82,"author":{"gitId":"Tejas2805"},"content":"  .summary-charts {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    margin-bottom: 1.4rem;"},{"lineNumber":84,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":85,"author":{"gitId":"Tejas2805"},"content":"    \u0026__title {"},{"lineNumber":86,"author":{"gitId":"Tejas2805"},"content":"      align-items: center;"},{"lineNumber":87,"author":{"gitId":"Tejas2805"},"content":"      display: flex;"},{"lineNumber":88,"author":{"gitId":"Tejas2805"},"content":"      font-weight: bold;"},{"lineNumber":89,"author":{"gitId":"Tejas2805"},"content":"      text-align: left;"},{"lineNumber":90,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":91,"author":{"gitId":"jamessspanggg"},"content":"      \u0026 \u003e * {"},{"lineNumber":92,"author":{"gitId":"jamessspanggg"},"content":"        padding-right: .5rem;"},{"lineNumber":93,"author":{"gitId":"jamessspanggg"},"content":"      }"},{"lineNumber":94,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":95,"author":{"gitId":"Tejas2805"},"content":"      \u0026--index {"},{"lineNumber":96,"author":{"gitId":"Tejas2805"},"content":"        background: mui-color(\u0027black\u0027);"},{"lineNumber":97,"author":{"gitId":"Tejas2805"},"content":"        color: mui-color(\u0027white\u0027);"},{"lineNumber":98,"author":{"gitId":"Tejas2805"},"content":"        font-size: medium;"},{"lineNumber":99,"author":{"gitId":"Tejas2805"},"content":"        overflow: hidden;"},{"lineNumber":100,"author":{"gitId":"0blivious"},"content":"        padding: .1em .25em;"},{"lineNumber":101,"author":{"gitId":"Tejas2805"},"content":"        vertical-align: middle;"},{"lineNumber":102,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":103,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":104,"author":{"gitId":"jamessspanggg"},"content":"      \u0026--groupname {"},{"lineNumber":105,"author":{"gitId":"Tejas2805"},"content":"        font-size: medium;"},{"lineNumber":106,"author":{"gitId":"Tejas2805"},"content":"        padding: .5rem;"},{"lineNumber":107,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":108,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":109,"author":{"gitId":"0blivious"},"content":"      \u0026--percentile {"},{"lineNumber":110,"author":{"gitId":"Tejas2805"},"content":"        @include mini-font;"},{"lineNumber":111,"author":{"gitId":"0blivious"},"content":"        color: mui-color(\u0027grey\u0027);"},{"lineNumber":112,"author":{"gitId":"0blivious"},"content":"        margin-left: auto;"},{"lineNumber":113,"author":{"gitId":"0blivious"},"content":"      }"},{"lineNumber":114,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":115,"author":{"gitId":"Tejas2805"},"content":"      \u0026--contribution {"},{"lineNumber":116,"author":{"gitId":"Tejas2805"},"content":"        @include mini-font;"},{"lineNumber":117,"author":{"gitId":"Tejas2805"},"content":"        display: inline;"},{"lineNumber":118,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":119,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":121,"author":{"gitId":"Tejas2805"},"content":"    \u0026__fileType--breakdown {"},{"lineNumber":122,"author":{"gitId":"Tejas2805"},"content":"      overflow-y: hidden;"},{"lineNumber":123,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":124,"author":{"gitId":"Tejas2805"},"content":"      \u0026__legend {"},{"lineNumber":125,"author":{"gitId":"Tejas2805"},"content":"        display: inline;"},{"lineNumber":126,"author":{"gitId":"Tejas2805"},"content":"        float: left;"},{"lineNumber":127,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":128,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":130,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":131,"author":{"gitId":"Tejas2805"},"content":"  .summary-chart {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    display: inline-block;"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    margin-bottom: 1rem;"},{"lineNumber":134,"author":{"gitId":"Tejas2805"},"content":"    position: relative;"},{"lineNumber":135,"author":{"gitId":"Tejas2805"},"content":"    text-align: left;"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    width: 100%;"},{"lineNumber":137,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":138,"author":{"gitId":"Tejas2805"},"content":"    \u0026__title {"},{"lineNumber":139,"author":{"gitId":"Tejas2805"},"content":"      align-items: center;"},{"lineNumber":140,"author":{"gitId":"Tejas2805"},"content":"      clear: left;"},{"lineNumber":141,"author":{"gitId":"Tejas2805"},"content":"      display: flex;"},{"lineNumber":142,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":143,"author":{"gitId":"Tejas2805"},"content":"      \u0026 \u003e * {"},{"lineNumber":144,"author":{"gitId":"Tejas2805"},"content":"        padding-right: .5rem;"},{"lineNumber":145,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":146,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"      \u0026--index {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        margin-left: 3px;"},{"lineNumber":149,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"Tejas2805"},"content":"      \u0026--repo {"},{"lineNumber":152,"author":{"gitId":"Tejas2805"},"content":"        font-weight: bold;"},{"lineNumber":153,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":154,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":155,"author":{"gitId":"Tejas2805"},"content":"      \u0026--index::after {"},{"lineNumber":156,"author":{"gitId":"Tejas2805"},"content":"        content: \u0027.\u0027;"},{"lineNumber":157,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":158,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":159,"author":{"gitId":"Tejas2805"},"content":"      \u0026--repo {"},{"lineNumber":160,"author":{"gitId":"Tejas2805"},"content":"        padding-right: .25rem;"},{"lineNumber":161,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":162,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":163,"author":{"gitId":"Tejas2805"},"content":"      \u0026--contribution {"},{"lineNumber":164,"author":{"gitId":"Tejas2805"},"content":"        @include mini-font;"},{"lineNumber":165,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":166,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":167,"author":{"gitId":"0blivious"},"content":"      \u0026--percentile {"},{"lineNumber":168,"author":{"gitId":"Tejas2805"},"content":"        @include mini-font;"},{"lineNumber":169,"author":{"gitId":"0blivious"},"content":"        color: mui-color(\u0027grey\u0027);"},{"lineNumber":170,"author":{"gitId":"0blivious"},"content":"        margin-left: auto;"},{"lineNumber":171,"author":{"gitId":"0blivious"},"content":"        padding-right: 0;"},{"lineNumber":172,"author":{"gitId":"0blivious"},"content":"      }"},{"lineNumber":173,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":175,"author":{"gitId":"Tejas2805"},"content":"    \u0026__ramp {"},{"lineNumber":176,"author":{"gitId":"Tejas2805"},"content":"      position: relative;"},{"lineNumber":177,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":178,"author":{"gitId":"Tejas2805"},"content":"      .overlay {"},{"lineNumber":179,"author":{"gitId":"Tejas2805"},"content":"        height: 100%;"},{"lineNumber":180,"author":{"gitId":"Tejas2805"},"content":"        position: absolute;"},{"lineNumber":181,"author":{"gitId":"Tejas2805"},"content":"        top: 0;"},{"lineNumber":182,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":183,"author":{"gitId":"Tejas2805"},"content":"        \u0026.show {"},{"lineNumber":184,"author":{"gitId":"Tejas2805"},"content":"          background-color: rgba(mui-color(\u0027white\u0027), .5);"},{"lineNumber":185,"author":{"gitId":"Tejas2805"},"content":"          border: 1px dashed mui-color(\u0027black\u0027);"},{"lineNumber":186,"author":{"gitId":"Tejas2805"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":188,"author":{"gitId":"Tejas2805"},"content":"        \u0026.edge {"},{"lineNumber":189,"author":{"gitId":"Tejas2805"},"content":"          border-right: 1px dashed mui-color(\u0027black\u0027);"},{"lineNumber":190,"author":{"gitId":"Tejas2805"},"content":"        }"},{"lineNumber":191,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":192,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":194,"author":{"gitId":"Tejas2805"},"content":"    \u0026__contrib {"},{"lineNumber":195,"author":{"gitId":"Tejas2805"},"content":"      text-align: left;"},{"lineNumber":196,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":197,"author":{"gitId":"Tejas2805"},"content":"      \u0026--bar {"},{"lineNumber":198,"author":{"gitId":"Tejas2805"},"content":"        background-color: mui-color(\u0027red\u0027);"},{"lineNumber":199,"author":{"gitId":"jamessspanggg"},"content":"        float: left;"},{"lineNumber":200,"author":{"gitId":"Tejas2805"},"content":"        height: 4px;"},{"lineNumber":201,"author":{"gitId":"Tejas2805"},"content":"        margin-top: 2px;"},{"lineNumber":202,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":203,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"  .active-icon {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    background-color: mui-color(\u0027green\u0027);"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    border-radius: 2px;"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    color: mui-color(\u0027white\u0027);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":211,"author":{"gitId":"-"},"content":""},{"lineNumber":212,"author":{"gitId":"-"},"content":"  .active-background {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    background-color: mui-color(\u0027yellow\u0027, \u0027200\u0027);"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":215,"author":{"gitId":"0blivious"},"content":"}"}],"authorContributionMap":{"Tejas2805":175,"jamessspanggg":6,"0blivious":15,"-":19}},{"path":"frontend/src/static/css/v_zoom.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"Tejas2805"},"content":"@import \u0027colors\u0027;"},{"lineNumber":2,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":3,"author":{"gitId":"Tejas2805"},"content":"#tab-zoom {"},{"lineNumber":4,"author":{"gitId":"Tejas2805"},"content":"  .zoom {"},{"lineNumber":5,"author":{"gitId":"Tejas2805"},"content":"    \u0026__title {"},{"lineNumber":6,"author":{"gitId":"Tejas2805"},"content":"      \u0026--granularity {"},{"lineNumber":7,"author":{"gitId":"Tejas2805"},"content":"        @include mini-font;"},{"lineNumber":8,"author":{"gitId":"Tejas2805"},"content":"        margin-top: .5rem;"},{"lineNumber":9,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":10,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":11,"author":{"gitId":"Tejas2805"},"content":"      \u0026--tags {"},{"lineNumber":12,"author":{"gitId":"Tejas2805"},"content":"        margin: .25rem 0 .25rem 0;"},{"lineNumber":13,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":14,"author":{"gitId":"Tejas2805"},"content":"        .tag {"},{"lineNumber":15,"author":{"gitId":"Tejas2805"},"content":"          cursor: pointer;"},{"lineNumber":16,"author":{"gitId":"Tejas2805"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":18,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":20,"author":{"gitId":"Tejas2805"},"content":"    \u0026__toggle-commit-message-body {"},{"lineNumber":21,"author":{"gitId":"Tejas2805"},"content":"      padding-top: 10px;"},{"lineNumber":22,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":24,"author":{"gitId":"Tejas2805"},"content":"    \u0026__day,"},{"lineNumber":25,"author":{"gitId":"Tejas2805"},"content":"    \u0026__title {"},{"lineNumber":26,"author":{"gitId":"Tejas2805"},"content":"      /* Tags in commits */"},{"lineNumber":27,"author":{"gitId":"Tejas2805"},"content":"      .tag {"},{"lineNumber":28,"author":{"gitId":"Tejas2805"},"content":"        @include mini-font;"},{"lineNumber":29,"author":{"gitId":"Tejas2805"},"content":"        background: mui-color(\u0027grey\u0027, \u0027600\u0027);"},{"lineNumber":30,"author":{"gitId":"Tejas2805"},"content":"        border-radius: 5px;"},{"lineNumber":31,"author":{"gitId":"Tejas2805"},"content":"        color: mui-color(\u0027white\u0027);"},{"lineNumber":32,"author":{"gitId":"Tejas2805"},"content":"        display: inline-block;"},{"lineNumber":33,"author":{"gitId":"Tejas2805"},"content":"        margin: .2rem .2rem .2rem 0;"},{"lineNumber":34,"author":{"gitId":"Tejas2805"},"content":"        padding: 0 3px 0 3px;"},{"lineNumber":35,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":36,"author":{"gitId":"Tejas2805"},"content":"        .fa-tags {"},{"lineNumber":37,"author":{"gitId":"Tejas2805"},"content":"          width: .65rem;"},{"lineNumber":38,"author":{"gitId":"Tejas2805"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":40,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":42,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":43,"author":{"gitId":"Tejas2805"},"content":"  /* Commit Message Body in Zoom Tab */"},{"lineNumber":44,"author":{"gitId":"Tejas2805"},"content":"  .commit-message {"},{"lineNumber":45,"author":{"gitId":"Tejas2805"},"content":"    padding: 5px;"},{"lineNumber":46,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":47,"author":{"gitId":"Tejas2805"},"content":"    \u0026:focus,"},{"lineNumber":48,"author":{"gitId":"Tejas2805"},"content":"    \u0026:focus-within {"},{"lineNumber":49,"author":{"gitId":"Tejas2805"},"content":"      border: 1px solid mui-color(\u0027blue\u0027, \u0027500\u0027);"},{"lineNumber":50,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":52,"author":{"gitId":"Tejas2805"},"content":"    \u0026.active {"},{"lineNumber":53,"author":{"gitId":"Tejas2805"},"content":"      .body {"},{"lineNumber":54,"author":{"gitId":"Tejas2805"},"content":"        background-color: mui-color(\u0027white\u0027);"},{"lineNumber":55,"author":{"gitId":"Tejas2805"},"content":"        border: 1px solid mui-color(\u0027grey\u0027, \u0027700\u0027);"},{"lineNumber":56,"author":{"gitId":"Tejas2805"},"content":"        display: grid;"},{"lineNumber":57,"author":{"gitId":"Tejas2805"},"content":"        margin: .25rem 0 .25rem 0;"},{"lineNumber":58,"author":{"gitId":"Tejas2805"},"content":"        overflow-x: auto;"},{"lineNumber":59,"author":{"gitId":"Tejas2805"},"content":"        padding: .4rem;"},{"lineNumber":60,"author":{"gitId":"Tejas2805"},"content":"        resize: none;"},{"lineNumber":61,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":62,"author":{"gitId":"jamessspanggg"},"content":"        pre {"},{"lineNumber":63,"author":{"gitId":"jamessspanggg"},"content":"          position: relative;"},{"lineNumber":64,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":65,"author":{"gitId":"jamessspanggg"},"content":"          .dashed-border {"},{"lineNumber":66,"author":{"gitId":"jamessspanggg"},"content":"            border-right: 1px dashed mui-color(\u0027grey\u0027, \u0027500\u0027); // 72nd character line"},{"lineNumber":67,"author":{"gitId":"jamessspanggg"},"content":"            height: 100%;"},{"lineNumber":68,"author":{"gitId":"jamessspanggg"},"content":"            pointer-events: none;"},{"lineNumber":69,"author":{"gitId":"jamessspanggg"},"content":"            position: absolute;"},{"lineNumber":70,"author":{"gitId":"jamessspanggg"},"content":"            top: 0;"},{"lineNumber":71,"author":{"gitId":"jamessspanggg"},"content":"            width: 72ch;"},{"lineNumber":72,"author":{"gitId":"jamessspanggg"},"content":"          }"},{"lineNumber":73,"author":{"gitId":"jamessspanggg"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":75,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":77,"author":{"gitId":"Tejas2805"},"content":"    .body {"},{"lineNumber":78,"author":{"gitId":"Tejas2805"},"content":"      display: none;"},{"lineNumber":79,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":81,"author":{"gitId":"Tejas2805"},"content":"    .tag {"},{"lineNumber":82,"author":{"gitId":"Tejas2805"},"content":"      cursor: pointer;"},{"lineNumber":83,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":84,"author":{"gitId":"Tejas2805"},"content":"      \u0026:focus {"},{"lineNumber":85,"author":{"gitId":"Tejas2805"},"content":"        border: 1px solid mui-color(\u0027blue\u0027, \u0027500\u0027);"},{"lineNumber":86,"author":{"gitId":"Tejas2805"},"content":"        outline: none;"},{"lineNumber":87,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":88,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":90,"author":{"gitId":"Tejas2805"},"content":"    \u0026--button {"},{"lineNumber":91,"author":{"gitId":"jamessspanggg"},"content":"      color: mui-color(\u0027grey\u0027);"},{"lineNumber":92,"author":{"gitId":"Tejas2805"},"content":"      padding-left: .5rem;"},{"lineNumber":93,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":94,"author":{"gitId":"Tejas2805"},"content":"      \u0026:hover {"},{"lineNumber":95,"author":{"gitId":"Tejas2805"},"content":"        cursor: pointer;"},{"lineNumber":96,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":97,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":99,"author":{"gitId":"Tejas2805"},"content":"    pre {"},{"lineNumber":100,"author":{"gitId":"Tejas2805"},"content":"      margin: 0;"},{"lineNumber":101,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":103,"author":{"gitId":"jamessspanggg"},"content":"    span.loc {"},{"lineNumber":104,"author":{"gitId":"jamessspanggg"},"content":"      color: mui-color(\u0027grey\u0027);"},{"lineNumber":105,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":107,"author":{"gitId":"jamessspanggg"},"content":"    .message-title {"},{"lineNumber":108,"author":{"gitId":"jamessspanggg"},"content":"      display: inline;"},{"lineNumber":109,"author":{"gitId":"jamessspanggg"},"content":"      font-family: monospace;"},{"lineNumber":110,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":111,"author":{"gitId":"jamessspanggg"},"content":"      .within-border {"},{"lineNumber":112,"author":{"gitId":"jamessspanggg"},"content":"        display: inline;"},{"lineNumber":113,"author":{"gitId":"jamessspanggg"},"content":"      }"},{"lineNumber":114,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":115,"author":{"gitId":"jamessspanggg"},"content":"      .not-within-border {"},{"lineNumber":116,"author":{"gitId":"jamessspanggg"},"content":"        border-left: 1px dashed mui-color(\u0027grey\u0027, \u0027500\u0027); // 50th character line"},{"lineNumber":117,"author":{"gitId":"jamessspanggg"},"content":"        display: inline;"},{"lineNumber":118,"author":{"gitId":"jamessspanggg"},"content":"      }"},{"lineNumber":119,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"Tejas2805"},"content":"  }"},{"lineNumber":121,"author":{"gitId":"Tejas2805"},"content":"}"}],"authorContributionMap":{"Tejas2805":89,"jamessspanggg":32}},{"path":"frontend/src/static/js/api.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"// utility functions //"},{"lineNumber":2,"author":{"gitId":"-"},"content":"window.$ \u003d (id) \u003d\u003e document.getElementById(id);"},{"lineNumber":3,"author":{"gitId":"-"},"content":"window.enquery \u003d (key, val) \u003d\u003e `${key}\u003d${encodeURIComponent(val)}`;"},{"lineNumber":4,"author":{"gitId":"0blivious"},"content":"window.BASE_URL \u003d \u0027https://github.com\u0027;"},{"lineNumber":5,"author":{"gitId":"Tejas2805"},"content":"window.HOME_PAGE_URL \u003d \u0027https://reposense.org\u0027;"},{"lineNumber":6,"author":{"gitId":"0blivious"},"content":"window.DAY_IN_MS \u003d (1000 * 60 * 60 * 24);"},{"lineNumber":7,"author":{"gitId":"niqiukun"},"content":"window.HASH_DELIMITER \u003d \u0027~\u0027;"},{"lineNumber":8,"author":{"gitId":"0blivious"},"content":"window.REPOS \u003d {};"},{"lineNumber":9,"author":{"gitId":"0blivious"},"content":"window.hashParams \u003d {};"},{"lineNumber":10,"author":{"gitId":"0blivious"},"content":"window.isMacintosh \u003d navigator.platform.includes(\u0027Mac\u0027);"},{"lineNumber":11,"author":{"gitId":"-"},"content":"window.REPORT_ZIP \u003d null;"},{"lineNumber":12,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"const HASH_ANCHOR \u003d \u0027?\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"const REPORT_DIR \u003d \u0027.\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"0blivious"},"content":"window.deactivateAllOverlays \u003d function deactivateAllOverlays() {"},{"lineNumber":17,"author":{"gitId":"0blivious"},"content":"  document.querySelectorAll(\u0027.summary-chart__ramp .overlay\u0027)"},{"lineNumber":18,"author":{"gitId":"0blivious"},"content":"      .forEach((x) \u003d\u003e {"},{"lineNumber":19,"author":{"gitId":"0blivious"},"content":"        x.className \u003d \u0027overlay\u0027;"},{"lineNumber":20,"author":{"gitId":"0blivious"},"content":"      });"},{"lineNumber":21,"author":{"gitId":"0blivious"},"content":"};"},{"lineNumber":22,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":23,"author":{"gitId":"0blivious"},"content":"window.getDateStr \u003d function getDateStr(date) {"},{"lineNumber":24,"author":{"gitId":"0blivious"},"content":"  return (new Date(date)).toISOString().split(\u0027T\u0027)[0];"},{"lineNumber":25,"author":{"gitId":"0blivious"},"content":"};"},{"lineNumber":26,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":27,"author":{"gitId":"0blivious"},"content":"window.getHexToRGB \u003d function getHexToRGB(color) {"},{"lineNumber":28,"author":{"gitId":"0blivious"},"content":"  // to convert color from hex code to rgb format"},{"lineNumber":29,"author":{"gitId":"0blivious"},"content":"  const arr \u003d /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(color);"},{"lineNumber":30,"author":{"gitId":"0blivious"},"content":"  return arr.slice(1).map((val) \u003d\u003e parseInt(val, 16));"},{"lineNumber":31,"author":{"gitId":"0blivious"},"content":"};"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"0blivious"},"content":"window.getFontColor \u003d function getFontColor(color) {"},{"lineNumber":34,"author":{"gitId":"0blivious"},"content":"  const result \u003d window.getHexToRGB(color);"},{"lineNumber":35,"author":{"gitId":"0blivious"},"content":"  const red \u003d result[0];"},{"lineNumber":36,"author":{"gitId":"0blivious"},"content":"  const green \u003d result[1];"},{"lineNumber":37,"author":{"gitId":"0blivious"},"content":"  const blue \u003d result[2];"},{"lineNumber":38,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":39,"author":{"gitId":"0blivious"},"content":"  const luminosity \u003d 0.2126 * red + 0.7152 * green + 0.0722 * blue; // per ITU-R BT.709"},{"lineNumber":40,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":41,"author":{"gitId":"0blivious"},"content":"  return luminosity \u003c 120 ? \u0027#ffffff\u0027 : \u0027#000000\u0027;"},{"lineNumber":42,"author":{"gitId":"0blivious"},"content":"};"},{"lineNumber":43,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":44,"author":{"gitId":"0blivious"},"content":"window.addHash \u003d function addHash(newKey, newVal) {"},{"lineNumber":45,"author":{"gitId":"0blivious"},"content":"  window.hashParams[newKey] \u003d newVal;"},{"lineNumber":46,"author":{"gitId":"0blivious"},"content":"};"},{"lineNumber":47,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":48,"author":{"gitId":"0blivious"},"content":"window.removeHash \u003d function removeHash(key) {"},{"lineNumber":49,"author":{"gitId":"0blivious"},"content":"  delete window.hashParams[key];"},{"lineNumber":50,"author":{"gitId":"0blivious"},"content":"};"},{"lineNumber":51,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":52,"author":{"gitId":"0blivious"},"content":"window.encodeHash \u003d function encodeHash() {"},{"lineNumber":53,"author":{"gitId":"0blivious"},"content":"  const { hashParams } \u003d window;"},{"lineNumber":54,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  const hash \u003d Object.keys(hashParams)"},{"lineNumber":56,"author":{"gitId":"0blivious"},"content":"      .map((key) \u003d\u003e `${key}\u003d${encodeURIComponent(hashParams[key])}`)"},{"lineNumber":57,"author":{"gitId":"0blivious"},"content":"      .join(\u0027\u0026\u0027);"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  const newUrl \u003d `${window.location.protocol}//${window.location.host}${window.location.pathname}${HASH_ANCHOR}${hash}`;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  window.history.replaceState(null, \u0027\u0027, newUrl);"},{"lineNumber":61,"author":{"gitId":"0blivious"},"content":"};"},{"lineNumber":62,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":63,"author":{"gitId":"0blivious"},"content":"window.decodeHash \u003d function decodeHash() {"},{"lineNumber":64,"author":{"gitId":"0blivious"},"content":"  const hashParams \u003d {};"},{"lineNumber":65,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"  const hashIndex \u003d window.location.href.indexOf(HASH_ANCHOR);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  const parameterString \u003d hashIndex \u003d\u003d\u003d -1 ? \u0027\u0027 : window.location.href.slice(hashIndex + 1);"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"  parameterString.split(\u0027\u0026\u0027)"},{"lineNumber":70,"author":{"gitId":"0blivious"},"content":"      .forEach((param) \u003d\u003e {"},{"lineNumber":71,"author":{"gitId":"0blivious"},"content":"        const [key, val] \u003d param.split(\u0027\u003d\u0027);"},{"lineNumber":72,"author":{"gitId":"0blivious"},"content":"        if (key) {"},{"lineNumber":73,"author":{"gitId":"0blivious"},"content":"          try {"},{"lineNumber":74,"author":{"gitId":"0blivious"},"content":"            hashParams[key] \u003d decodeURIComponent(val);"},{"lineNumber":75,"author":{"gitId":"0blivious"},"content":"          } catch (error) {"},{"lineNumber":76,"author":{"gitId":"0blivious"},"content":"            this.userUpdated \u003d false;"},{"lineNumber":77,"author":{"gitId":"0blivious"},"content":"            this.isLoading \u003d false;"},{"lineNumber":78,"author":{"gitId":"0blivious"},"content":"          }"},{"lineNumber":79,"author":{"gitId":"0blivious"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"0blivious"},"content":"      });"},{"lineNumber":81,"author":{"gitId":"0blivious"},"content":"  window.hashParams \u003d hashParams;"},{"lineNumber":82,"author":{"gitId":"0blivious"},"content":"};"},{"lineNumber":83,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":84,"author":{"gitId":"0blivious"},"content":"window.comparator \u003d (fn, sortingOption \u003d \u0027\u0027) \u003d\u003e function compare(a, b) {"},{"lineNumber":85,"author":{"gitId":"0blivious"},"content":"  let a1;"},{"lineNumber":86,"author":{"gitId":"0blivious"},"content":"  let b1;"},{"lineNumber":87,"author":{"gitId":"0blivious"},"content":"  if (sortingOption) {"},{"lineNumber":88,"author":{"gitId":"0blivious"},"content":"    a1 \u003d fn(a, sortingOption).toLowerCase"},{"lineNumber":89,"author":{"gitId":"0blivious"},"content":"        ? fn(a, sortingOption).toLowerCase()"},{"lineNumber":90,"author":{"gitId":"0blivious"},"content":"        : fn(a, sortingOption);"},{"lineNumber":91,"author":{"gitId":"0blivious"},"content":"    b1 \u003d fn(b, sortingOption).toLowerCase"},{"lineNumber":92,"author":{"gitId":"0blivious"},"content":"        ? fn(b, sortingOption).toLowerCase()"},{"lineNumber":93,"author":{"gitId":"0blivious"},"content":"        : fn(b, sortingOption);"},{"lineNumber":94,"author":{"gitId":"0blivious"},"content":"  } else {"},{"lineNumber":95,"author":{"gitId":"0blivious"},"content":"    a1 \u003d fn(a).toLowerCase ? fn(a).toLowerCase() : fn(a);"},{"lineNumber":96,"author":{"gitId":"0blivious"},"content":"    b1 \u003d fn(b).toLowerCase ? fn(b).toLowerCase() : fn(b);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":98,"author":{"gitId":"0blivious"},"content":"  if (a1 \u003d\u003d\u003d b1) {"},{"lineNumber":99,"author":{"gitId":"0blivious"},"content":"    return 0;"},{"lineNumber":100,"author":{"gitId":"0blivious"},"content":"  } if (a1 \u003c b1) {"},{"lineNumber":101,"author":{"gitId":"0blivious"},"content":"    return -1;"},{"lineNumber":102,"author":{"gitId":"0blivious"},"content":"  }"},{"lineNumber":103,"author":{"gitId":"0blivious"},"content":"  return 1;"},{"lineNumber":104,"author":{"gitId":"0blivious"},"content":"};"},{"lineNumber":105,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":106,"author":{"gitId":"0blivious"},"content":"window.toggleNext \u003d function toggleNext(ele) {"},{"lineNumber":107,"author":{"gitId":"0blivious"},"content":"  // function for toggling unopened code"},{"lineNumber":108,"author":{"gitId":"0blivious"},"content":"  const targetClass \u003d \u0027active\u0027;"},{"lineNumber":109,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":110,"author":{"gitId":"0blivious"},"content":"  const parent \u003d ele.parentNode;"},{"lineNumber":111,"author":{"gitId":"0blivious"},"content":"  const classes \u003d parent.className.split(\u0027 \u0027);"},{"lineNumber":112,"author":{"gitId":"0blivious"},"content":"  const idx \u003d classes.indexOf(targetClass);"},{"lineNumber":113,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":114,"author":{"gitId":"0blivious"},"content":"  if (idx \u003d\u003d\u003d -1) {"},{"lineNumber":115,"author":{"gitId":"0blivious"},"content":"    classes.push(targetClass);"},{"lineNumber":116,"author":{"gitId":"0blivious"},"content":"  } else {"},{"lineNumber":117,"author":{"gitId":"0blivious"},"content":"    classes.splice(idx, 1);"},{"lineNumber":118,"author":{"gitId":"0blivious"},"content":"  }"},{"lineNumber":119,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":120,"author":{"gitId":"0blivious"},"content":"  parent.className \u003d classes.join(\u0027 \u0027);"},{"lineNumber":121,"author":{"gitId":"0blivious"},"content":"};"},{"lineNumber":122,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":123,"author":{"gitId":"0blivious"},"content":"window.getBaseLink \u003d function getBaseLink(repoId) {"},{"lineNumber":124,"author":{"gitId":"0blivious"},"content":"  return `${window.BASE_URL}/${"},{"lineNumber":125,"author":{"gitId":"0blivious"},"content":"    window.REPOS[repoId].location.organization}/${"},{"lineNumber":126,"author":{"gitId":"0blivious"},"content":"    window.REPOS[repoId].location.repoName}`;"},{"lineNumber":127,"author":{"gitId":"0blivious"},"content":"};"},{"lineNumber":128,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":129,"author":{"gitId":"niqiukun"},"content":"window.getGroupName \u003d function getGroupName(group, filterGroupSelection) {"},{"lineNumber":130,"author":{"gitId":"niqiukun"},"content":"  switch (filterGroupSelection) {"},{"lineNumber":131,"author":{"gitId":"niqiukun"},"content":"  case \u0027groupByRepos\u0027:"},{"lineNumber":132,"author":{"gitId":"niqiukun"},"content":"    return group[0].repoName;"},{"lineNumber":133,"author":{"gitId":"niqiukun"},"content":"  case \u0027groupByAuthors\u0027:"},{"lineNumber":134,"author":{"gitId":"niqiukun"},"content":"    return group[0].name;"},{"lineNumber":135,"author":{"gitId":"niqiukun"},"content":"  default:"},{"lineNumber":136,"author":{"gitId":"niqiukun"},"content":"    return \u0027\u0027;"},{"lineNumber":137,"author":{"gitId":"niqiukun"},"content":"  }"},{"lineNumber":138,"author":{"gitId":"niqiukun"},"content":"};"},{"lineNumber":139,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"window.getAuthorDisplayName \u003d function getAuthorDisplayName(authorRepos) {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  return authorRepos.reduce((displayName, user) \u003d\u003e ("},{"lineNumber":142,"author":{"gitId":"-"},"content":"    user.displayName \u003e displayName ? user.displayName : displayName"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  ), authorRepos[0].displayName);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"};"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"window.api \u003d {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  async loadJSON(fname) {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    if (window.REPORT_ZIP) {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"      const zipObject \u003d window.REPORT_ZIP.file(fname);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      if (zipObject) {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"          return JSON.parse(await zipObject.async(\u0027text\u0027));"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (e) {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"          throw new Error(\u0027Uploaded JSON is invalid.\u0027);"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        throw new Error(\u0027Uploaded zip file is invalid.\u0027);"},{"lineNumber":158,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    try {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      const response \u003d await fetch(`${REPORT_DIR}/${fname}`);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"      // Not directly returned in case response is not actually json."},{"lineNumber":163,"author":{"gitId":"-"},"content":"      const json \u003d await response.json();"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      return json;"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    } catch (e) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"      throw new Error(`Unable to read ${fname}.`);"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"0blivious"},"content":"  },"},{"lineNumber":169,"author":{"gitId":"-"},"content":"  async loadSummary() {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    window.REPOS \u003d {};"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    let data \u003d {};"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    try {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      data \u003d await this.loadJSON(\u0027summary.json\u0027);"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    } catch (error) {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      if (error.message \u003d\u003d\u003d \u0027Unable to read summary.json.\u0027) {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return null;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      throw error;"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    window.app.creationDate \u003d data.reportGeneratedTime;"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    window.app.sinceDate \u003d data.sinceDate;"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    window.app.untilDate \u003d data.untilDate;"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    window.app.repoSenseVersion \u003d data.repoSenseVersion;"},{"lineNumber":184,"author":{"gitId":"anubh-v"},"content":"    window.app.reportGenerationTime \u003d data.reportGenerationTime;"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    window.app.isSinceDateProvided \u003d data.isSinceDateProvided;"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    window.app.isUntilDateProvided \u003d data.isUntilDateProvided;"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"    Object.entries(data.errorList).forEach(([repoName, message]) \u003d\u003e {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      window.app.errorMessages[repoName] \u003d message;"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"    const names \u003d [];"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    data.repos.forEach((repo) \u003d\u003e {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      const repoName \u003d `${repo.displayName}`;"},{"lineNumber":195,"author":{"gitId":"-"},"content":"      window.REPOS[repoName] \u003d repo;"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      names.push(repoName);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    return names;"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"  async loadCommits(repoName) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    const folderName \u003d window.REPOS[repoName].outputFolderName;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    const commits \u003d await this.loadJSON(`${folderName}/commits.json`);"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    const res \u003d [];"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    const repo \u003d window.REPOS[repoName];"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"    Object.keys(commits.authorDisplayNameMap).forEach((author) \u003d\u003e {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"      if (author) {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        const obj \u003d {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"          name: author,"},{"lineNumber":211,"author":{"gitId":"-"},"content":"          repoId: repoName,"},{"lineNumber":212,"author":{"gitId":"-"},"content":"          variance: commits.authorContributionVariance[author],"},{"lineNumber":213,"author":{"gitId":"-"},"content":"          displayName: commits.authorDisplayNameMap[author],"},{"lineNumber":214,"author":{"gitId":"-"},"content":"          dailyCommits: commits.authorDailyContributionsMap[author],"},{"lineNumber":215,"author":{"gitId":"-"},"content":"          fileTypeContribution: commits.authorFileTypeContributionMap[author],"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"jamessspanggg"},"content":"        this.setContributionOfCommitResults(obj.dailyCommits);"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"        const searchParams \u003d ["},{"lineNumber":221,"author":{"gitId":"-"},"content":"            repo.displayName,"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            obj.displayName, author,"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        ];"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"        obj.searchPath \u003d searchParams.join(\u0027_\u0027).toLowerCase();"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        obj.repoName \u003d `${repo.displayName}`;"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        obj.location \u003d `${repo.location.location}`;"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"        res.push(obj);"},{"lineNumber":230,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"    repo.commits \u003d commits;"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    repo.users \u003d res;"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"    return res;"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"  loadAuthorship(repoName) {"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    const folderName \u003d window.REPOS[repoName].outputFolderName;"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    return this.loadJSON(`${folderName}/authorship.json`)"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        .then((files) \u003d\u003e {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"          window.REPOS[repoName].files \u003d files;"},{"lineNumber":244,"author":{"gitId":"-"},"content":"          return files;"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"jamessspanggg"},"content":"  // calculate and set the contribution of each commitResult, since not provided in json file"},{"lineNumber":249,"author":{"gitId":"jamessspanggg"},"content":"  setContributionOfCommitResults(dailyCommits) {"},{"lineNumber":250,"author":{"gitId":"jamessspanggg"},"content":"    dailyCommits.forEach((commit) \u003d\u003e {"},{"lineNumber":251,"author":{"gitId":"jamessspanggg"},"content":"      commit.commitResults.forEach((result) \u003d\u003e {"},{"lineNumber":252,"author":{"gitId":"jamessspanggg"},"content":"        result.insertions \u003d Object.values(result.fileTypesAndContributionMap)"},{"lineNumber":253,"author":{"gitId":"jamessspanggg"},"content":"            .reduce((acc, fileType) \u003d\u003e acc + fileType.insertions, 0);"},{"lineNumber":254,"author":{"gitId":"jamessspanggg"},"content":"        result.deletions \u003d Object.values(result.fileTypesAndContributionMap)"},{"lineNumber":255,"author":{"gitId":"jamessspanggg"},"content":"            .reduce((acc, fileType) \u003d\u003e acc + fileType.deletions, 0);"},{"lineNumber":256,"author":{"gitId":"jamessspanggg"},"content":"      });"},{"lineNumber":257,"author":{"gitId":"jamessspanggg"},"content":"    });"},{"lineNumber":258,"author":{"gitId":"jamessspanggg"},"content":"  },"},{"lineNumber":259,"author":{"gitId":"-"},"content":"};"}],"authorContributionMap":{"niqiukun":12,"anubh-v":1,"Tejas2805":1,"jamessspanggg":12,"-":123,"0blivious":110}},{"path":"frontend/src/static/js/main.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/* global Vuex */"},{"lineNumber":2,"author":{"gitId":"0blivious"},"content":"// eslint-disable-next-line import/extensions"},{"lineNumber":3,"author":{"gitId":"0blivious"},"content":"import store from \u0027./store.js\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"/* global Vue hljs */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Vue.directive(\u0027hljs\u0027, {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  inserted(ele, binding) {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    const element \u003d ele;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    element.className \u003d binding.value.split(\u0027.\u0027).pop();"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"    hljs.highlightBlock(element);"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":13,"author":{"gitId":"-"},"content":"});"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"ccyccyccy"},"content":"Vue.component(\u0027font-awesome-icon\u0027, window[\u0027vue-fontawesome\u0027].FontAwesomeIcon);"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Vue.component(\u0027loading-overlay\u0027, window.VueLoading);"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"const loadingResourcesMessage \u003d \u0027Loading resources...\u0027;"},{"lineNumber":19,"author":{"gitId":"ccyccyccy"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"window.app \u003d new window.Vue({"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  el: \u0027#app\u0027,"},{"lineNumber":22,"author":{"gitId":"0blivious"},"content":"  store,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  data: {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    repos: {},"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    users: [],"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    userUpdated: false,"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    isLoadingOverlayEnabled: false,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    loadingOverlayOpacity: 1,"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    tabType: \u0027empty\u0027,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    creationDate: \u0027\u0027,"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    errorMessages: {},"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":36,"author":{"gitId":"0blivious"},"content":"  watch: {"},{"lineNumber":37,"author":{"gitId":"0blivious"},"content":"    \u0027$store.state.tabZoomInfo\u0027: function () {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      if (this.$store.state.tabZoomInfo.isRefreshing) {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":41,"author":{"gitId":"0blivious"},"content":"      this.activateTab(\u0027zoom\u0027);"},{"lineNumber":42,"author":{"gitId":"0blivious"},"content":"    },"},{"lineNumber":43,"author":{"gitId":"0blivious"},"content":"    \u0027$store.state.tabAuthorshipInfo\u0027: function () {"},{"lineNumber":44,"author":{"gitId":"0blivious"},"content":"      this.activateTab(\u0027authorship\u0027);"},{"lineNumber":45,"author":{"gitId":"0blivious"},"content":"    },"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \u0027$store.state.loadingOverlayCount\u0027: function () {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      this.isLoadingOverlayEnabled \u003d this.$store.state.loadingOverlayCount \u003e 0;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":49,"author":{"gitId":"0blivious"},"content":"  },"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  methods: {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // model functions //"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    updateReportZip(evt) {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      this.users \u003d [];"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"      window.JSZip.loadAsync(evt.target.files[0])"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          .then((zip) \u003d\u003e {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            window.REPORT_ZIP \u003d zip;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          }, () \u003d\u003e {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            window.alert(\u0027Either the .zip file is corrupted, or you uploaded a .zip file that is not generated \u0027"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + \u0027by RepoSense.\u0027);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          })"},{"lineNumber":62,"author":{"gitId":"-"},"content":"          .then(() \u003d\u003e this.updateReportView());"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    updateReportDir() {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      window.REPORT_ZIP \u003d null;"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"      this.users \u003d [];"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      this.updateReportView();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    async updateReportView() {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027incrementLoadingOverlayCount\u0027, 1);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateLoadingOverlayMessage\u0027, loadingResourcesMessage);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      this.userUpdated \u003d false;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      try {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        const names \u003d await window.api.loadSummary();"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (names \u003d\u003d\u003d null) {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"          return;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.repos \u003d window.REPOS;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        await Promise.all(names.map((name) \u003d\u003e ("},{"lineNumber":83,"author":{"gitId":"-"},"content":"          window.api.loadCommits(name)"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        )));"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.loadingOverlayOpacity \u003d 0.5;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.getUsers();"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.renderTabHash();"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.userUpdated \u003d true;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      } catch (error) {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        window.alert(error);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      } finally {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.$store.commit(\u0027incrementLoadingOverlayCount\u0027, -1);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    getUsers() {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      const full \u003d [];"},{"lineNumber":97,"author":{"gitId":"-"},"content":"      Object.keys(this.repos).forEach((repo) \u003d\u003e {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (this.repos[repo].users) {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"          full.push(this.repos[repo]);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      this.users \u003d full;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    // handle opening of sidebar //"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    activateTab(tabName) {"},{"lineNumber":107,"author":{"gitId":"ang-zeyu"},"content":"      if (this.$refs.tabWrapper) {"},{"lineNumber":108,"author":{"gitId":"ang-zeyu"},"content":"        this.$refs.tabWrapper.scrollTop \u003d 0;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"      this.tabType \u003d tabName;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateTabState\u0027, true);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      window.addHash(\u0027tabOpen\u0027, this.isTabActive);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      window.addHash(\u0027tabType\u0027, this.tabType);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    deactivateTab() {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateTabState\u0027, false);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"      window.addHash(\u0027tabOpen\u0027, this.isTabActive);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027tabType\u0027);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"    renderAuthorShipTabHash(minDate, maxDate) {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      const hash \u003d window.hashParams;"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      const info \u003d {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        author: hash.tabAuthor,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        repo: hash.tabRepo,"},{"lineNumber":130,"author":{"gitId":"jamessspanggg"},"content":"        isMergeGroup: hash.authorshipIsMergeGroup \u003d\u003d\u003d \u0027true\u0027,"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        isRefresh: true,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        minDate,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        maxDate,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":135,"author":{"gitId":"jamessspanggg"},"content":"      const tabInfoLength \u003d Object.values(info).filter((x) \u003d\u003e x !\u003d\u003d null).length;"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      if (Object.keys(info).length \u003d\u003d\u003d tabInfoLength) {"},{"lineNumber":137,"author":{"gitId":"0blivious"},"content":"        this.$store.commit(\u0027updateTabAuthorshipInfo\u0027, info);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      } else if (hash.tabOpen \u003d\u003d\u003d \u0027false\u0027 || tabInfoLength \u003e 2) {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        window.app.isTabActive \u003d false;"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"jamessspanggg"},"content":"    renderZoomTabHash() {"},{"lineNumber":144,"author":{"gitId":"jamessspanggg"},"content":"      const hash \u003d window.hashParams;"},{"lineNumber":145,"author":{"gitId":"jamessspanggg"},"content":"      const zoomInfo \u003d {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        isRefreshing: true,"},{"lineNumber":147,"author":{"gitId":"jamessspanggg"},"content":"        zAuthor: hash.zA,"},{"lineNumber":148,"author":{"gitId":"jamessspanggg"},"content":"        zRepo: hash.zR,"},{"lineNumber":149,"author":{"gitId":"jamessspanggg"},"content":"        zAvgCommitSize: hash.zACS,"},{"lineNumber":150,"author":{"gitId":"jamessspanggg"},"content":"        zSince: hash.zS,"},{"lineNumber":151,"author":{"gitId":"jamessspanggg"},"content":"        zUntil: hash.zU,"},{"lineNumber":152,"author":{"gitId":"jamessspanggg"},"content":"        zFilterGroup: hash.zFGS,"},{"lineNumber":153,"author":{"gitId":"jamessspanggg"},"content":"        zFilterSearch: hash.zFS,"},{"lineNumber":154,"author":{"gitId":"jamessspanggg"},"content":"        zTimeFrame: hash.zFTF,"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        zIsMerged: hash.zMG \u003d\u003d\u003d \u0027true\u0027,"},{"lineNumber":156,"author":{"gitId":"0blivious"},"content":"        zFromRamp: hash.zFR \u003d\u003d\u003d \u0027true\u0027,"},{"lineNumber":157,"author":{"gitId":"jamessspanggg"},"content":"      };"},{"lineNumber":158,"author":{"gitId":"jamessspanggg"},"content":"      const tabInfoLength \u003d Object.values(zoomInfo).filter((x) \u003d\u003e x !\u003d\u003d null).length;"},{"lineNumber":159,"author":{"gitId":"jamessspanggg"},"content":"      if (Object.keys(zoomInfo).length \u003d\u003d\u003d tabInfoLength) {"},{"lineNumber":160,"author":{"gitId":"0blivious"},"content":"        this.$store.commit(\u0027updateTabZoomInfo\u0027, zoomInfo);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      } else if (hash.tabOpen \u003d\u003d\u003d \u0027false\u0027 || tabInfoLength \u003e 2) {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        window.app.isTabActive \u003d false;"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"    renderTabHash() {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"      const hash \u003d window.hashParams;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      if (!hash.tabOpen) {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateTabState\u0027, hash.tabOpen \u003d\u003d\u003d \u0027true\u0027);"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"      if (this.isTabActive) {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (hash.tabType \u003d\u003d\u003d \u0027authorship\u0027) {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"          let { since, until } \u003d hash;"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"          // get since and until dates from window.app if not found in hash"},{"lineNumber":178,"author":{"gitId":"-"},"content":"          since \u003d since || window.app.sinceDate;"},{"lineNumber":179,"author":{"gitId":"-"},"content":"          until \u003d until || window.app.untilDate;"},{"lineNumber":180,"author":{"gitId":"-"},"content":"          this.renderAuthorShipTabHash(since, until);"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":182,"author":{"gitId":"jamessspanggg"},"content":"          this.renderZoomTabHash();"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"    getRepoSenseHomeLink() {"},{"lineNumber":188,"author":{"gitId":"Tejas2805"},"content":"      const version \u003d window.app.repoSenseVersion;"},{"lineNumber":189,"author":{"gitId":"Tejas2805"},"content":"      if (!version) {"},{"lineNumber":190,"author":{"gitId":"Tejas2805"},"content":"        return `${window.HOME_PAGE_URL}/RepoSense/`;"},{"lineNumber":191,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":192,"author":{"gitId":"Tejas2805"},"content":"      return `${window.HOME_PAGE_URL}`;"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"Tejas2805"},"content":"    getSpecificCommitLink() {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      const version \u003d window.app.repoSenseVersion;"},{"lineNumber":197,"author":{"gitId":"-"},"content":"      if (!version) {"},{"lineNumber":198,"author":{"gitId":"Tejas2805"},"content":"        return `${window.BASE_URL}/reposense/RepoSense`;"},{"lineNumber":199,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      if (version.startsWith(\u0027v\u0027)) {"},{"lineNumber":201,"author":{"gitId":"Tejas2805"},"content":"        return `${window.BASE_URL}/reposense/RepoSense/releases/tag/${version}`;"},{"lineNumber":202,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":203,"author":{"gitId":"Tejas2805"},"content":"      return `${window.BASE_URL}/reposense/RepoSense/commit/${version}`;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"Tejas2805"},"content":"    getUserGuideLink() {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"      const version \u003d window.app.repoSenseVersion;"},{"lineNumber":208,"author":{"gitId":"Tejas2805"},"content":"      if (!version) {"},{"lineNumber":209,"author":{"gitId":"Tejas2805"},"content":"        return `${window.HOME_PAGE_URL}/RepoSense/ug/index.html`;"},{"lineNumber":210,"author":{"gitId":"Tejas2805"},"content":"      }"},{"lineNumber":211,"author":{"gitId":"Tejas2805"},"content":"      return `${window.HOME_PAGE_URL}/ug/index.html`;"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"    getUsingReportsUserGuideLink() {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      const version \u003d window.app.repoSenseVersion;"},{"lineNumber":216,"author":{"gitId":"Tejas2805"},"content":"      if (!version) {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        return `${window.HOME_PAGE_URL}/RepoSense/ug/usingReports.html`;"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":219,"author":{"gitId":"Tejas2805"},"content":"      return `${window.HOME_PAGE_URL}/ug/usingReports.html`;"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"  computed: {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    ...Vuex.mapState([\u0027loadingOverlayMessage\u0027, \u0027isTabActive\u0027]),"},{"lineNumber":225,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":"  components: {"},{"lineNumber":228,"author":{"gitId":"ang-zeyu"},"content":"    vResizer: window.vResizer,"},{"lineNumber":229,"author":{"gitId":"0blivious"},"content":"    vZoom: window.vZoom,"},{"lineNumber":230,"author":{"gitId":"0blivious"},"content":"    vSummary: window.vSummary,"},{"lineNumber":231,"author":{"gitId":"0blivious"},"content":"    vAuthorship: window.vAuthorship,"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  created() {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    window.decodeHash();"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    this.updateReportDir();"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":237,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"ccyccyccy":2,"Tejas2805":16,"jamessspanggg":17,"-":182,"0blivious":17,"ang-zeyu":3}},{"path":"frontend/src/static/js/store.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"0blivious"},"content":"/* global Vuex */"},{"lineNumber":2,"author":{"gitId":"0blivious"},"content":"const store \u003d new Vuex.Store({"},{"lineNumber":3,"author":{"gitId":"0blivious"},"content":"  state: {"},{"lineNumber":4,"author":{"gitId":"0blivious"},"content":"    tabAuthorshipInfo: {},"},{"lineNumber":5,"author":{"gitId":"0blivious"},"content":"    tabZoomInfo: {},"},{"lineNumber":6,"author":{"gitId":"0blivious"},"content":"    summaryDates: {},"},{"lineNumber":7,"author":{"gitId":"niqiukun"},"content":"    mergedGroups: [],"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    fileTypeColors: {},"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    loadingOverlayCount: 0,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    loadingOverlayMessage: \u0027\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    isTabActive: true,"},{"lineNumber":12,"author":{"gitId":"0blivious"},"content":"  },"},{"lineNumber":13,"author":{"gitId":"0blivious"},"content":"  mutations: {"},{"lineNumber":14,"author":{"gitId":"0blivious"},"content":"    updateTabZoomInfo(state, info) {"},{"lineNumber":15,"author":{"gitId":"0blivious"},"content":"      state.tabZoomInfo \u003d info;"},{"lineNumber":16,"author":{"gitId":"0blivious"},"content":"    },"},{"lineNumber":17,"author":{"gitId":"0blivious"},"content":"    updateTabAuthorshipInfo(state, info) {"},{"lineNumber":18,"author":{"gitId":"0blivious"},"content":"      state.tabAuthorshipInfo \u003d info;"},{"lineNumber":19,"author":{"gitId":"0blivious"},"content":"    },"},{"lineNumber":20,"author":{"gitId":"0blivious"},"content":"    updateSummaryDates(state, info) {"},{"lineNumber":21,"author":{"gitId":"0blivious"},"content":"      state.summaryDates \u003d info;"},{"lineNumber":22,"author":{"gitId":"0blivious"},"content":"    },"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    updateFileTypeColors(state, info) {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      state.fileTypeColors \u003d info;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":26,"author":{"gitId":"niqiukun"},"content":"    updateMergedGroup(state, info) {"},{"lineNumber":27,"author":{"gitId":"niqiukun"},"content":"      state.mergedGroups \u003d info;"},{"lineNumber":28,"author":{"gitId":"niqiukun"},"content":"    },"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    incrementLoadingOverlayCount(state, increment) {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      state.loadingOverlayCount +\u003d increment;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      if (state.loadingOverlayCount \u003d\u003d\u003d 0) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        state.loadingOverlayMessage \u003d \u0027Loading. Please wait...\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    updateLoadingOverlayMessage(state, message) {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      state.loadingOverlayMessage \u003d message;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    updateTabState(state, isTabOpen) {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      state.isTabActive \u003d isTabOpen;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":41,"author":{"gitId":"0blivious"},"content":"  },"},{"lineNumber":42,"author":{"gitId":"0blivious"},"content":"});"},{"lineNumber":43,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":44,"author":{"gitId":"0blivious"},"content":"export default store;"}],"authorContributionMap":{"niqiukun":4,"0blivious":21,"-":19}},{"path":"frontend/src/static/js/v_authorship.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"// eslint-disable-next-line import/no-unresolved"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import minimatch from \u0027https://cdn.skypack.dev/minimatch@v3.0.4\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"/* global Vuex */"},{"lineNumber":5,"author":{"gitId":"-"},"content":"const filesSortDict \u003d {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  lineOfCode: (file) \u003d\u003e file.lineCount,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  path: (file) \u003d\u003e file.path,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  fileName: (file) \u003d\u003e file.path.split(/[/]+/).pop(),"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  fileType: (file) \u003d\u003e file.fileType,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"};"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"function authorshipInitialState() {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  return {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    isLoaded: false,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    files: [],"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    selectedFiles: [],"},{"lineNumber":17,"author":{"gitId":"0blivious"},"content":"    filterType: \u0027checkboxes\u0027,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    selectedFileTypes: [],"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    fileTypes: [],"},{"lineNumber":20,"author":{"gitId":"jamessspanggg"},"content":"    filesLinesObj: {},"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    fileTypeBlankLinesObj: {},"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    filesSortType: \u0027lineOfCode\u0027,"},{"lineNumber":23,"author":{"gitId":"Tejas2805"},"content":"    toReverseSortFiles: true,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    isBinaryFilesChecked: false,"},{"lineNumber":25,"author":{"gitId":"ang-zeyu"},"content":"    searchBarValue: \u0027\u0027,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    authorDisplayName: \u0027\u0027,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"const repoCache \u003d [];"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"window.vAuthorship \u003d {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  template: window.$(\u0027v_authorship\u0027).innerHTML,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  data() {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    return authorshipInitialState();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  watch: {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    filesSortType() {"},{"lineNumber":40,"author":{"gitId":"ang-zeyu"},"content":"      window.addHash(\u0027authorshipSortBy\u0027, this.filesSortType);"},{"lineNumber":41,"author":{"gitId":"ang-zeyu"},"content":"      window.encodeHash();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      this.updateSelectedFiles();"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    searchBarValue() {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      this.updateSelectedFiles();"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    selectedFileTypes() {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      this.updateSelectedFiles();"},{"lineNumber":51,"author":{"gitId":"ang-zeyu"},"content":"    },"},{"lineNumber":52,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    toReverseSortFiles() {"},{"lineNumber":54,"author":{"gitId":"ang-zeyu"},"content":"      window.addHash(\u0027reverseAuthorshipOrder\u0027, this.toReverseSortFiles);"},{"lineNumber":55,"author":{"gitId":"ang-zeyu"},"content":"      window.encodeHash();"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      this.updateSelectedFiles();"},{"lineNumber":57,"author":{"gitId":"ang-zeyu"},"content":"    },"},{"lineNumber":58,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    info() {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      Object.assign(this.$data, authorshipInitialState());"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      this.initiate();"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"  methods: {"},{"lineNumber":66,"author":{"gitId":"ang-zeyu"},"content":"    retrieveHashes() {"},{"lineNumber":67,"author":{"gitId":"ang-zeyu"},"content":"      const hash \u003d window.hashParams;"},{"lineNumber":68,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":69,"author":{"gitId":"ang-zeyu"},"content":"      switch (hash.authorshipSortBy) {"},{"lineNumber":70,"author":{"gitId":"ang-zeyu"},"content":"      case \u0027path\u0027:"},{"lineNumber":71,"author":{"gitId":"ang-zeyu"},"content":"      case \u0027fileName\u0027:"},{"lineNumber":72,"author":{"gitId":"ang-zeyu"},"content":"      case \u0027fileType\u0027:"},{"lineNumber":73,"author":{"gitId":"ang-zeyu"},"content":"        this.filesSortType \u003d hash.authorshipSortBy;"},{"lineNumber":74,"author":{"gitId":"ang-zeyu"},"content":"        break;"},{"lineNumber":75,"author":{"gitId":"ang-zeyu"},"content":"      default:"},{"lineNumber":76,"author":{"gitId":"ang-zeyu"},"content":"        // Invalid value, use the default value of \u0027lineOfCode\u0027"},{"lineNumber":77,"author":{"gitId":"ang-zeyu"},"content":"      }"},{"lineNumber":78,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":79,"author":{"gitId":"ang-zeyu"},"content":"      this.toReverseSortFiles \u003d hash.reverseAuthorshipOrder !\u003d\u003d \u0027false\u0027;"},{"lineNumber":80,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":81,"author":{"gitId":"0blivious"},"content":"      if (hash.authorshipFileTypes) {"},{"lineNumber":82,"author":{"gitId":"0blivious"},"content":"        this.selectedFileTypes \u003d hash.authorshipFileTypes"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            .split(window.HASH_DELIMITER)"},{"lineNumber":84,"author":{"gitId":"0blivious"},"content":"            .filter((fileType) \u003d\u003e this.fileTypes.includes(fileType));"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.resetSelectedFileTypes();"},{"lineNumber":87,"author":{"gitId":"0blivious"},"content":"      }"},{"lineNumber":88,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"      if (hash.authorshipIsBinaryFileTypeChecked) {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.isBinaryFilesChecked \u003d hash.authorshipIsBinaryFileTypeChecked \u003d\u003d\u003d \u0027true\u0027;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"ang-zeyu"},"content":"      if (\u0027authorshipFilesGlob\u0027 in hash) {"},{"lineNumber":94,"author":{"gitId":"ang-zeyu"},"content":"        this.indicateSearchBar();"},{"lineNumber":95,"author":{"gitId":"ang-zeyu"},"content":"        this.searchBarValue \u003d hash.authorshipFilesGlob;"},{"lineNumber":96,"author":{"gitId":"ang-zeyu"},"content":"      }"},{"lineNumber":97,"author":{"gitId":"ang-zeyu"},"content":"    },"},{"lineNumber":98,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"    resetSelectedFileTypes() {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      this.selectedFileTypes \u003d this.info.checkedFileTypes"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ? this.info.checkedFileTypes.filter((fileType) \u003d\u003e this.fileTypes.includes(fileType))"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        : [];"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"ang-zeyu"},"content":"    setInfoHash() {"},{"lineNumber":106,"author":{"gitId":"0blivious"},"content":"      const { addHash } \u003d window;"},{"lineNumber":107,"author":{"gitId":"ang-zeyu"},"content":"      // We only set these hashes as they are propagated from summary_charts"},{"lineNumber":108,"author":{"gitId":"ang-zeyu"},"content":"      addHash(\u0027tabAuthor\u0027, this.info.author);"},{"lineNumber":109,"author":{"gitId":"ang-zeyu"},"content":"      addHash(\u0027tabRepo\u0027, this.info.repo);"},{"lineNumber":110,"author":{"gitId":"ang-zeyu"},"content":"      addHash(\u0027authorshipIsMergeGroup\u0027, this.info.isMergeGroup);"},{"lineNumber":111,"author":{"gitId":"0blivious"},"content":"      this.updateFileTypeHash();"},{"lineNumber":112,"author":{"gitId":"ang-zeyu"},"content":"    },"},{"lineNumber":113,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":114,"author":{"gitId":"ang-zeyu"},"content":"    removeAuthorshipHashes() {"},{"lineNumber":115,"author":{"gitId":"ang-zeyu"},"content":"      window.removeHash(\u0027authorshipFileTypes\u0027);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027authorshipIsBinaryFileTypeChecked\u0027);"},{"lineNumber":117,"author":{"gitId":"ang-zeyu"},"content":"      window.removeHash(\u0027authorshipFilesGlob\u0027);"},{"lineNumber":118,"author":{"gitId":"ang-zeyu"},"content":"      window.removeHash(\u0027authorshipSortBy\u0027);"},{"lineNumber":119,"author":{"gitId":"ang-zeyu"},"content":"      window.removeHash(\u0027reverseAuthorshipOrder\u0027);"},{"lineNumber":120,"author":{"gitId":"ang-zeyu"},"content":"      window.removeHash(\u0027tabAuthor\u0027);"},{"lineNumber":121,"author":{"gitId":"ang-zeyu"},"content":"      window.removeHash(\u0027tabRepo\u0027);"},{"lineNumber":122,"author":{"gitId":"ang-zeyu"},"content":"      window.removeHash(\u0027authorshipIsMergeGroup\u0027);"},{"lineNumber":123,"author":{"gitId":"ang-zeyu"},"content":"      window.encodeHash();"},{"lineNumber":124,"author":{"gitId":"ang-zeyu"},"content":"    },"},{"lineNumber":125,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"    async initiate() {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      const repo \u003d window.REPOS[this.info.repo];"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"      this.getRepoProps(repo);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      if (!repo || !this.info.author) {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        window.app.isTabActive \u003d false;"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      if (repoCache.length \u003d\u003d\u003d 2) {"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        const toRemove \u003d repoCache.shift();"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (toRemove !\u003d\u003d this.info.repo) {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"          delete window.REPOS[toRemove].files;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      repoCache.push(this.info.repo);"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"      let { files } \u003d repo;"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      if (!files) {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        files \u003d await window.api.loadAuthorship(this.info.repo);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      this.processFiles(files);"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"      if (this.info.isRefresh) {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        this.retrieveHashes();"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        this.resetSelectedFileTypes();"},{"lineNumber":152,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"      this.setInfoHash();"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"    getRepoProps(repo) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"      if (repo) {"},{"lineNumber":159,"author":{"gitId":"jamessspanggg"},"content":"        if (this.info.isMergeGroup) {"},{"lineNumber":160,"author":{"gitId":"jamessspanggg"},"content":"          // sum of all users\u0027 file type contribution"},{"lineNumber":161,"author":{"gitId":"jamessspanggg"},"content":"          repo.users.forEach((author) \u003d\u003e {"},{"lineNumber":162,"author":{"gitId":"jamessspanggg"},"content":"            this.updateTotalFileTypeContribution(author.fileTypeContribution);"},{"lineNumber":163,"author":{"gitId":"jamessspanggg"},"content":"          });"},{"lineNumber":164,"author":{"gitId":"jamessspanggg"},"content":"        } else {"},{"lineNumber":165,"author":{"gitId":"jamessspanggg"},"content":"          const author \u003d repo.users.find((user) \u003d\u003e user.name \u003d\u003d\u003d this.info.author);"},{"lineNumber":166,"author":{"gitId":"jamessspanggg"},"content":"          if (author) {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            this.authorDisplayName \u003d author.displayName;"},{"lineNumber":168,"author":{"gitId":"jamessspanggg"},"content":"            this.filesLinesObj \u003d author.fileTypeContribution;"},{"lineNumber":169,"author":{"gitId":"jamessspanggg"},"content":"          }"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"jamessspanggg"},"content":"    updateTotalFileTypeContribution(fileTypeContribution) {"},{"lineNumber":175,"author":{"gitId":"jamessspanggg"},"content":"      Object.entries(fileTypeContribution).forEach(([type, cnt]) \u003d\u003e {"},{"lineNumber":176,"author":{"gitId":"jamessspanggg"},"content":"        if (this.filesLinesObj[type]) {"},{"lineNumber":177,"author":{"gitId":"jamessspanggg"},"content":"          this.filesLinesObj[type] +\u003d cnt;"},{"lineNumber":178,"author":{"gitId":"jamessspanggg"},"content":"        } else {"},{"lineNumber":179,"author":{"gitId":"jamessspanggg"},"content":"          this.filesLinesObj[type] \u003d cnt;"},{"lineNumber":180,"author":{"gitId":"jamessspanggg"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"jamessspanggg"},"content":"      });"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"ang-zeyu"},"content":"    expandAll() {"},{"lineNumber":185,"author":{"gitId":"ang-zeyu"},"content":"      this.selectedFiles.forEach((file) \u003d\u003e {"},{"lineNumber":186,"author":{"gitId":"ang-zeyu"},"content":"        file.active \u003d true;"},{"lineNumber":187,"author":{"gitId":"ang-zeyu"},"content":"        file.wasCodeLoaded \u003d true;"},{"lineNumber":188,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":189,"author":{"gitId":"ang-zeyu"},"content":"    },"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"ang-zeyu"},"content":"    collapseAll() {"},{"lineNumber":192,"author":{"gitId":"ang-zeyu"},"content":"      this.selectedFiles.forEach((file) \u003d\u003e {"},{"lineNumber":193,"author":{"gitId":"ang-zeyu"},"content":"        file.active \u003d false;"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"ang-zeyu"},"content":"    toggleFileActiveProperty(file) {"},{"lineNumber":198,"author":{"gitId":"ang-zeyu"},"content":"      file.active \u003d !file.active;"},{"lineNumber":199,"author":{"gitId":"ang-zeyu"},"content":"      file.wasCodeLoaded \u003d file.wasCodeLoaded || file.active;"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"    isUnknownAuthor(name) {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"      return name \u003d\u003d\u003d \u0027-\u0027;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"    hasCommits(info) {"},{"lineNumber":207,"author":{"gitId":"jamessspanggg"},"content":"      const { isMergeGroup, author } \u003d info;"},{"lineNumber":208,"author":{"gitId":"jamessspanggg"},"content":"      const repo \u003d window.REPOS[info.repo];"},{"lineNumber":209,"author":{"gitId":"jamessspanggg"},"content":"      if (repo) {"},{"lineNumber":210,"author":{"gitId":"jamessspanggg"},"content":"        return isMergeGroup"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            ? Object.entries(repo.commits.authorFinalContributionMap).some(([name, cnt]) \u003d\u003e ("},{"lineNumber":212,"author":{"gitId":"-"},"content":"              !this.isUnknownAuthor(name) \u0026\u0026 cnt \u003e 0"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            ))"},{"lineNumber":214,"author":{"gitId":"jamessspanggg"},"content":"            : repo.commits.authorFinalContributionMap[author] \u003e 0;"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      return false;"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"    splitSegments(lines) {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"      // split into segments separated by authored"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      let lastState;"},{"lineNumber":222,"author":{"gitId":"-"},"content":"      let lastId \u003d -1;"},{"lineNumber":223,"author":{"gitId":"-"},"content":"      const segments \u003d [];"},{"lineNumber":224,"author":{"gitId":"-"},"content":"      let blankLineCount \u003d 0;"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"      lines.forEach((line, lineCount) \u003d\u003e {"},{"lineNumber":227,"author":{"gitId":"jamessspanggg"},"content":"        const isAuthorMatched \u003d this.info.isMergeGroup"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            ? !this.isUnknownAuthor(line.author.gitId)"},{"lineNumber":229,"author":{"gitId":"jamessspanggg"},"content":"            : line.author.gitId \u003d\u003d\u003d this.info.author;"},{"lineNumber":230,"author":{"gitId":"jamessspanggg"},"content":"        const authored \u003d (line.author \u0026\u0026 isAuthorMatched);"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"        if (authored !\u003d\u003d lastState || lastId \u003d\u003d\u003d -1) {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"          segments.push({"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            authored,"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            lines: [],"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            lineNumbers: [],"},{"lineNumber":237,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"          lastId +\u003d 1;"},{"lineNumber":240,"author":{"gitId":"-"},"content":"          lastState \u003d authored;"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"-"},"content":"        const content \u003d line.content || \u0027 \u0027;"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        segments[lastId].lines.push(content);"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"        segments[lastId].lineNumbers.push(lineCount + 1);"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"        if (line.content \u003d\u003d\u003d \u0027\u0027 \u0026\u0026 authored) {"},{"lineNumber":249,"author":{"gitId":"-"},"content":"          blankLineCount +\u003d 1;"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":251,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":"      return {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        segments,"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        blankLineCount,"},{"lineNumber":256,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"    processFiles(files) {"},{"lineNumber":260,"author":{"gitId":"ang-zeyu"},"content":"      const COLLAPSED_VIEW_LINE_COUNT_THRESHOLD \u003d 2000;"},{"lineNumber":261,"author":{"gitId":"-"},"content":"      const res \u003d [];"},{"lineNumber":262,"author":{"gitId":"-"},"content":"      const fileTypeBlanksInfoObj \u003d {};"},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"      files.filter((file) \u003d\u003e this.isValidFile(file)).forEach((file) \u003d\u003e {"},{"lineNumber":265,"author":{"gitId":"jamessspanggg"},"content":"        const contributionMap \u003d file.authorContributionMap;"},{"lineNumber":266,"author":{"gitId":"-"},"content":""},{"lineNumber":267,"author":{"gitId":"jamessspanggg"},"content":"        const lineCnt \u003d this.info.isMergeGroup"},{"lineNumber":268,"author":{"gitId":"jamessspanggg"},"content":"            ? this.getContributionFromAllAuthors(contributionMap)"},{"lineNumber":269,"author":{"gitId":"jamessspanggg"},"content":"            : contributionMap[this.info.author];"},{"lineNumber":270,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"        const out \u003d {};"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        out.path \u003d file.path;"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        out.lineCount \u003d lineCnt;"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        out.active \u003d lineCnt \u003c\u003d COLLAPSED_VIEW_LINE_COUNT_THRESHOLD \u0026\u0026 !file.isBinary;"},{"lineNumber":275,"author":{"gitId":"ang-zeyu"},"content":"        out.wasCodeLoaded \u003d lineCnt \u003c\u003d COLLAPSED_VIEW_LINE_COUNT_THRESHOLD;"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        out.fileType \u003d file.fileType;"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"        if (file.isBinary) {"},{"lineNumber":279,"author":{"gitId":"-"},"content":"          out.isBinary \u003d true;"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":281,"author":{"gitId":"-"},"content":"          out.isBinary \u003d false;"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"        if (!file.isBinary) {"},{"lineNumber":285,"author":{"gitId":"-"},"content":"          const segmentInfo \u003d this.splitSegments(file.lines);"},{"lineNumber":286,"author":{"gitId":"-"},"content":"          out.segments \u003d segmentInfo.segments;"},{"lineNumber":287,"author":{"gitId":"0blivious"},"content":"          out.blankLineCount \u003d segmentInfo.blankLineCount;"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"          this.addBlankLineCount(file.fileType, segmentInfo.blankLineCount,"},{"lineNumber":290,"author":{"gitId":"-"},"content":"              fileTypeBlanksInfoObj);"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"-"},"content":"        res.push(out);"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"-"},"content":"      res.sort((a, b) \u003d\u003e b.lineCount - a.lineCount);"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"      Object.keys(this.filesLinesObj).forEach((file) \u003d\u003e {"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        if (this.filesLinesObj[file] !\u003d\u003d 0) {"},{"lineNumber":300,"author":{"gitId":"-"},"content":"          this.fileTypes.push(file);"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":302,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"      this.fileTypeBlankLinesObj \u003d fileTypeBlanksInfoObj;"},{"lineNumber":305,"author":{"gitId":"-"},"content":"      this.files \u003d res;"},{"lineNumber":306,"author":{"gitId":"-"},"content":"      this.updateSelectedFiles(true);"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"-"},"content":"    isValidFile(file) {"},{"lineNumber":310,"author":{"gitId":"-"},"content":"      return this.info.isMergeGroup"},{"lineNumber":311,"author":{"gitId":"-"},"content":"          ? Object.entries(file.authorContributionMap)"},{"lineNumber":312,"author":{"gitId":"-"},"content":"              .some((authorCount) \u003d\u003e !this.isUnknownAuthor(authorCount[0]))"},{"lineNumber":313,"author":{"gitId":"-"},"content":"          : this.info.author in file.authorContributionMap;"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"jamessspanggg"},"content":"    getContributionFromAllAuthors(contributionMap) {"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      return Object.entries(contributionMap).reduce((acc, [author, cnt]) \u003d\u003e ("},{"lineNumber":318,"author":{"gitId":"-"},"content":"        (!this.isUnknownAuthor(author) ? acc + cnt : acc)"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      ), 0);"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":321,"author":{"gitId":"-"},"content":""},{"lineNumber":322,"author":{"gitId":"-"},"content":"    addBlankLineCount(fileType, lineCount, filesInfoObj) {"},{"lineNumber":323,"author":{"gitId":"-"},"content":"      if (!filesInfoObj[fileType]) {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        filesInfoObj[fileType] \u003d 0;"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"      filesInfoObj[fileType] +\u003d lineCount;"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"ang-zeyu"},"content":"    updateSearchBarValue() {"},{"lineNumber":331,"author":{"gitId":"ang-zeyu"},"content":"      this.searchBarValue \u003d this.$refs.searchBar.value;"},{"lineNumber":332,"author":{"gitId":"-"},"content":""},{"lineNumber":333,"author":{"gitId":"ang-zeyu"},"content":"      window.addHash(\u0027authorshipFilesGlob\u0027, this.searchBarValue);"},{"lineNumber":334,"author":{"gitId":"ang-zeyu"},"content":"      window.removeHash(\u0027authorshipFileTypes\u0027);"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027authorshipIsBinaryFileTypeChecked\u0027);"},{"lineNumber":336,"author":{"gitId":"ang-zeyu"},"content":"      window.encodeHash();"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":338,"author":{"gitId":"-"},"content":""},{"lineNumber":339,"author":{"gitId":"ang-zeyu"},"content":"    updateFileTypeHash() {"},{"lineNumber":340,"author":{"gitId":"ang-zeyu"},"content":"      const fileTypeHash \u003d this.selectedFileTypes.length \u003e 0"},{"lineNumber":341,"author":{"gitId":"ang-zeyu"},"content":"          ? this.selectedFileTypes.reduce((a, b) \u003d\u003e `${a}~${b}`)"},{"lineNumber":342,"author":{"gitId":"ang-zeyu"},"content":"          : \u0027\u0027;"},{"lineNumber":343,"author":{"gitId":"-"},"content":""},{"lineNumber":344,"author":{"gitId":"ang-zeyu"},"content":"      window.addHash(\u0027authorshipFileTypes\u0027, fileTypeHash);"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      window.addHash(\u0027authorshipIsBinaryFileTypeChecked\u0027, this.isBinaryFilesChecked);"},{"lineNumber":346,"author":{"gitId":"ang-zeyu"},"content":"      window.removeHash(\u0027authorshipFilesGlob\u0027);"},{"lineNumber":347,"author":{"gitId":"ang-zeyu"},"content":"      window.encodeHash();"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"    updateSelectedFiles(setIsLoaded \u003d false) {"},{"lineNumber":351,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027incrementLoadingOverlayCount\u0027, 1);"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      setTimeout(() \u003d\u003e {"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        this.selectedFiles \u003d this.files.filter("},{"lineNumber":354,"author":{"gitId":"-"},"content":"            (file) \u003d\u003e ((this.selectedFileTypes.includes(file.fileType) \u0026\u0026 !file.isBinary)"},{"lineNumber":355,"author":{"gitId":"-"},"content":"            || (file.isBinary \u0026\u0026 this.isBinaryFilesChecked))"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            \u0026\u0026 minimatch(file.path, this.searchBarValue || \u0027*\u0027, { matchBase: true, dot: true }),"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":358,"author":{"gitId":"-"},"content":"            .sort(this.sortingFunction);"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        if (setIsLoaded) {"},{"lineNumber":360,"author":{"gitId":"-"},"content":"          this.isLoaded \u003d true;"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        this.$store.commit(\u0027incrementLoadingOverlayCount\u0027, -1);"},{"lineNumber":363,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"    indicateSearchBar() {"},{"lineNumber":367,"author":{"gitId":"0blivious"},"content":"      this.selectedFileTypes \u003d this.fileTypes.slice();"},{"lineNumber":368,"author":{"gitId":"-"},"content":"      this.isBinaryFilesChecked \u003d true;"},{"lineNumber":369,"author":{"gitId":"0blivious"},"content":"      this.filterType \u003d \u0027search\u0027;"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":371,"author":{"gitId":"-"},"content":""},{"lineNumber":372,"author":{"gitId":"-"},"content":"    indicateCheckBoxes() {"},{"lineNumber":373,"author":{"gitId":"ang-zeyu"},"content":"      this.searchBarValue \u003d \u0027\u0027;"},{"lineNumber":374,"author":{"gitId":"0blivious"},"content":"      this.filterType \u003d \u0027checkboxes\u0027;"},{"lineNumber":375,"author":{"gitId":"ang-zeyu"},"content":"      this.updateFileTypeHash();"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":377,"author":{"gitId":"-"},"content":""},{"lineNumber":378,"author":{"gitId":"-"},"content":"    getFileLink(file, path) {"},{"lineNumber":379,"author":{"gitId":"-"},"content":"      const repo \u003d window.REPOS[this.info.repo];"},{"lineNumber":380,"author":{"gitId":"-"},"content":""},{"lineNumber":381,"author":{"gitId":"yash-chowdhary"},"content":"      return `${window.BASE_URL}/${"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        repo.location.organization}/${repo.location.repoName}/${path}/${repo.branch}/${file.path}`;"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":384,"author":{"gitId":"-"},"content":""},{"lineNumber":385,"author":{"gitId":"-"},"content":"    getFileTypeBlankLineInfo(fileType) {"},{"lineNumber":386,"author":{"gitId":"-"},"content":"      return `${fileType}: Blank: ${"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        this.fileTypeBlankLinesObj[fileType]}, Non-Blank: ${"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        this.filesLinesObj[fileType] - this.fileTypeBlankLinesObj[fileType]}`;"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":390,"author":{"gitId":"-"},"content":""},{"lineNumber":391,"author":{"gitId":"-"},"content":"    getTotalFileBlankLineInfo() {"},{"lineNumber":392,"author":{"gitId":"-"},"content":"      return `Total: Blank: ${this.totalBlankLineCount}, Non-Blank: ${"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        this.totalLineCount - this.totalBlankLineCount}`;"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":395,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":396,"author":{"gitId":"-"},"content":""},{"lineNumber":397,"author":{"gitId":"-"},"content":"  computed: {"},{"lineNumber":398,"author":{"gitId":"Tejas2805"},"content":"    sortingFunction() {"},{"lineNumber":399,"author":{"gitId":"Tejas2805"},"content":"      return (a, b) \u003d\u003e (this.toReverseSortFiles ? -1 : 1)"},{"lineNumber":400,"author":{"gitId":"Tejas2805"},"content":"        * window.comparator(filesSortDict[this.filesSortType])(a, b);"},{"lineNumber":401,"author":{"gitId":"Tejas2805"},"content":"    },"},{"lineNumber":402,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":403,"author":{"gitId":"0blivious"},"content":"    isSelectAllChecked: {"},{"lineNumber":404,"author":{"gitId":"0blivious"},"content":"      get() {"},{"lineNumber":405,"author":{"gitId":"0blivious"},"content":"        return this.selectedFileTypes.length \u003d\u003d\u003d this.fileTypes.length;"},{"lineNumber":406,"author":{"gitId":"0blivious"},"content":"      },"},{"lineNumber":407,"author":{"gitId":"0blivious"},"content":"      set(value) {"},{"lineNumber":408,"author":{"gitId":"0blivious"},"content":"        if (value) {"},{"lineNumber":409,"author":{"gitId":"0blivious"},"content":"          this.selectedFileTypes \u003d this.fileTypes.slice();"},{"lineNumber":410,"author":{"gitId":"0blivious"},"content":"        } else {"},{"lineNumber":411,"author":{"gitId":"0blivious"},"content":"          this.selectedFileTypes \u003d [];"},{"lineNumber":412,"author":{"gitId":"0blivious"},"content":"        }"},{"lineNumber":413,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":414,"author":{"gitId":"ang-zeyu"},"content":"        this.indicateCheckBoxes();"},{"lineNumber":415,"author":{"gitId":"0blivious"},"content":"      },"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":417,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":418,"author":{"gitId":"-"},"content":"    isBinaryChecked: {"},{"lineNumber":419,"author":{"gitId":"-"},"content":"      get() {"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        return this.isBinaryFilesChecked;"},{"lineNumber":421,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":422,"author":{"gitId":"-"},"content":"      set(value) {"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        if (value) {"},{"lineNumber":424,"author":{"gitId":"-"},"content":"          this.isBinaryFilesChecked \u003d true;"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":426,"author":{"gitId":"-"},"content":"          this.isBinaryFilesChecked \u003d false;"},{"lineNumber":427,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"        this.updateSelectedFiles();"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        this.indicateCheckBoxes();"},{"lineNumber":431,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":433,"author":{"gitId":"-"},"content":""},{"lineNumber":434,"author":{"gitId":"ang-zeyu"},"content":"    activeFilesCount() {"},{"lineNumber":435,"author":{"gitId":"ang-zeyu"},"content":"      return this.selectedFiles.filter((file) \u003d\u003e file.active).length;"},{"lineNumber":436,"author":{"gitId":"ang-zeyu"},"content":"    },"},{"lineNumber":437,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":438,"author":{"gitId":"ccyccyccy"},"content":"    totalLineCount() {"},{"lineNumber":439,"author":{"gitId":"ccyccyccy"},"content":"      return Object.values(this.fileTypeLinesObj).reduce((acc, val) \u003d\u003e acc + val, 0);"},{"lineNumber":440,"author":{"gitId":"ccyccyccy"},"content":"    },"},{"lineNumber":441,"author":{"gitId":"ccyccyccy"},"content":""},{"lineNumber":442,"author":{"gitId":"ccyccyccy"},"content":"    totalBlankLineCount() {"},{"lineNumber":443,"author":{"gitId":"ccyccyccy"},"content":"      return Object.values(this.fileTypeBlankLinesObj).reduce((acc, val) \u003d\u003e acc + val, 0);"},{"lineNumber":444,"author":{"gitId":"ccyccyccy"},"content":"    },"},{"lineNumber":445,"author":{"gitId":"ccyccyccy"},"content":""},{"lineNumber":446,"author":{"gitId":"ccyccyccy"},"content":"    fileTypeLinesObj() {"},{"lineNumber":447,"author":{"gitId":"-"},"content":"      const numLinesModified \u003d {};"},{"lineNumber":448,"author":{"gitId":"-"},"content":"      Object.entries(this.filesLinesObj)"},{"lineNumber":449,"author":{"gitId":"-"},"content":"          .filter(([, value]) \u003d\u003e value \u003e 0)"},{"lineNumber":450,"author":{"gitId":"-"},"content":"          .forEach(([langType, value]) \u003d\u003e {"},{"lineNumber":451,"author":{"gitId":"-"},"content":"            numLinesModified[langType] \u003d value;"},{"lineNumber":452,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":453,"author":{"gitId":"-"},"content":"      return numLinesModified;"},{"lineNumber":454,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":455,"author":{"gitId":"-"},"content":""},{"lineNumber":456,"author":{"gitId":"-"},"content":"    binaryFilesCount() {"},{"lineNumber":457,"author":{"gitId":"-"},"content":"      return this.files.filter((file) \u003d\u003e file.isBinary).length;"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":459,"author":{"gitId":"-"},"content":""},{"lineNumber":460,"author":{"gitId":"-"},"content":"    ...Vuex.mapState({"},{"lineNumber":461,"author":{"gitId":"-"},"content":"      fileTypeColors: \u0027fileTypeColors\u0027,"},{"lineNumber":462,"author":{"gitId":"-"},"content":"      info: \u0027tabAuthorshipInfo\u0027,"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    }),"},{"lineNumber":464,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":465,"author":{"gitId":"-"},"content":""},{"lineNumber":466,"author":{"gitId":"-"},"content":"  created() {"},{"lineNumber":467,"author":{"gitId":"-"},"content":"    this.initiate();"},{"lineNumber":468,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":469,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":470,"author":{"gitId":"ang-zeyu"},"content":"  beforeDestroy() {"},{"lineNumber":471,"author":{"gitId":"ang-zeyu"},"content":"    this.removeAuthorshipHashes();"},{"lineNumber":472,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":473,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":474,"author":{"gitId":"-"},"content":"  components: {"},{"lineNumber":475,"author":{"gitId":"0blivious"},"content":"    vSegment: window.vSegment,"},{"lineNumber":476,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":477,"author":{"gitId":"-"},"content":"};"}],"authorContributionMap":{"ccyccyccy":9,"yash-chowdhary":1,"Tejas2805":7,"jamessspanggg":33,"-":318,"0blivious":24,"ang-zeyu":85}},{"path":"frontend/src/static/js/v_ramp.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"window.vRamp \u003d {"},{"lineNumber":2,"author":{"gitId":"0blivious"},"content":"  props: [\u0027groupby\u0027, \u0027user\u0027, \u0027tframe\u0027, \u0027avgsize\u0027, \u0027sdate\u0027, \u0027udate\u0027, \u0027mergegroup\u0027, \u0027fromramp\u0027, \u0027filtersearch\u0027],"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  template: window.$(\u0027v_ramp\u0027).innerHTML,"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  data() {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      rampSize: 0.01,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"  methods: {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    getLink(user, slice) {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      if (this.mergegroup) {"},{"lineNumber":13,"author":{"gitId":"0blivious"},"content":"        return `${window.getBaseLink(slice.repoId)}/commit/${slice.hash}`;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"0blivious"},"content":"      return `${window.getBaseLink(user.repoId)}/commit/${slice.hash}`;"},{"lineNumber":17,"author":{"gitId":"0blivious"},"content":"    },"},{"lineNumber":18,"author":{"gitId":"0blivious"},"content":"    getWidth(slice) {"},{"lineNumber":19,"author":{"gitId":"0blivious"},"content":"      if (slice.insertions \u003d\u003d\u003d 0) {"},{"lineNumber":20,"author":{"gitId":"0blivious"},"content":"        return 0;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"0blivious"},"content":"      const newSize \u003d 100 * (slice.insertions / this.avgsize);"},{"lineNumber":24,"author":{"gitId":"0blivious"},"content":"      return Math.max(newSize * this.rampSize, 0.5);"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":26,"author":{"gitId":"0blivious"},"content":"    getContributionMessage(slice, commit) {"},{"lineNumber":27,"author":{"gitId":"0blivious"},"content":"      let title \u003d \u0027\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      if (this.tframe \u003d\u003d\u003d \u0027commit\u0027) {"},{"lineNumber":29,"author":{"gitId":"0blivious"},"content":"        return `[${slice.date}] ${commit.messageTitle}: ${commit.insertions} lines`;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"0blivious"},"content":"      title \u003d this.tframe \u003d\u003d\u003d \u0027day\u0027"},{"lineNumber":33,"author":{"gitId":"0blivious"},"content":"            ? `[${slice.date}] Daily `"},{"lineNumber":34,"author":{"gitId":"0blivious"},"content":"            : `[${slice.date} till ${slice.endDate}] Weekly `;"},{"lineNumber":35,"author":{"gitId":"0blivious"},"content":"      title +\u003d `contribution: ${slice.insertions} lines`;"},{"lineNumber":36,"author":{"gitId":"0blivious"},"content":"      return title;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":38,"author":{"gitId":"0blivious"},"content":"    openTabZoom(user, slice, evt) {"},{"lineNumber":39,"author":{"gitId":"0blivious"},"content":"      // prevent opening of zoom tab when cmd/ctrl click"},{"lineNumber":40,"author":{"gitId":"0blivious"},"content":"      if (window.isMacintosh ? evt.metaKey : evt.ctrlKey) {"},{"lineNumber":41,"author":{"gitId":"0blivious"},"content":"        return;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"0blivious"},"content":"      const zoomUser \u003d { ...user };"},{"lineNumber":45,"author":{"gitId":"0blivious"},"content":"      zoomUser.commits \u003d user.dailyCommits;"},{"lineNumber":46,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":47,"author":{"gitId":"0blivious"},"content":"      const info \u003d {"},{"lineNumber":48,"author":{"gitId":"0blivious"},"content":"        zRepo: user.repoName,"},{"lineNumber":49,"author":{"gitId":"0blivious"},"content":"        zAuthor: user.name,"},{"lineNumber":50,"author":{"gitId":"0blivious"},"content":"        zFilterGroup: this.groupby,"},{"lineNumber":51,"author":{"gitId":"0blivious"},"content":"        zTimeFrame: \u0027commit\u0027,"},{"lineNumber":52,"author":{"gitId":"0blivious"},"content":"        zAvgCommitSize: slice.insertions,"},{"lineNumber":53,"author":{"gitId":"0blivious"},"content":"        zUser: zoomUser,"},{"lineNumber":54,"author":{"gitId":"0blivious"},"content":"        zLocation: window.getBaseLink(user.repoId),"},{"lineNumber":55,"author":{"gitId":"0blivious"},"content":"        zSince: slice.date,"},{"lineNumber":56,"author":{"gitId":"0blivious"},"content":"        zUntil: this.tframe \u003d\u003d\u003d \u0027day\u0027 ? slice.date : slice.endDate,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        zIsMerged: this.mergegroup,"},{"lineNumber":58,"author":{"gitId":"0blivious"},"content":"        zFromRamp: true,"},{"lineNumber":59,"author":{"gitId":"0blivious"},"content":"        zFilterSearch: this.filtersearch,"},{"lineNumber":60,"author":{"gitId":"0blivious"},"content":"      };"},{"lineNumber":61,"author":{"gitId":"0blivious"},"content":"      window.deactivateAllOverlays();"},{"lineNumber":62,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":63,"author":{"gitId":"0blivious"},"content":"      this.$store.commit(\u0027updateTabZoomInfo\u0027, info);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    // position for commit granularity"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    getCommitPos(i, total) {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      return (total - i - 1) * window.DAY_IN_MS / total"},{"lineNumber":69,"author":{"gitId":"-"},"content":"          / (this.getTotalForPos(this.sdate, this.udate) + window.DAY_IN_MS);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    // position for day granularity"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    getSlicePos(date) {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      const total \u003d this.getTotalForPos(this.sdate, this.udate);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      return (new Date(this.udate) - new Date(date)) / (total + window.DAY_IN_MS);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"    // get duration in miliseconds between 2 date"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    getTotalForPos(sinceDate, untilDate) {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      return new Date(untilDate) - new Date(sinceDate);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    getSliceColor(date) {"},{"lineNumber":82,"author":{"gitId":"0blivious"},"content":"      const timeMs \u003d this.fromramp"},{"lineNumber":83,"author":{"gitId":"0blivious"},"content":"          ? (new Date(this.sdate)).getTime()"},{"lineNumber":84,"author":{"gitId":"0blivious"},"content":"          : (new Date(date)).getTime();"},{"lineNumber":85,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"      return (timeMs / window.DAY_IN_MS) % 5;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":88,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":89,"author":{"gitId":"ang-zeyu"},"content":"    // Prevent browser from switching to new tab when clicking ramp"},{"lineNumber":90,"author":{"gitId":"ang-zeyu"},"content":"    rampClick(evt) {"},{"lineNumber":91,"author":{"gitId":"ang-zeyu"},"content":"      const isKeyPressed \u003d window.isMacintosh ? evt.metaKey : evt.ctrlKey;"},{"lineNumber":92,"author":{"gitId":"ang-zeyu"},"content":"      if (isKeyPressed) {"},{"lineNumber":93,"author":{"gitId":"ang-zeyu"},"content":"        evt.preventDefault();"},{"lineNumber":94,"author":{"gitId":"ang-zeyu"},"content":"      }"},{"lineNumber":95,"author":{"gitId":"ang-zeyu"},"content":"    },"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":97,"author":{"gitId":"-"},"content":"};"}],"authorContributionMap":{"-":45,"0blivious":44,"ang-zeyu":8}},{"path":"frontend/src/static/js/v_resizer.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"ang-zeyu"},"content":"const DRAG_BAR_WIDTH \u003d 13.25;"},{"lineNumber":2,"author":{"gitId":"ang-zeyu"},"content":"const SCROLL_BAR_WIDTH \u003d 17;"},{"lineNumber":3,"author":{"gitId":"ang-zeyu"},"content":"const GUIDE_BAR_WIDTH \u003d 2;"},{"lineNumber":4,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":5,"author":{"gitId":"ang-zeyu"},"content":"const throttledEvent \u003d (delay, handler) \u003d\u003e {"},{"lineNumber":6,"author":{"gitId":"ang-zeyu"},"content":"  let lastCalled \u003d 0;"},{"lineNumber":7,"author":{"gitId":"ang-zeyu"},"content":"  return (...args) \u003d\u003e {"},{"lineNumber":8,"author":{"gitId":"ang-zeyu"},"content":"    if (Date.now() - lastCalled \u003e delay) {"},{"lineNumber":9,"author":{"gitId":"ang-zeyu"},"content":"      lastCalled \u003d Date.now();"},{"lineNumber":10,"author":{"gitId":"ang-zeyu"},"content":"      handler(...args);"},{"lineNumber":11,"author":{"gitId":"ang-zeyu"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ang-zeyu"},"content":"  };"},{"lineNumber":13,"author":{"gitId":"ang-zeyu"},"content":"};"},{"lineNumber":14,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":15,"author":{"gitId":"ang-zeyu"},"content":"window.vResizer \u003d {"},{"lineNumber":16,"author":{"gitId":"ang-zeyu"},"content":"  template: window.$(\u0027v_resizer\u0027).innerHTML,"},{"lineNumber":17,"author":{"gitId":"ang-zeyu"},"content":"  props: {"},{"lineNumber":18,"author":{"gitId":"ang-zeyu"},"content":"    isTabActive: true,"},{"lineNumber":19,"author":{"gitId":"ang-zeyu"},"content":"  },"},{"lineNumber":20,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":21,"author":{"gitId":"ang-zeyu"},"content":"  data() {"},{"lineNumber":22,"author":{"gitId":"ang-zeyu"},"content":"    return {"},{"lineNumber":23,"author":{"gitId":"ang-zeyu"},"content":"      guideWidth: (0.5 * window.innerWidth - (GUIDE_BAR_WIDTH / 2)) / window.innerWidth,"},{"lineNumber":24,"author":{"gitId":"ang-zeyu"},"content":"      flexWidth: 0.5,"},{"lineNumber":25,"author":{"gitId":"ang-zeyu"},"content":"      isResizing: false,"},{"lineNumber":26,"author":{"gitId":"ang-zeyu"},"content":"    };"},{"lineNumber":27,"author":{"gitId":"ang-zeyu"},"content":"  },"},{"lineNumber":28,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":29,"author":{"gitId":"ang-zeyu"},"content":"  methods: {"},{"lineNumber":30,"author":{"gitId":"ang-zeyu"},"content":"    registerMouseMove() {"},{"lineNumber":31,"author":{"gitId":"ang-zeyu"},"content":"      this.isResizing \u003d true;"},{"lineNumber":32,"author":{"gitId":"ang-zeyu"},"content":"    },"},{"lineNumber":33,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":34,"author":{"gitId":"ang-zeyu"},"content":"    deregisterMouseMove() {"},{"lineNumber":35,"author":{"gitId":"ang-zeyu"},"content":"      this.isResizing \u003d false;"},{"lineNumber":36,"author":{"gitId":"ang-zeyu"},"content":"      this.flexWidth \u003d (this.guideWidth * window.innerWidth + (GUIDE_BAR_WIDTH / 2))"},{"lineNumber":37,"author":{"gitId":"ang-zeyu"},"content":"        / window.innerWidth;"},{"lineNumber":38,"author":{"gitId":"ang-zeyu"},"content":"    },"},{"lineNumber":39,"author":{"gitId":"ang-zeyu"},"content":"  },"},{"lineNumber":40,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":41,"author":{"gitId":"ang-zeyu"},"content":"  computed: {"},{"lineNumber":42,"author":{"gitId":"ang-zeyu"},"content":"    appStyles() {"},{"lineNumber":43,"author":{"gitId":"ang-zeyu"},"content":"      return this.isResizing"},{"lineNumber":44,"author":{"gitId":"ang-zeyu"},"content":"        ? \u0027user-select: none; cursor: col-resize;\u0027"},{"lineNumber":45,"author":{"gitId":"ang-zeyu"},"content":"        : \u0027\u0027;"},{"lineNumber":46,"author":{"gitId":"ang-zeyu"},"content":"    },"},{"lineNumber":47,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":48,"author":{"gitId":"ang-zeyu"},"content":"    guideStyles() {"},{"lineNumber":49,"author":{"gitId":"ang-zeyu"},"content":"      return this.isResizing"},{"lineNumber":50,"author":{"gitId":"ang-zeyu"},"content":"        ? `display: block; right: ${this.guideWidth * 100}%;`"},{"lineNumber":51,"author":{"gitId":"ang-zeyu"},"content":"        : \u0027\u0027;"},{"lineNumber":52,"author":{"gitId":"ang-zeyu"},"content":"    },"},{"lineNumber":53,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":54,"author":{"gitId":"ang-zeyu"},"content":"    rightContainerStyles() {"},{"lineNumber":55,"author":{"gitId":"ang-zeyu"},"content":"      return `flex: 0 0 ${this.flexWidth * 100}%;`;"},{"lineNumber":56,"author":{"gitId":"ang-zeyu"},"content":"    },"},{"lineNumber":57,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":58,"author":{"gitId":"ang-zeyu"},"content":"    mouseMove() {"},{"lineNumber":59,"author":{"gitId":"ang-zeyu"},"content":"      if (this.isResizing) {"},{"lineNumber":60,"author":{"gitId":"ang-zeyu"},"content":"        return throttledEvent(25, (event) \u003d\u003e {"},{"lineNumber":61,"author":{"gitId":"ang-zeyu"},"content":"          this.guideWidth \u003d ("},{"lineNumber":62,"author":{"gitId":"ang-zeyu"},"content":"            Math.min("},{"lineNumber":63,"author":{"gitId":"ang-zeyu"},"content":"                Math.max("},{"lineNumber":64,"author":{"gitId":"ang-zeyu"},"content":"                    window.innerWidth - event.clientX,"},{"lineNumber":65,"author":{"gitId":"ang-zeyu"},"content":"                    SCROLL_BAR_WIDTH + DRAG_BAR_WIDTH,"},{"lineNumber":66,"author":{"gitId":"ang-zeyu"},"content":"                ),"},{"lineNumber":67,"author":{"gitId":"ang-zeyu"},"content":"                window.innerWidth - SCROLL_BAR_WIDTH,"},{"lineNumber":68,"author":{"gitId":"ang-zeyu"},"content":"            )"},{"lineNumber":69,"author":{"gitId":"ang-zeyu"},"content":"            - (GUIDE_BAR_WIDTH / 2)"},{"lineNumber":70,"author":{"gitId":"ang-zeyu"},"content":"          ) / window.innerWidth;"},{"lineNumber":71,"author":{"gitId":"ang-zeyu"},"content":"        });"},{"lineNumber":72,"author":{"gitId":"ang-zeyu"},"content":"      }"},{"lineNumber":73,"author":{"gitId":"ang-zeyu"},"content":"      return () \u003d\u003e {};"},{"lineNumber":74,"author":{"gitId":"ang-zeyu"},"content":"    },"},{"lineNumber":75,"author":{"gitId":"ang-zeyu"},"content":"  },"},{"lineNumber":76,"author":{"gitId":"ang-zeyu"},"content":"};"}],"authorContributionMap":{"ang-zeyu":76}},{"path":"frontend/src/static/js/v_summary.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"niqiukun"},"content":"/* global Vuex */"},{"lineNumber":2,"author":{"gitId":"-"},"content":"const dateFormatRegex \u003d /([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))$/;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"window.vSummary \u003d {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  props: [\u0027repos\u0027, \u0027errorMessages\u0027],"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  template: window.$(\u0027v_summary\u0027).innerHTML,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  data() {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":9,"author":{"gitId":"0blivious"},"content":"      checkedFileTypes: [],"},{"lineNumber":10,"author":{"gitId":"0blivious"},"content":"      fileTypes: [],"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      filtered: [],"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      filterSearch: \u0027\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      filterGroupSelection: \u0027groupByRepos\u0027,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      sortGroupSelection: \u0027groupTitle\u0027, // UI for sorting groups"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      sortWithinGroupSelection: \u0027title\u0027, // UI for sorting within groups"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      sortingOption: \u0027\u0027,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      isSortingDsc: \u0027\u0027,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      sortingWithinOption: \u0027\u0027,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      isSortingWithinDsc: \u0027\u0027,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      filterTimeFrame: \u0027commit\u0027,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      filterBreakdown: false,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      tmpFilterSinceDate: \u0027\u0027,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      tmpFilterUntilDate: \u0027\u0027,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      hasModifiedSinceDate: window.app.isSinceDateProvided,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      hasModifiedUntilDate: window.app.isUntilDateProvided,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      filterHash: \u0027\u0027,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      minDate: window.app.sinceDate,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      maxDate: window.app.untilDate,"},{"lineNumber":29,"author":{"gitId":"0blivious"},"content":"      fileTypeColors: {},"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      isSafariBrowser: /.*Version.*Safari.*/.test(navigator.userAgent),"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      filterGroupSelectionWatcherFlag: false,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  watch: {"},{"lineNumber":35,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    filterGroupSelection() {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      // Deactivates watcher"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      if (!this.filterGroupSelectionWatcherFlag) {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":41,"author":{"gitId":"niqiukun"},"content":"      const { allGroupsMerged } \u003d this;"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027incrementLoadingOverlayCount\u0027, 1);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      setTimeout(() \u003d\u003e {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.getFilteredRepos();"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.updateMergedGroup(allGroupsMerged);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.$store.commit(\u0027incrementLoadingOverlayCount\u0027, -1);"},{"lineNumber":48,"author":{"gitId":"niqiukun"},"content":"      });"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":50,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":51,"author":{"gitId":"0blivious"},"content":"    \u0027$store.state.summaryDates\u0027: function () {"},{"lineNumber":52,"author":{"gitId":"0blivious"},"content":"      this.hasModifiedSinceDate \u003d true;"},{"lineNumber":53,"author":{"gitId":"0blivious"},"content":"      this.hasModifiedUntilDate \u003d true;"},{"lineNumber":54,"author":{"gitId":"0blivious"},"content":"      this.tmpFilterSinceDate \u003d this.$store.state.summaryDates.since;"},{"lineNumber":55,"author":{"gitId":"0blivious"},"content":"      this.tmpFilterUntilDate \u003d this.$store.state.summaryDates.until;"},{"lineNumber":56,"author":{"gitId":"0blivious"},"content":"      window.deactivateAllOverlays();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      this.getFiltered();"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":59,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":60,"author":{"gitId":"niqiukun"},"content":"    mergedGroups() {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      this.getFiltered();"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  computed: {"},{"lineNumber":65,"author":{"gitId":"0blivious"},"content":"    checkAllFileTypes: {"},{"lineNumber":66,"author":{"gitId":"0blivious"},"content":"      get() {"},{"lineNumber":67,"author":{"gitId":"0blivious"},"content":"        return this.checkedFileTypes.length \u003d\u003d\u003d this.fileTypes.length;"},{"lineNumber":68,"author":{"gitId":"0blivious"},"content":"      },"},{"lineNumber":69,"author":{"gitId":"0blivious"},"content":"      set(value) {"},{"lineNumber":70,"author":{"gitId":"0blivious"},"content":"        if (value) {"},{"lineNumber":71,"author":{"gitId":"0blivious"},"content":"          this.checkedFileTypes \u003d this.fileTypes.slice();"},{"lineNumber":72,"author":{"gitId":"0blivious"},"content":"        } else {"},{"lineNumber":73,"author":{"gitId":"0blivious"},"content":"          this.checkedFileTypes \u003d [];"},{"lineNumber":74,"author":{"gitId":"0blivious"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.getFiltered();"},{"lineNumber":76,"author":{"gitId":"0blivious"},"content":"      },"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":78,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    avgContributionSize() {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      let totalLines \u003d 0;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      let totalCount \u003d 0;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      this.repos.forEach((repo) \u003d\u003e {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        repo.users.forEach((user) \u003d\u003e {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"          if (user.checkedFileTypeContribution \u003d\u003d\u003d undefined) {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            this.updateCheckedFileTypeContribution(user);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":87,"author":{"gitId":"0blivious"},"content":"          if (user.checkedFileTypeContribution \u003e 0) {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            totalCount +\u003d 1;"},{"lineNumber":89,"author":{"gitId":"0blivious"},"content":"            totalLines +\u003d user.checkedFileTypeContribution;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"      return totalLines / totalCount;"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":96,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":97,"author":{"gitId":"niqiukun"},"content":"    allGroupsMerged: {"},{"lineNumber":98,"author":{"gitId":"niqiukun"},"content":"      get() {"},{"lineNumber":99,"author":{"gitId":"niqiukun"},"content":"        if (this.mergedGroups.length \u003d\u003d\u003d 0) {"},{"lineNumber":100,"author":{"gitId":"niqiukun"},"content":"          return false;"},{"lineNumber":101,"author":{"gitId":"niqiukun"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"niqiukun"},"content":"        return this.mergedGroups.length \u003d\u003d\u003d this.filtered.length;"},{"lineNumber":103,"author":{"gitId":"niqiukun"},"content":"      },"},{"lineNumber":104,"author":{"gitId":"niqiukun"},"content":"      set(value) {"},{"lineNumber":105,"author":{"gitId":"niqiukun"},"content":"        if (value) {"},{"lineNumber":106,"author":{"gitId":"niqiukun"},"content":"          const mergedGroups \u003d [];"},{"lineNumber":107,"author":{"gitId":"niqiukun"},"content":"          this.filtered.forEach((group) \u003d\u003e {"},{"lineNumber":108,"author":{"gitId":"niqiukun"},"content":"            mergedGroups.push(this.getGroupName(group));"},{"lineNumber":109,"author":{"gitId":"niqiukun"},"content":"          });"},{"lineNumber":110,"author":{"gitId":"-"},"content":"          this.filtered \u003d [];"},{"lineNumber":111,"author":{"gitId":"niqiukun"},"content":"          this.$store.commit(\u0027updateMergedGroup\u0027, mergedGroups);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":113,"author":{"gitId":"niqiukun"},"content":"          this.$store.commit(\u0027updateMergedGroup\u0027, []);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"niqiukun"},"content":"      },"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    filterSinceDate() {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      if (this.tmpFilterSinceDate \u0026\u0026 this.tmpFilterSinceDate \u003e\u003d this.minDate) {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return this.tmpFilterSinceDate;"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      // If user clears the since date field"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      return this.minDate;"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"    filterUntilDate() {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      if (this.tmpFilterUntilDate \u0026\u0026 this.tmpFilterUntilDate \u003c\u003d this.maxDate) {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return this.tmpFilterUntilDate;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      return this.maxDate;"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"niqiukun"},"content":"    ...Vuex.mapState([\u0027mergedGroups\u0027]),"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  methods: {"},{"lineNumber":136,"author":{"gitId":"0blivious"},"content":"    dismissTab(event) {"},{"lineNumber":137,"author":{"gitId":"0blivious"},"content":"      event.target.parentNode.style.display \u003d \u0027none\u0027;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"    // view functions //"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    getReportIssueGitHubLink(stackTrace) {"},{"lineNumber":142,"author":{"gitId":"yash-chowdhary"},"content":"      return `${window.BASE_URL}/reposense/RepoSense/issues/new?title\u003d${this.getReportIssueTitle()"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      }\u0026body\u003d${this.getReportIssueMessage(stackTrace)}`;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"    getReportIssueEmailAddress() {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"      return \u0027seer@comp.nus.edu.sg\u0027;"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"    getReportIssueEmailLink(stackTrace) {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      return `mailto:${this.getReportIssueEmailAddress()}?subject\u003d${this.getReportIssueTitle()"},{"lineNumber":152,"author":{"gitId":"-"},"content":"      }\u0026body\u003d${this.getReportIssueMessage(stackTrace)}`;"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"    getReportIssueTitle() {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"      return encodeURI(\u0027Unexpected error with RepoSense version \u0027) + window.app.repoSenseVersion;"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"    getReportIssueMessage(message) {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"      return encodeURI(message);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"    // model functions //"},{"lineNumber":164,"author":{"gitId":"0blivious"},"content":"    resetFilterSearch() {"},{"lineNumber":165,"author":{"gitId":"0blivious"},"content":"      this.filterSearch \u003d \u0027\u0027;"},{"lineNumber":166,"author":{"gitId":"0blivious"},"content":"      this.getFiltered();"},{"lineNumber":167,"author":{"gitId":"0blivious"},"content":"    },"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    updateFilterSearch(evt) {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      this.filterSearch \u003d evt.target.value;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      this.getFiltered();"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":172,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"    setSummaryHash() {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      const { addHash, encodeHash } \u003d window;"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"      addHash(\u0027search\u0027, this.filterSearch);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      addHash(\u0027sort\u0027, this.sortGroupSelection);"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      addHash(\u0027sortWithin\u0027, this.sortWithinGroupSelection);"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"      if (this.hasModifiedSinceDate) {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        addHash(\u0027since\u0027, this.filterSinceDate);"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"      if (this.hasModifiedUntilDate) {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        addHash(\u0027until\u0027, this.filterUntilDate);"},{"lineNumber":186,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"      addHash(\u0027timeframe\u0027, this.filterTimeFrame);"},{"lineNumber":189,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":190,"author":{"gitId":"niqiukun"},"content":"      let mergedGroupsHash \u003d this.mergedGroups.join(window.HASH_DELIMITER);"},{"lineNumber":191,"author":{"gitId":"niqiukun"},"content":"      if (mergedGroupsHash.length \u003d\u003d\u003d 0) {"},{"lineNumber":192,"author":{"gitId":"niqiukun"},"content":"        mergedGroupsHash \u003d \u0027\u0027;"},{"lineNumber":193,"author":{"gitId":"niqiukun"},"content":"      }"},{"lineNumber":194,"author":{"gitId":"niqiukun"},"content":"      addHash(\u0027mergegroup\u0027, mergedGroupsHash);"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"      addHash(\u0027groupSelect\u0027, this.filterGroupSelection);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"      addHash(\u0027breakdown\u0027, this.filterBreakdown);"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"jamessspanggg"},"content":"      if (this.filterBreakdown) {"},{"lineNumber":200,"author":{"gitId":"jamessspanggg"},"content":"        const checkedFileTypesHash \u003d this.checkedFileTypes.length \u003e 0"},{"lineNumber":201,"author":{"gitId":"niqiukun"},"content":"          ? this.checkedFileTypes.join(window.HASH_DELIMITER)"},{"lineNumber":202,"author":{"gitId":"jamessspanggg"},"content":"          : \u0027\u0027;"},{"lineNumber":203,"author":{"gitId":"jamessspanggg"},"content":"        addHash(\u0027checkedFileTypes\u0027, checkedFileTypesHash);"},{"lineNumber":204,"author":{"gitId":"jamessspanggg"},"content":"      } else {"},{"lineNumber":205,"author":{"gitId":"jamessspanggg"},"content":"        window.removeHash(\u0027checkedFileTypes\u0027);"},{"lineNumber":206,"author":{"gitId":"jamessspanggg"},"content":"      }"},{"lineNumber":207,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"      encodeHash();"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"    renderFilterHash() {"},{"lineNumber":212,"author":{"gitId":"-"},"content":"      const convertBool \u003d (txt) \u003d\u003e (txt \u003d\u003d\u003d \u0027true\u0027);"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      const hash \u003d window.hashParams;"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"      if (hash.search) { this.filterSearch \u003d hash.search; }"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      if (hash.sort) {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        this.sortGroupSelection \u003d hash.sort;"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":219,"author":{"gitId":"-"},"content":"      if (hash.sortWithin) {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        this.sortWithinGroupSelection \u003d hash.sortWithin;"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"      if (hash.timeframe) { this.filterTimeFrame \u003d hash.timeframe; }"},{"lineNumber":224,"author":{"gitId":"-"},"content":"      if (hash.mergegroup) {"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        this.$store.commit("},{"lineNumber":226,"author":{"gitId":"-"},"content":"            \u0027updateMergedGroup\u0027,"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            hash.mergegroup.split(window.HASH_DELIMITER),"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":229,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":230,"author":{"gitId":"0blivious"},"content":"      if (hash.since \u0026\u0026 dateFormatRegex.test(hash.since)) {"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        this.tmpFilterSinceDate \u003d hash.since;"},{"lineNumber":232,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":233,"author":{"gitId":"0blivious"},"content":"      if (hash.until \u0026\u0026 dateFormatRegex.test(hash.until)) {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        this.tmpFilterUntilDate \u003d hash.until;"},{"lineNumber":235,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"      if (hash.groupSelect) {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        this.filterGroupSelection \u003d hash.groupSelect;"},{"lineNumber":239,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":240,"author":{"gitId":"-"},"content":"      if (hash.breakdown) {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        this.filterBreakdown \u003d convertBool(hash.breakdown);"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":243,"author":{"gitId":"0blivious"},"content":"      if (hash.checkedFileTypes) {"},{"lineNumber":244,"author":{"gitId":"niqiukun"},"content":"        const parsedFileTypes \u003d hash.checkedFileTypes.split(window.HASH_DELIMITER);"},{"lineNumber":245,"author":{"gitId":"jamessspanggg"},"content":"        this.checkedFileTypes \u003d parsedFileTypes.filter((type) \u003d\u003e this.fileTypes.includes(type));"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"niqiukun"},"content":"    getGroupName(group) {"},{"lineNumber":250,"author":{"gitId":"niqiukun"},"content":"      return window.getGroupName(group, this.filterGroupSelection);"},{"lineNumber":251,"author":{"gitId":"niqiukun"},"content":"    },"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"jamessspanggg"},"content":"    isMatchSearchedUser(filterSearch, user) {"},{"lineNumber":254,"author":{"gitId":"jamessspanggg"},"content":"      return !filterSearch || filterSearch.toLowerCase()"},{"lineNumber":255,"author":{"gitId":"jamessspanggg"},"content":"          .split(\u0027 \u0027)"},{"lineNumber":256,"author":{"gitId":"jamessspanggg"},"content":"          .filter(Boolean)"},{"lineNumber":257,"author":{"gitId":"jamessspanggg"},"content":"          .some((param) \u003d\u003e user.searchPath.includes(param));"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":259,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":260,"author":{"gitId":"-"},"content":"    getFiltered() {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"      this.setSummaryHash();"},{"lineNumber":262,"author":{"gitId":"0blivious"},"content":"      window.deactivateAllOverlays();"},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027incrementLoadingOverlayCount\u0027, 1);"},{"lineNumber":265,"author":{"gitId":"-"},"content":"      // Use setTimeout() to force this.filtered to update only after loading screen is displayed."},{"lineNumber":266,"author":{"gitId":"-"},"content":"      setTimeout(() \u003d\u003e {"},{"lineNumber":267,"author":{"gitId":"niqiukun"},"content":"        this.getFilteredRepos();"},{"lineNumber":268,"author":{"gitId":"niqiukun"},"content":"        this.getMergedRepos();"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        this.$store.commit(\u0027incrementLoadingOverlayCount\u0027, -1);"},{"lineNumber":270,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":271,"author":{"gitId":"niqiukun"},"content":"    },"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"niqiukun"},"content":"    getFilteredRepos() {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"      // array of array, sorted by repo"},{"lineNumber":275,"author":{"gitId":"-"},"content":"      const full \u003d [];"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"      // create deep clone of this.repos to not modify the original content of this.repos"},{"lineNumber":278,"author":{"gitId":"-"},"content":"      // when merging groups"},{"lineNumber":279,"author":{"gitId":"niqiukun"},"content":"      const groups \u003d this.hasMergedGroups() ? JSON.parse(JSON.stringify(this.repos)) : this.repos;"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      groups.forEach((repo) \u003d\u003e {"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        const res \u003d [];"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":"        // filtering"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        repo.users.forEach((user) \u003d\u003e {"},{"lineNumber":285,"author":{"gitId":"jamessspanggg"},"content":"          if (this.isMatchSearchedUser(this.filterSearch, user)) {"},{"lineNumber":286,"author":{"gitId":"jamessspanggg"},"content":"            this.getUserCommits(user, this.filterSinceDate, this.filterUntilDate);"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            if (this.filterTimeFrame \u003d\u003d\u003d \u0027week\u0027) {"},{"lineNumber":288,"author":{"gitId":"jamessspanggg"},"content":"              this.splitCommitsWeek(user, this.filterSinceDate, this.filterUntilDate);"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":290,"author":{"gitId":"jamessspanggg"},"content":"            this.updateCheckedFileTypeContribution(user);"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            res.push(user);"},{"lineNumber":292,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"-"},"content":"        if (res.length) {"},{"lineNumber":296,"author":{"gitId":"-"},"content":"          full.push(res);"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      this.filtered \u003d full;"},{"lineNumber":300,"author":{"gitId":"-"},"content":""},{"lineNumber":301,"author":{"gitId":"jamessspanggg"},"content":"      this.getOptionWithOrder();"},{"lineNumber":302,"author":{"gitId":"-"},"content":""},{"lineNumber":303,"author":{"gitId":"jamessspanggg"},"content":"      const filterControl \u003d {"},{"lineNumber":304,"author":{"gitId":"jamessspanggg"},"content":"        filterGroupSelection: this.filterGroupSelection,"},{"lineNumber":305,"author":{"gitId":"jamessspanggg"},"content":"        sortingOption: this.sortingOption,"},{"lineNumber":306,"author":{"gitId":"jamessspanggg"},"content":"        sortingWithinOption: this.sortingWithinOption,"},{"lineNumber":307,"author":{"gitId":"jamessspanggg"},"content":"        isSortingDsc: this.isSortingDsc,"},{"lineNumber":308,"author":{"gitId":"jamessspanggg"},"content":"        isSortingWithinDsc: this.isSortingWithinDsc,"},{"lineNumber":309,"author":{"gitId":"jamessspanggg"},"content":"      };"},{"lineNumber":310,"author":{"gitId":"-"},"content":"      this.getOptionWithOrder();"},{"lineNumber":311,"author":{"gitId":"-"},"content":"      this.filtered \u003d window.utilsSortFiltered(this.filtered, filterControl);"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":"    updateMergedGroup(allGroupsMerged) {"},{"lineNumber":315,"author":{"gitId":"-"},"content":"      // merge group is not allowed when group by none"},{"lineNumber":316,"author":{"gitId":"-"},"content":"      // also reset merged groups"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      if (this.filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027 || !allGroupsMerged) {"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        this.$store.commit(\u0027updateMergedGroup\u0027, []);"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        const mergedGroups \u003d [];"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        this.filtered.forEach((group) \u003d\u003e {"},{"lineNumber":322,"author":{"gitId":"-"},"content":"          mergedGroups.push(this.getGroupName(group));"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        this.$store.commit(\u0027updateMergedGroup\u0027, mergedGroups);"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":327,"author":{"gitId":"-"},"content":""},{"lineNumber":328,"author":{"gitId":"niqiukun"},"content":"    getMergedRepos() {"},{"lineNumber":329,"author":{"gitId":"niqiukun"},"content":"      this.filtered.forEach((group, groupIndex) \u003d\u003e {"},{"lineNumber":330,"author":{"gitId":"niqiukun"},"content":"        if (this.mergedGroups.includes(this.getGroupName(group))) {"},{"lineNumber":331,"author":{"gitId":"niqiukun"},"content":"          this.mergeGroupByIndex(this.filtered, groupIndex);"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":333,"author":{"gitId":"niqiukun"},"content":"      });"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":335,"author":{"gitId":"-"},"content":""},{"lineNumber":336,"author":{"gitId":"niqiukun"},"content":"    mergeGroupByIndex(filtered, groupIndex) {"},{"lineNumber":337,"author":{"gitId":"-"},"content":"      const dateToIndexMap \u003d {};"},{"lineNumber":338,"author":{"gitId":"0blivious"},"content":"      const dailyIndexMap \u003d {};"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      const mergedCommits \u003d [];"},{"lineNumber":340,"author":{"gitId":"0blivious"},"content":"      const mergedDailyCommits \u003d [];"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      const mergedFileTypeContribution \u003d {};"},{"lineNumber":342,"author":{"gitId":"-"},"content":"      let mergedVariance \u003d 0;"},{"lineNumber":343,"author":{"gitId":"jamessspanggg"},"content":"      let totalMergedCheckedFileTypeCommits \u003d 0;"},{"lineNumber":344,"author":{"gitId":"niqiukun"},"content":"      filtered[groupIndex].forEach((user) \u003d\u003e {"},{"lineNumber":345,"author":{"gitId":"0blivious"},"content":"        user.commits.forEach((commit) \u003d\u003e {"},{"lineNumber":346,"author":{"gitId":"0blivious"},"content":"          this.mergeCommits(commit, user, dateToIndexMap, mergedCommits);"},{"lineNumber":347,"author":{"gitId":"0blivious"},"content":"        });"},{"lineNumber":348,"author":{"gitId":"0blivious"},"content":"        user.dailyCommits.forEach((commit) \u003d\u003e {"},{"lineNumber":349,"author":{"gitId":"0blivious"},"content":"          this.mergeCommits(commit, user, dailyIndexMap, mergedDailyCommits);"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":351,"author":{"gitId":"-"},"content":""},{"lineNumber":352,"author":{"gitId":"-"},"content":"        this.mergeFileTypeContribution(user, mergedFileTypeContribution);"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"jamessspanggg"},"content":"        totalMergedCheckedFileTypeCommits +\u003d user.checkedFileTypeContribution;"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        mergedVariance +\u003d user.variance;"},{"lineNumber":356,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":357,"author":{"gitId":"jamessspanggg"},"content":"      mergedCommits.sort(window.comparator((ele) \u003d\u003e ele.date));"},{"lineNumber":358,"author":{"gitId":"niqiukun"},"content":"      filtered[groupIndex][0].commits \u003d mergedCommits;"},{"lineNumber":359,"author":{"gitId":"0blivious"},"content":"      filtered[groupIndex][0].dailyCommits \u003d mergedDailyCommits;"},{"lineNumber":360,"author":{"gitId":"niqiukun"},"content":"      filtered[groupIndex][0].fileTypeContribution \u003d mergedFileTypeContribution;"},{"lineNumber":361,"author":{"gitId":"niqiukun"},"content":"      filtered[groupIndex][0].variance \u003d mergedVariance;"},{"lineNumber":362,"author":{"gitId":"niqiukun"},"content":"      filtered[groupIndex][0].checkedFileTypeContribution \u003d totalMergedCheckedFileTypeCommits;"},{"lineNumber":363,"author":{"gitId":"-"},"content":""},{"lineNumber":364,"author":{"gitId":"niqiukun"},"content":"      // only take the merged group"},{"lineNumber":365,"author":{"gitId":"niqiukun"},"content":"      filtered[groupIndex] \u003d filtered[groupIndex].slice(0, 1);"},{"lineNumber":366,"author":{"gitId":"niqiukun"},"content":"    },"},{"lineNumber":367,"author":{"gitId":"-"},"content":""},{"lineNumber":368,"author":{"gitId":"niqiukun"},"content":"    hasMergedGroups() {"},{"lineNumber":369,"author":{"gitId":"niqiukun"},"content":"      return this.mergedGroups.length \u003e 0;"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":371,"author":{"gitId":"-"},"content":""},{"lineNumber":372,"author":{"gitId":"0blivious"},"content":"    mergeCommits(commit, user, dateToIndexMap, merged) {"},{"lineNumber":373,"author":{"gitId":"-"},"content":"      const {"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        commitResults, date, insertions, deletions,"},{"lineNumber":375,"author":{"gitId":"-"},"content":"      } \u003d commit;"},{"lineNumber":376,"author":{"gitId":"-"},"content":""},{"lineNumber":377,"author":{"gitId":"-"},"content":"      // bind repoId to each commit"},{"lineNumber":378,"author":{"gitId":"-"},"content":"      commitResults.forEach((commitResult) \u003d\u003e {"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        commitResult.repoId \u003d user.repoId;"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"-"},"content":"      if (Object.prototype.hasOwnProperty.call(dateToIndexMap, date)) {"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        const commitWithSameDate \u003d merged[dateToIndexMap[date]];"},{"lineNumber":384,"author":{"gitId":"-"},"content":""},{"lineNumber":385,"author":{"gitId":"-"},"content":"        commitResults.forEach((commitResult) \u003d\u003e {"},{"lineNumber":386,"author":{"gitId":"-"},"content":"          commitWithSameDate.commitResults.push(commitResult);"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":388,"author":{"gitId":"-"},"content":""},{"lineNumber":389,"author":{"gitId":"-"},"content":"        commitWithSameDate.insertions +\u003d insertions;"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        commitWithSameDate.deletions +\u003d deletions;"},{"lineNumber":391,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        dateToIndexMap[date] \u003d Object.keys(dateToIndexMap).length;"},{"lineNumber":393,"author":{"gitId":"0blivious"},"content":"        merged.push(JSON.parse(JSON.stringify(commit)));"},{"lineNumber":394,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":396,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":397,"author":{"gitId":"-"},"content":"    mergeFileTypeContribution(user, merged) {"},{"lineNumber":398,"author":{"gitId":"-"},"content":"      Object.entries(user.fileTypeContribution).forEach((fileType) \u003d\u003e {"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        const key \u003d fileType[0];"},{"lineNumber":400,"author":{"gitId":"-"},"content":"        const value \u003d fileType[1];"},{"lineNumber":401,"author":{"gitId":"-"},"content":""},{"lineNumber":402,"author":{"gitId":"-"},"content":"        if (!Object.prototype.hasOwnProperty.call(merged, key)) {"},{"lineNumber":403,"author":{"gitId":"-"},"content":"          merged[key] \u003d 0;"},{"lineNumber":404,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        merged[key] +\u003d value;"},{"lineNumber":406,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":408,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":409,"author":{"gitId":"-"},"content":"    processFileTypes() {"},{"lineNumber":410,"author":{"gitId":"-"},"content":"      const selectedColors \u003d [\u0027#ffe119\u0027, \u0027#4363d8\u0027, \u0027#3cb44b\u0027, \u0027#f58231\u0027, \u0027#911eb4\u0027, \u0027#46f0f0\u0027, \u0027#f032e6\u0027,"},{"lineNumber":411,"author":{"gitId":"-"},"content":"          \u0027#bcf60c\u0027, \u0027#fabebe\u0027, \u0027#008080\u0027, \u0027#e6beff\u0027, \u0027#9a6324\u0027, \u0027#fffac8\u0027, \u0027#800000\u0027, \u0027#aaffc3\u0027, \u0027#808000\u0027, \u0027#ffd8b1\u0027,"},{"lineNumber":412,"author":{"gitId":"-"},"content":"          \u0027#000075\u0027, \u0027#808080\u0027];"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      const fileTypeColors \u003d {};"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      let i \u003d 0;"},{"lineNumber":415,"author":{"gitId":"-"},"content":""},{"lineNumber":416,"author":{"gitId":"-"},"content":"      this.repos.forEach((repo) \u003d\u003e {"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        repo.users.forEach((user) \u003d\u003e {"},{"lineNumber":418,"author":{"gitId":"-"},"content":"          Object.keys(user.fileTypeContribution).forEach((fileType) \u003d\u003e {"},{"lineNumber":419,"author":{"gitId":"-"},"content":"            if (!Object.prototype.hasOwnProperty.call(fileTypeColors, fileType)) {"},{"lineNumber":420,"author":{"gitId":"jamessspanggg"},"content":"              if (i \u003c selectedColors.length) {"},{"lineNumber":421,"author":{"gitId":"-"},"content":"                fileTypeColors[fileType] \u003d selectedColors[i];"},{"lineNumber":422,"author":{"gitId":"jamessspanggg"},"content":"                i +\u003d 1;"},{"lineNumber":423,"author":{"gitId":"jamessspanggg"},"content":"              } else {"},{"lineNumber":424,"author":{"gitId":"-"},"content":"                fileTypeColors[fileType] \u003d window"},{"lineNumber":425,"author":{"gitId":"-"},"content":"                    .utilsGetNonRepeatingColor(Object.values(fileTypeColors));"},{"lineNumber":426,"author":{"gitId":"jamessspanggg"},"content":"              }"},{"lineNumber":427,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":428,"author":{"gitId":"0blivious"},"content":"            if (!this.fileTypes.includes(fileType)) {"},{"lineNumber":429,"author":{"gitId":"0blivious"},"content":"              this.fileTypes.push(fileType);"},{"lineNumber":430,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":431,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":432,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":433,"author":{"gitId":"0blivious"},"content":"        this.fileTypeColors \u003d fileTypeColors;"},{"lineNumber":434,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":435,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":436,"author":{"gitId":"0blivious"},"content":"      this.checkedFileTypes \u003d this.fileTypes.slice();"},{"lineNumber":437,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateFileTypeColors\u0027, this.fileTypeColors);"},{"lineNumber":438,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":439,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":440,"author":{"gitId":"jamessspanggg"},"content":"    splitCommitsWeek(user, sinceDate, untilDate) {"},{"lineNumber":441,"author":{"gitId":"-"},"content":"      const { commits } \u003d user;"},{"lineNumber":442,"author":{"gitId":"-"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"      const res \u003d [];"},{"lineNumber":444,"author":{"gitId":"-"},"content":""},{"lineNumber":445,"author":{"gitId":"0blivious"},"content":"      const nextMondayDate \u003d this.dateRounding(sinceDate, 0); // round up for the next monday"},{"lineNumber":446,"author":{"gitId":"-"},"content":""},{"lineNumber":447,"author":{"gitId":"-"},"content":"      const nextMondayMs \u003d (new Date(nextMondayDate)).getTime();"},{"lineNumber":448,"author":{"gitId":"jamessspanggg"},"content":"      const sinceMs \u003d new Date(sinceDate).getTime();"},{"lineNumber":449,"author":{"gitId":"-"},"content":"      const untilMs \u003d (new Date(untilDate)).getTime();"},{"lineNumber":450,"author":{"gitId":"-"},"content":""},{"lineNumber":451,"author":{"gitId":"-"},"content":"      if (nextMondayDate \u003c\u003d untilDate) {"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        this.pushCommitsWeek(sinceMs, nextMondayMs - 1, res, commits);"},{"lineNumber":453,"author":{"gitId":"-"},"content":"        this.pushCommitsWeek(nextMondayMs, untilMs, res, commits);"},{"lineNumber":454,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":455,"author":{"gitId":"-"},"content":"        this.pushCommitsWeek(sinceMs, untilMs, res, commits);"},{"lineNumber":456,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":457,"author":{"gitId":"-"},"content":"      user.commits \u003d res;"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":459,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":460,"author":{"gitId":"-"},"content":"    pushCommitsWeek(sinceMs, untilMs, res, commits) {"},{"lineNumber":461,"author":{"gitId":"0blivious"},"content":"      const diff \u003d Math.round(Math.abs((untilMs - sinceMs) / window.DAY_IN_MS));"},{"lineNumber":462,"author":{"gitId":"0blivious"},"content":"      const weekInMS \u003d window.DAY_IN_MS * 7;"},{"lineNumber":463,"author":{"gitId":"-"},"content":""},{"lineNumber":464,"author":{"gitId":"-"},"content":"      for (let weekId \u003d 0; weekId \u003c diff / 7; weekId +\u003d 1) {"},{"lineNumber":465,"author":{"gitId":"0blivious"},"content":"        const startOfWeekMs \u003d sinceMs + (weekId * weekInMS);"},{"lineNumber":466,"author":{"gitId":"0blivious"},"content":"        const endOfWeekMs \u003d startOfWeekMs + weekInMS - window.DAY_IN_MS;"},{"lineNumber":467,"author":{"gitId":"-"},"content":"        const endOfWeekMsWithinUntilMs \u003d endOfWeekMs \u003c\u003d untilMs ? endOfWeekMs : untilMs;"},{"lineNumber":468,"author":{"gitId":"-"},"content":""},{"lineNumber":469,"author":{"gitId":"-"},"content":"        const week \u003d {"},{"lineNumber":470,"author":{"gitId":"-"},"content":"          insertions: 0,"},{"lineNumber":471,"author":{"gitId":"-"},"content":"          deletions: 0,"},{"lineNumber":472,"author":{"gitId":"0blivious"},"content":"          date: window.getDateStr(startOfWeekMs),"},{"lineNumber":473,"author":{"gitId":"0blivious"},"content":"          endDate: window.getDateStr(endOfWeekMsWithinUntilMs),"},{"lineNumber":474,"author":{"gitId":"-"},"content":"          commitResults: [],"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":476,"author":{"gitId":"-"},"content":""},{"lineNumber":477,"author":{"gitId":"-"},"content":"        this.addLineContributionWeek(endOfWeekMsWithinUntilMs, week, commits);"},{"lineNumber":478,"author":{"gitId":"jamessspanggg"},"content":"        if (week.commitResults.length \u003e 0) {"},{"lineNumber":479,"author":{"gitId":"-"},"content":"          res.push(week);"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":481,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":483,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":484,"author":{"gitId":"-"},"content":"    addLineContributionWeek(endOfWeekMs, week, commits) {"},{"lineNumber":485,"author":{"gitId":"-"},"content":"      // commits are not contiguous, meaning there are gaps of days without"},{"lineNumber":486,"author":{"gitId":"-"},"content":"      // commits, so we are going to check each commit\u0027s date and make sure"},{"lineNumber":487,"author":{"gitId":"-"},"content":"      // it is within the duration of a week"},{"lineNumber":488,"author":{"gitId":"-"},"content":"      while (commits.length \u003e 0"},{"lineNumber":489,"author":{"gitId":"-"},"content":"          \u0026\u0026 (new Date(commits[0].date)).getTime() \u003c\u003d endOfWeekMs) {"},{"lineNumber":490,"author":{"gitId":"-"},"content":"        const commit \u003d commits.shift();"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        week.insertions +\u003d commit.insertions;"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        week.deletions +\u003d commit.deletions;"},{"lineNumber":493,"author":{"gitId":"-"},"content":"        commit.commitResults.forEach((commitResult) \u003d\u003e week.commitResults.push(commitResult));"},{"lineNumber":494,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":496,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":497,"author":{"gitId":"jamessspanggg"},"content":"    getUserCommits(user, sinceDate, untilDate) {"},{"lineNumber":498,"author":{"gitId":"-"},"content":"      user.commits \u003d [];"},{"lineNumber":499,"author":{"gitId":"-"},"content":"      const userFirst \u003d user.dailyCommits[0];"},{"lineNumber":500,"author":{"gitId":"-"},"content":"      const userLast \u003d user.dailyCommits[user.dailyCommits.length - 1];"},{"lineNumber":501,"author":{"gitId":"-"},"content":""},{"lineNumber":502,"author":{"gitId":"-"},"content":"      if (!userFirst) {"},{"lineNumber":503,"author":{"gitId":"-"},"content":"        return null;"},{"lineNumber":504,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":505,"author":{"gitId":"-"},"content":""},{"lineNumber":506,"author":{"gitId":"-"},"content":"      if (!sinceDate || sinceDate \u003d\u003d\u003d \u0027undefined\u0027) {"},{"lineNumber":507,"author":{"gitId":"-"},"content":"        sinceDate \u003d userFirst.date;"},{"lineNumber":508,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":509,"author":{"gitId":"-"},"content":""},{"lineNumber":510,"author":{"gitId":"-"},"content":"      if (!untilDate) {"},{"lineNumber":511,"author":{"gitId":"-"},"content":"        untilDate \u003d userLast.date;"},{"lineNumber":512,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":513,"author":{"gitId":"-"},"content":""},{"lineNumber":514,"author":{"gitId":"-"},"content":"      user.dailyCommits.forEach((commit) \u003d\u003e {"},{"lineNumber":515,"author":{"gitId":"-"},"content":"        const { date } \u003d commit;"},{"lineNumber":516,"author":{"gitId":"-"},"content":"        if (date \u003e\u003d sinceDate \u0026\u0026 date \u003c\u003d untilDate) {"},{"lineNumber":517,"author":{"gitId":"jamessspanggg"},"content":"          const filteredCommit \u003d JSON.parse(JSON.stringify(commit));"},{"lineNumber":518,"author":{"gitId":"jamessspanggg"},"content":"          this.filterCommitByCheckedFileTypes(filteredCommit);"},{"lineNumber":519,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":520,"author":{"gitId":"jamessspanggg"},"content":"          if (filteredCommit.commitResults.length \u003e 0) {"},{"lineNumber":521,"author":{"gitId":"jamessspanggg"},"content":"            user.commits.push(filteredCommit);"},{"lineNumber":522,"author":{"gitId":"jamessspanggg"},"content":"          }"},{"lineNumber":523,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":524,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":525,"author":{"gitId":"-"},"content":""},{"lineNumber":526,"author":{"gitId":"-"},"content":"      return null;"},{"lineNumber":527,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":528,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":529,"author":{"gitId":"jamessspanggg"},"content":"    filterCommitByCheckedFileTypes(commit) {"},{"lineNumber":530,"author":{"gitId":"jamessspanggg"},"content":"      const filteredCommitResults \u003d commit.commitResults.map((result) \u003d\u003e {"},{"lineNumber":531,"author":{"gitId":"jamessspanggg"},"content":"        const filteredFileTypes \u003d this.getFilteredFileTypes(result);"},{"lineNumber":532,"author":{"gitId":"jamessspanggg"},"content":"        this.updateCommitResultWithFileTypes(result, filteredFileTypes);"},{"lineNumber":533,"author":{"gitId":"jamessspanggg"},"content":"        return result;"},{"lineNumber":534,"author":{"gitId":"jamessspanggg"},"content":"      }).filter((result) \u003d\u003e Object.values(result.fileTypesAndContributionMap).length \u003e 0);"},{"lineNumber":535,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":536,"author":{"gitId":"jamessspanggg"},"content":"      commit.insertions \u003d filteredCommitResults.reduce((acc, result) \u003d\u003e acc + result.insertions, 0);"},{"lineNumber":537,"author":{"gitId":"jamessspanggg"},"content":"      commit.deletions \u003d filteredCommitResults.reduce((acc, result) \u003d\u003e acc + result.deletions, 0);"},{"lineNumber":538,"author":{"gitId":"jamessspanggg"},"content":"      commit.commitResults \u003d filteredCommitResults;"},{"lineNumber":539,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":540,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":541,"author":{"gitId":"jamessspanggg"},"content":"    getFilteredFileTypes(commitResult) {"},{"lineNumber":542,"author":{"gitId":"jamessspanggg"},"content":"      return Object.keys(commitResult.fileTypesAndContributionMap)"},{"lineNumber":543,"author":{"gitId":"jamessspanggg"},"content":"          .filter(this.isFileTypeChecked)"},{"lineNumber":544,"author":{"gitId":"jamessspanggg"},"content":"          .reduce((obj, fileType) \u003d\u003e {"},{"lineNumber":545,"author":{"gitId":"jamessspanggg"},"content":"            obj[fileType] \u003d commitResult.fileTypesAndContributionMap[fileType];"},{"lineNumber":546,"author":{"gitId":"jamessspanggg"},"content":"            return obj;"},{"lineNumber":547,"author":{"gitId":"jamessspanggg"},"content":"          }, {});"},{"lineNumber":548,"author":{"gitId":"jamessspanggg"},"content":"    },"},{"lineNumber":549,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":550,"author":{"gitId":"jamessspanggg"},"content":"    isFileTypeChecked(fileType) {"},{"lineNumber":551,"author":{"gitId":"0blivious"},"content":"      if (this.filterBreakdown) {"},{"lineNumber":552,"author":{"gitId":"jamessspanggg"},"content":"        return this.checkedFileTypes.includes(fileType);"},{"lineNumber":553,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":554,"author":{"gitId":"0blivious"},"content":"      return true;"},{"lineNumber":555,"author":{"gitId":"jamessspanggg"},"content":"    },"},{"lineNumber":556,"author":{"gitId":"-"},"content":""},{"lineNumber":557,"author":{"gitId":"jamessspanggg"},"content":"    updateCommitResultWithFileTypes(commitResult, filteredFileTypes) {"},{"lineNumber":558,"author":{"gitId":"jamessspanggg"},"content":"      commitResult.insertions \u003d Object.values(filteredFileTypes)"},{"lineNumber":559,"author":{"gitId":"jamessspanggg"},"content":"          .reduce((acc, fileType) \u003d\u003e acc + fileType.insertions, 0);"},{"lineNumber":560,"author":{"gitId":"jamessspanggg"},"content":"      commitResult.deletions \u003d Object.values(filteredFileTypes)"},{"lineNumber":561,"author":{"gitId":"jamessspanggg"},"content":"          .reduce((acc, fileType) \u003d\u003e acc + fileType.deletions, 0);"},{"lineNumber":562,"author":{"gitId":"jamessspanggg"},"content":"      commitResult.fileTypesAndContributionMap \u003d filteredFileTypes;"},{"lineNumber":563,"author":{"gitId":"jamessspanggg"},"content":"    },"},{"lineNumber":564,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":565,"author":{"gitId":"-"},"content":"    getOptionWithOrder() {"},{"lineNumber":566,"author":{"gitId":"-"},"content":"      [this.sortingOption, this.isSortingDsc] \u003d this.sortGroupSelection.split(\u0027 \u0027);"},{"lineNumber":567,"author":{"gitId":"-"},"content":"      [this.sortingWithinOption, this.isSortingWithinDsc] \u003d this.sortWithinGroupSelection.split(\u0027 \u0027);"},{"lineNumber":568,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":569,"author":{"gitId":"-"},"content":""},{"lineNumber":570,"author":{"gitId":"-"},"content":"    // updating filters programically //"},{"lineNumber":571,"author":{"gitId":"-"},"content":"    resetDateRange() {"},{"lineNumber":572,"author":{"gitId":"ccyccyccy"},"content":"      this.hasModifiedSinceDate \u003d false;"},{"lineNumber":573,"author":{"gitId":"ccyccyccy"},"content":"      this.hasModifiedUntilDate \u003d false;"},{"lineNumber":574,"author":{"gitId":"-"},"content":"      this.tmpFilterSinceDate \u003d \u0027\u0027;"},{"lineNumber":575,"author":{"gitId":"-"},"content":"      this.tmpFilterUntilDate \u003d \u0027\u0027;"},{"lineNumber":576,"author":{"gitId":"ccyccyccy"},"content":"      window.removeHash(\u0027since\u0027);"},{"lineNumber":577,"author":{"gitId":"ccyccyccy"},"content":"      window.removeHash(\u0027until\u0027);"},{"lineNumber":578,"author":{"gitId":"-"},"content":"      this.getFiltered();"},{"lineNumber":579,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":580,"author":{"gitId":"-"},"content":""},{"lineNumber":581,"author":{"gitId":"-"},"content":"    updateTmpFilterSinceDate(event) {"},{"lineNumber":582,"author":{"gitId":"-"},"content":"      const since \u003d event.target.value;"},{"lineNumber":583,"author":{"gitId":"-"},"content":"      this.hasModifiedSinceDate \u003d true;"},{"lineNumber":584,"author":{"gitId":"-"},"content":""},{"lineNumber":585,"author":{"gitId":"-"},"content":"      if (!this.isSafariBrowser) {"},{"lineNumber":586,"author":{"gitId":"-"},"content":"        this.tmpFilterSinceDate \u003d since;"},{"lineNumber":587,"author":{"gitId":"-"},"content":"        event.target.value \u003d this.filterSinceDate;"},{"lineNumber":588,"author":{"gitId":"-"},"content":"        this.getFiltered();"},{"lineNumber":589,"author":{"gitId":"-"},"content":"      } else if (dateFormatRegex.test(since) \u0026\u0026 since \u003e\u003d this.minDate) {"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        this.tmpFilterSinceDate \u003d since;"},{"lineNumber":591,"author":{"gitId":"-"},"content":"        event.currentTarget.style.removeProperty(\u0027border-bottom-color\u0027);"},{"lineNumber":592,"author":{"gitId":"-"},"content":"        this.getFiltered();"},{"lineNumber":593,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":594,"author":{"gitId":"-"},"content":"        // invalid since date detected"},{"lineNumber":595,"author":{"gitId":"-"},"content":"        event.currentTarget.style.borderBottomColor \u003d \u0027red\u0027;"},{"lineNumber":596,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":597,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":598,"author":{"gitId":"-"},"content":""},{"lineNumber":599,"author":{"gitId":"-"},"content":"    updateTmpFilterUntilDate(event) {"},{"lineNumber":600,"author":{"gitId":"-"},"content":"      const until \u003d event.target.value;"},{"lineNumber":601,"author":{"gitId":"-"},"content":"      this.hasModifiedUntilDate \u003d true;"},{"lineNumber":602,"author":{"gitId":"-"},"content":""},{"lineNumber":603,"author":{"gitId":"-"},"content":"      if (!this.isSafariBrowser) {"},{"lineNumber":604,"author":{"gitId":"-"},"content":"        this.tmpFilterUntilDate \u003d until;"},{"lineNumber":605,"author":{"gitId":"-"},"content":"        event.target.value \u003d this.filterUntilDate;"},{"lineNumber":606,"author":{"gitId":"-"},"content":"        this.getFiltered();"},{"lineNumber":607,"author":{"gitId":"-"},"content":"      } else if (dateFormatRegex.test(until) \u0026\u0026 until \u003c\u003d this.maxDate) {"},{"lineNumber":608,"author":{"gitId":"-"},"content":"        this.tmpFilterUntilDate \u003d until;"},{"lineNumber":609,"author":{"gitId":"-"},"content":"        event.currentTarget.style.removeProperty(\u0027border-bottom-color\u0027);"},{"lineNumber":610,"author":{"gitId":"-"},"content":"        this.getFiltered();"},{"lineNumber":611,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":612,"author":{"gitId":"-"},"content":"        // invalid until date detected"},{"lineNumber":613,"author":{"gitId":"-"},"content":"        event.currentTarget.style.borderBottomColor \u003d \u0027red\u0027;"},{"lineNumber":614,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":615,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":616,"author":{"gitId":"-"},"content":""},{"lineNumber":617,"author":{"gitId":"jamessspanggg"},"content":"    updateCheckedFileTypeContribution(ele) {"},{"lineNumber":618,"author":{"gitId":"0blivious"},"content":"      let validCommits \u003d 0;"},{"lineNumber":619,"author":{"gitId":"0blivious"},"content":"      Object.keys(ele.fileTypeContribution).forEach((fileType) \u003d\u003e {"},{"lineNumber":620,"author":{"gitId":"0blivious"},"content":"        if (!this.filterBreakdown) {"},{"lineNumber":621,"author":{"gitId":"0blivious"},"content":"          validCommits +\u003d ele.fileTypeContribution[fileType];"},{"lineNumber":622,"author":{"gitId":"0blivious"},"content":"        } else if (this.checkedFileTypes.includes(fileType)) {"},{"lineNumber":623,"author":{"gitId":"0blivious"},"content":"          validCommits +\u003d ele.fileTypeContribution[fileType];"},{"lineNumber":624,"author":{"gitId":"0blivious"},"content":"        }"},{"lineNumber":625,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":626,"author":{"gitId":"jamessspanggg"},"content":"      ele.checkedFileTypeContribution \u003d validCommits;"},{"lineNumber":627,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":628,"author":{"gitId":"-"},"content":""},{"lineNumber":629,"author":{"gitId":"jamessspanggg"},"content":"    restoreZoomFiltered(info) {"},{"lineNumber":630,"author":{"gitId":"jamessspanggg"},"content":"      const {"},{"lineNumber":631,"author":{"gitId":"-"},"content":"        zSince, zUntil, zTimeFrame, zIsMerged, zFilterSearch,"},{"lineNumber":632,"author":{"gitId":"jamessspanggg"},"content":"      } \u003d info;"},{"lineNumber":633,"author":{"gitId":"0blivious"},"content":"      const filtered \u003d [];"},{"lineNumber":634,"author":{"gitId":"-"},"content":""},{"lineNumber":635,"author":{"gitId":"jamessspanggg"},"content":"      const groups \u003d JSON.parse(JSON.stringify(this.repos));"},{"lineNumber":636,"author":{"gitId":"-"},"content":""},{"lineNumber":637,"author":{"gitId":"jamessspanggg"},"content":"      const res \u003d [];"},{"lineNumber":638,"author":{"gitId":"jamessspanggg"},"content":"      groups.forEach((repo) \u003d\u003e {"},{"lineNumber":639,"author":{"gitId":"jamessspanggg"},"content":"        repo.users.forEach((user) \u003d\u003e {"},{"lineNumber":640,"author":{"gitId":"jamessspanggg"},"content":"          // only filter users that match with zoom user and previous searched user"},{"lineNumber":641,"author":{"gitId":"jamessspanggg"},"content":"          if (this.matchZoomUser(info, user) \u0026\u0026 this.isMatchSearchedUser(zFilterSearch, user)) {"},{"lineNumber":642,"author":{"gitId":"jamessspanggg"},"content":"            this.getUserCommits(user, zSince, zUntil);"},{"lineNumber":643,"author":{"gitId":"jamessspanggg"},"content":"            if (zTimeFrame \u003d\u003d\u003d \u0027week\u0027) {"},{"lineNumber":644,"author":{"gitId":"jamessspanggg"},"content":"              this.splitCommitsWeek(user, zSince, zUntil);"},{"lineNumber":645,"author":{"gitId":"jamessspanggg"},"content":"            }"},{"lineNumber":646,"author":{"gitId":"jamessspanggg"},"content":"            this.updateCheckedFileTypeContribution(user);"},{"lineNumber":647,"author":{"gitId":"jamessspanggg"},"content":"            res.push(user);"},{"lineNumber":648,"author":{"gitId":"jamessspanggg"},"content":"          }"},{"lineNumber":649,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":650,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":651,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":652,"author":{"gitId":"jamessspanggg"},"content":"      if (res.length) {"},{"lineNumber":653,"author":{"gitId":"jamessspanggg"},"content":"        filtered.push(res);"},{"lineNumber":654,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":655,"author":{"gitId":"-"},"content":""},{"lineNumber":656,"author":{"gitId":"-"},"content":"      if (zIsMerged) {"},{"lineNumber":657,"author":{"gitId":"niqiukun"},"content":"        this.mergeGroupByIndex(filtered, 0);"},{"lineNumber":658,"author":{"gitId":"jamessspanggg"},"content":"      }"},{"lineNumber":659,"author":{"gitId":"-"},"content":"      [[info.zUser]] \u003d filtered;"},{"lineNumber":660,"author":{"gitId":"-"},"content":"      info.zFileTypeColors \u003d this.fileTypeColors;"},{"lineNumber":661,"author":{"gitId":"-"},"content":"      info.isRefreshing \u003d false;"},{"lineNumber":662,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateTabZoomInfo\u0027, info);"},{"lineNumber":663,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":664,"author":{"gitId":"jamessspanggg"},"content":"    matchZoomUser(info, user) {"},{"lineNumber":665,"author":{"gitId":"jamessspanggg"},"content":"      const {"},{"lineNumber":666,"author":{"gitId":"-"},"content":"        zIsMerged, zFilterGroup, zRepo, zAuthor,"},{"lineNumber":667,"author":{"gitId":"jamessspanggg"},"content":"      } \u003d info;"},{"lineNumber":668,"author":{"gitId":"-"},"content":"      if (zIsMerged) {"},{"lineNumber":669,"author":{"gitId":"jamessspanggg"},"content":"        return zFilterGroup \u003d\u003d\u003d \u0027groupByRepos\u0027"},{"lineNumber":670,"author":{"gitId":"jamessspanggg"},"content":"          ? user.repoName \u003d\u003d\u003d zRepo"},{"lineNumber":671,"author":{"gitId":"jamessspanggg"},"content":"          : user.name \u003d\u003d\u003d zAuthor;"},{"lineNumber":672,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":673,"author":{"gitId":"jamessspanggg"},"content":"      return user.repoName \u003d\u003d\u003d zRepo \u0026\u0026 user.name \u003d\u003d\u003d zAuthor;"},{"lineNumber":674,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":675,"author":{"gitId":"-"},"content":""},{"lineNumber":676,"author":{"gitId":"0blivious"},"content":"    dateRounding(datestr, roundDown) {"},{"lineNumber":677,"author":{"gitId":"0blivious"},"content":"      // rounding up to nearest monday"},{"lineNumber":678,"author":{"gitId":"0blivious"},"content":"      const date \u003d new Date(datestr);"},{"lineNumber":679,"author":{"gitId":"0blivious"},"content":"      const day \u003d date.getUTCDay();"},{"lineNumber":680,"author":{"gitId":"0blivious"},"content":"      let datems \u003d date.getTime();"},{"lineNumber":681,"author":{"gitId":"0blivious"},"content":"      if (roundDown) {"},{"lineNumber":682,"author":{"gitId":"0blivious"},"content":"        datems -\u003d ((day + 6) % 7) * window.DAY_IN_MS;"},{"lineNumber":683,"author":{"gitId":"0blivious"},"content":"      } else {"},{"lineNumber":684,"author":{"gitId":"0blivious"},"content":"        datems +\u003d ((8 - day) % 7) * window.DAY_IN_MS;"},{"lineNumber":685,"author":{"gitId":"0blivious"},"content":"      }"},{"lineNumber":686,"author":{"gitId":"-"},"content":""},{"lineNumber":687,"author":{"gitId":"0blivious"},"content":"      return window.getDateStr(datems);"},{"lineNumber":688,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":689,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":690,"author":{"gitId":"-"},"content":"  created() {"},{"lineNumber":691,"author":{"gitId":"jamessspanggg"},"content":"    this.processFileTypes();"},{"lineNumber":692,"author":{"gitId":"-"},"content":"    this.renderFilterHash();"},{"lineNumber":693,"author":{"gitId":"-"},"content":"    this.getFiltered();"},{"lineNumber":694,"author":{"gitId":"-"},"content":"    if (this.$store.state.tabZoomInfo.isRefreshing) {"},{"lineNumber":695,"author":{"gitId":"-"},"content":"      const zoomInfo \u003d Object.assign({}, this.$store.state.tabZoomInfo);"},{"lineNumber":696,"author":{"gitId":"-"},"content":"      this.restoreZoomFiltered(zoomInfo);"},{"lineNumber":697,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":698,"author":{"gitId":"jamessspanggg"},"content":"  },"},{"lineNumber":699,"author":{"gitId":"niqiukun"},"content":"  mounted() {"},{"lineNumber":700,"author":{"gitId":"-"},"content":"    // Delay execution of filterGroupSelection watcher"},{"lineNumber":701,"author":{"gitId":"-"},"content":"    // to prevent clearing of merged groups"},{"lineNumber":702,"author":{"gitId":"niqiukun"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":703,"author":{"gitId":"-"},"content":"      this.filterGroupSelectionWatcherFlag \u003d true;"},{"lineNumber":704,"author":{"gitId":"niqiukun"},"content":"    }, 0);"},{"lineNumber":705,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":706,"author":{"gitId":"-"},"content":"  components: {"},{"lineNumber":707,"author":{"gitId":"0blivious"},"content":"    vSummaryCharts: window.vSummaryCharts,"},{"lineNumber":708,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":709,"author":{"gitId":"-"},"content":"};"}],"authorContributionMap":{"ccyccyccy":4,"niqiukun":59,"yash-chowdhary":1,"jamessspanggg":105,"-":452,"0blivious":88}},{"path":"frontend/src/static/js/v_summary_charts.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"niqiukun"},"content":"/* global Vuex */"},{"lineNumber":2,"author":{"gitId":"0blivious"},"content":"window.vSummaryCharts \u003d {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  props: [\u0027checkedFileTypes\u0027, \u0027filtered\u0027, \u0027avgContributionSize\u0027, \u0027filterBreakdown\u0027,"},{"lineNumber":4,"author":{"gitId":"0blivious"},"content":"      \u0027filterGroupSelection\u0027, \u0027filterTimeFrame\u0027, \u0027filterSinceDate\u0027, \u0027filterUntilDate\u0027, \u0027isMergeGroup\u0027,"},{"lineNumber":5,"author":{"gitId":"jamessspanggg"},"content":"      \u0027minDate\u0027, \u0027maxDate\u0027, \u0027filterSearch\u0027],"},{"lineNumber":6,"author":{"gitId":"0blivious"},"content":"  template: window.$(\u0027v_summary_charts\u0027).innerHTML,"},{"lineNumber":7,"author":{"gitId":"0blivious"},"content":"  data() {"},{"lineNumber":8,"author":{"gitId":"0blivious"},"content":"    return {"},{"lineNumber":9,"author":{"gitId":"0blivious"},"content":"      drags: [],"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      activeRepo: null,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      activeUser: null,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      activeTabType: null,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      isTabOnMergedGroup: false,"},{"lineNumber":14,"author":{"gitId":"0blivious"},"content":"    };"},{"lineNumber":15,"author":{"gitId":"0blivious"},"content":"  },"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"0blivious"},"content":"  computed: {"},{"lineNumber":18,"author":{"gitId":"0blivious"},"content":"    avgCommitSize() {"},{"lineNumber":19,"author":{"gitId":"0blivious"},"content":"      let totalCommits \u003d 0;"},{"lineNumber":20,"author":{"gitId":"0blivious"},"content":"      let totalCount \u003d 0;"},{"lineNumber":21,"author":{"gitId":"0blivious"},"content":"      this.filteredRepos.forEach((repo) \u003d\u003e {"},{"lineNumber":22,"author":{"gitId":"0blivious"},"content":"        repo.forEach((user) \u003d\u003e {"},{"lineNumber":23,"author":{"gitId":"0blivious"},"content":"          user.commits.forEach((slice) \u003d\u003e {"},{"lineNumber":24,"author":{"gitId":"0blivious"},"content":"            if (slice.insertions \u003e 0) {"},{"lineNumber":25,"author":{"gitId":"0blivious"},"content":"              totalCount +\u003d 1;"},{"lineNumber":26,"author":{"gitId":"0blivious"},"content":"              totalCommits +\u003d slice.insertions;"},{"lineNumber":27,"author":{"gitId":"0blivious"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"0blivious"},"content":"          });"},{"lineNumber":29,"author":{"gitId":"0blivious"},"content":"        });"},{"lineNumber":30,"author":{"gitId":"0blivious"},"content":"      });"},{"lineNumber":31,"author":{"gitId":"0blivious"},"content":"      return totalCommits / totalCount;"},{"lineNumber":32,"author":{"gitId":"0blivious"},"content":"    },"},{"lineNumber":33,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":34,"author":{"gitId":"0blivious"},"content":"    filteredRepos() {"},{"lineNumber":35,"author":{"gitId":"0blivious"},"content":"      return this.filtered.filter((repo) \u003d\u003e repo.length \u003e 0);"},{"lineNumber":36,"author":{"gitId":"0blivious"},"content":"    },"},{"lineNumber":37,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ...Vuex.mapState([\u0027mergedGroups\u0027, \u0027fileTypeColors\u0027]),"},{"lineNumber":39,"author":{"gitId":"0blivious"},"content":"  },"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  watch: {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u0027$store.state.isTabActive\u0027: function () {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      if (!this.$store.state.isTabActive) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.removeSelectedTab();"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":47,"author":{"gitId":"0blivious"},"content":"  methods: {"},{"lineNumber":48,"author":{"gitId":"0blivious"},"content":"    getFileTypeContributionBars(fileTypeContribution) {"},{"lineNumber":49,"author":{"gitId":"0blivious"},"content":"      let currentBarWidth \u003d 0;"},{"lineNumber":50,"author":{"gitId":"0blivious"},"content":"      const fullBarWidth \u003d 100;"},{"lineNumber":51,"author":{"gitId":"0blivious"},"content":"      const contributionPerFullBar \u003d (this.avgContributionSize * 2);"},{"lineNumber":52,"author":{"gitId":"0blivious"},"content":"      const allFileTypesContributionBars \u003d {};"},{"lineNumber":53,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":54,"author":{"gitId":"0blivious"},"content":"      Object.keys(fileTypeContribution)"},{"lineNumber":55,"author":{"gitId":"0blivious"},"content":"          .filter((fileType) \u003d\u003e this.checkedFileTypes.includes(fileType))"},{"lineNumber":56,"author":{"gitId":"0blivious"},"content":"          .forEach((fileType) \u003d\u003e {"},{"lineNumber":57,"author":{"gitId":"0blivious"},"content":"            const contribution \u003d fileTypeContribution[fileType];"},{"lineNumber":58,"author":{"gitId":"0blivious"},"content":"            let barWidth \u003d (contribution / contributionPerFullBar) * fullBarWidth;"},{"lineNumber":59,"author":{"gitId":"0blivious"},"content":"            const contributionBars \u003d [];"},{"lineNumber":60,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":61,"author":{"gitId":"0blivious"},"content":"            // if contribution bar for file type is able to fit on the current line"},{"lineNumber":62,"author":{"gitId":"0blivious"},"content":"            if (currentBarWidth + barWidth \u003c fullBarWidth) {"},{"lineNumber":63,"author":{"gitId":"0blivious"},"content":"              contributionBars.push(barWidth);"},{"lineNumber":64,"author":{"gitId":"0blivious"},"content":"              currentBarWidth +\u003d barWidth;"},{"lineNumber":65,"author":{"gitId":"0blivious"},"content":"            } else {"},{"lineNumber":66,"author":{"gitId":"0blivious"},"content":"              // take up all the space left on the current line"},{"lineNumber":67,"author":{"gitId":"0blivious"},"content":"              contributionBars.push(fullBarWidth - currentBarWidth);"},{"lineNumber":68,"author":{"gitId":"0blivious"},"content":"              barWidth -\u003d fullBarWidth - currentBarWidth;"},{"lineNumber":69,"author":{"gitId":"0blivious"},"content":"              // additional bar width will start on a new line"},{"lineNumber":70,"author":{"gitId":"0blivious"},"content":"              const numOfFullBars \u003d Math.floor(barWidth / fullBarWidth);"},{"lineNumber":71,"author":{"gitId":"0blivious"},"content":"              for (let i \u003d 0; i \u003c numOfFullBars; i +\u003d 1) {"},{"lineNumber":72,"author":{"gitId":"0blivious"},"content":"                contributionBars.push(fullBarWidth);"},{"lineNumber":73,"author":{"gitId":"0blivious"},"content":"              }"},{"lineNumber":74,"author":{"gitId":"0blivious"},"content":"              const remainingBarWidth \u003d barWidth % fullBarWidth;"},{"lineNumber":75,"author":{"gitId":"0blivious"},"content":"              if (remainingBarWidth !\u003d\u003d 0) {"},{"lineNumber":76,"author":{"gitId":"0blivious"},"content":"                contributionBars.push(remainingBarWidth);"},{"lineNumber":77,"author":{"gitId":"0blivious"},"content":"              }"},{"lineNumber":78,"author":{"gitId":"0blivious"},"content":"              currentBarWidth \u003d remainingBarWidth;"},{"lineNumber":79,"author":{"gitId":"0blivious"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":81,"author":{"gitId":"0blivious"},"content":"            allFileTypesContributionBars[fileType] \u003d contributionBars;"},{"lineNumber":82,"author":{"gitId":"0blivious"},"content":"          });"},{"lineNumber":83,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":84,"author":{"gitId":"0blivious"},"content":"      return allFileTypesContributionBars;"},{"lineNumber":85,"author":{"gitId":"0blivious"},"content":"    },"},{"lineNumber":86,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":87,"author":{"gitId":"0blivious"},"content":"    getFileTypes(repo) {"},{"lineNumber":88,"author":{"gitId":"0blivious"},"content":"      const fileTypes \u003d [];"},{"lineNumber":89,"author":{"gitId":"0blivious"},"content":"      repo.forEach((user) \u003d\u003e {"},{"lineNumber":90,"author":{"gitId":"0blivious"},"content":"        Object.keys(user.fileTypeContribution).forEach((fileType) \u003d\u003e {"},{"lineNumber":91,"author":{"gitId":"0blivious"},"content":"          if (this.checkedFileTypes.includes(fileType) \u0026\u0026 !fileTypes.includes(fileType)) {"},{"lineNumber":92,"author":{"gitId":"0blivious"},"content":"            fileTypes.push(fileType);"},{"lineNumber":93,"author":{"gitId":"0blivious"},"content":"          }"},{"lineNumber":94,"author":{"gitId":"0blivious"},"content":"        });"},{"lineNumber":95,"author":{"gitId":"0blivious"},"content":"      });"},{"lineNumber":96,"author":{"gitId":"0blivious"},"content":"      return fileTypes;"},{"lineNumber":97,"author":{"gitId":"0blivious"},"content":"    },"},{"lineNumber":98,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":99,"author":{"gitId":"jamessspanggg"},"content":"    getGroupTotalContribution(group) {"},{"lineNumber":100,"author":{"gitId":"0blivious"},"content":"      return group.reduce((acc, ele) \u003d\u003e acc + ele.checkedFileTypeContribution, 0);"},{"lineNumber":101,"author":{"gitId":"jamessspanggg"},"content":"    },"},{"lineNumber":102,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":103,"author":{"gitId":"0blivious"},"content":"    getContributionBars(totalContribution) {"},{"lineNumber":104,"author":{"gitId":"0blivious"},"content":"      const res \u003d [];"},{"lineNumber":105,"author":{"gitId":"0blivious"},"content":"      const contributionLimit \u003d (this.avgContributionSize * 2);"},{"lineNumber":106,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":107,"author":{"gitId":"0blivious"},"content":"      const cnt \u003d parseInt(totalContribution / contributionLimit, 10);"},{"lineNumber":108,"author":{"gitId":"0blivious"},"content":"      for (let cntId \u003d 0; cntId \u003c cnt; cntId +\u003d 1) {"},{"lineNumber":109,"author":{"gitId":"0blivious"},"content":"        res.push(100);"},{"lineNumber":110,"author":{"gitId":"0blivious"},"content":"      }"},{"lineNumber":111,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":112,"author":{"gitId":"0blivious"},"content":"      const last \u003d (totalContribution % contributionLimit) / contributionLimit;"},{"lineNumber":113,"author":{"gitId":"0blivious"},"content":"      if (last !\u003d\u003d 0) {"},{"lineNumber":114,"author":{"gitId":"0blivious"},"content":"        res.push(last * 100);"},{"lineNumber":115,"author":{"gitId":"0blivious"},"content":"      }"},{"lineNumber":116,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":117,"author":{"gitId":"0blivious"},"content":"      return res;"},{"lineNumber":118,"author":{"gitId":"0blivious"},"content":"    },"},{"lineNumber":119,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":120,"author":{"gitId":"0blivious"},"content":"    getAuthorProfileLink(userName) {"},{"lineNumber":121,"author":{"gitId":"0blivious"},"content":"      return `https://github.com/${userName}`;"},{"lineNumber":122,"author":{"gitId":"0blivious"},"content":"    },"},{"lineNumber":123,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":124,"author":{"gitId":"0blivious"},"content":"    getRepoLink(repo) {"},{"lineNumber":125,"author":{"gitId":"0blivious"},"content":"      const { REPOS } \u003d window;"},{"lineNumber":126,"author":{"gitId":"0blivious"},"content":"      const { location, branch } \u003d REPOS[repo.repoId];"},{"lineNumber":127,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":128,"author":{"gitId":"0blivious"},"content":"      if (Object.prototype.hasOwnProperty.call(location, \u0027organization\u0027)) {"},{"lineNumber":129,"author":{"gitId":"0blivious"},"content":"        return `${window.BASE_URL}/${location.organization}/${location.repoName}/tree/${branch}`;"},{"lineNumber":130,"author":{"gitId":"0blivious"},"content":"      }"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      this.removeSelectedTab();"},{"lineNumber":132,"author":{"gitId":"0blivious"},"content":"      return repo.location;"},{"lineNumber":133,"author":{"gitId":"0blivious"},"content":"    },"},{"lineNumber":134,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":135,"author":{"gitId":"0blivious"},"content":"    // triggering opening of tabs //"},{"lineNumber":136,"author":{"gitId":"niqiukun"},"content":"    openTabAuthorship(user, repo, index, isMerged) {"},{"lineNumber":137,"author":{"gitId":"0blivious"},"content":"      const {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        minDate, maxDate, checkedFileTypes,"},{"lineNumber":139,"author":{"gitId":"0blivious"},"content":"      } \u003d this;"},{"lineNumber":140,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":141,"author":{"gitId":"0blivious"},"content":"      const info \u003d {"},{"lineNumber":142,"author":{"gitId":"0blivious"},"content":"        minDate,"},{"lineNumber":143,"author":{"gitId":"0blivious"},"content":"        maxDate,"},{"lineNumber":144,"author":{"gitId":"0blivious"},"content":"        checkedFileTypes,"},{"lineNumber":145,"author":{"gitId":"0blivious"},"content":"        author: user.name,"},{"lineNumber":146,"author":{"gitId":"0blivious"},"content":"        repo: user.repoName,"},{"lineNumber":147,"author":{"gitId":"0blivious"},"content":"        name: user.displayName,"},{"lineNumber":148,"author":{"gitId":"niqiukun"},"content":"        isMergeGroup: isMerged,"},{"lineNumber":149,"author":{"gitId":"0blivious"},"content":"        location: this.getRepoLink(repo[index]),"},{"lineNumber":150,"author":{"gitId":"0blivious"},"content":"        repoIndex: index,"},{"lineNumber":151,"author":{"gitId":"0blivious"},"content":"      };"},{"lineNumber":152,"author":{"gitId":"-"},"content":"      this.addSelectedTab(user.name, user.repoName, \u0027authorship\u0027, isMerged);"},{"lineNumber":153,"author":{"gitId":"0blivious"},"content":"      this.$store.commit(\u0027updateTabAuthorshipInfo\u0027, info);"},{"lineNumber":154,"author":{"gitId":"0blivious"},"content":"    },"},{"lineNumber":155,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    openTabZoomSubrange(user, evt, isMerged) {"},{"lineNumber":157,"author":{"gitId":"0blivious"},"content":"      const isKeyPressed \u003d window.isMacintosh ? evt.metaKey : evt.ctrlKey;"},{"lineNumber":158,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":159,"author":{"gitId":"0blivious"},"content":"      if (isKeyPressed) {"},{"lineNumber":160,"author":{"gitId":"0blivious"},"content":"        if (this.drags.length \u003d\u003d\u003d 0) {"},{"lineNumber":161,"author":{"gitId":"0blivious"},"content":"          this.dragViewDown(evt);"},{"lineNumber":162,"author":{"gitId":"0blivious"},"content":"        } else {"},{"lineNumber":163,"author":{"gitId":"0blivious"},"content":"          this.dragViewUp(evt);"},{"lineNumber":164,"author":{"gitId":"0blivious"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"0blivious"},"content":"      }"},{"lineNumber":166,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":167,"author":{"gitId":"0blivious"},"content":"      // skip if accidentally clicked on ramp chart"},{"lineNumber":168,"author":{"gitId":"0blivious"},"content":"      if (this.drags.length \u003d\u003d\u003d 2 \u0026\u0026 this.drags[1] - this.drags[0]) {"},{"lineNumber":169,"author":{"gitId":"0blivious"},"content":"        const tdiff \u003d new Date(this.filterUntilDate) - new Date(this.filterSinceDate);"},{"lineNumber":170,"author":{"gitId":"0blivious"},"content":"        const idxs \u003d this.drags.map((x) \u003d\u003e x * tdiff / 100);"},{"lineNumber":171,"author":{"gitId":"0blivious"},"content":"        const tsince \u003d window.getDateStr(new Date(this.filterSinceDate).getTime() + idxs[0]);"},{"lineNumber":172,"author":{"gitId":"0blivious"},"content":"        const tuntil \u003d window.getDateStr(new Date(this.filterSinceDate).getTime() + idxs[1]);"},{"lineNumber":173,"author":{"gitId":"0blivious"},"content":"        this.drags \u003d [];"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        this.openTabZoom(user, tsince, tuntil, isMerged);"},{"lineNumber":175,"author":{"gitId":"0blivious"},"content":"      }"},{"lineNumber":176,"author":{"gitId":"0blivious"},"content":"    },"},{"lineNumber":177,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"    openTabZoom(user, since, until, isMerged) {"},{"lineNumber":179,"author":{"gitId":"0blivious"},"content":"      const {"},{"lineNumber":180,"author":{"gitId":"niqiukun"},"content":"        avgCommitSize, filterGroupSelection, filterTimeFrame, filterSearch,"},{"lineNumber":181,"author":{"gitId":"0blivious"},"content":"      } \u003d this;"},{"lineNumber":182,"author":{"gitId":"0blivious"},"content":"      const clonedUser \u003d Object.assign({}, user); // so that changes in summary won\u0027t affect zoom"},{"lineNumber":183,"author":{"gitId":"0blivious"},"content":"      const info \u003d {"},{"lineNumber":184,"author":{"gitId":"0blivious"},"content":"        zRepo: user.repoName,"},{"lineNumber":185,"author":{"gitId":"0blivious"},"content":"        zAuthor: user.name,"},{"lineNumber":186,"author":{"gitId":"0blivious"},"content":"        zFilterGroup: filterGroupSelection,"},{"lineNumber":187,"author":{"gitId":"0blivious"},"content":"        zTimeFrame: filterTimeFrame,"},{"lineNumber":188,"author":{"gitId":"0blivious"},"content":"        zAvgCommitSize: avgCommitSize,"},{"lineNumber":189,"author":{"gitId":"0blivious"},"content":"        zUser: clonedUser,"},{"lineNumber":190,"author":{"gitId":"0blivious"},"content":"        zLocation: this.getRepoLink(user),"},{"lineNumber":191,"author":{"gitId":"0blivious"},"content":"        zSince: since,"},{"lineNumber":192,"author":{"gitId":"0blivious"},"content":"        zUntil: until,"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        zIsMerged: isMerged,"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        zFileTypeColors: this.fileTypeColors,"},{"lineNumber":195,"author":{"gitId":"0blivious"},"content":"        zFromRamp: false,"},{"lineNumber":196,"author":{"gitId":"jamessspanggg"},"content":"        zFilterSearch: filterSearch,"},{"lineNumber":197,"author":{"gitId":"0blivious"},"content":"      };"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      this.addSelectedTab(user.name, user.repoName, \u0027zoom\u0027, isMerged);"},{"lineNumber":199,"author":{"gitId":"0blivious"},"content":"      this.$store.commit(\u0027updateTabZoomInfo\u0027, info);"},{"lineNumber":200,"author":{"gitId":"0blivious"},"content":"    },"},{"lineNumber":201,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":202,"author":{"gitId":"0blivious"},"content":"    getBaseTarget(target) {"},{"lineNumber":203,"author":{"gitId":"0blivious"},"content":"      return target.className \u003d\u003d\u003d \u0027summary-chart__ramp\u0027"},{"lineNumber":204,"author":{"gitId":"0blivious"},"content":"          ? target"},{"lineNumber":205,"author":{"gitId":"0blivious"},"content":"          : this.getBaseTarget(target.parentElement);"},{"lineNumber":206,"author":{"gitId":"0blivious"},"content":"    },"},{"lineNumber":207,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":208,"author":{"gitId":"0blivious"},"content":"    dragViewDown(evt) {"},{"lineNumber":209,"author":{"gitId":"0blivious"},"content":"      window.deactivateAllOverlays();"},{"lineNumber":210,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":211,"author":{"gitId":"0blivious"},"content":"      const pos \u003d evt.clientX;"},{"lineNumber":212,"author":{"gitId":"0blivious"},"content":"      const ramp \u003d this.getBaseTarget(evt.target);"},{"lineNumber":213,"author":{"gitId":"0blivious"},"content":"      this.drags \u003d [pos];"},{"lineNumber":214,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":215,"author":{"gitId":"0blivious"},"content":"      const base \u003d ramp.offsetWidth;"},{"lineNumber":216,"author":{"gitId":"0blivious"},"content":"      const offset \u003d ramp.parentElement.offsetLeft;"},{"lineNumber":217,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":218,"author":{"gitId":"0blivious"},"content":"      const overlay \u003d ramp.getElementsByClassName(\u0027overlay\u0027)[0];"},{"lineNumber":219,"author":{"gitId":"0blivious"},"content":"      overlay.style.marginLeft \u003d \u00270\u0027;"},{"lineNumber":220,"author":{"gitId":"0blivious"},"content":"      overlay.style.width \u003d `${(pos - offset) * 100 / base}%`;"},{"lineNumber":221,"author":{"gitId":"0blivious"},"content":"      overlay.className +\u003d \u0027 edge\u0027;"},{"lineNumber":222,"author":{"gitId":"0blivious"},"content":"    },"},{"lineNumber":223,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":224,"author":{"gitId":"0blivious"},"content":"    dragViewUp(evt) {"},{"lineNumber":225,"author":{"gitId":"0blivious"},"content":"      window.deactivateAllOverlays();"},{"lineNumber":226,"author":{"gitId":"0blivious"},"content":"      const ramp \u003d this.getBaseTarget(evt.target);"},{"lineNumber":227,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":228,"author":{"gitId":"0blivious"},"content":"      const base \u003d ramp.offsetWidth;"},{"lineNumber":229,"author":{"gitId":"0blivious"},"content":"      this.drags.push(evt.clientX);"},{"lineNumber":230,"author":{"gitId":"0blivious"},"content":"      this.drags.sort((a, b) \u003d\u003e a - b);"},{"lineNumber":231,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":232,"author":{"gitId":"0blivious"},"content":"      const offset \u003d ramp.parentElement.offsetLeft;"},{"lineNumber":233,"author":{"gitId":"0blivious"},"content":"      this.drags \u003d this.drags.map((x) \u003d\u003e (x - offset) * 100 / base);"},{"lineNumber":234,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":235,"author":{"gitId":"0blivious"},"content":"      const overlay \u003d ramp.getElementsByClassName(\u0027overlay\u0027)[0];"},{"lineNumber":236,"author":{"gitId":"0blivious"},"content":"      overlay.style.marginLeft \u003d `${this.drags[0]}%`;"},{"lineNumber":237,"author":{"gitId":"0blivious"},"content":"      overlay.style.width \u003d `${this.drags[1] - this.drags[0]}%`;"},{"lineNumber":238,"author":{"gitId":"0blivious"},"content":"      overlay.className +\u003d \u0027 show\u0027;"},{"lineNumber":239,"author":{"gitId":"0blivious"},"content":"    },"},{"lineNumber":240,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":241,"author":{"gitId":"0blivious"},"content":"    getPercentile(index) {"},{"lineNumber":242,"author":{"gitId":"0blivious"},"content":"      if (this.filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027) {"},{"lineNumber":243,"author":{"gitId":"0blivious"},"content":"        return (Math.round((index + 1) * 1000 / this.filtered[0].length) / 10).toFixed(1);"},{"lineNumber":244,"author":{"gitId":"0blivious"},"content":"      }"},{"lineNumber":245,"author":{"gitId":"0blivious"},"content":"      return (Math.round((index + 1) * 1000 / this.filtered.length) / 10).toFixed(1);"},{"lineNumber":246,"author":{"gitId":"0blivious"},"content":"    },"},{"lineNumber":247,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":248,"author":{"gitId":"niqiukun"},"content":"    getGroupName(group) {"},{"lineNumber":249,"author":{"gitId":"niqiukun"},"content":"      return window.getGroupName(group, this.filterGroupSelection);"},{"lineNumber":250,"author":{"gitId":"niqiukun"},"content":"    },"},{"lineNumber":251,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":252,"author":{"gitId":"niqiukun"},"content":"    isGroupMerged(groupName) {"},{"lineNumber":253,"author":{"gitId":"niqiukun"},"content":"      return this.mergedGroups.includes(groupName);"},{"lineNumber":254,"author":{"gitId":"niqiukun"},"content":"    },"},{"lineNumber":255,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":256,"author":{"gitId":"niqiukun"},"content":"    handleMergeGroup(groupName) {"},{"lineNumber":257,"author":{"gitId":"niqiukun"},"content":"      const info \u003d this.mergedGroups;"},{"lineNumber":258,"author":{"gitId":"niqiukun"},"content":"      info.push(groupName);"},{"lineNumber":259,"author":{"gitId":"niqiukun"},"content":"      this.$store.commit(\u0027updateMergedGroup\u0027, info);"},{"lineNumber":260,"author":{"gitId":"niqiukun"},"content":"    },"},{"lineNumber":261,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":262,"author":{"gitId":"niqiukun"},"content":"    handleExpandGroup(groupName) {"},{"lineNumber":263,"author":{"gitId":"niqiukun"},"content":"      const info \u003d this.mergedGroups.filter((x) \u003d\u003e x !\u003d\u003d groupName);"},{"lineNumber":264,"author":{"gitId":"niqiukun"},"content":"      this.$store.commit(\u0027updateMergedGroup\u0027, info);"},{"lineNumber":265,"author":{"gitId":"niqiukun"},"content":"    },"},{"lineNumber":266,"author":{"gitId":"-"},"content":""},{"lineNumber":267,"author":{"gitId":"-"},"content":"    getAuthorDisplayName(repo) {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"      return window.getAuthorDisplayName(repo);"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"    retrieveSelectedTabHash() {"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      const hash \u003d window.hashParams;"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"      if (hash.tabAuthor) {"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        this.activeUser \u003d hash.tabAuthor;"},{"lineNumber":276,"author":{"gitId":"-"},"content":"      } else if (hash.zA) {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        this.activeUser \u003d hash.zA;"},{"lineNumber":278,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":279,"author":{"gitId":"-"},"content":""},{"lineNumber":280,"author":{"gitId":"-"},"content":"      if (hash.tabRepo) {"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        this.activeRepo \u003d hash.tabRepo;"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      } else if (hash.zR) {"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        this.activeRepo \u003d hash.zR;"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":285,"author":{"gitId":"-"},"content":""},{"lineNumber":286,"author":{"gitId":"-"},"content":"      if (hash.isTabOnMergedGroup) {"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        if (this.filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027) {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"          this.activeRepo \u003d null;"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        } else if (this.filterGroupSelection \u003d\u003d\u003d \u0027groupByRepos\u0027) {"},{"lineNumber":290,"author":{"gitId":"-"},"content":"          this.activeUser \u003d null;"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        this.isTabOnMergedGroup \u003d true;"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"-"},"content":"      if (hash.tabType) {"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        this.activeTabType \u003d hash.tabType;"},{"lineNumber":297,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"    addSelectedTab(userName, repo, tabType, isMerged) {"},{"lineNumber":301,"author":{"gitId":"-"},"content":"      if (!isMerged || this.filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027) {"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        this.activeUser \u003d userName;"},{"lineNumber":303,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        this.activeUser \u003d null;"},{"lineNumber":305,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"      if (isMerged \u0026\u0026 this.filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027) {"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        this.activeRepo \u003d null;"},{"lineNumber":309,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        this.activeRepo \u003d repo;"},{"lineNumber":311,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":312,"author":{"gitId":"-"},"content":""},{"lineNumber":313,"author":{"gitId":"-"},"content":"      if (isMerged) {"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        window.addHash(\u0027isTabOnMergedGroup\u0027, \u0027true\u0027);"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        this.isTabOnMergedGroup \u003d true;"},{"lineNumber":316,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        window.removeHash(\u0027isTabOnMergedGroup\u0027);"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        this.isTabOnMergedGroup \u003d false;"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":320,"author":{"gitId":"-"},"content":""},{"lineNumber":321,"author":{"gitId":"-"},"content":"      this.activeTabType \u003d tabType;"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":324,"author":{"gitId":"-"},"content":""},{"lineNumber":325,"author":{"gitId":"-"},"content":"    removeSelectedTab() {"},{"lineNumber":326,"author":{"gitId":"-"},"content":"      this.activeUser \u003d null;"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      this.activeRepo \u003d null;"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      this.activeTabType \u003d null;"},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027isTabOnMergedGroup\u0027);"},{"lineNumber":331,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":"    isSelectedTab(userName, repo, tabType, isMerged) {"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      if (!isMerged) {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        return this.activeUser \u003d\u003d\u003d userName \u0026\u0026 this.activeRepo \u003d\u003d\u003d repo"},{"lineNumber":337,"author":{"gitId":"-"},"content":"            \u0026\u0026 this.activeTabType \u003d\u003d\u003d tabType;"},{"lineNumber":338,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":339,"author":{"gitId":"-"},"content":""},{"lineNumber":340,"author":{"gitId":"-"},"content":"      if (this.filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027) {"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        return this.isTabOnMergedGroup \u0026\u0026 this.activeUser \u003d\u003d\u003d userName"},{"lineNumber":342,"author":{"gitId":"-"},"content":"            \u0026\u0026 this.activeTabType \u003d\u003d\u003d tabType;"},{"lineNumber":343,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"-"},"content":"      return this.isTabOnMergedGroup \u0026\u0026 this.activeRepo \u003d\u003d\u003d repo"},{"lineNumber":346,"author":{"gitId":"-"},"content":"          \u0026\u0026 this.activeTabType \u003d\u003d\u003d tabType;"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":348,"author":{"gitId":"-"},"content":""},{"lineNumber":349,"author":{"gitId":"-"},"content":"    isSelectedGroup(userName, repo) {"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      return this.isTabOnMergedGroup"},{"lineNumber":351,"author":{"gitId":"-"},"content":"          \u0026\u0026 ((this.filterGroupSelection \u003d\u003d\u003d \u0027groupByRepos\u0027 \u0026\u0026 this.activeRepo \u003d\u003d\u003d repo)"},{"lineNumber":352,"author":{"gitId":"-"},"content":"          || (this.filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027 \u0026\u0026 this.activeUser \u003d\u003d\u003d userName));"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":354,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":355,"author":{"gitId":"-"},"content":"  created() {"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    this.retrieveSelectedTabHash();"},{"lineNumber":357,"author":{"gitId":"0blivious"},"content":"  },"},{"lineNumber":358,"author":{"gitId":"0blivious"},"content":"  components: {"},{"lineNumber":359,"author":{"gitId":"0blivious"},"content":"    vRamp: window.vRamp,"},{"lineNumber":360,"author":{"gitId":"0blivious"},"content":"  },"},{"lineNumber":361,"author":{"gitId":"0blivious"},"content":"};"}],"authorContributionMap":{"niqiukun":24,"jamessspanggg":5,"0blivious":218,"-":114}},{"path":"frontend/src/static/js/v_zoom.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/* global Vuex */"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"function zoomInitialState() {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  return {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    showAllCommitMessageBody: true,"},{"lineNumber":6,"author":{"gitId":"0blivious"},"content":"    commitsSortType: \u0027time\u0027,"},{"lineNumber":7,"author":{"gitId":"0blivious"},"content":"    toReverseSortedCommits: true,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    isCommitsFinalized: false,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    selectedFileTypes: [],"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    fileTypes: [],"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"window.vZoom \u003d {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  template: window.$(\u0027v_zoom\u0027).innerHTML,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  data() {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      expandedCommitMessagesCount: this.totalCommitMessageBodyCount,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      ...zoomInitialState(),"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"  computed: {"},{"lineNumber":24,"author":{"gitId":"0blivious"},"content":"    sortingFunction() {"},{"lineNumber":25,"author":{"gitId":"ang-zeyu"},"content":"      const commitSortFunction \u003d this.commitsSortType \u003d\u003d\u003d \u0027time\u0027"},{"lineNumber":26,"author":{"gitId":"ang-zeyu"},"content":"        ? (commit) \u003d\u003e commit.date"},{"lineNumber":27,"author":{"gitId":"ang-zeyu"},"content":"        : (commit) \u003d\u003e commit.insertions;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"0blivious"},"content":"      return (a, b) \u003d\u003e (this.toReverseSortedCommits ? -1 : 1)"},{"lineNumber":30,"author":{"gitId":"ang-zeyu"},"content":"        * window.comparator(commitSortFunction)(a, b);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    filteredUser() {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      const {"},{"lineNumber":34,"author":{"gitId":"jamessspanggg"},"content":"        zUser, zSince, zUntil, zTimeFrame,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      } \u003d this.info;"},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"      const filteredUser \u003d Object.assign({}, zUser);"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":"      const date \u003d zTimeFrame \u003d\u003d\u003d \u0027week\u0027 ? \u0027endDate\u0027 : \u0027date\u0027;"},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":"      filteredUser.commits \u003d zUser.commits.filter("},{"lineNumber":40,"author":{"gitId":"jamessspanggg"},"content":"          (commit) \u003d\u003e commit[date] \u003e\u003d zSince \u0026\u0026 commit[date] \u003c\u003d zUntil,"},{"lineNumber":41,"author":{"gitId":"0blivious"},"content":"      ).sort(this.sortingFunction);"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"      return filteredUser;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    selectedCommits() {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      const commits \u003d [];"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      this.filteredUser.commits.forEach((commit) \u003d\u003e {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        const filteredCommit \u003d { ...commit };"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        filteredCommit.commitResults \u003d [];"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        commit.commitResults.forEach((slice) \u003d\u003e {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          if (Object.keys(slice.fileTypesAndContributionMap).some("},{"lineNumber":52,"author":{"gitId":"-"},"content":"              (fileType) \u003d\u003e this.selectedFileTypes.indexOf(fileType) !\u003d\u003d -1,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          )) {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            filteredCommit.commitResults.push(slice);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (filteredCommit.commitResults.length \u003e 0) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          commits.push(filteredCommit);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      return commits;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    totalCommitMessageBodyCount() {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      let nonEmptyCommitMessageCount \u003d 0;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      this.selectedCommits.forEach((commit) \u003d\u003e {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        commit.commitResults.forEach((commitResult) \u003d\u003e {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"          if (commitResult.messageBody !\u003d\u003d \u0027\u0027) {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            nonEmptyCommitMessageCount +\u003d 1;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"      return nonEmptyCommitMessageCount;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    isSelectAllChecked: {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      get() {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this.selectedFileTypes.length \u003d\u003d\u003d this.fileTypes.length;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      set(value) {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (value) {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"          this.selectedFileTypes \u003d this.fileTypes.slice();"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"          this.selectedFileTypes \u003d [];"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.updateSelectedFileTypesHash();"},{"lineNumber":86,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"    ...Vuex.mapState({"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      fileTypeColors: \u0027fileTypeColors\u0027,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      info: \u0027tabZoomInfo\u0027,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }),"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"  watch: {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    info() {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"      const newData \u003d {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expandedCommitMessagesCount: this.totalCommitMessageBodyCount,"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ...zoomInitialState(),"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      Object.assign(this.$data, newData);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      this.initiate();"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      this.setInfoHash();"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    selectedFileTypes() {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      this.$nextTick(() \u003d\u003e {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        this.updateExpandedCommitMessagesCount();"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    commitsSortType() {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      window.addHash(\u0027zCST\u0027, this.commitsSortType);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    toReverseSortedCommits() {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      window.addHash(\u0027zRSC\u0027, this.toReverseSortedCommits);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"  methods: {"},{"lineNumber":121,"author":{"gitId":"jamessspanggg"},"content":"    initiate() {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      // This code crashes if info.zUser is not defined"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      this.updateFileTypes();"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      this.selectedFileTypes \u003d this.fileTypes.slice();"},{"lineNumber":125,"author":{"gitId":"jamessspanggg"},"content":"    },"},{"lineNumber":126,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"    openSummary() {"},{"lineNumber":128,"author":{"gitId":"0blivious"},"content":"      const info \u003d { since: this.info.zSince, until: this.info.zUntil };"},{"lineNumber":129,"author":{"gitId":"0blivious"},"content":"      this.$store.commit(\u0027updateSummaryDates\u0027, info);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"    getSliceLink(slice) {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      if (this.info.zIsMerged) {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return `${window.getBaseLink(slice.repoId)}/commit/${slice.hash}`;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":136,"author":{"gitId":"jamessspanggg"},"content":"      return `${window.getBaseLink(this.info.zUser.repoId)}/commit/${slice.hash}`;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"0blivious"},"content":"    scrollToCommit(tag, commit) {"},{"lineNumber":140,"author":{"gitId":"0blivious"},"content":"      const el \u003d this.$el.getElementsByClassName(`${commit} ${tag}`)[0];"},{"lineNumber":141,"author":{"gitId":"jamessspanggg"},"content":"      if (el) {"},{"lineNumber":142,"author":{"gitId":"0blivious"},"content":"        el.focus();"},{"lineNumber":143,"author":{"gitId":"jamessspanggg"},"content":"      }"},{"lineNumber":144,"author":{"gitId":"jamessspanggg"},"content":"    },"},{"lineNumber":145,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"    updateFileTypes() {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"      const commitsFileTypes \u003d new Set();"},{"lineNumber":148,"author":{"gitId":"-"},"content":"      this.filteredUser.commits.forEach((commit) \u003d\u003e {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        commit.commitResults.forEach((slice) \u003d\u003e {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"          Object.keys(slice.fileTypesAndContributionMap).forEach((fileType) \u003d\u003e {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            commitsFileTypes.add(fileType);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      this.fileTypes \u003d Object.keys(this.filteredUser.fileTypeContribution).filter("},{"lineNumber":156,"author":{"gitId":"-"},"content":"          (fileType) \u003d\u003e commitsFileTypes.has(fileType),"},{"lineNumber":157,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"    retrieveHashes() {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      this.retrieveSortHash();"},{"lineNumber":162,"author":{"gitId":"-"},"content":"      this.retrieveSelectedFileTypesHash();"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"    retrieveSortHash() {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"      const hash \u003d window.hashParams;"},{"lineNumber":167,"author":{"gitId":"-"},"content":"      if (hash.zCST) {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        this.commitsSortType \u003d hash.zCST;"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      if (hash.zRSC) {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        this.toReverseSortedCommits \u003d (hash.zRSC \u003d\u003d\u003d \u0027true\u0027);"},{"lineNumber":172,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"    retrieveSelectedFileTypesHash() {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      const hash \u003d window.hashParams;"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"      if (hash.zFT) {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        this.selectedFileTypes \u003d hash.zFT"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            .split(window.HASH_DELIMITER)"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            .filter((fileType) \u003d\u003e this.fileTypes.includes(fileType));"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"    updateSelectedFileTypesHash() {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"      const fileTypeHash \u003d this.selectedFileTypes.length \u003e 0"},{"lineNumber":187,"author":{"gitId":"-"},"content":"          ? this.selectedFileTypes.reduce((a, b) \u003d\u003e `${a}~${b}`)"},{"lineNumber":188,"author":{"gitId":"-"},"content":"          : \u0027\u0027;"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"      window.addHash(\u0027zFT\u0027, fileTypeHash);"},{"lineNumber":191,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"jamessspanggg"},"content":"    setInfoHash() {"},{"lineNumber":195,"author":{"gitId":"jamessspanggg"},"content":"      const { addHash, encodeHash } \u003d window;"},{"lineNumber":196,"author":{"gitId":"jamessspanggg"},"content":"      const {"},{"lineNumber":197,"author":{"gitId":"0blivious"},"content":"        zAvgCommitSize, zSince, zUntil, zFilterGroup,"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        zTimeFrame, zIsMerged, zAuthor, zRepo, zFromRamp, zFilterSearch,"},{"lineNumber":199,"author":{"gitId":"jamessspanggg"},"content":"      } \u003d this.info;"},{"lineNumber":200,"author":{"gitId":"jamessspanggg"},"content":"      addHash(\u0027zA\u0027, zAuthor);"},{"lineNumber":201,"author":{"gitId":"jamessspanggg"},"content":"      addHash(\u0027zR\u0027, zRepo);"},{"lineNumber":202,"author":{"gitId":"jamessspanggg"},"content":"      addHash(\u0027zACS\u0027, zAvgCommitSize);"},{"lineNumber":203,"author":{"gitId":"jamessspanggg"},"content":"      addHash(\u0027zS\u0027, zSince);"},{"lineNumber":204,"author":{"gitId":"jamessspanggg"},"content":"      addHash(\u0027zFS\u0027, zFilterSearch);"},{"lineNumber":205,"author":{"gitId":"jamessspanggg"},"content":"      addHash(\u0027zU\u0027, zUntil);"},{"lineNumber":206,"author":{"gitId":"-"},"content":"      addHash(\u0027zMG\u0027, zIsMerged);"},{"lineNumber":207,"author":{"gitId":"jamessspanggg"},"content":"      addHash(\u0027zFTF\u0027, zTimeFrame);"},{"lineNumber":208,"author":{"gitId":"jamessspanggg"},"content":"      addHash(\u0027zFGS\u0027, zFilterGroup);"},{"lineNumber":209,"author":{"gitId":"0blivious"},"content":"      addHash(\u0027zFR\u0027, zFromRamp);"},{"lineNumber":210,"author":{"gitId":"jamessspanggg"},"content":"      encodeHash();"},{"lineNumber":211,"author":{"gitId":"jamessspanggg"},"content":"    },"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"    toggleAllCommitMessagesBody(isActive) {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      this.showAllCommitMessageBody \u003d isActive;"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"jamessspanggg"},"content":"      const toRename \u003d this.showAllCommitMessageBody ? \u0027commit-message message-body active\u0027 : \u0027commit-message message-body\u0027;"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"jamessspanggg"},"content":"      const commitMessageClasses \u003d document.getElementsByClassName(\u0027commit-message message-body\u0027);"},{"lineNumber":219,"author":{"gitId":"-"},"content":"      Array.from(commitMessageClasses).forEach((commitMessageClass) \u003d\u003e {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        commitMessageClass.className \u003d toRename;"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"      this.expandedCommitMessagesCount \u003d isActive ? this.totalCommitMessageBodyCount : 0;"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"    updateExpandedCommitMessagesCount() {"},{"lineNumber":227,"author":{"gitId":"jamessspanggg"},"content":"      this.expandedCommitMessagesCount \u003d document.getElementsByClassName(\u0027commit-message message-body active\u0027)"},{"lineNumber":228,"author":{"gitId":"-"},"content":"          .length;"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":230,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":231,"author":{"gitId":"jamessspanggg"},"content":"    removeZoomHashes() {"},{"lineNumber":232,"author":{"gitId":"jamessspanggg"},"content":"      window.removeHash(\u0027zA\u0027);"},{"lineNumber":233,"author":{"gitId":"jamessspanggg"},"content":"      window.removeHash(\u0027zR\u0027);"},{"lineNumber":234,"author":{"gitId":"jamessspanggg"},"content":"      window.removeHash(\u0027zFS\u0027);"},{"lineNumber":235,"author":{"gitId":"jamessspanggg"},"content":"      window.removeHash(\u0027zACS\u0027);"},{"lineNumber":236,"author":{"gitId":"jamessspanggg"},"content":"      window.removeHash(\u0027zS\u0027);"},{"lineNumber":237,"author":{"gitId":"jamessspanggg"},"content":"      window.removeHash(\u0027zU\u0027);"},{"lineNumber":238,"author":{"gitId":"jamessspanggg"},"content":"      window.removeHash(\u0027zFGS\u0027);"},{"lineNumber":239,"author":{"gitId":"jamessspanggg"},"content":"      window.removeHash(\u0027zFTF\u0027);"},{"lineNumber":240,"author":{"gitId":"jamessspanggg"},"content":"      window.removeHash(\u0027zMG\u0027);"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zFT\u0027);"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zCST\u0027);"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zRSC\u0027);"},{"lineNumber":244,"author":{"gitId":"jamessspanggg"},"content":"      window.encodeHash();"},{"lineNumber":245,"author":{"gitId":"jamessspanggg"},"content":"    },"},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"-"},"content":"    filterSelectedFileTypes(fileTypes) {"},{"lineNumber":248,"author":{"gitId":"-"},"content":"      return fileTypes.filter((fileType) \u003d\u003e this.selectedFileTypes.includes(fileType));"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  created() {"},{"lineNumber":252,"author":{"gitId":"jamessspanggg"},"content":"    this.initiate();"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    this.retrieveHashes();"},{"lineNumber":254,"author":{"gitId":"jamessspanggg"},"content":"    this.setInfoHash();"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":256,"author":{"gitId":"jamessspanggg"},"content":"  beforeDestroy() {"},{"lineNumber":257,"author":{"gitId":"jamessspanggg"},"content":"    this.removeZoomHashes();"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  components: {"},{"lineNumber":260,"author":{"gitId":"0blivious"},"content":"    vRamp: window.vRamp,"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":262,"author":{"gitId":"-"},"content":"};"}],"authorContributionMap":{"jamessspanggg":46,"-":198,"0blivious":14,"ang-zeyu":4}},{"path":"frontend/src/summary.pug","fileType":"pug","lines":[{"lineNumber":1,"author":{"gitId":"0blivious"},"content":"#summary"},{"lineNumber":2,"author":{"gitId":"0blivious"},"content":"  form.summary-picker.mui-form--inline(onsubmit\u003d\"return false;\")"},{"lineNumber":3,"author":{"gitId":"0blivious"},"content":"    .summary-picker__section"},{"lineNumber":4,"author":{"gitId":"0blivious"},"content":"      .mui-textfield.search_box"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        input(type\u003d\"text\", v-on:change\u003d\"updateFilterSearch\", v-model\u003d\"filterSearch\")"},{"lineNumber":6,"author":{"gitId":"0blivious"},"content":"        label search"},{"lineNumber":7,"author":{"gitId":"0blivious"},"content":"        button.mui-btn.mui-btn--raised(type\u003d\"button\", v-on:click.prevent\u003d\"resetFilterSearch\") x"},{"lineNumber":8,"author":{"gitId":"0blivious"},"content":"      .mui-select.grouping"},{"lineNumber":9,"author":{"gitId":"0blivious"},"content":"        select(v-model\u003d\"filterGroupSelection\")"},{"lineNumber":10,"author":{"gitId":"0blivious"},"content":"          option(value\u003d\"groupByNone\") None"},{"lineNumber":11,"author":{"gitId":"0blivious"},"content":"          option(value\u003d\"groupByRepos\") Repo/Branch"},{"lineNumber":12,"author":{"gitId":"0blivious"},"content":"          option(value\u003d\"groupByAuthors\") Author"},{"lineNumber":13,"author":{"gitId":"0blivious"},"content":"        label group by"},{"lineNumber":14,"author":{"gitId":"0blivious"},"content":"      .mui-select.sort-group"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        select(v-model\u003d\"sortGroupSelection\", v-on:change\u003d\"getFiltered\")"},{"lineNumber":16,"author":{"gitId":"0blivious"},"content":"          option(value\u003d\"groupTitle\") \u0026uarr; group title"},{"lineNumber":17,"author":{"gitId":"0blivious"},"content":"          option(value\u003d\"groupTitle dsc\") \u0026darr; group title"},{"lineNumber":18,"author":{"gitId":"0blivious"},"content":"          option(value\u003d\"totalCommits\") \u0026uarr; contribution"},{"lineNumber":19,"author":{"gitId":"0blivious"},"content":"          option(value\u003d\"totalCommits dsc\") \u0026darr; contribution"},{"lineNumber":20,"author":{"gitId":"0blivious"},"content":"          option(value\u003d\"variance\") \u0026uarr; variance"},{"lineNumber":21,"author":{"gitId":"0blivious"},"content":"          option(value\u003d\"variance dsc\") \u0026darr; variance"},{"lineNumber":22,"author":{"gitId":"0blivious"},"content":"        label sort groups by"},{"lineNumber":23,"author":{"gitId":"0blivious"},"content":"      .mui-select.sort-within-group"},{"lineNumber":24,"author":{"gitId":"0blivious"},"content":"        select("},{"lineNumber":25,"author":{"gitId":"0blivious"},"content":"          v-model\u003d\"sortWithinGroupSelection\","},{"lineNumber":26,"author":{"gitId":"-"},"content":"          v-bind:disabled\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027 || allGroupsMerged\","},{"lineNumber":27,"author":{"gitId":"-"},"content":"          v-on:change\u003d\"getFiltered\""},{"lineNumber":28,"author":{"gitId":"0blivious"},"content":"        )"},{"lineNumber":29,"author":{"gitId":"0blivious"},"content":"          option(value\u003d\"title\") \u0026uarr; title"},{"lineNumber":30,"author":{"gitId":"0blivious"},"content":"          option(value\u003d\"title dsc\") \u0026darr; title"},{"lineNumber":31,"author":{"gitId":"0blivious"},"content":"          option(value\u003d\"totalCommits\") \u0026uarr; contribution"},{"lineNumber":32,"author":{"gitId":"0blivious"},"content":"          option(value\u003d\"totalCommits dsc\") \u0026darr; contribution"},{"lineNumber":33,"author":{"gitId":"0blivious"},"content":"          option(value\u003d\"variance\") \u0026uarr; variance"},{"lineNumber":34,"author":{"gitId":"0blivious"},"content":"          option(value\u003d\"variance dsc\") \u0026darr; variance"},{"lineNumber":35,"author":{"gitId":"0blivious"},"content":"        label sort within groups by"},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"      .mui-select.granularity"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        select(v-model\u003d\"filterTimeFrame\", v-on:change\u003d\"getFiltered\")"},{"lineNumber":38,"author":{"gitId":"0blivious"},"content":"          option(value\u003d\"commit\") Commit"},{"lineNumber":39,"author":{"gitId":"0blivious"},"content":"          option(value\u003d\"day\") Day"},{"lineNumber":40,"author":{"gitId":"0blivious"},"content":"          option(value\u003d\"week\") Week"},{"lineNumber":41,"author":{"gitId":"0blivious"},"content":"        label granularity"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      .mui-textfield"},{"lineNumber":43,"author":{"gitId":"0blivious"},"content":"        input(v-if\u003d\"isSafariBrowser\", type\u003d\"text\", placeholder\u003d\"yyyy-mm-dd\","},{"lineNumber":44,"author":{"gitId":"0blivious"},"content":"          v-bind:value\u003d\"filterSinceDate\", v-on:keyup.enter\u003d\"updateTmpFilterSinceDate\","},{"lineNumber":45,"author":{"gitId":"0blivious"},"content":"          onkeydown\u003d\"formatInputDateOnKeyDown(event)\", oninput\u003d\"appendDashInputDate(event)\", maxlength\u003d10)"},{"lineNumber":46,"author":{"gitId":"jamessspanggg"},"content":"        input(v-else, type\u003d\"date\", name\u003d\"since\", v-bind:value\u003d\"filterSinceDate\", v-on:input\u003d\"updateTmpFilterSinceDate\","},{"lineNumber":47,"author":{"gitId":"jamessspanggg"},"content":"          v-bind:min\u003d\"minDate\", v-bind:max\u003d\"filterUntilDate\")"},{"lineNumber":48,"author":{"gitId":"0blivious"},"content":"        label since"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      .mui-textfield"},{"lineNumber":50,"author":{"gitId":"0blivious"},"content":"        input(v-if\u003d\"isSafariBrowser\", type\u003d\"text\", placeholder\u003d\"yyyy-mm-dd\","},{"lineNumber":51,"author":{"gitId":"0blivious"},"content":"          v-bind:value\u003d\"filterUntilDate\", v-on:keyup.enter\u003d\"updateTmpFilterUntilDate\","},{"lineNumber":52,"author":{"gitId":"0blivious"},"content":"          onkeydown\u003d\"formatInputDateOnKeyDown(event)\", oninput\u003d\"appendDashInputDate(event)\", maxlength\u003d10)"},{"lineNumber":53,"author":{"gitId":"jamessspanggg"},"content":"        input(v-else, type\u003d\"date\", name\u003d\"until\", v-bind:value\u003d\"filterUntilDate\", v-on:input\u003d\"updateTmpFilterUntilDate\","},{"lineNumber":54,"author":{"gitId":"jamessspanggg"},"content":"          v-bind:min\u003d\"filterSinceDate\", v-bind:max\u003d\"maxDate\")"},{"lineNumber":55,"author":{"gitId":"0blivious"},"content":"        label until"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      .mui-textfield"},{"lineNumber":57,"author":{"gitId":"0blivious"},"content":"        a(v-on:click\u003d\"resetDateRange\") Reset date range"},{"lineNumber":58,"author":{"gitId":"0blivious"},"content":"      .summary-picker__checkboxes.summary-picker__section"},{"lineNumber":59,"author":{"gitId":"jamessspanggg"},"content":"        label.filter-breakdown"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          input.mui-checkbox("},{"lineNumber":61,"author":{"gitId":"-"},"content":"            type\u003d\"checkbox\","},{"lineNumber":62,"author":{"gitId":"-"},"content":"            v-model\u003d\"filterBreakdown\","},{"lineNumber":63,"author":{"gitId":"-"},"content":"            v-on:change\u003d\"getFiltered\""},{"lineNumber":64,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":65,"author":{"gitId":"0blivious"},"content":"          span breakdown by file type"},{"lineNumber":66,"author":{"gitId":"0blivious"},"content":"        label.merge-group("},{"lineNumber":67,"author":{"gitId":"0blivious"},"content":"          v-bind:style\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027 ? { opacity:0.5 } : { opacity:1.0 }\""},{"lineNumber":68,"author":{"gitId":"0blivious"},"content":"        )"},{"lineNumber":69,"author":{"gitId":"-"},"content":"          input.mui-checkbox("},{"lineNumber":70,"author":{"gitId":"0blivious"},"content":"            type\u003d\"checkbox\","},{"lineNumber":71,"author":{"gitId":"niqiukun"},"content":"            v-model\u003d\"allGroupsMerged\","},{"lineNumber":72,"author":{"gitId":"0blivious"},"content":"            v-bind:disabled\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027\""},{"lineNumber":73,"author":{"gitId":"0blivious"},"content":"          )"},{"lineNumber":74,"author":{"gitId":"niqiukun"},"content":"          span merge all groups"},{"lineNumber":75,"author":{"gitId":"0blivious"},"content":"  .error-message-box(v-if\u003d\"Object.entries(errorMessages).length\")"},{"lineNumber":76,"author":{"gitId":"0blivious"},"content":"    .error-message-box__close-button(v-on:click\u003d\"dismissTab($event)\") \u0026times;"},{"lineNumber":77,"author":{"gitId":"0blivious"},"content":"    .error-message-box__message The following issues occurred when analyzing the following repositories:"},{"lineNumber":78,"author":{"gitId":"0blivious"},"content":"    .error-message-box__failed-repo(v-for\u003d\"errorBlock in errorMessages\")"},{"lineNumber":79,"author":{"gitId":"Tejas2805"},"content":"      font-awesome-icon(icon\u003d\"exclamation\")"},{"lineNumber":80,"author":{"gitId":"0blivious"},"content":"      span.error-message-box__failed-repo--name {{ errorBlock.repoName }}"},{"lineNumber":81,"author":{"gitId":"0blivious"},"content":"      .error-message-box__failed-repo--reason("},{"lineNumber":82,"author":{"gitId":"0blivious"},"content":"        v-if\u003d\"errorBlock.errorMessage.startsWith(\u0027Unexpected error stack trace\u0027)\""},{"lineNumber":83,"author":{"gitId":"0blivious"},"content":"      )"},{"lineNumber":84,"author":{"gitId":"0blivious"},"content":"        span Oops, an unexpected error occurred. If this is due to a problem in RepoSense, please report in\u0026nbsp;"},{"lineNumber":85,"author":{"gitId":"0blivious"},"content":"        a("},{"lineNumber":86,"author":{"gitId":"0blivious"},"content":"          v-bind:href\u003d\"getReportIssueGitHubLink(errorBlock.errorMessage)\", target\u003d\"_blank\""},{"lineNumber":87,"author":{"gitId":"0blivious"},"content":"        )"},{"lineNumber":88,"author":{"gitId":"0blivious"},"content":"          strong our issue tracker\u0026nbsp;"},{"lineNumber":89,"author":{"gitId":"0blivious"},"content":"        span or email us at\u0026nbsp;"},{"lineNumber":90,"author":{"gitId":"0blivious"},"content":"        a("},{"lineNumber":91,"author":{"gitId":"0blivious"},"content":"          v-bind:href\u003d\"getReportIssueEmailLink(errorBlock.errorMessage)\""},{"lineNumber":92,"author":{"gitId":"0blivious"},"content":"        )"},{"lineNumber":93,"author":{"gitId":"0blivious"},"content":"          span {{ getReportIssueEmailAddress() }}"},{"lineNumber":94,"author":{"gitId":"0blivious"},"content":"      .error-message-box__failed-repo--reason(v-else) {{ errorBlock.errorMessage }}"},{"lineNumber":95,"author":{"gitId":"0blivious"},"content":"  .fileTypes(v-if\u003d\"filterBreakdown\")"},{"lineNumber":96,"author":{"gitId":"0blivious"},"content":"    .checkboxes.mui-form--inline(v-if\u003d\"Object.keys(fileTypeColors).length \u003e 0\")"},{"lineNumber":97,"author":{"gitId":"0blivious"},"content":"      label(style\u003d\u0027background-color: #000000; color: #ffffff\u0027)"},{"lineNumber":98,"author":{"gitId":"jamessspanggg"},"content":"        input.mui-checkbox--fileType#all(type\u003d\"checkbox\", v-model\u003d\"checkAllFileTypes\")"},{"lineNumber":99,"author":{"gitId":"0blivious"},"content":"        span All:\u0026nbsp;"},{"lineNumber":100,"author":{"gitId":"0blivious"},"content":"      template(v-for\u003d\"fileType in Object.keys(fileTypeColors)\" )"},{"lineNumber":101,"author":{"gitId":"0blivious"},"content":"        label("},{"lineNumber":102,"author":{"gitId":"0blivious"},"content":"          v-bind:key\u003d\"fileType\","},{"lineNumber":103,"author":{"gitId":"0blivious"},"content":"          v-bind:style\u003d\"{ \u0027background-color\u0027: fileTypeColors[fileType], \\"},{"lineNumber":104,"author":{"gitId":"0blivious"},"content":"            \u0027color\u0027: this.getFontColor(fileTypeColors[fileType])}\""},{"lineNumber":105,"author":{"gitId":"0blivious"},"content":"        )"},{"lineNumber":106,"author":{"gitId":"0blivious"},"content":"          input.mui-checkbox--fileType("},{"lineNumber":107,"author":{"gitId":"0blivious"},"content":"            type\u003d\"checkbox\","},{"lineNumber":108,"author":{"gitId":"0blivious"},"content":"            v-bind:id\u003d\"fileType\","},{"lineNumber":109,"author":{"gitId":"0blivious"},"content":"            v-bind:value\u003d\"fileType\","},{"lineNumber":110,"author":{"gitId":"-"},"content":"            v-model\u003d\"checkedFileTypes\","},{"lineNumber":111,"author":{"gitId":"-"},"content":"            v-on:change\u003d\"getFiltered\""},{"lineNumber":112,"author":{"gitId":"0blivious"},"content":"          )"},{"lineNumber":113,"author":{"gitId":"0blivious"},"content":"          span {{ fileType }}"},{"lineNumber":114,"author":{"gitId":"0blivious"},"content":"  v-summary-charts("},{"lineNumber":115,"author":{"gitId":"0blivious"},"content":"    v-bind:filtered\u003d\"filtered\","},{"lineNumber":116,"author":{"gitId":"0blivious"},"content":"    v-bind:checked-file-types\u003d\"checkedFileTypes\","},{"lineNumber":117,"author":{"gitId":"0blivious"},"content":"    v-bind:avg-contribution-size\u003d\"avgContributionSize\","},{"lineNumber":118,"author":{"gitId":"0blivious"},"content":"    v-bind:filter-group-selection\u003d\"filterGroupSelection\","},{"lineNumber":119,"author":{"gitId":"0blivious"},"content":"    v-bind:filter-breakdown\u003d\"filterBreakdown\","},{"lineNumber":120,"author":{"gitId":"0blivious"},"content":"    v-bind:filter-time-frame\u003d\"filterTimeFrame\","},{"lineNumber":121,"author":{"gitId":"0blivious"},"content":"    v-bind:filter-since-date\u003d\"filterSinceDate\","},{"lineNumber":122,"author":{"gitId":"0blivious"},"content":"    v-bind:filter-until-date\u003d\"filterUntilDate\","},{"lineNumber":123,"author":{"gitId":"jamessspanggg"},"content":"    v-bind:filter-search\u003d\"filterSearch\","},{"lineNumber":124,"author":{"gitId":"0blivious"},"content":"    v-bind:min-date\u003d\"minDate\","},{"lineNumber":125,"author":{"gitId":"0blivious"},"content":"    v-bind:max-date\u003d\"maxDate\""},{"lineNumber":126,"author":{"gitId":"0blivious"},"content":"  )"}],"authorContributionMap":{"niqiukun":2,"Tejas2805":1,"jamessspanggg":8,"0blivious":99,"-":16}},{"path":"frontend/src/summary_charts.pug","fileType":"pug","lines":[{"lineNumber":1,"author":{"gitId":"0blivious"},"content":"#summary-charts"},{"lineNumber":2,"author":{"gitId":"0blivious"},"content":"  .summary-charts(v-for\u003d\"(repo, i) in filteredRepos\")"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    .summary-charts__title("},{"lineNumber":4,"author":{"gitId":"-"},"content":"      v-if\u003d\"filterGroupSelection !\u003d\u003d \u0027groupByNone\u0027\","},{"lineNumber":5,"author":{"gitId":"-"},"content":"      v-bind:class\u003d\"{ \u0027active-background\u0027: \\"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        isSelectedGroup(repo[0].name, repo[0].repoName) }\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"    )"},{"lineNumber":8,"author":{"gitId":"0blivious"},"content":"      .summary-charts__title--index {{ i+1 }}"},{"lineNumber":9,"author":{"gitId":"0blivious"},"content":"      .summary-charts__title--groupname"},{"lineNumber":10,"author":{"gitId":"0blivious"},"content":"        template(v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByRepos\u0027\") {{ repo[0].repoName }}"},{"lineNumber":11,"author":{"gitId":"0blivious"},"content":"        template("},{"lineNumber":12,"author":{"gitId":"0blivious"},"content":"          v-else-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027\","},{"lineNumber":13,"author":{"gitId":"0blivious"},"content":"          v-bind:class\u003d\" { warn: repo[0].name \u003d\u003d\u003d \u0027-\u0027 }\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"        ) {{ getAuthorDisplayName(repo) }} ({{ repo[0].name }})"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      .summary-charts__title--contribution"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        .tooltip"},{"lineNumber":17,"author":{"gitId":"-"},"content":"          | [{{ getGroupTotalContribution(repo) }} lines]"},{"lineNumber":18,"author":{"gitId":"-"},"content":"          span.tooltip-text("},{"lineNumber":19,"author":{"gitId":"-"},"content":"            v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByRepos\u0027\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"          ) Total contribution of group"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          span.tooltip-text("},{"lineNumber":22,"author":{"gitId":"-"},"content":"            v-else-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"          ) Total contribution of author"},{"lineNumber":24,"author":{"gitId":"niqiukun"},"content":"      a("},{"lineNumber":25,"author":{"gitId":"ang-zeyu"},"content":"        v-if\u003d\"!isGroupMerged(getGroupName(repo))\","},{"lineNumber":26,"author":{"gitId":"-"},"content":"        v-on:click\u003d\"handleMergeGroup(getGroupName(repo))\""},{"lineNumber":27,"author":{"gitId":"niqiukun"},"content":"      )"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        .tooltip"},{"lineNumber":29,"author":{"gitId":"niqiukun"},"content":"          font-awesome-icon.icon-button(:icon\u003d\"[\u0027fas\u0027, \u0027chevron-up\u0027]\")"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          span.tooltip-text Click to merge group"},{"lineNumber":31,"author":{"gitId":"niqiukun"},"content":"      a("},{"lineNumber":32,"author":{"gitId":"ang-zeyu"},"content":"        v-if\u003d\"isGroupMerged(getGroupName(repo))\","},{"lineNumber":33,"author":{"gitId":"-"},"content":"        v-on:click\u003d\"handleExpandGroup(getGroupName(repo))\""},{"lineNumber":34,"author":{"gitId":"niqiukun"},"content":"      )"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        .tooltip"},{"lineNumber":36,"author":{"gitId":"niqiukun"},"content":"          font-awesome-icon.icon-button(:icon\u003d\"[\u0027fas\u0027, \u0027chevron-down\u0027]\")"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          span.tooltip-text Click to expand group"},{"lineNumber":38,"author":{"gitId":"0blivious"},"content":"      a("},{"lineNumber":39,"author":{"gitId":"ccyccyccy"},"content":"        v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByRepos\u0027\","},{"lineNumber":40,"author":{"gitId":"-"},"content":"        v-bind:href\u003d\"getRepoLink(repo[0])\", target\u003d\"_blank\""},{"lineNumber":41,"author":{"gitId":"0blivious"},"content":"      )"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        .tooltip"},{"lineNumber":43,"author":{"gitId":"ccyccyccy"},"content":"          font-awesome-icon.icon-button(:icon\u003d\"[\u0027fab\u0027, \u0027github\u0027]\")"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          span.tooltip-text Click to view group\u0027s repo"},{"lineNumber":45,"author":{"gitId":"0blivious"},"content":"      a("},{"lineNumber":46,"author":{"gitId":"0blivious"},"content":"        v-else-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027\","},{"lineNumber":47,"author":{"gitId":"-"},"content":"        v-bind:href\u003d\"getAuthorProfileLink(repo[0].name)\", target\u003d\"_blank\""},{"lineNumber":48,"author":{"gitId":"0blivious"},"content":"      )"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        .tooltip"},{"lineNumber":50,"author":{"gitId":"ccyccyccy"},"content":"          font-awesome-icon.icon-button(icon\u003d\"user\")"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          span.tooltip-text Click to view author\u0027s profile"},{"lineNumber":52,"author":{"gitId":"niqiukun"},"content":"      template(v-if\u003d\"isGroupMerged(getGroupName(repo))\")"},{"lineNumber":53,"author":{"gitId":"ccyccyccy"},"content":"        a("},{"lineNumber":54,"author":{"gitId":"ang-zeyu"},"content":"          v-if\u003d\"filterGroupSelection !\u003d\u003d \u0027groupByAuthors\u0027\","},{"lineNumber":55,"author":{"gitId":"ccyccyccy"},"content":"          onclick\u003d\"deactivateAllOverlays()\","},{"lineNumber":56,"author":{"gitId":"niqiukun"},"content":"          v-on:click\u003d\"openTabAuthorship(repo[0], repo, 0, isGroupMerged(getGroupName(repo)))\""},{"lineNumber":57,"author":{"gitId":"ccyccyccy"},"content":"        )"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          .tooltip"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            font-awesome-icon.icon-button("},{"lineNumber":60,"author":{"gitId":"-"},"content":"              icon\u003d\"code\","},{"lineNumber":61,"author":{"gitId":"-"},"content":"              v-bind:class\u003d\"{ \u0027active-icon\u0027: isSelectedTab(repo[0].name, repo[0].repoName, \u0027authorship\u0027, true) }\""},{"lineNumber":62,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            span.tooltip-text Click to view group\u0027s code"},{"lineNumber":64,"author":{"gitId":"0blivious"},"content":"        a("},{"lineNumber":65,"author":{"gitId":"0blivious"},"content":"          onclick\u003d\"deactivateAllOverlays()\","},{"lineNumber":66,"author":{"gitId":"niqiukun"},"content":"          v-on:click\u003d\"openTabZoom(repo[0], filterSinceDate, filterUntilDate, isGroupMerged(getGroupName(repo)))\""},{"lineNumber":67,"author":{"gitId":"0blivious"},"content":"        )"},{"lineNumber":68,"author":{"gitId":"-"},"content":"          .tooltip"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            font-awesome-icon.icon-button("},{"lineNumber":70,"author":{"gitId":"-"},"content":"              icon\u003d\"list-ul\","},{"lineNumber":71,"author":{"gitId":"-"},"content":"              v-bind:class\u003d\"{ \u0027active-icon\u0027: isSelectedTab(repo[0].name, repo[0].repoName, \u0027zoom\u0027, true) }\""},{"lineNumber":72,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            span.tooltip-text Click to view breakdown of commits"},{"lineNumber":74,"author":{"gitId":"Tejas2805"},"content":"      .summary-charts__title--percentile {{ getPercentile(i) }} %"},{"lineNumber":75,"author":{"gitId":"0blivious"},"content":"    .summary-charts__fileType--breakdown(v-if\u003d\"filterBreakdown\")"},{"lineNumber":76,"author":{"gitId":"0blivious"},"content":"      template(v-if\u003d\"filterGroupSelection !\u003d\u003d \u0027groupByNone\u0027\")"},{"lineNumber":77,"author":{"gitId":"0blivious"},"content":"        .summary-charts__fileType--breakdown__legend("},{"lineNumber":78,"author":{"gitId":"0blivious"},"content":"          v-for\u003d\"fileType in getFileTypes(repo)\","},{"lineNumber":79,"author":{"gitId":"0blivious"},"content":"          v-bind:key\u003d\"fileType\""},{"lineNumber":80,"author":{"gitId":"0blivious"},"content":"        )"},{"lineNumber":81,"author":{"gitId":"ccyccyccy"},"content":"          font-awesome-icon("},{"lineNumber":82,"author":{"gitId":"ccyccyccy"},"content":"            icon\u003d\"circle\","},{"lineNumber":83,"author":{"gitId":"0blivious"},"content":"            v-bind:style\u003d\"{ \u0027color\u0027: fileTypeColors[fileType] }\""},{"lineNumber":84,"author":{"gitId":"0blivious"},"content":"          )"},{"lineNumber":85,"author":{"gitId":"0blivious"},"content":"          span \u0026nbsp; {{ fileType }} \u0026nbsp;"},{"lineNumber":86,"author":{"gitId":"niqiukun"},"content":"    .summary-chart(v-for\u003d\"(user, j) in repo\")"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      .summary-chart__title("},{"lineNumber":88,"author":{"gitId":"-"},"content":"        v-if\u003d\"!isGroupMerged(getGroupName(repo))\","},{"lineNumber":89,"author":{"gitId":"-"},"content":"        v-bind:class\u003d\"{ \u0027active-background\u0027: user.name \u003d\u003d\u003d activeUser \u0026\u0026 user.repoName \u003d\u003d\u003d activeRepo }\""},{"lineNumber":90,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":91,"author":{"gitId":"niqiukun"},"content":"        .summary-chart__title--index {{ j+1 }}"},{"lineNumber":92,"author":{"gitId":"0blivious"},"content":"        .summary-chart__title--repo(v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027\") {{ user.repoName }}"},{"lineNumber":93,"author":{"gitId":"0blivious"},"content":"        .summary-chart__title--author-repo(v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027\") {{ user.repoName }}"},{"lineNumber":94,"author":{"gitId":"0blivious"},"content":"        .summary-chart__title--name("},{"lineNumber":95,"author":{"gitId":"0blivious"},"content":"          v-if\u003d\"filterGroupSelection !\u003d\u003d \u0027groupByAuthors\u0027\","},{"lineNumber":96,"author":{"gitId":"0blivious"},"content":"          v-bind:class\u003d\"{ warn: user.name \u003d\u003d\u003d \u0027-\u0027 }\""},{"lineNumber":97,"author":{"gitId":"0blivious"},"content":"        ) {{ user.displayName }} ({{ user.name }})"},{"lineNumber":98,"author":{"gitId":"0blivious"},"content":"        .summary-chart__title--contribution.mini-font [{{ user.checkedFileTypeContribution }} lines]"},{"lineNumber":99,"author":{"gitId":"ccyccyccy"},"content":"        a("},{"lineNumber":100,"author":{"gitId":"ccyccyccy"},"content":"          v-if\u003d\"filterGroupSelection !\u003d\u003d \u0027groupByRepos\u0027\","},{"lineNumber":101,"author":{"gitId":"-"},"content":"          v-bind:href\u003d\"getRepoLink(repo[j])\", target\u003d\"_blank\""},{"lineNumber":102,"author":{"gitId":"ccyccyccy"},"content":"        )"},{"lineNumber":103,"author":{"gitId":"-"},"content":"          .tooltip"},{"lineNumber":104,"author":{"gitId":"ccyccyccy"},"content":"            font-awesome-icon.icon-button(:icon\u003d\"[\u0027fab\u0027, \u0027github\u0027]\")"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            span.tooltip-text Click to view repo"},{"lineNumber":106,"author":{"gitId":"ccyccyccy"},"content":"        a("},{"lineNumber":107,"author":{"gitId":"ccyccyccy"},"content":"          v-if\u003d\"filterGroupSelection !\u003d\u003d \u0027groupByAuthors\u0027\","},{"lineNumber":108,"author":{"gitId":"-"},"content":"          v-bind:href\u003d\"getAuthorProfileLink(repo[j].name)\", target\u003d\"_blank\""},{"lineNumber":109,"author":{"gitId":"ccyccyccy"},"content":"        )"},{"lineNumber":110,"author":{"gitId":"-"},"content":"          .tooltip"},{"lineNumber":111,"author":{"gitId":"ccyccyccy"},"content":"            font-awesome-icon.icon-button(icon\u003d\"user\")"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            span.tooltip-text Click to view author\u0027s profile"},{"lineNumber":113,"author":{"gitId":"0blivious"},"content":"        a("},{"lineNumber":114,"author":{"gitId":"0blivious"},"content":"          onclick\u003d\"deactivateAllOverlays()\","},{"lineNumber":115,"author":{"gitId":"niqiukun"},"content":"          v-on:click\u003d\"openTabAuthorship(user, repo, j, isGroupMerged(getGroupName(repo)))\""},{"lineNumber":116,"author":{"gitId":"0blivious"},"content":"        )"},{"lineNumber":117,"author":{"gitId":"-"},"content":"          .tooltip"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            font-awesome-icon.icon-button("},{"lineNumber":119,"author":{"gitId":"-"},"content":"              icon\u003d\"code\","},{"lineNumber":120,"author":{"gitId":"-"},"content":"              v-bind:class\u003d\"{ \u0027active-icon\u0027: isSelectedTab(user.name, user.repoName, \u0027authorship\u0027, false) }\""},{"lineNumber":121,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            span.tooltip-text Click to view author\u0027s contribution."},{"lineNumber":123,"author":{"gitId":"0blivious"},"content":"        a("},{"lineNumber":124,"author":{"gitId":"0blivious"},"content":"          onclick\u003d\"deactivateAllOverlays()\","},{"lineNumber":125,"author":{"gitId":"niqiukun"},"content":"          v-on:click\u003d\"openTabZoom(user, filterSinceDate, filterUntilDate, isGroupMerged(getGroupName(repo)))\""},{"lineNumber":126,"author":{"gitId":"0blivious"},"content":"        )"},{"lineNumber":127,"author":{"gitId":"-"},"content":"          .tooltip"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            font-awesome-icon.icon-button("},{"lineNumber":129,"author":{"gitId":"-"},"content":"              icon\u003d\"list-ul\","},{"lineNumber":130,"author":{"gitId":"-"},"content":"              v-bind:class\u003d\"{ \u0027active-icon\u0027: isSelectedTab(user.name, user.repoName, \u0027zoom\u0027, false) }\""},{"lineNumber":131,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            span.tooltip-text Click to view breakdown of commits"},{"lineNumber":133,"author":{"gitId":"Tejas2805"},"content":"        .summary-chart__title--percentile("},{"lineNumber":134,"author":{"gitId":"0blivious"},"content":"          v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027\""},{"lineNumber":135,"author":{"gitId":"niqiukun"},"content":"        ) {{ getPercentile(j) }} %"},{"lineNumber":136,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":137,"author":{"gitId":"0blivious"},"content":"      .summary-chart__ramp("},{"lineNumber":138,"author":{"gitId":"niqiukun"},"content":"        v-on:click\u003d\"openTabZoomSubrange(user, $event, isGroupMerged(getGroupName(repo)))\""},{"lineNumber":139,"author":{"gitId":"0blivious"},"content":"      )"},{"lineNumber":140,"author":{"gitId":"0blivious"},"content":"        v-ramp("},{"lineNumber":141,"author":{"gitId":"0blivious"},"content":"          v-bind:groupby\u003d\"filterGroupSelection\","},{"lineNumber":142,"author":{"gitId":"0blivious"},"content":"          v-bind:user\u003d\"user\","},{"lineNumber":143,"author":{"gitId":"0blivious"},"content":"          v-bind:tframe\u003d\"filterTimeFrame\","},{"lineNumber":144,"author":{"gitId":"0blivious"},"content":"          v-bind:sdate\u003d\"filterSinceDate\","},{"lineNumber":145,"author":{"gitId":"0blivious"},"content":"          v-bind:udate\u003d\"filterUntilDate\","},{"lineNumber":146,"author":{"gitId":"0blivious"},"content":"          v-bind:avgsize\u003d\"avgCommitSize\","},{"lineNumber":147,"author":{"gitId":"0blivious"},"content":"          v-bind:mergegroup\u003d\"isGroupMerged(getGroupName(repo))\","},{"lineNumber":148,"author":{"gitId":"0blivious"},"content":"          v-bind:filtersearch\u003d\"filterSearch\")"},{"lineNumber":149,"author":{"gitId":"0blivious"},"content":"        .overlay"},{"lineNumber":150,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":151,"author":{"gitId":"0blivious"},"content":"      .summary-chart__contribution"},{"lineNumber":152,"author":{"gitId":"0blivious"},"content":"        template(v-if\u003d\"filterBreakdown\")"},{"lineNumber":153,"author":{"gitId":"0blivious"},"content":"          .summary-chart__contrib("},{"lineNumber":154,"author":{"gitId":"0blivious"},"content":"            v-for\u003d\"(widths, fileType) in getFileTypeContributionBars(user.fileTypeContribution)\""},{"lineNumber":155,"author":{"gitId":"0blivious"},"content":"          )"},{"lineNumber":156,"author":{"gitId":"0blivious"},"content":"            .summary-chart__contrib--bar("},{"lineNumber":157,"author":{"gitId":"0blivious"},"content":"              v-for\u003d\"width in widths\","},{"lineNumber":158,"author":{"gitId":"0blivious"},"content":"              v-bind:style\u003d\"{ width: width + \u0027%\u0027,\\"},{"lineNumber":159,"author":{"gitId":"0blivious"},"content":"                \u0027background-color\u0027: fileTypeColors[fileType] }\","},{"lineNumber":160,"author":{"gitId":"0blivious"},"content":"              v-bind:title\u003d\"fileType + \u0027: \u0027 + user.fileTypeContribution[fileType] + \u0027 lines, \u0027\\"},{"lineNumber":161,"author":{"gitId":"jamessspanggg"},"content":"                + \u0027total: \u0027 + user.checkedFileTypeContribution + \u0027 lines \u0027 + \u0027(contribution from \u0027 + minDate + \u0027 to \u0027\\"},{"lineNumber":162,"author":{"gitId":"0blivious"},"content":"                + maxDate + \u0027)\u0027\""},{"lineNumber":163,"author":{"gitId":"0blivious"},"content":"            )"},{"lineNumber":164,"author":{"gitId":"0blivious"},"content":"        template(v-else)"},{"lineNumber":165,"author":{"gitId":"0blivious"},"content":"          .summary-chart__contrib("},{"lineNumber":166,"author":{"gitId":"0blivious"},"content":"            v-bind:title\u003d\"\u0027Total contribution from \u0027 + minDate + \u0027 to \u0027 + maxDate + \u0027: \u0027\\"},{"lineNumber":167,"author":{"gitId":"0blivious"},"content":"              + user.checkedFileTypeContribution + \u0027 lines\u0027\""},{"lineNumber":168,"author":{"gitId":"0blivious"},"content":"          )"},{"lineNumber":169,"author":{"gitId":"0blivious"},"content":"            .summary-chart__contrib--bar("},{"lineNumber":170,"author":{"gitId":"0blivious"},"content":"              v-for\u003d\"width in getContributionBars(user.checkedFileTypeContribution)\","},{"lineNumber":171,"author":{"gitId":"0blivious"},"content":"              v-bind:style\u003d\"{ width: width+\u0027%\u0027 }\""},{"lineNumber":172,"author":{"gitId":"0blivious"},"content":"            )"}],"authorContributionMap":{"ccyccyccy":16,"niqiukun":15,"Tejas2805":2,"jamessspanggg":1,"0blivious":74,"-":61,"ang-zeyu":3}},{"path":"frontend/src/tabs/authorship.pug","fileType":"pug","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#authorship"},{"lineNumber":2,"author":{"gitId":"Tejas2805"},"content":"  .panel-title"},{"lineNumber":3,"author":{"gitId":"Tejas2805"},"content":"    span Code Panel"},{"lineNumber":4,"author":{"gitId":"0blivious"},"content":"  .toolbar--multiline"},{"lineNumber":5,"author":{"gitId":"ang-zeyu"},"content":"    a(v-if\u003d\"activeFilesCount \u003c this.selectedFiles.length\", v-on:click\u003d\"expandAll()\") show all file details"},{"lineNumber":6,"author":{"gitId":"ang-zeyu"},"content":"    a(v-if\u003d\"activeFilesCount \u003e 0\", v-on:click\u003d\"collapseAll()\") hide all file details"},{"lineNumber":7,"author":{"gitId":"Tejas2805"},"content":"  .panel-heading"},{"lineNumber":8,"author":{"gitId":"Tejas2805"},"content":"    a.group-name("},{"lineNumber":9,"author":{"gitId":"-"},"content":"      v-bind:href\u003d\"info.location\", target\u003d\"_blank\","},{"lineNumber":10,"author":{"gitId":"-"},"content":"      v-bind:title\u003d\"\u0027Click to open the repo\u0027\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"    ) {{ info.repo }}"},{"lineNumber":12,"author":{"gitId":"jamessspanggg"},"content":"    .author(v-if\u003d\"!info.isMergeGroup\")"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      span \u0026#8627; \u0026nbsp;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      span {{ authorDisplayName }} ({{ info.author }})"},{"lineNumber":15,"author":{"gitId":"Tejas2805"},"content":"    .period"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      span \u0026#8627; \u0026nbsp;"},{"lineNumber":17,"author":{"gitId":"jamessspanggg"},"content":"      span {{ info.minDate }} to {{ info.maxDate }} \u0026nbsp;\u0026nbsp; ({{ selectedFiles.length }} files changed)"},{"lineNumber":18,"author":{"gitId":"Tejas2805"},"content":"  .title"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    .contribution(v-if\u003d\"isLoaded \u0026\u0026 files.length!\u003d0\")"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      .sorting.mui-form--inline"},{"lineNumber":21,"author":{"gitId":"Tejas2805"},"content":"        .mui-select.sort-by"},{"lineNumber":22,"author":{"gitId":"Tejas2805"},"content":"          select(v-model\u003d\"filesSortType\")"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            option(value\u003d\"lineOfCode\") LoC"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            option(value\u003d\"path\") Path"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            option(value\u003d\"fileName\") File Name"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            option(value\u003d\"fileType\") File Type"},{"lineNumber":27,"author":{"gitId":"Tejas2805"},"content":"          label sort by"},{"lineNumber":28,"author":{"gitId":"Tejas2805"},"content":"        .mui-select.sort-order"},{"lineNumber":29,"author":{"gitId":"Tejas2805"},"content":"          select(v-model\u003d\"toReverseSortFiles\")"},{"lineNumber":30,"author":{"gitId":"Tejas2805"},"content":"            option(v-bind:value\u003d\u0027true\u0027) Descending"},{"lineNumber":31,"author":{"gitId":"Tejas2805"},"content":"            option(v-bind:value\u003d\u0027false\u0027) Ascending"},{"lineNumber":32,"author":{"gitId":"Tejas2805"},"content":"          label order"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      .searchbox"},{"lineNumber":34,"author":{"gitId":"ang-zeyu"},"content":"        input.radio-button--search("},{"lineNumber":35,"author":{"gitId":"ang-zeyu"},"content":"          type\u003d\"radio\","},{"lineNumber":36,"author":{"gitId":"ang-zeyu"},"content":"          value\u003d\"search\","},{"lineNumber":37,"author":{"gitId":"ang-zeyu"},"content":"          v-model\u003d\"filterType\","},{"lineNumber":38,"author":{"gitId":"ang-zeyu"},"content":"          v-on:change\u003d\"indicateSearchBar(); updateSearchBarValue();\""},{"lineNumber":39,"author":{"gitId":"ang-zeyu"},"content":"        )"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        .mui-form--inline"},{"lineNumber":41,"author":{"gitId":"Tejas2805"},"content":"          input#search("},{"lineNumber":42,"author":{"gitId":"ang-zeyu"},"content":"            type\u003d\"search\","},{"lineNumber":43,"author":{"gitId":"ang-zeyu"},"content":"            placeholder\u003d\"Filter by glob\","},{"lineNumber":44,"author":{"gitId":"ang-zeyu"},"content":"            ref\u003d\"searchBar\","},{"lineNumber":45,"author":{"gitId":"ang-zeyu"},"content":"            v-bind:value\u003d\"searchBarValue\","},{"lineNumber":46,"author":{"gitId":"ang-zeyu"},"content":"            v-on:focus\u003d\"indicateSearchBar\","},{"lineNumber":47,"author":{"gitId":"ang-zeyu"},"content":"            v-on:keyup.enter\u003d\"updateSearchBarValue\""},{"lineNumber":48,"author":{"gitId":"ang-zeyu"},"content":"          )"},{"lineNumber":49,"author":{"gitId":"Tejas2805"},"content":"          button#submit-button("},{"lineNumber":50,"author":{"gitId":"ang-zeyu"},"content":"            type\u003d\"button\","},{"lineNumber":51,"author":{"gitId":"ang-zeyu"},"content":"            v-on:click\u003d\"indicateSearchBar(); updateSearchBarValue();\""},{"lineNumber":52,"author":{"gitId":"ang-zeyu"},"content":"          ) Filter"},{"lineNumber":53,"author":{"gitId":"0blivious"},"content":"      .fileTypes"},{"lineNumber":54,"author":{"gitId":"ang-zeyu"},"content":"        input.radio-button--checkbox("},{"lineNumber":55,"author":{"gitId":"ang-zeyu"},"content":"          type\u003d\"radio\","},{"lineNumber":56,"author":{"gitId":"ang-zeyu"},"content":"          value\u003d\"checkboxes\","},{"lineNumber":57,"author":{"gitId":"ang-zeyu"},"content":"          v-model\u003d\"filterType\","},{"lineNumber":58,"author":{"gitId":"ang-zeyu"},"content":"          v-on:change\u003d\"indicateCheckBoxes\""},{"lineNumber":59,"author":{"gitId":"ang-zeyu"},"content":"        )"},{"lineNumber":60,"author":{"gitId":"Tejas2805"},"content":"        .checkboxes.mui-form--inline(v-if\u003d\"files.length \u003e 0\")"},{"lineNumber":61,"author":{"gitId":"0blivious"},"content":"          label(style\u003d\u0027background-color: #000000; color: #ffffff\u0027)"},{"lineNumber":62,"author":{"gitId":"Tejas2805"},"content":"            input.mui-checkbox--fileType#all(type\u003d\"checkbox\", v-model\u003d\"isSelectAllChecked\")"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            span(v-bind:title\u003d\"getTotalFileBlankLineInfo()\")"},{"lineNumber":64,"author":{"gitId":"0blivious"},"content":"              span All\u0026nbsp;"},{"lineNumber":65,"author":{"gitId":"0blivious"},"content":"              span {{ totalLineCount }}\u0026nbsp;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"              span ({{ totalLineCount - totalBlankLineCount }})\u0026nbsp;"},{"lineNumber":67,"author":{"gitId":"ccyccyccy"},"content":"          template(v-for\u003d\"fileType in Object.keys(fileTypeLinesObj)\")"},{"lineNumber":68,"author":{"gitId":"0blivious"},"content":"            label("},{"lineNumber":69,"author":{"gitId":"0blivious"},"content":"              v-bind:key\u003d\"fileType\","},{"lineNumber":70,"author":{"gitId":"0blivious"},"content":"              v-bind:style\u003d\"{\\"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0027background-color\u0027: fileTypeColors[fileType],\\"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0027color\u0027: this.getFontColor(fileTypeColors[fileType])\\"},{"lineNumber":73,"author":{"gitId":"0blivious"},"content":"                }\""},{"lineNumber":74,"author":{"gitId":"0blivious"},"content":"            )"},{"lineNumber":75,"author":{"gitId":"0blivious"},"content":"              input.mui-checkbox--fileType(type\u003d\"checkbox\", v-bind:id\u003d\"fileType\", v-bind:value\u003d\"fileType\","},{"lineNumber":76,"author":{"gitId":"ang-zeyu"},"content":"                v-on:change\u003d\"indicateCheckBoxes\", v-model\u003d\"selectedFileTypes\")"},{"lineNumber":77,"author":{"gitId":"-"},"content":"              span(v-bind:title\u003d\"getFileTypeBlankLineInfo(fileType)\")"},{"lineNumber":78,"author":{"gitId":"ccyccyccy"},"content":"                span {{ fileType }}\u0026nbsp;{{ fileTypeLinesObj[fileType] }}\u0026nbsp;"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                span ({{ fileTypeLinesObj[fileType] - fileTypeBlankLinesObj[fileType] }})\u0026nbsp;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"          label.binary-fileType(v-if\u003d\"binaryFilesCount \u003e 0\")"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            input.mui-checkbox--fileType(type\u003d\"checkbox\", v-model\u003d\"isBinaryChecked\")"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            span("},{"lineNumber":83,"author":{"gitId":"-"},"content":"              v-bind:title\u003d\"this.binaryFilesCount + \u0027 binary files (not included in total line count)\u0027\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":85,"author":{"gitId":"-"},"content":"              span {{ binaryFilesCount }} binary file(s)"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"  .files(v-if\u003d\"isLoaded\")"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    .empty(v-if\u003d\"files.length \u003d\u003d\u003d 0\") nothing to see here :("},{"lineNumber":89,"author":{"gitId":"jamessspanggg"},"content":"    template(v-for\u003d\"(file, i) in selectedFiles\")"},{"lineNumber":90,"author":{"gitId":"ang-zeyu"},"content":"      .file(v-bind:key\u003d\"file.path\")"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        .title"},{"lineNumber":92,"author":{"gitId":"ccyccyccy"},"content":"          span.path(v-on:click\u003d\"toggleFileActiveProperty(file)\")"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            .tooltip"},{"lineNumber":94,"author":{"gitId":"ccyccyccy"},"content":"              font-awesome-icon(icon\u003d\"caret-down\", fixed-width, v-show\u003d\"file.active\")"},{"lineNumber":95,"author":{"gitId":"-"},"content":"              span.tooltip-text(v-show\u003d\"file.active\") Click to hide file details"},{"lineNumber":96,"author":{"gitId":"ccyccyccy"},"content":"              font-awesome-icon(icon\u003d\"caret-right\", fixed-width, v-show\u003d\"!file.active\")"},{"lineNumber":97,"author":{"gitId":"-"},"content":"              span.tooltip-text(v-show\u003d\"!file.active\") Click to show file details"},{"lineNumber":98,"author":{"gitId":"jamessspanggg"},"content":"            span {{ i + 1 }}. \u0026nbsp;\u0026nbsp; {{ file.path }} \u0026nbsp;"},{"lineNumber":99,"author":{"gitId":"0blivious"},"content":"          span.icons"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            a("},{"lineNumber":101,"author":{"gitId":"-"},"content":"              v-bind:href\u003d\"getFileLink(file, \u0027commits\u0027)\", target\u003d\"_blank\""},{"lineNumber":102,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":103,"author":{"gitId":"-"},"content":"              .tooltip"},{"lineNumber":104,"author":{"gitId":"ccyccyccy"},"content":"                font-awesome-icon.button(icon\u003d\"history\")"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                span.tooltip-text Click to view the history view of file"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            a("},{"lineNumber":107,"author":{"gitId":"-"},"content":"              v-if\u003d\u0027!file.isBinary\u0027,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"              v-bind:href\u003d\"getFileLink(file, \u0027blame\u0027)\", target\u003d\"_blank\","},{"lineNumber":109,"author":{"gitId":"-"},"content":"              title\u003d\"click to view the blame view of file\""},{"lineNumber":110,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":111,"author":{"gitId":"-"},"content":"              .tooltip"},{"lineNumber":112,"author":{"gitId":"ccyccyccy"},"content":"                font-awesome-icon.button(icon\u003d\"user-edit\")"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                span.tooltip-text Click to view the blame view of file"},{"lineNumber":114,"author":{"gitId":"Tejas2805"},"content":"          span.fileTypeLabel("},{"lineNumber":115,"author":{"gitId":"-"},"content":"            v-if\u003d\u0027!file.isBinary\u0027,"},{"lineNumber":116,"author":{"gitId":"0blivious"},"content":"            v-bind:style\u003d\"{\\"},{"lineNumber":117,"author":{"gitId":"-"},"content":"              \u0027background-color\u0027: fileTypeColors[file.fileType],\\"},{"lineNumber":118,"author":{"gitId":"-"},"content":"              \u0027color\u0027: this.getFontColor(fileTypeColors[file.fileType])\\"},{"lineNumber":119,"author":{"gitId":"0blivious"},"content":"              }\""},{"lineNumber":120,"author":{"gitId":"-"},"content":"          ) {{ file.fileType }}\u0026nbsp;{{ file.lineCount }}\u0026nbsp;({{ file.lineCount - file.blankLineCount }})"},{"lineNumber":121,"author":{"gitId":"-"},"content":"          span.fileTypeLabel.binary(v-if\u003d\u0027file.isBinary\u0027) binary\u0026nbsp;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        pre.hljs.file-content(v-if\u003d\"file.wasCodeLoaded \u0026\u0026 !file.isBinary\", v-show\u003d\"file.active\")"},{"lineNumber":123,"author":{"gitId":"Tejas2805"},"content":"          template(v-for\u003d\"segment in file.segments\")"},{"lineNumber":124,"author":{"gitId":"0blivious"},"content":"            v-segment(v-bind:segment\u003d\"segment\", v-bind:path\u003d\"file.path\")"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        pre.file-content(v-if\u003d\"file.isBinary\", v-show\u003d\"file.active\")"},{"lineNumber":126,"author":{"gitId":"-"},"content":"          .binary-segment"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            .indicator BIN"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            .bin-text Binary file not shown."}],"authorContributionMap":{"ccyccyccy":7,"Tejas2805":20,"jamessspanggg":4,"-":56,"0blivious":15,"ang-zeyu":26}},{"path":"frontend/src/tabs/zoom.pug","fileType":"pug","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#zoom"},{"lineNumber":2,"author":{"gitId":"Tejas2805"},"content":"  .panel-title"},{"lineNumber":3,"author":{"gitId":"Tejas2805"},"content":"    span Commits Panel"},{"lineNumber":4,"author":{"gitId":"niqiukun"},"content":"  .toolbar--multiline(v-if\u003d\"filteredUser.commits.length \u0026\u0026 totalCommitMessageBodyCount\")"},{"lineNumber":5,"author":{"gitId":"niqiukun"},"content":"    a("},{"lineNumber":6,"author":{"gitId":"niqiukun"},"content":"      v-if\u003d\"expandedCommitMessagesCount \u003c totalCommitMessageBodyCount\","},{"lineNumber":7,"author":{"gitId":"niqiukun"},"content":"      v-on:click\u003d\"toggleAllCommitMessagesBody(true)\""},{"lineNumber":8,"author":{"gitId":"niqiukun"},"content":"    ) show all commit messages"},{"lineNumber":9,"author":{"gitId":"niqiukun"},"content":"    a("},{"lineNumber":10,"author":{"gitId":"niqiukun"},"content":"      v-if\u003d\"expandedCommitMessagesCount \u003e 0\","},{"lineNumber":11,"author":{"gitId":"niqiukun"},"content":"      v-on:click\u003d\"toggleAllCommitMessagesBody(false)\""},{"lineNumber":12,"author":{"gitId":"niqiukun"},"content":"    ) hide all commit messages"},{"lineNumber":13,"author":{"gitId":"Tejas2805"},"content":"  .panel-heading"},{"lineNumber":14,"author":{"gitId":"Tejas2805"},"content":"    .group-name"},{"lineNumber":15,"author":{"gitId":"Tejas2805"},"content":"      span("},{"lineNumber":16,"author":{"gitId":"jamessspanggg"},"content":"        v-if\u003d\"info.zFilterGroup \u003d\u003d\u003d \u0027groupByAuthors\u0027\""},{"lineNumber":17,"author":{"gitId":"Tejas2805"},"content":"      ) {{ filteredUser.displayName }} ({{ filteredUser.name }})"},{"lineNumber":18,"author":{"gitId":"Tejas2805"},"content":"      a("},{"lineNumber":19,"author":{"gitId":"Tejas2805"},"content":"        v-else,"},{"lineNumber":20,"author":{"gitId":"jamessspanggg"},"content":"        v-bind:href\u003d\"info.zLocation\", target\u003d\"_blank\","},{"lineNumber":21,"author":{"gitId":"Tejas2805"},"content":"        v-bind:title\u003d\"\u0027Click to open the repo\u0027\""},{"lineNumber":22,"author":{"gitId":"Tejas2805"},"content":"      )"},{"lineNumber":23,"author":{"gitId":"Tejas2805"},"content":"        span {{ filteredUser.repoName }}"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    .author(v-if\u003d\"!info.zIsMerged\")"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      span \u0026#8627; \u0026nbsp;"},{"lineNumber":26,"author":{"gitId":"jamessspanggg"},"content":"      span(v-if\u003d\"info.zFilterGroup \u003d\u003d\u003d \u0027groupByAuthors\u0027\") {{ filteredUser.repoName }}"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      span(v-else) {{ filteredUser.displayName }} ({{ filteredUser.name }})"},{"lineNumber":28,"author":{"gitId":"Tejas2805"},"content":"    .period"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      span \u0026#8627; \u0026nbsp;"},{"lineNumber":30,"author":{"gitId":"jamessspanggg"},"content":"      span {{ info.zSince }} to {{ info.zUntil }} \u0026nbsp;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      a(v-on:click\u003d\"openSummary\") [Show ramp chart for this period]"},{"lineNumber":32,"author":{"gitId":"Tejas2805"},"content":"  .zoom__title"},{"lineNumber":33,"author":{"gitId":"Tejas2805"},"content":"    .zoom__title--granularity granularity: one ramp per {{ info.zTimeFrame }}"},{"lineNumber":34,"author":{"gitId":"jamessspanggg"},"content":"    .zoom__title--tags"},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"      template(v-for\u003d\"commit in filteredUser.commits\")"},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"        template(v-for\u003d\"commitResult in commit.commitResults\")"},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":"          template(v-if\u003d\"commitResult.tags\")"},{"lineNumber":38,"author":{"gitId":"Tejas2805"},"content":"            .tag("},{"lineNumber":39,"author":{"gitId":"0blivious"},"content":"              v-for\u003d\"tag in commitResult.tags\","},{"lineNumber":40,"author":{"gitId":"0blivious"},"content":"              v-on:click\u003d\"scrollToCommit(tag, `tag ${commitResult.hash}`)\""},{"lineNumber":41,"author":{"gitId":"0blivious"},"content":"            )"},{"lineNumber":42,"author":{"gitId":"ccyccyccy"},"content":"              font-awesome-icon(icon\u003d\"tags\")"},{"lineNumber":43,"author":{"gitId":"jamessspanggg"},"content":"              span \u0026nbsp;{{ tag }}"},{"lineNumber":44,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":45,"author":{"gitId":"0blivious"},"content":"  v-ramp("},{"lineNumber":46,"author":{"gitId":"jamessspanggg"},"content":"    v-bind:groupby\u003d\"info.zFilterGroup\","},{"lineNumber":47,"author":{"gitId":"-"},"content":"    v-bind:user\u003d\"filteredUser\","},{"lineNumber":48,"author":{"gitId":"jamessspanggg"},"content":"    v-bind:tframe\u003d\"info.zTimeFrame\","},{"lineNumber":49,"author":{"gitId":"jamessspanggg"},"content":"    v-bind:sdate\u003d\"info.zSince\","},{"lineNumber":50,"author":{"gitId":"jamessspanggg"},"content":"    v-bind:udate\u003d\"info.zUntil\","},{"lineNumber":51,"author":{"gitId":"jamessspanggg"},"content":"    v-bind:avgsize\u003d\"info.zAvgCommitSize\","},{"lineNumber":52,"author":{"gitId":"-"},"content":"    v-bind:mergegroup\u003d\"info.zIsMerged\","},{"lineNumber":53,"author":{"gitId":"-"},"content":"    v-bind:fromramp\u003d\"info.zFromRamp\","},{"lineNumber":54,"author":{"gitId":"-"},"content":"    v-bind:filtersearch\u003d\"info.zFilterSearch\")"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"0blivious"},"content":"  .sorting.mui-form--inline"},{"lineNumber":57,"author":{"gitId":"Tejas2805"},"content":"    .mui-select.sort-by"},{"lineNumber":58,"author":{"gitId":"Tejas2805"},"content":"      select(v-model\u003d\"commitsSortType\")"},{"lineNumber":59,"author":{"gitId":"0blivious"},"content":"        option(value\u003d\"time\") Time"},{"lineNumber":60,"author":{"gitId":"0blivious"},"content":"        option(value\u003d\"lineOfCode\") LoC"},{"lineNumber":61,"author":{"gitId":"Tejas2805"},"content":"      label sort by"},{"lineNumber":62,"author":{"gitId":"Tejas2805"},"content":"    .mui-select.sort-order"},{"lineNumber":63,"author":{"gitId":"Tejas2805"},"content":"      select(v-model\u003d\"toReverseSortedCommits\")"},{"lineNumber":64,"author":{"gitId":"0blivious"},"content":"        option(v-bind:value\u003d\u0027true\u0027) Descending"},{"lineNumber":65,"author":{"gitId":"0blivious"},"content":"        option(v-bind:value\u003d\u0027false\u0027) Ascending"},{"lineNumber":66,"author":{"gitId":"Tejas2805"},"content":"      label order"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"  .fileTypes"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    .checkboxes.mui-form--inline(v-if\u003d\"fileTypes.length \u003e 0\")"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      label(style\u003d\u0027background-color: #000000; color: #ffffff\u0027)"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        input.mui-checkbox--fileType(type\u003d\"checkbox\", v-model\u003d\"isSelectAllChecked\", value\u003d\"all\")"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        span All\u0026nbsp;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      template(v-for\u003d\"fileType in fileTypes\")"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        label("},{"lineNumber":75,"author":{"gitId":"-"},"content":"          v-bind:key\u003d\"fileType\","},{"lineNumber":76,"author":{"gitId":"-"},"content":"          v-bind:style\u003d\"{\\"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                  \u0027background-color\u0027: fileTypeColors[fileType],\\"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                  \u0027color\u0027: this.getFontColor(fileTypeColors[fileType])\\"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                  }\""},{"lineNumber":80,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":81,"author":{"gitId":"-"},"content":"          input.mui-checkbox--fileType(type\u003d\"checkbox\", v-bind:value\u003d\"fileType\","},{"lineNumber":82,"author":{"gitId":"-"},"content":"            v-on:change\u003d\"updateSelectedFileTypesHash\", v-model\u003d\"selectedFileTypes\")"},{"lineNumber":83,"author":{"gitId":"-"},"content":"          span {{ fileType }} \u0026nbsp;"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"  .zoom__day(v-for\u003d\"day in selectedCommits\", v-bind:key\u003d\"day.date\")"},{"lineNumber":86,"author":{"gitId":"jamessspanggg"},"content":"    h3(v-if\u003d\"info.zTimeFrame \u003d\u003d\u003d \u0027week\u0027\") Week of {{ day.date }}"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    h3(v-else) {{ day.date }}"},{"lineNumber":88,"author":{"gitId":"0blivious"},"content":"    template"},{"lineNumber":89,"author":{"gitId":"0blivious"},"content":"      //- use tabindex to enable focus property on div"},{"lineNumber":90,"author":{"gitId":"0blivious"},"content":"      .commit-message("},{"lineNumber":91,"author":{"gitId":"0blivious"},"content":"        tabindex\u003d\"-1\","},{"lineNumber":92,"author":{"gitId":"Tejas2805"},"content":"        v-for\u003d\"slice in day.commitResults\","},{"lineNumber":93,"author":{"gitId":"Tejas2805"},"content":"        v-bind:key\u003d\"slice.hash\","},{"lineNumber":94,"author":{"gitId":"0blivious"},"content":"        v-bind:class\u003d\"{ \u0027message-body active\u0027: slice.messageBody !\u003d\u003d \u0027\u0027 }\""},{"lineNumber":95,"author":{"gitId":"0blivious"},"content":"      )"},{"lineNumber":96,"author":{"gitId":"jamessspanggg"},"content":"        a.message-title(v-bind:href\u003d\"getSliceLink(slice)\", target\u003d\"_blank\")"},{"lineNumber":97,"author":{"gitId":"jamessspanggg"},"content":"          .within-border {{ slice.messageTitle.substr(0, 50) }}"},{"lineNumber":98,"author":{"gitId":"jamessspanggg"},"content":"          .not-within-border(v-if\u003d\"slice.messageTitle.length \u003e 50\") {{ slice.messageTitle.substr(50) }}"},{"lineNumber":99,"author":{"gitId":"jamessspanggg"},"content":"        span \u0026nbsp; ({{ slice.insertions }} lines) \u0026nbsp;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        template"},{"lineNumber":101,"author":{"gitId":"-"},"content":"          span.fileTypeLabel("},{"lineNumber":102,"author":{"gitId":"-"},"content":"            v-for\u003d\"fileType in filterSelectedFileTypes(Object.keys(slice.fileTypesAndContributionMap))\","},{"lineNumber":103,"author":{"gitId":"-"},"content":"            v-bind:style\u003d\"{\\"},{"lineNumber":104,"author":{"gitId":"-"},"content":"              \u0027background-color\u0027: fileTypeColors[fileType],\\"},{"lineNumber":105,"author":{"gitId":"-"},"content":"              \u0027color\u0027: this.getFontColor(fileTypeColors[fileType])\\"},{"lineNumber":106,"author":{"gitId":"-"},"content":"              }\""},{"lineNumber":107,"author":{"gitId":"-"},"content":"          ) {{ fileType }}"},{"lineNumber":108,"author":{"gitId":"0blivious"},"content":"        template(v-if\u003d\"slice.tags\", v-for\u003d\"tag in slice.tags\")"},{"lineNumber":109,"author":{"gitId":"Tejas2805"},"content":"          .tag(tabindex\u003d\"-1\", v-bind:class\u003d\"[`${slice.hash}`, tag]\")"},{"lineNumber":110,"author":{"gitId":"ccyccyccy"},"content":"            font-awesome-icon(icon\u003d\"tags\")"},{"lineNumber":111,"author":{"gitId":"jamessspanggg"},"content":"            span \u0026nbsp;{{ tag }}"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        a("},{"lineNumber":113,"author":{"gitId":"-"},"content":"          v-if\u003d\"slice.messageBody !\u003d\u003d \u0027\u0027\","},{"lineNumber":114,"author":{"gitId":"-"},"content":"          v-on:click\u003d\"updateExpandedCommitMessagesCount\","},{"lineNumber":115,"author":{"gitId":"-"},"content":"          onclick\u003d\"toggleNext(this)\""},{"lineNumber":116,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":117,"author":{"gitId":"-"},"content":"          .tooltip"},{"lineNumber":118,"author":{"gitId":"ccyccyccy"},"content":"            font-awesome-icon.commit-message--button(icon\u003d\"ellipsis-h\")"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            span.tooltip-text Click to show/hide the commit message body"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        .body(v-if\u003d\"slice.messageBody !\u003d\u003d \u0027\u0027\")"},{"lineNumber":121,"author":{"gitId":"-"},"content":"          pre {{ slice.messageBody }}"},{"lineNumber":122,"author":{"gitId":"jamessspanggg"},"content":"            .dashed-border"}],"authorContributionMap":{"ccyccyccy":3,"niqiukun":9,"Tejas2805":24,"jamessspanggg":22,"-":48,"0blivious":16}},{"path":"package.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"name\": \"reposense\","},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"version\": \"1.0.0\","},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \"description\": \"[![Build Status](https://travis-ci.org/reposense/RepoSense.svg?branch\u003dmaster)](https://travis-ci.org/reposense/RepoSense) [![Build status](https://ci.appveyor.com/api/projects/status/gsbkj5qby3pjd6nw/branch/master?svg\u003dtrue)](https://ci.appveyor.com/project/eugenepeh/reposense/branch/master)\","},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \"main\": \"index.js\","},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \"directories\": {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"doc\": \"docs\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \"scripts\": {"},{"lineNumber":10,"author":{"gitId":"ang-zeyu"},"content":"    \"lint\": \"eslint frontend/src/**/*js frontend/cypress/**.js \u0026\u0026 stylelint frontend/src/**/*.scss \u0026\u0026 npm run puglint\","},{"lineNumber":11,"author":{"gitId":"ang-zeyu"},"content":"    \"puglint\": \"pug-lint frontend/src/index.pug frontend/src/ramp.pug frontend/src/summary.pug frontend/src/summary_charts.pug frontend/src/resizer.pug frontend/src/tabs/authorship.pug frontend/src/tabs/segment.pug frontend/src/tabs/zoom.pug\","},{"lineNumber":12,"author":{"gitId":"ang-zeyu"},"content":"    \"lintfix\": \"eslint --fix frontend/src/**/*js frontend/cypress/**.js \u0026\u0026 stylelint --fix frontend/src/**/*.scss\","},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"spuild\": \"spuild frontend\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \"repository\": {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"type\": \"git\","},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"url\": \"git+https://github.com/reposense/RepoSense.git\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \"author\": \"\","},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \"license\": \"ISC\","},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \"bugs\": {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"url\": \"https://github.com/reposense/RepoSense/issues\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  \"homepage\": \"https://github.com/reposense/RepoSense#readme\","},{"lineNumber":25,"author":{"gitId":"-"},"content":"  \"dependencies\": {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"minimatch\": \"3.0.4\","},{"lineNumber":27,"author":{"gitId":"Tejas2805"},"content":"    \"pug-lint\": \"^2.6.0\","},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"spuild\": \"1.0.2\","},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"stylelint-config-standard\": \"^18.3.0\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  \"devDependencies\": {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"eslint\": \"^4.19.1\","},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \"eslint-config-airbnb-base\": \"^13.0.0\","},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"eslint-plugin-import\": \"^2.13.0\","},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \"stylelint\": \"^10.1.0\","},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"stylelint-order\": \"^3.0.1\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Tejas2805":1,"-":34,"ang-zeyu":3}},{"path":"src/main/java/reposense/RepoSense.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"anubh-v"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.ZonedDateTime;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Level;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.helper.HelpScreenException;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.model.AuthorConfiguration;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.model.CliArguments;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.model.ConfigCliArguments;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.model.GroupConfiguration;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.model.LocationsCliArguments;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.model.ReportConfiguration;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.model.ViewCliArguments;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.parser.ArgsParser;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.parser.AuthorConfigCsvParser;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.parser.GroupConfigCsvParser;"},{"lineNumber":26,"author":{"gitId":"anubh-v"},"content":"import reposense.parser.InvalidCsvException;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.parser.InvalidLocationException;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import reposense.parser.ParseException;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import reposense.parser.RepoConfigCsvParser;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import reposense.report.ReportGenerator;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import reposense.system.ReportServer;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;"},{"lineNumber":34,"author":{"gitId":"jamessspanggg"},"content":"import reposense.util.TimeUtil;"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * The main RepoSense class."},{"lineNumber":38,"author":{"gitId":"-"},"content":" */"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class RepoSense {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(RepoSense.class);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final int SERVER_PORT_NUMBER \u003d 9000;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"E MMM d HH:mm:ss yyyy z\");"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VERSION_UNSPECIFIED \u003d \"unspecified\";"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * The entry point of the program."},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":50,"author":{"gitId":"jamessspanggg"},"content":"            TimeUtil.startTimer();"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            CliArguments cliArguments \u003d ArgsParser.parse(args);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e configs \u003d null;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            ReportConfiguration reportConfig \u003d new ReportConfiguration();"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"            if (cliArguments instanceof ViewCliArguments) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                ReportServer.startServer(SERVER_PORT_NUMBER, (("},{"lineNumber":57,"author":{"gitId":"-"},"content":"                        ViewCliArguments) cliArguments).getReportDirectoryPath().toAbsolutePath());"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            } else if (cliArguments instanceof ConfigCliArguments) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                configs \u003d getRepoConfigurations((ConfigCliArguments) cliArguments);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                reportConfig \u003d ((ConfigCliArguments) cliArguments).getReportConfiguration();"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            } else if (cliArguments instanceof LocationsCliArguments) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                configs \u003d getRepoConfigurations((LocationsCliArguments) cliArguments);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                throw new AssertionError(\"CliArguments\u0027s subclass type is unhandled.\");"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"            RepoConfiguration.setFormatsToRepoConfigs(configs, cliArguments.getFormats());"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            RepoConfiguration.setDatesToRepoConfigs(configs, cliArguments.getSinceDate(), cliArguments.getUntilDate());"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            RepoConfiguration.setZoneIdToRepoConfigs(configs, cliArguments.getZoneId().toString());"},{"lineNumber":71,"author":{"gitId":"anubh-v"},"content":"            RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(configs,"},{"lineNumber":72,"author":{"gitId":"anubh-v"},"content":"                    cliArguments.isStandaloneConfigIgnored());"},{"lineNumber":73,"author":{"gitId":"jamessspanggg"},"content":"            RepoConfiguration.setIsLastModifiedDateIncludedToRepoConfigs(configs,"},{"lineNumber":74,"author":{"gitId":"jamessspanggg"},"content":"                    cliArguments.isLastModifiedDateIncluded());"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            RepoConfiguration.setIsShallowCloningPerformedToRepoConfigs(configs,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                    cliArguments.isShallowCloningPerformed());"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            List\u003cPath\u003e reportFoldersAndFiles \u003d ReportGenerator.generateReposReport(configs,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                    cliArguments.getOutputFilePath().toAbsolutePath().toString(),"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                    cliArguments.getAssetsFilePath().toAbsolutePath().toString(), reportConfig,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                    formatter.format(ZonedDateTime.now(cliArguments.getZoneId())),"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                    cliArguments.getSinceDate(), cliArguments.getUntilDate(),"},{"lineNumber":82,"author":{"gitId":"anubh-v"},"content":"                    cliArguments.isSinceDateProvided(), cliArguments.isUntilDateProvided(),"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                    cliArguments.getNumCloningThreads(), cliArguments.getNumAnalysisThreads(),"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                    TimeUtil::getElapsedTime, cliArguments.getZoneId());"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            FileUtil.zipFoldersAndFiles(reportFoldersAndFiles, cliArguments.getOutputFilePath().toAbsolutePath(),"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                    \".json\");"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"jamessspanggg"},"content":"            logger.info(TimeUtil.getElapsedTimeMessage());"},{"lineNumber":89,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"            if (cliArguments.isAutomaticallyLaunching()) {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                ReportServer.startServer(SERVER_PORT_NUMBER, cliArguments.getOutputFilePath().toAbsolutePath());"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"anubh-v"},"content":"        } catch (IOException | ParseException | InvalidCsvException e) {"},{"lineNumber":94,"author":{"gitId":"anubh-v"},"content":"            logger.log(Level.WARNING, e.getMessage(), e);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (HelpScreenException e) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            // help message was printed by the ArgumentParser; it is safe to exit."},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Constructs a list of {@code RepoConfiguration} if {@code cliArguments} is a {@code ConfigCliArguments}."},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws IOException if user-supplied csv file does not exists or is not readable."},{"lineNumber":104,"author":{"gitId":"anubh-v"},"content":"     * @throws InvalidCsvException if user-supplied repo-config csv is malformed."},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"anubh-v"},"content":"    public static List\u003cRepoConfiguration\u003e getRepoConfigurations(ConfigCliArguments cliArguments)"},{"lineNumber":107,"author":{"gitId":"anubh-v"},"content":"            throws IOException, InvalidCsvException {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e repoConfigs \u003d new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e authorConfigs;"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        List\u003cGroupConfiguration\u003e groupConfigs;"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            authorConfigs \u003d new AuthorConfigCsvParser(cliArguments.getAuthorConfigFilePath()).parse();"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            RepoConfiguration.merge(repoConfigs, authorConfigs);"},{"lineNumber":115,"author":{"gitId":"anubh-v"},"content":"        } catch (FileNotFoundException fnfe) {"},{"lineNumber":116,"author":{"gitId":"anubh-v"},"content":"            // FileNotFoundException thrown as author-config.csv is not found."},{"lineNumber":117,"author":{"gitId":"-"},"content":"            // Ignore exception as the file is optional."},{"lineNumber":118,"author":{"gitId":"anubh-v"},"content":"        } catch (IOException | InvalidCsvException e) {"},{"lineNumber":119,"author":{"gitId":"anubh-v"},"content":"            // for all IO and invalid csv exceptions, log the error and continue"},{"lineNumber":120,"author":{"gitId":"anubh-v"},"content":"            logger.log(Level.WARNING, e.getMessage(), e);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            groupConfigs \u003d new GroupConfigCsvParser(cliArguments.getGroupConfigFilePath()).parse();"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            RepoConfiguration.setGroupConfigsToRepos(repoConfigs, groupConfigs);"},{"lineNumber":126,"author":{"gitId":"anubh-v"},"content":"        } catch (FileNotFoundException fnfe) {"},{"lineNumber":127,"author":{"gitId":"anubh-v"},"content":"            // FileNotFoundException thrown as groups-config.csv is not found."},{"lineNumber":128,"author":{"gitId":"-"},"content":"            // Ignore exception as the file is optional."},{"lineNumber":129,"author":{"gitId":"anubh-v"},"content":"        } catch (IOException | InvalidCsvException e) {"},{"lineNumber":130,"author":{"gitId":"anubh-v"},"content":"            // for all other IO and invalid csv exceptions, log the error and continue"},{"lineNumber":131,"author":{"gitId":"anubh-v"},"content":"            logger.log(Level.WARNING, e.getMessage(), e);"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return repoConfigs;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Constructs a list of {@code RepoConfiguration} if {@code cliArguments} is a {@code LocationsCliArguments}."},{"lineNumber":139,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @throws ParseException if all repo locations are invalid."},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static List\u003cRepoConfiguration\u003e getRepoConfigurations(LocationsCliArguments cliArguments)"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throws ParseException {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e configs \u003d new ArrayList\u003c\u003e();"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        for (String locationString : cliArguments.getLocations()) {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                configs.add(new RepoConfiguration(new RepoLocation(locationString)));"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            } catch (InvalidLocationException ile) {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                logger.log(Level.WARNING, ile.getMessage(), ile);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (configs.isEmpty()) {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new ParseException(\"All repository locations are invalid.\");"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return configs;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static String getVersion() {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String version \u003d RepoSense.class.getPackage().getImplementationVersion();"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (version \u003d\u003d null || version.equals(VERSION_UNSPECIFIED)) {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            version \u003d System.getProperty(\"version\");"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return version;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"anubh-v":20,"jamessspanggg":6,"-":143}},{"path":"src/main/java/reposense/authorship/FileInfoAnalyzer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"jamessspanggg"},"content":"import java.time.ZoneId;"},{"lineNumber":7,"author":{"gitId":"jamessspanggg"},"content":"import java.util.Date;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.authorship.analyzer.AnnotatorAnalyzer;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileInfo;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileResult;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.authorship.model.LineInfo;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.git.GitBlame;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.git.GitLog;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;"},{"lineNumber":24,"author":{"gitId":"anubh-v"},"content":"import reposense.util.FileUtil;"},{"lineNumber":25,"author":{"gitId":"jamessspanggg"},"content":"import reposense.util.TimeUtil;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Analyzes the target and information given in the {@code FileInfo}."},{"lineNumber":29,"author":{"gitId":"-"},"content":" */"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class FileInfoAnalyzer {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(FileInfoAnalyzer.class);"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final int AUTHOR_NAME_OFFSET \u003d \"author \".length();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final int AUTHOR_EMAIL_OFFSET \u003d \"author-mail \".length();"},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"    private static final int AUTHOR_TIME_OFFSET \u003d \"author-time \".length();"},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"    private static final int AUTHOR_TIMEZONE_OFFSET \u003d \"author-tz \".length();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final int FULL_COMMIT_HASH_LENGTH \u003d 40;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_FILE_MISSING \u003d \"Unable to analyze the file located at \\\"%s\\\" \""},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"as the file is missing from your system. Skipping this file.\";"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_SHALLOW_CLONING_LAST_MODIFIED_DATE_CONFLICT \u003d \"Repo %s was cloned using \""},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"shallow cloning. As such, the \\\"last modified date\\\" values may be incorrect.\";"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Analyzes the lines of the file, given in the {@code fileInfo}, that has changed in the time period provided"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * by {@code config}."},{"lineNumber":48,"author":{"gitId":"anubh-v"},"content":"     * Returns null if the file is missing from the local system, or none of the"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@code Author} specified in {@code config} contributed to the file in {@code fileInfo}."},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static FileResult analyzeTextFile(RepoConfiguration config, FileInfo fileInfo) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String relativePath \u003d fileInfo.getPath();"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (Files.notExists(Paths.get(config.getRepoRoot(), relativePath))) {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            logger.severe(String.format(MESSAGE_FILE_MISSING, relativePath));"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"anubh-v"},"content":"        if (FileUtil.isEmptyFile(config.getRepoRoot(), relativePath)) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"jamessspanggg"},"content":"        aggregateBlameAuthorModifiedAndDateInfo(config, fileInfo);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        fileInfo.setFileType(config.getFileType(fileInfo.getPath()));"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AnnotatorAnalyzer.aggregateAnnotationAuthorInfo(fileInfo, config.getAuthorDetailsToAuthorMap());"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!config.getAuthorList().isEmpty() \u0026\u0026 fileInfo.isAllAuthorsIgnored(config.getAuthorList())) {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return generateTextFileResult(fileInfo);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Analyzes the binary file, given in the {@code fileInfo}, that has changed in the time period provided"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * by {@code config}."},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns null if the file is missing from the local system, or none of the"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code Author} specified in {@code config} contributed to the file in {@code fileInfo}."},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static FileResult analyzeBinaryFile(RepoConfiguration config, FileInfo fileInfo) {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String relativePath \u003d fileInfo.getPath();"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (Files.notExists(Paths.get(config.getRepoRoot(), relativePath))) {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            logger.severe(String.format(MESSAGE_FILE_MISSING, relativePath));"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"        fileInfo.setFileType(config.getFileType(fileInfo.getPath()));"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return generateBinaryFileResult(config, fileInfo);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Generates and returns a {@code FileResult} with the authorship results from {@code fileInfo} consolidated."},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private static FileResult generateTextFileResult(FileInfo fileInfo) {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        HashMap\u003cAuthor, Integer\u003e authorContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        for (LineInfo line : fileInfo.getLines()) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Author author \u003d line.getAuthor();"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            authorContributionMap.put(author, authorContributionMap.getOrDefault(author, 0) + 1);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return FileResult.createTextFileResult("},{"lineNumber":104,"author":{"gitId":"-"},"content":"            fileInfo.getPath(), fileInfo.getFileType(), fileInfo.getLines(), authorContributionMap);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Generates and returns a {@code FileResult} with the authorship results from binary {@code fileInfo} consolidated."},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Authorship results are indicated in the {@code authorContributionMap} as contributions with zero line counts."},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Returns {@code null} if none of the {@code Author} specified in {@code config} contributed to the file in"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * {@code fileInfo}."},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private static FileResult generateBinaryFileResult(RepoConfiguration config, FileInfo fileInfo) {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String authorsString \u003d GitLog.getBinaryFileAuthors(config, fileInfo.getPath());"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (authorsString.isEmpty()) { // Empty string, means no author at all"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Set\u003cAuthor\u003e authors \u003d new HashSet\u003c\u003e();"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        HashMap\u003cAuthor, Integer\u003e authorContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"        for (String authorString : authorsString.split(\"\\n\")) {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            String[] arr \u003d authorString.split(\"\\t\");"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            String authorName \u003d arr[0];"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            String authorEmail \u003d arr[1];"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            authors.add(config.getAuthor(authorName, authorEmail));"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"        for (Author author : authors) {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            authorContributionMap.put(author, 0);"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return FileResult.createBinaryFileResult(fileInfo.getPath(), fileInfo.getFileType(), authorContributionMap);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":137,"author":{"gitId":"jamessspanggg"},"content":"     * Sets the {@code Author} and {@code Date} for each line in {@code fileInfo} based on the git blame analysis"},{"lineNumber":138,"author":{"gitId":"jamessspanggg"},"content":"     * on the file."},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":140,"author":{"gitId":"jamessspanggg"},"content":"    private static void aggregateBlameAuthorModifiedAndDateInfo(RepoConfiguration config, FileInfo fileInfo) {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String blameResults \u003d getGitBlameResult(config, fileInfo.getPath());"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String[] blameResultLines \u003d blameResults.split(\"\\n\");"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Path filePath \u003d Paths.get(fileInfo.getPath());"},{"lineNumber":144,"author":{"gitId":"jamessspanggg"},"content":"        Long sinceDateInMs \u003d config.getSinceDate().getTime();"},{"lineNumber":145,"author":{"gitId":"jamessspanggg"},"content":"        Long untilDateInMs \u003d config.getUntilDate().getTime();"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"jamessspanggg"},"content":"        for (int lineCount \u003d 0; lineCount \u003c blameResultLines.length; lineCount +\u003d 5) {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            String commitHash \u003d blameResultLines[lineCount].substring(0, FULL_COMMIT_HASH_LENGTH);"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            String authorName \u003d blameResultLines[lineCount + 1].substring(AUTHOR_NAME_OFFSET);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            String authorEmail \u003d blameResultLines[lineCount + 2]"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    .substring(AUTHOR_EMAIL_OFFSET).replaceAll(\"\u003c|\u003e\", \"\");"},{"lineNumber":152,"author":{"gitId":"jamessspanggg"},"content":"            Long commitDateInMs \u003d Long.parseLong(blameResultLines[lineCount + 3].substring(AUTHOR_TIME_OFFSET)) * 1000;"},{"lineNumber":153,"author":{"gitId":"jamessspanggg"},"content":"            String authorTimeZone \u003d blameResultLines[lineCount + 4].substring(AUTHOR_TIMEZONE_OFFSET);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            Author author \u003d config.getAuthor(authorName, authorEmail);"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"anubh-v"},"content":"            if (!fileInfo.isFileLineTracked(lineCount / 5) || author.isIgnoringFile(filePath)"},{"lineNumber":157,"author":{"gitId":"jamessspanggg"},"content":"                    || CommitHash.isInsideCommitList(commitHash, config.getIgnoreCommitList())"},{"lineNumber":158,"author":{"gitId":"jamessspanggg"},"content":"                    || commitDateInMs \u003c sinceDateInMs || commitDateInMs \u003e untilDateInMs) {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                author \u003d Author.UNKNOWN_AUTHOR;"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"jamessspanggg"},"content":"            if (config.isLastModifiedDateIncluded()) {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                if (config.isShallowCloningPerformed()) {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                    logger.warning(String.format("},{"lineNumber":165,"author":{"gitId":"-"},"content":"                            MESSAGE_SHALLOW_CLONING_LAST_MODIFIED_DATE_CONFLICT, config.getRepoName()));"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":167,"author":{"gitId":"jamessspanggg"},"content":"                // convert the commit date from the system default time zone to cli-specified timezone"},{"lineNumber":168,"author":{"gitId":"jamessspanggg"},"content":"                Date convertedCommitDate \u003d TimeUtil.getZonedDateFromSystemDate(new Date(commitDateInMs),"},{"lineNumber":169,"author":{"gitId":"jamessspanggg"},"content":"                        ZoneId.of(config.getZoneId()));"},{"lineNumber":170,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":171,"author":{"gitId":"jamessspanggg"},"content":"                fileInfo.setLineLastModifiedDate(lineCount / 5, convertedCommitDate);"},{"lineNumber":172,"author":{"gitId":"jamessspanggg"},"content":"            }"},{"lineNumber":173,"author":{"gitId":"jamessspanggg"},"content":"            fileInfo.setLineAuthor(lineCount / 5, author);"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Returns the analysis result from running git blame on {@code filePath}."},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    private static String getGitBlameResult(RepoConfiguration config, String filePath) {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return GitBlame.blame(config.getRepoRoot(), filePath);"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"anubh-v":4,"jamessspanggg":24,"-":155}},{"path":"src/main/java/reposense/authorship/FileInfoExtractor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.FileReader;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Comparator;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.logging.Level;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileInfo;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.authorship.model.LineInfo;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.git.GitCheckout;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.git.GitDiff;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.git.GitRevList;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.git.exception.CommitNotFoundException;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Extracts out all the relevant {@code FileInfo} from the repository."},{"lineNumber":31,"author":{"gitId":"-"},"content":" */"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class FileInfoExtractor {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(FileInfoExtractor.class);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_START_EXTRACTING_FILE_INFO \u003d \"Extracting relevant file info from %s (%s)...\";"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"    private static final String DIFF_FILE_CHUNK_SEPARATOR \u003d \"\\ndiff --git \\\"?\\\u0027?a/.*\\n\";"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String LINE_CHUNKS_SEPARATOR \u003d \"\\n@@ \";"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String LINE_INSERTED_SYMBOL \u003d \"+\";"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String STARTING_LINE_NUMBER_GROUP_NAME \u003d \"startingLineNumber\";"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String FILE_CHANGED_GROUP_NAME \u003d \"filePath\";"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String FILE_DELETED_SYMBOL \u003d \"/dev/null\";"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String MATCH_GROUP_FAIL_MESSAGE_FORMAT \u003d \"Failed to match the %s group for:\\n%s\";"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String BINARY_FILE_LINE_DIFF_RESULT \u003d \"-\\t-\\t\";"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final int LINE_CHANGED_HEADER_INDEX \u003d 0;"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final Pattern STARTING_LINE_NUMBER_PATTERN \u003d Pattern.compile("},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \"-(\\\\d)+(,)?(\\\\d)* \\\\+(?\u003cstartingLineNumber\u003e\\\\d+)(,)?(\\\\d)* @@\");"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final Pattern FILE_CHANGED_PATTERN \u003d Pattern.compile(\"\\n(\\\\+){3} b?/(?\u003cfilePath\u003e.*)\\n\");"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Extracts a list of relevant non-binary files given in {@code config}."},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static List\u003cFileInfo\u003e extractTextFileInfos(RepoConfiguration config) {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.info(String.format(MESSAGE_START_EXTRACTING_FILE_INFO, config.getLocation(), config.getBranch()));"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e fileInfos \u003d new ArrayList\u003c\u003e();"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // checks out to the latest commit of the date range to ensure the FileInfo generated correspond to the"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // git blame file analyze output"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            GitCheckout.checkoutDate(config.getRepoRoot(), config.getBranch(), config.getUntilDate());"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        } catch (CommitNotFoundException cnfe) {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return fileInfos;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String lastCommitHash \u003d GitRevList.getCommitHashBeforeDate("},{"lineNumber":67,"author":{"gitId":"-"},"content":"                config.getRepoRoot(), config.getBranch(), config.getSinceDate());"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!lastCommitHash.isEmpty()) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            fileInfos \u003d getEditedFileInfos(config, lastCommitHash);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fileInfos \u003d getAllFileInfo(config, false);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"        fileInfos.sort(Comparator.comparing(FileInfo::getPath));"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return fileInfos;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Extracts a list of relevant binary files given in {@code config}."},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static List\u003cFileInfo\u003e extractBinaryFileInfos(RepoConfiguration config) {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e binaryFileInfos \u003d getAllFileInfo(config, true);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        binaryFileInfos.sort(Comparator.comparing(FileInfo::getPath));"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return binaryFileInfos;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Generates a list of relevant {@code FileInfo} for all files that were edited in between the current"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * commit and the {@code lastCommitHash} commit, marks each {@code LineInfo} for each {@code FileInfo} on"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * whether they have been inserted within the commit range or not, and returns it."},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static List\u003cFileInfo\u003e getEditedFileInfos(RepoConfiguration config, String lastCommitHash) {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e fileInfos \u003d new ArrayList\u003c\u003e();"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String fullDiffResult \u003d GitDiff.diffCommit(config.getRepoRoot(), lastCommitHash);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // no diff between the 2 commits, return an empty list"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (fullDiffResult.isEmpty()) {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return fileInfos;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String[] fileDiffResultList \u003d fullDiffResult.split(DIFF_FILE_CHUNK_SEPARATOR);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Set\u003cPath\u003e textFilesSet \u003d getFiles(config, false);"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"        for (String fileDiffResult : fileDiffResultList) {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Matcher filePathMatcher \u003d FILE_CHANGED_PATTERN.matcher(fileDiffResult);"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"            // diff result does not have the markers to indicate that file has any line changes, skip it"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            if (!filePathMatcher.find()) {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"            String filePath \u003d filePathMatcher.group(FILE_CHANGED_GROUP_NAME);"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"            // file is deleted, skip it as well"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            if (filePath.equals(FILE_DELETED_SYMBOL)) {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"            if (!isValidTextFile(filePath, textFilesSet)) {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"            if (config.getFileTypeManager().isInsideWhitelistedFormats(filePath)) {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                FileInfo currentFileInfo \u003d generateFileInfo(config.getRepoRoot(), filePath);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                setLinesToTrack(currentFileInfo, fileDiffResult);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                fileInfos.add(currentFileInfo);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return fileInfos;"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Returns a {@code Set} of non-binary files for the repo {@code repoConfig}"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * if {@code isBinaryFiles} is set to `false`."},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Otherwise, returns a {@code Set} of binary files for the repo {@code repoConfig}"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static Set\u003cPath\u003e getFiles(RepoConfiguration repoConfig, boolean isBinaryFile) {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        List\u003cString\u003e modifiedFileList \u003d GitDiff.getModifiedFilesList(Paths.get(repoConfig.getRepoRoot()));"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // Gets rid of files with invalid directory name and filters by the {@code isBinaryFile} flag"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return modifiedFileList.stream()"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .filter(file -\u003e isBinaryFile \u003d\u003d file.startsWith(BINARY_FILE_LINE_DIFF_RESULT))"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .map(file -\u003e file.split(\"\\t\")[2])"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .filter(FileUtil::isValidPath)"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .map(filteredFile -\u003e Paths.get(filteredFile))"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .collect(Collectors.toCollection(HashSet::new));"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Analyzes the {@code fileDiffResult} and marks each {@code LineInfo} in {@code FileInfo} on whether they were"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * inserted in between the commit range."},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private static void setLinesToTrack(FileInfo fileInfo, String fileDiffResult) {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String[] linesChangedChunk \u003d fileDiffResult.split(LINE_CHUNKS_SEPARATOR);"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        List\u003cLineInfo\u003e lineInfos \u003d fileInfo.getLines();"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        int fileLinePointer \u003d 0;"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // skips the header, index starts from 1"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        for (int sectionIndex \u003d 1; sectionIndex \u003c linesChangedChunk.length; sectionIndex++) {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            String linesChangedInSection \u003d linesChangedChunk[sectionIndex];"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            String[] linesChanged \u003d linesChangedInSection.split(\"\\n\");"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            int startingLineNumber \u003d getStartingLineNumber(linesChanged[LINE_CHANGED_HEADER_INDEX]);"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"            // mark all untouched lines between sections as untracked"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            while (fileLinePointer \u003c startingLineNumber - 1) {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                lineInfos.get(fileLinePointer++).setTracked(false);"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"            // skips the header, index starts from 1"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            for (int lineIndex \u003d 1; lineIndex \u003c linesChanged.length; lineIndex++) {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                String lineChanged \u003d linesChanged[lineIndex];"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                // set line added to be tracked"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                if (lineChanged.startsWith(LINE_INSERTED_SYMBOL)) {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                    lineInfos.get(fileLinePointer++).setTracked(true);"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // set all remaining lines in file that were untouched to be untracked"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        while (fileLinePointer \u003c lineInfos.size()) {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            lineInfos.get(fileLinePointer++).setTracked(false);"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Traverses each file from the repo root directory, generates the {@code FileInfo} for each relevant file found"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * based on {@code config} and inserts it into {@code fileInfos}."},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private static List\u003cFileInfo\u003e getAllFileInfo(RepoConfiguration config, boolean isBinaryFiles) {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e fileInfos \u003d new ArrayList\u003c\u003e();"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cPath\u003e files \u003d getFiles(config, isBinaryFiles);"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        for (Path relativePath : files) {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            if (!config.getFileTypeManager().isInsideWhitelistedFormats(relativePath.toString())) {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            if (isBinaryFiles) {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                // skip LineInfo analysis"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                fileInfos.add(new FileInfo(relativePath.toString()));"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                fileInfos.add(generateFileInfo(config.getRepoRoot(), relativePath.toString()));"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        return fileInfos;"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * Generates and returns a {@code FileInfo} with a list of {@code LineInfo} for each line content in the"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * {@code relativePath} file."},{"lineNumber":210,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public static FileInfo generateFileInfo(String repoRoot, String relativePath) {"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        FileInfo fileInfo \u003d new FileInfo(relativePath);"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(repoRoot, fileInfo.getPath());"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(path.toFile()))) {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            String line;"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            int lineNum \u003d 1;"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                fileInfo.addLine(new LineInfo(lineNum++, line));"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            logger.log(Level.SEVERE, ioe.getMessage(), ioe);"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        return fileInfo;"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Returns the starting line changed number, within the file diff result, by matching the pattern inside"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * {@code linesChanged}."},{"lineNumber":230,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    private static int getStartingLineNumber(String linesChanged) {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        Matcher chunkHeaderMatcher \u003d STARTING_LINE_NUMBER_PATTERN.matcher(linesChanged);"},{"lineNumber":233,"author":{"gitId":"-"},"content":""},{"lineNumber":234,"author":{"gitId":"-"},"content":"        if (!chunkHeaderMatcher.find()) {"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            logger.severe(String.format(MATCH_GROUP_FAIL_MESSAGE_FORMAT, \"line changed\", linesChanged));"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Should not have error matching line number pattern inside chunk header!\");"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"        return Integer.parseInt(chunkHeaderMatcher.group(STARTING_LINE_NUMBER_GROUP_NAME));"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     * Returns true if {@code filePath} is valid and the file is not in binary."},{"lineNumber":244,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    private static boolean isValidTextFile(String filePath, Set\u003cPath\u003e textFilesSet) {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        return FileUtil.isValidPath(filePath) \u0026\u0026 textFilesSet.contains(Paths.get(filePath));"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jamessspanggg":1,"-":247}},{"path":"src/main/java/reposense/authorship/analyzer/AnnotatorAnalyzer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship.analyzer;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":6,"author":{"gitId":"anubh-v"},"content":"import java.util.Optional;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileInfo;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.authorship.model.LineInfo;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Analyzes the authorship of a {@code FileInfo} using the given annotations on the file."},{"lineNumber":16,"author":{"gitId":"-"},"content":" */"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AnnotatorAnalyzer {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String AUTHOR_TAG \u003d \"@@author\";"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String REGEX_AUTHOR_NAME_FORMAT \u003d \"([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])\";"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Pattern PATTERN_AUTHOR_NAME_FORMAT \u003d Pattern.compile(REGEX_AUTHOR_NAME_FORMAT);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MATCHER_GROUP_AUTHOR_NAME \u003d 1;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Overrides the authorship information in {@code fileInfo} based on annotations given on the file."},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void aggregateAnnotationAuthorInfo(FileInfo fileInfo, Map\u003cString, Author\u003e authorAliasMap) {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Optional\u003cAuthor\u003e currentAnnotatedAuthor \u003d Optional.empty();"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Path filePath \u003d Paths.get(fileInfo.getPath());"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        for (LineInfo lineInfo : fileInfo.getLines()) {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            if (lineInfo.getContent().contains(AUTHOR_TAG)) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                Optional\u003cAuthor\u003e newAnnotatedAuthor \u003d findAuthorInLine(lineInfo.getContent(), authorAliasMap,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        currentAnnotatedAuthor);"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"                if (!newAnnotatedAuthor.isPresent()) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    // end of an author tag should belong to the current author too."},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    lineInfo.setAuthor(currentAnnotatedAuthor.get());"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                } else if (newAnnotatedAuthor.get().isIgnoringFile(filePath)) {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    newAnnotatedAuthor \u003d Optional.empty();"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"                //set a new author"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                currentAnnotatedAuthor \u003d newAnnotatedAuthor;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            currentAnnotatedAuthor.ifPresent(lineInfo::setAuthor);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Extracts the author name from the given {@code line}, finds the corresponding {@code Author}"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * in {@code authorAliasMap}, and returns this {@code Author} stored in an {@code Optional}."},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @return {@code Optional.of(Author#UNKNOWN_AUTHOR)} if no matching {@code Author} is found,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         {@code Optional.empty()} if an end author tag is used (i.e. \"@@author\"),"},{"lineNumber":53,"author":{"gitId":"anubh-v"},"content":"     *         or if the extracted author name is too short."},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static Optional\u003cAuthor\u003e findAuthorInLine(String line, Map\u003cString, Author\u003e authorAliasMap,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                                                     Optional\u003cAuthor\u003e currentAnnotatedAuthor) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            String[] split \u003d line.split(AUTHOR_TAG);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            String name \u003d extractAuthorName(split[1]);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            if (name \u003d\u003d null) {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                if (!currentAnnotatedAuthor.isPresent()) {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                    // Attribute to unknown author if an empty author tag was provided, but not as an end author tag"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    return Optional.of(Author.UNKNOWN_AUTHOR);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"anubh-v"},"content":"                return Optional.empty();"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"anubh-v"},"content":"            return Optional.of(authorAliasMap.getOrDefault(name, Author.UNKNOWN_AUTHOR));"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            if (!currentAnnotatedAuthor.isPresent()) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                return Optional.of(Author.UNKNOWN_AUTHOR);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"anubh-v"},"content":"            return Optional.empty();"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Extracts the name that follows the specific format."},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @return an empty string if no such author was found, the new author name otherwise"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static String extractAuthorName(String authorTagParameters) {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String trimmedParameters \u003d authorTagParameters.trim();"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Matcher matcher \u003d PATTERN_AUTHOR_NAME_FORMAT.matcher(trimmedParameters);"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"        boolean foundMatch \u003d matcher.find();"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!foundMatch) {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return matcher.group(MATCHER_GROUP_AUTHOR_NAME);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"anubh-v":5,"-":87}},{"path":"src/main/java/reposense/authorship/model/AuthorshipSummary.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship.model;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.LinkedHashMap;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import reposense.model.FileType;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Stores the contribution summary of the authors in the repo."},{"lineNumber":13,"author":{"gitId":"-"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class AuthorshipSummary {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final List\u003cFileResult\u003e fileResults;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Map\u003cAuthor, LinkedHashMap\u003cFileType, Integer\u003e\u003e authorFileTypeContributionMap;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public AuthorshipSummary(List\u003cFileResult\u003e fileResults, List\u003cAuthor\u003e authors, List\u003cFileType\u003e fileTypes) {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.fileResults \u003d fileResults;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        authorFileTypeContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"        for (Author author : authors) {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            LinkedHashMap\u003cFileType, Integer\u003e defaultFileTypeContribution \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"            fileTypes.forEach(fileType -\u003e defaultFileTypeContribution.put(fileType, 0));"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            authorFileTypeContributionMap.put(author, defaultFileTypeContribution);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"0blivious"},"content":"     * Increments the corresponding {@code fileType} contribution count of {@code author} by one."},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void addAuthorContributionCount(Author author, FileType fileType) {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cFileType, Integer\u003e fileTypeContributionMap \u003d authorFileTypeContributionMap.get(author);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        fileTypeContributionMap.put(fileType, fileTypeContributionMap.getOrDefault(fileType, 0) + 1);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Map\u003cAuthor, LinkedHashMap\u003cFileType, Integer\u003e\u003e getAuthorFileTypeContributionMap() {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return authorFileTypeContributionMap;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public List\u003cFileResult\u003e getFileResults() {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return fileResults;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":44,"0blivious":1}},{"path":"src/main/java/reposense/authorship/model/FileInfo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship.model;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"jamessspanggg"},"content":"import java.util.Date;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import reposense.model.FileType;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import reposense.util.SystemUtil;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Stores the path to the file and the list of {@code LineInfo} for each line in the file."},{"lineNumber":13,"author":{"gitId":"-"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FileInfo {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String path;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final ArrayList\u003cLineInfo\u003e lines;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private FileType fileType;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public FileInfo(String path) {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (SystemUtil.isWindows()) {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            // Only replace \\ to / in Windows paths, so it does not interferes with a correct Unix path"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            path \u003d path.replace(\u0027\\\\\u0027, \u0027/\u0027);"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.path \u003d path;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        lines \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if none of the {@code Author} in {@code listedAuthors} contributed to this file."},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public boolean isAllAuthorsIgnored(List\u003cAuthor\u003e listedAuthors) {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return lines.stream().noneMatch(line -\u003e listedAuthors.contains(line.getAuthor()));"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public LineInfo getLine(int num) {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return lines.get(num - 1);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void addLine(LineInfo line) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        lines.add(line);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public int getNumOfLines() {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return lines.size();"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public ArrayList\u003cLineInfo\u003e getLines() {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return lines;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String getPath() {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return path;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public FileType getFileType() {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fileType;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setFileType(FileType fileType) {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.fileType \u003d fileType;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the {@code Author} of the {@code LineInfo} in {@code lineNumber} for this {@code FileInfo}."},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setLineAuthor(int lineNumber, Author author) {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        lines.get(lineNumber).setAuthor(author);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"jamessspanggg"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"jamessspanggg"},"content":"     * Sets the {@code lastModifiedDate} of the {@code LineInfo} in {@code lineNumber} for this {@code FileInfo}."},{"lineNumber":74,"author":{"gitId":"jamessspanggg"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"jamessspanggg"},"content":"    public void setLineLastModifiedDate(int lineNumber, Date lastModifiedDate) {"},{"lineNumber":76,"author":{"gitId":"jamessspanggg"},"content":"        lines.get(lineNumber).setLastModifiedDate(lastModifiedDate);"},{"lineNumber":77,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns true if the {@code LineInfo} in {@code lineNumber} index is being tracked."},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean isFileLineTracked(int lineNumber) {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return getLines().get(lineNumber).isTracked();"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (this \u003d\u003d other) {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!(other instanceof FileInfo)) {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"        FileInfo otherFileInfo \u003d (FileInfo) other;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return path.equals(otherFileInfo.path)"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                \u0026\u0026 lines.equals(otherFileInfo.lines);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jamessspanggg":8,"-":92}},{"path":"src/main/java/reposense/authorship/model/LineInfo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship.model;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"jamessspanggg"},"content":"import java.util.Date;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Objects;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Stores the information of a line in a {@code FileInfo}."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class LineInfo {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int lineNumber;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Author author;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String content;"},{"lineNumber":15,"author":{"gitId":"jamessspanggg"},"content":"    private Date lastModifiedDate;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private transient boolean isTracked;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public LineInfo(int lineNumber, String content) {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.lineNumber \u003d lineNumber;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.content \u003d content;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"        isTracked \u003d true;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Author getAuthor() {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return author;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void setAuthor(Author author) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.author \u003d author;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public int getLineNumber() {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return lineNumber;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String getContent() {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return content;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void setTracked(boolean isTracked) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.isTracked \u003d isTracked;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"jamessspanggg"},"content":"    public Date getLastModifiedDate() {"},{"lineNumber":47,"author":{"gitId":"jamessspanggg"},"content":"        return lastModifiedDate;"},{"lineNumber":48,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":50,"author":{"gitId":"jamessspanggg"},"content":"    public void setLastModifiedDate(Date lastModifiedDate) {"},{"lineNumber":51,"author":{"gitId":"jamessspanggg"},"content":"        this.lastModifiedDate \u003d lastModifiedDate;"},{"lineNumber":52,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean isTracked() {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return isTracked;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (this \u003d\u003d other) {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof LineInfo)) {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"        LineInfo otherLineInfo \u003d (LineInfo) other;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return lineNumber \u003d\u003d otherLineInfo.lineNumber"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(author, otherLineInfo.author)"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 content.equals(otherLineInfo.content)"},{"lineNumber":72,"author":{"gitId":"jamessspanggg"},"content":"                \u0026\u0026 isTracked \u003d\u003d otherLineInfo.isTracked"},{"lineNumber":73,"author":{"gitId":"jamessspanggg"},"content":"                \u0026\u0026 ((lastModifiedDate \u003d\u003d null \u0026\u0026 otherLineInfo.lastModifiedDate \u003d\u003d null)"},{"lineNumber":74,"author":{"gitId":"jamessspanggg"},"content":"                    || (lastModifiedDate.equals(otherLineInfo.lastModifiedDate)));"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}"},{"lineNumber":77,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"jamessspanggg":13,"-":64}},{"path":"src/main/java/reposense/commits/CommitInfoAnalyzer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.commits;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"jamessspanggg"},"content":"import static reposense.util.StringsUtil.removeQuote;"},{"lineNumber":4,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.text.DateFormat;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.text.ParseException;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":8,"author":{"gitId":"jamessspanggg"},"content":"import java.util.Arrays;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Comparator;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Date;"},{"lineNumber":11,"author":{"gitId":"jamessspanggg"},"content":"import java.util.HashMap;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitId":"jamessspanggg"},"content":"import java.util.Map;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.logging.Level;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitInfo;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitResult;"},{"lineNumber":22,"author":{"gitId":"jamessspanggg"},"content":"import reposense.commits.model.ContributionPair;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;"},{"lineNumber":25,"author":{"gitId":"jamessspanggg"},"content":"import reposense.model.FileType;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Analyzes commit information found in the git log."},{"lineNumber":31,"author":{"gitId":"-"},"content":" */"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommitInfoAnalyzer {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final DateFormat GIT_STRICT_ISO_DATE_FORMAT \u003d new SimpleDateFormat(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss\");"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"    private static final String TAB_SPLITTER \u003d \"\\t\";"},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"    private static final String MOVED_FILE_INDICATION \u003d \"\u003d\u003e \";"},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":"    private static final String BINARY_FILE_CONTRIBUTION \u003d \"-\";"},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":"    private static final int STAT_ADDITION_INDEX \u003d 0;"},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":"    private static final int STAT_DELETION_INDEX \u003d 1;"},{"lineNumber":40,"author":{"gitId":"jamessspanggg"},"content":"    private static final int STAT_FILE_PATH_INDEX \u003d 2;"},{"lineNumber":41,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(CommitInfoAnalyzer.class);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_START_ANALYZING_COMMIT_INFO \u003d \"Analyzing commits info for %s (%s)...\";"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String LOG_SPLITTER \u003d \"\\\\|\\\\n\\\\|\";"},{"lineNumber":46,"author":{"gitId":"jamessspanggg"},"content":"    private static final String REF_SPLITTER \u003d \",\\\\s\";"},{"lineNumber":47,"author":{"gitId":"jamessspanggg"},"content":"    private static final String NEW_LINE_SPLITTER \u003d \"\\\\n\";"},{"lineNumber":48,"author":{"gitId":"jamessspanggg"},"content":"    private static final String TAG_PREFIX \u003d \"tag:\";"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final int COMMIT_HASH_INDEX \u003d 0;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final int AUTHOR_INDEX \u003d 1;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final int EMAIL_INDEX \u003d 2;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final int DATE_INDEX \u003d 3;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final int MESSAGE_TITLE_INDEX \u003d 4;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final int MESSAGE_BODY_INDEX \u003d 5;"},{"lineNumber":56,"author":{"gitId":"jamessspanggg"},"content":"    private static final int REF_NAME_INDEX \u003d 6;"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final Pattern INSERTION_PATTERN \u003d Pattern.compile(\"([0-9]+) insertion\");"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final Pattern DELETION_PATTERN \u003d Pattern.compile(\"([0-9]+) deletion\");"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final Pattern MESSAGEBODY_LEADING_PATTERN \u003d Pattern.compile(\"^ {4}\", Pattern.MULTILINE);"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Analyzes each {@code CommitInfo} in {@code commitInfos} and returns a list of {@code CommitResult} that is not"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * specified to be ignored or the author is inside {@code config}."},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static List\u003cCommitResult\u003e analyzeCommits(List\u003cCommitInfo\u003e commitInfos, RepoConfiguration config) {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logger.info(String.format(MESSAGE_START_ANALYZING_COMMIT_INFO, config.getLocation(), config.getBranch()));"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return commitInfos.stream()"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .map(commitInfo -\u003e analyzeCommit(commitInfo, config))"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .filter(commitResult -\u003e !commitResult.getAuthor().equals(Author.UNKNOWN_AUTHOR)"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                        \u0026\u0026 !CommitHash.isInsideCommitList(commitResult.getHash(), config.getIgnoreCommitList()))"},{"lineNumber":74,"author":{"gitId":"ang-zeyu"},"content":"                .distinct()"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(CommitResult::getTime))"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Extracts the relevant data from {@code commitInfo} into a {@code CommitResult}."},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static CommitResult analyzeCommit(CommitInfo commitInfo, RepoConfiguration config) {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String infoLine \u003d commitInfo.getInfoLine();"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String statLine \u003d commitInfo.getStatLine();"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"jamessspanggg"},"content":"        String[] elements \u003d infoLine.split(LOG_SPLITTER, 7);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String hash \u003d elements[COMMIT_HASH_INDEX];"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Author author \u003d config.getAuthor(elements[AUTHOR_INDEX], elements[EMAIL_INDEX]);"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Date date \u003d null;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            date \u003d GIT_STRICT_ISO_DATE_FORMAT.parse(elements[DATE_INDEX]);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, \"Unable to parse the date from git log result for commit.\", pe);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String messageTitle \u003d (elements.length \u003e MESSAGE_TITLE_INDEX) ? elements[MESSAGE_TITLE_INDEX] : \"\";"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String messageBody \u003d (elements.length \u003e MESSAGE_BODY_INDEX)"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                ? getCommitMessageBody(elements[MESSAGE_BODY_INDEX]) : \"\";"},{"lineNumber":100,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":101,"author":{"gitId":"jamessspanggg"},"content":"        String[] refs \u003d (elements.length \u003e REF_NAME_INDEX)"},{"lineNumber":102,"author":{"gitId":"jamessspanggg"},"content":"                ? elements[REF_NAME_INDEX].split(REF_SPLITTER)"},{"lineNumber":103,"author":{"gitId":"jamessspanggg"},"content":"                : new String[]{\"\"};"},{"lineNumber":104,"author":{"gitId":"jamessspanggg"},"content":"        String[] tags \u003d Arrays.stream(refs).filter(ref -\u003e ref.contains(TAG_PREFIX)).toArray(String[]::new);"},{"lineNumber":105,"author":{"gitId":"jamessspanggg"},"content":"        if (tags.length \u003d\u003d 0) {"},{"lineNumber":106,"author":{"gitId":"jamessspanggg"},"content":"            tags \u003d null; // set to null so it won\u0027t be converted to json"},{"lineNumber":107,"author":{"gitId":"jamessspanggg"},"content":"        } else {"},{"lineNumber":108,"author":{"gitId":"jamessspanggg"},"content":"            extractTagNames(tags);"},{"lineNumber":109,"author":{"gitId":"jamessspanggg"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":111,"author":{"gitId":"jamessspanggg"},"content":"        if (statLine.isEmpty()) { // empty commit, no files changed"},{"lineNumber":112,"author":{"gitId":"jamessspanggg"},"content":"            return new CommitResult(author, hash, date, messageTitle, messageBody, tags);"},{"lineNumber":113,"author":{"gitId":"jamessspanggg"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":115,"author":{"gitId":"jamessspanggg"},"content":"        String[] statInfos \u003d statLine.split(NEW_LINE_SPLITTER);"},{"lineNumber":116,"author":{"gitId":"jamessspanggg"},"content":"        String[] fileTypeContributions \u003d Arrays.copyOfRange(statInfos, 0, statInfos.length - 1);"},{"lineNumber":117,"author":{"gitId":"jamessspanggg"},"content":"        Map\u003cFileType, ContributionPair\u003e fileTypeAndContributionMap \u003d"},{"lineNumber":118,"author":{"gitId":"jamessspanggg"},"content":"                getFileTypesAndContribution(fileTypeContributions, config);"},{"lineNumber":119,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":120,"author":{"gitId":"jamessspanggg"},"content":"        return new CommitResult(author, hash, date, messageTitle, messageBody, tags, fileTypeAndContributionMap);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"jamessspanggg"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"jamessspanggg"},"content":"     * Returns the number of lines added and deleted for the specified file types in {@code config}."},{"lineNumber":125,"author":{"gitId":"jamessspanggg"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"jamessspanggg"},"content":"    private static Map\u003cFileType, ContributionPair\u003e getFileTypesAndContribution(String[] filePathContributions,"},{"lineNumber":127,"author":{"gitId":"jamessspanggg"},"content":"            RepoConfiguration config) {"},{"lineNumber":128,"author":{"gitId":"jamessspanggg"},"content":"        Map\u003cFileType, ContributionPair\u003e fileTypesAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":129,"author":{"gitId":"jamessspanggg"},"content":"        for (String filePathContribution : filePathContributions) {"},{"lineNumber":130,"author":{"gitId":"jamessspanggg"},"content":"            String[] infos \u003d filePathContribution.split(TAB_SPLITTER);"},{"lineNumber":131,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":132,"author":{"gitId":"jamessspanggg"},"content":"            if (isBinaryContribution(infos[STAT_ADDITION_INDEX], infos[STAT_DELETION_INDEX])) {"},{"lineNumber":133,"author":{"gitId":"jamessspanggg"},"content":"                continue; // skip binary file contributions"},{"lineNumber":134,"author":{"gitId":"jamessspanggg"},"content":"            }"},{"lineNumber":135,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":136,"author":{"gitId":"jamessspanggg"},"content":"            int addition \u003d Integer.parseInt(infos[STAT_ADDITION_INDEX]);"},{"lineNumber":137,"author":{"gitId":"jamessspanggg"},"content":"            int deletion \u003d Integer.parseInt(infos[STAT_DELETION_INDEX]);"},{"lineNumber":138,"author":{"gitId":"jamessspanggg"},"content":"            String filePath \u003d extractFilePath(infos[STAT_FILE_PATH_INDEX]);"},{"lineNumber":139,"author":{"gitId":"jamessspanggg"},"content":"            FileType fileType \u003d config.getFileType(filePath);"},{"lineNumber":140,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":141,"author":{"gitId":"jamessspanggg"},"content":"            if (!fileTypesAndContributionMap.containsKey(fileType)) {"},{"lineNumber":142,"author":{"gitId":"jamessspanggg"},"content":"                fileTypesAndContributionMap.put(fileType, new ContributionPair());"},{"lineNumber":143,"author":{"gitId":"jamessspanggg"},"content":"            }"},{"lineNumber":144,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":145,"author":{"gitId":"jamessspanggg"},"content":"            ContributionPair contributionPair \u003d fileTypesAndContributionMap.get(fileType);"},{"lineNumber":146,"author":{"gitId":"jamessspanggg"},"content":"            contributionPair.addInsertions(addition);"},{"lineNumber":147,"author":{"gitId":"jamessspanggg"},"content":"            contributionPair.addDeletions(deletion);"},{"lineNumber":148,"author":{"gitId":"jamessspanggg"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"jamessspanggg"},"content":"        return fileTypesAndContributionMap;"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"jamessspanggg"},"content":"    /**"},{"lineNumber":153,"author":{"gitId":"jamessspanggg"},"content":"     * Extracts the correct file path from the unprocessed git log {@code filePath}"},{"lineNumber":154,"author":{"gitId":"jamessspanggg"},"content":"     */"},{"lineNumber":155,"author":{"gitId":"jamessspanggg"},"content":"    private static String extractFilePath(String filePath) {"},{"lineNumber":156,"author":{"gitId":"jamessspanggg"},"content":"        String filteredFilePath \u003d filePath;"},{"lineNumber":157,"author":{"gitId":"jamessspanggg"},"content":"        if (filteredFilePath.contains(MOVED_FILE_INDICATION)) {"},{"lineNumber":158,"author":{"gitId":"jamessspanggg"},"content":"            // moved file has the format: fileA \u003d\u003e newPosition/fileA"},{"lineNumber":159,"author":{"gitId":"jamessspanggg"},"content":"            filteredFilePath \u003d filteredFilePath.substring(filePath.indexOf(MOVED_FILE_INDICATION)"},{"lineNumber":160,"author":{"gitId":"jamessspanggg"},"content":"                    + MOVED_FILE_INDICATION.length());"},{"lineNumber":161,"author":{"gitId":"jamessspanggg"},"content":"            // Removes the trailing \u0027}\u0027 character from the file name, as renamed file names have ending \u0027}\u0027 character."},{"lineNumber":162,"author":{"gitId":"jamessspanggg"},"content":"            filteredFilePath \u003d filteredFilePath.replaceAll(\"}$\", \"\");"},{"lineNumber":163,"author":{"gitId":"jamessspanggg"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":165,"author":{"gitId":"jamessspanggg"},"content":"        // Removes the trailing double quotes from the file name, as filenames that have special characters"},{"lineNumber":166,"author":{"gitId":"jamessspanggg"},"content":"        // will be escaped and surrounded by double quotes automatically. e.g. READ\\ME.md -\u003e \"READ\\\\ME.md\""},{"lineNumber":167,"author":{"gitId":"jamessspanggg"},"content":"        filteredFilePath \u003d removeQuote(filteredFilePath);"},{"lineNumber":168,"author":{"gitId":"jamessspanggg"},"content":"        return filteredFilePath;"},{"lineNumber":169,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":171,"author":{"gitId":"jamessspanggg"},"content":"    /**"},{"lineNumber":172,"author":{"gitId":"jamessspanggg"},"content":"     * Detects binary file contribution based on the git log {@code addition} and {@code deletion}."},{"lineNumber":173,"author":{"gitId":"jamessspanggg"},"content":"     */"},{"lineNumber":174,"author":{"gitId":"jamessspanggg"},"content":"    private static boolean isBinaryContribution(String addition, String deletion) {"},{"lineNumber":175,"author":{"gitId":"jamessspanggg"},"content":"        // git log returns \"-\" for binary file additions and deletions"},{"lineNumber":176,"author":{"gitId":"jamessspanggg"},"content":"        return addition.equals(BINARY_FILE_CONTRIBUTION) \u0026\u0026 deletion.equals(BINARY_FILE_CONTRIBUTION);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"jamessspanggg"},"content":"    /**"},{"lineNumber":180,"author":{"gitId":"jamessspanggg"},"content":"     * Extracts the tag names in {@code tags}."},{"lineNumber":181,"author":{"gitId":"jamessspanggg"},"content":"     */"},{"lineNumber":182,"author":{"gitId":"jamessspanggg"},"content":"    private static void extractTagNames(String[] tags) {"},{"lineNumber":183,"author":{"gitId":"jamessspanggg"},"content":"        for (int i \u003d 0; i \u003c tags.length; i++) {"},{"lineNumber":184,"author":{"gitId":"jamessspanggg"},"content":"            tags[i] \u003d tags[i].substring(tags[i].lastIndexOf(TAG_PREFIX) + TAG_PREFIX.length()).trim();"},{"lineNumber":185,"author":{"gitId":"jamessspanggg"},"content":"        }"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private static String getCommitMessageBody(String raw) {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Matcher matcher \u003d MESSAGEBODY_LEADING_PATTERN.matcher(raw);"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return matcher.replaceAll(\"\");"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jamessspanggg":99,"-":92,"ang-zeyu":1}},{"path":"src/main/java/reposense/commits/CommitInfoExtractor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.commits;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitInfo;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.git.GitCheckout;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.git.GitLog;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Extracts commit information of a repository."},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class CommitInfoExtractor {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(CommitInfoExtractor.class);"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_START_EXTRACTING_COMMIT_INFO \u003d \"Extracting commits info for %s (%s)...\";"},{"lineNumber":23,"author":{"gitId":"jamessspanggg"},"content":"    private static final String INFO_STAT_SEPARATOR \u003d \"|\";"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Pattern TRAILING_NEWLINES_PATTERN \u003d Pattern.compile(\"\\n+$\");"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Extracts out and returns the raw information of each commit for the repo in {@code config}."},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static List\u003cCommitInfo\u003e extractCommitInfos(RepoConfiguration config) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger.info(String.format(MESSAGE_START_EXTRACTING_COMMIT_INFO, config.getLocation(), config.getBranch()));"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e repoCommitInfos \u003d new ArrayList\u003c\u003e();"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        for (Author author : config.getAuthorList()) {"},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":"            String gitLogResult \u003d GitLog.getWithFiles(config, author);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            List\u003cCommitInfo\u003e authorCommitInfos \u003d parseGitLogResults(gitLogResult);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            repoCommitInfos.addAll(authorCommitInfos);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return repoCommitInfos;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses the {@code gitLogResult} into a list of {@code CommitInfo} and returns it."},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static ArrayList\u003cCommitInfo\u003e parseGitLogResults(String gitLogResult) {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ArrayList\u003cCommitInfo\u003e commitInfos \u003d new ArrayList\u003c\u003e();"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String[] rawCommitInfos \u003d gitLogResult.split(GitLog.COMMIT_INFO_DELIMITER);"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (rawCommitInfos.length \u003c 2) {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            //no log (maybe because no contribution for that file type)"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return commitInfos;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Starts from 1 as index 0 is always empty."},{"lineNumber":59,"author":{"gitId":"-"},"content":"        for (int i \u003d 1; i \u003c rawCommitInfos.length; i++) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Matcher matcher \u003d TRAILING_NEWLINES_PATTERN.matcher(rawCommitInfos[i]);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            String rawCommitInfo \u003d matcher.replaceAll(\"\");"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"jamessspanggg"},"content":"            int statLineSeparatorIndex \u003d rawCommitInfo.lastIndexOf(INFO_STAT_SEPARATOR);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            String infoLine \u003d rawCommitInfo.substring(0, statLineSeparatorIndex);"},{"lineNumber":65,"author":{"gitId":"jamessspanggg"},"content":"            String statLine \u003d rawCommitInfo.substring(statLineSeparatorIndex + 1).trim();"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            commitInfos.add(new CommitInfo(infoLine, statLine));"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Collections.reverse(commitInfos);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return commitInfos;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jamessspanggg":4,"-":68}},{"path":"src/main/java/reposense/commits/CommitResultAggregator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.commits;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Calendar;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Date;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.commits.model.AuthorDailyContribution;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitContributionSummary;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitResult;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.parser.SinceDateArgumentType;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.report.ReportGenerator;"},{"lineNumber":19,"author":{"gitId":"jamessspanggg"},"content":"import reposense.util.TimeUtil;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Uses the commit analysis results to generate the summary information of a repository."},{"lineNumber":23,"author":{"gitId":"-"},"content":" */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class CommitResultAggregator {"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final int DAYS_IN_MS \u003d 24 * 60 * 60 * 1000;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the {@code CommitContributionSummary} generated from aggregating the {@code commitResults}."},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static CommitContributionSummary aggregateCommitResults("},{"lineNumber":32,"author":{"gitId":"-"},"content":"            RepoConfiguration config, List\u003cCommitResult\u003e commitResults) {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Date startDate;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        startDate \u003d (config.getSinceDate().equals(SinceDateArgumentType.ARBITRARY_FIRST_COMMIT_DATE))"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ? getStartOfDate(getStartDate(commitResults), config.getZoneId())"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                : config.getSinceDate();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ReportGenerator.setEarliestSinceDate(startDate);"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e authorDailyContributionsMap \u003d"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                getAuthorDailyContributionsMap(config.getAuthorDisplayNameMap().keySet(), commitResults,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                        config.getZoneId());"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Date lastDate \u003d commitResults.size() \u003d\u003d 0"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                ? null"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                : getStartOfDate(commitResults.get(commitResults.size() - 1).getTime(), config.getZoneId());"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Map\u003cAuthor, Float\u003e authorContributionVariance \u003d"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                calcAuthorContributionVariance(authorDailyContributionsMap, startDate, lastDate, config.getZoneId());"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new CommitContributionSummary("},{"lineNumber":51,"author":{"gitId":"-"},"content":"                config.getAuthorDisplayNameMap(),"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                authorDailyContributionsMap,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                authorContributionVariance);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Calculates the contribution variance of all authors."},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static Map\u003cAuthor, Float\u003e calcAuthorContributionVariance("},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e intervalContributionMaps, Date startDate, Date lastDate,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            String zoneId) {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Map\u003cAuthor, Float\u003e result \u003d new HashMap\u003c\u003e();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        for (Author author : intervalContributionMaps.keySet()) {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            List\u003cAuthorDailyContribution\u003e contributions \u003d intervalContributionMaps.get(author);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            result.put(author, getContributionVariance(contributions, startDate, lastDate, zoneId));"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return result;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static float getContributionVariance(List\u003cAuthorDailyContribution\u003e contributions,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            Date startDate, Date lastDate, String zoneId) {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (contributions.size() \u003d\u003d 0) {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return 0;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        //get mean"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        float total \u003d 0;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        long totalDays \u003d (lastDate.getTime() - startDate.getTime()) / DAYS_IN_MS + 1;"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"        for (AuthorDailyContribution contribution : contributions) {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            total +\u003d contribution.getTotalContribution();"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        float mean \u003d total / totalDays;"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"        float variance \u003d 0;"},{"lineNumber":85,"author":{"gitId":"jamessspanggg"},"content":"        long currentDate \u003d TimeUtil.getZonedDateFromSystemDate(startDate, ZoneId.of(zoneId)).getTime();"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        int contributionIndex \u003d 0;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c totalDays; i +\u003d 1) {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            if (contributionIndex \u003c contributions.size()"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    \u0026\u0026 currentDate \u003d\u003d contributions.get(contributionIndex).getDate().getTime()) {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                variance +\u003d Math.pow((mean - contributions.get(contributionIndex).getTotalContribution()), 2);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                contributionIndex +\u003d 1;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                variance +\u003d Math.pow(mean, 2);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            currentDate +\u003d DAYS_IN_MS;"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return variance / totalDays;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e getAuthorDailyContributionsMap("},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Set\u003cAuthor\u003e authorSet, List\u003cCommitResult\u003e commitResults, String zoneId) {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e authorDailyContributionsMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        authorSet.forEach(author -\u003e authorDailyContributionsMap.put(author, new ArrayList\u003c\u003e()));"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Date commitStartDate \u003d null;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        for (CommitResult commitResult : commitResults) {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            commitStartDate \u003d getSystemStartOfDate(commitResult.getTime(), zoneId);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Author commitAuthor \u003d commitResult.getAuthor();"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"            List\u003cAuthorDailyContribution\u003e authorDailyContributions \u003d authorDailyContributionsMap.get(commitAuthor);"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"            if (authorDailyContributions.isEmpty()"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                    || !authorDailyContributions.get(authorDailyContributions.size() - 1).getDate()"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                            .equals(commitStartDate)) {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                addDailyContributionForNewDate(authorDailyContributions, commitStartDate);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"            authorDailyContributions.get(authorDailyContributions.size() - 1).addCommitContribution(commitResult);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return authorDailyContributionsMap;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private static void addDailyContributionForNewDate("},{"lineNumber":125,"author":{"gitId":"-"},"content":"            List\u003cAuthorDailyContribution\u003e authorDailyContributions, Date date) {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        authorDailyContributions.add(new AuthorDailyContribution(date));"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Get the starting point of the {@code current} date with respect to the {@code zoneId} timezone."},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private static Date getStartOfDate(Date current, String zoneId) {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (current.equals(SinceDateArgumentType.ARBITRARY_FIRST_COMMIT_DATE)) {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return current;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"jamessspanggg"},"content":"        int zoneRawOffset \u003d TimeUtil.getZoneRawOffset(ZoneId.of(zoneId));"},{"lineNumber":138,"author":{"gitId":"jamessspanggg"},"content":"        int systemRawOffset \u003d TimeUtil.getZoneRawOffset(ZoneId.systemDefault());"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Calendar cal \u003d new Calendar"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .Builder()"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .setInstant(current.getTime())"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        cal.set(Calendar.HOUR_OF_DAY, 0);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MINUTE, 0);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        cal.set(Calendar.SECOND, 0);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MILLISECOND, 0);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        cal.add(Calendar.MILLISECOND, systemRawOffset - zoneRawOffset);"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return cal.getTime();"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Get the starting point of the {@code current} date that was given in {@code zoneId} timezone and convert into the"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * system\u0027s timezone."},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private static Date getSystemStartOfDate(Date current, String zoneId) {"},{"lineNumber":157,"author":{"gitId":"jamessspanggg"},"content":"        int zoneRawOffset \u003d TimeUtil.getZoneRawOffset(ZoneId.of(zoneId));"},{"lineNumber":158,"author":{"gitId":"jamessspanggg"},"content":"        int systemRawOffset \u003d TimeUtil.getZoneRawOffset(ZoneId.systemDefault());"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Calendar cal \u003d new Calendar"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                .Builder()"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                .setInstant(getStartOfDate(current, zoneId).getTime())"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        cal.add(Calendar.MILLISECOND, zoneRawOffset - systemRawOffset);"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return cal.getTime();"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private static Date getStartDate(List\u003cCommitResult\u003e commitInfos) {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Date min \u003d new Date(Long.MIN_VALUE);"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        if (!commitInfos.isEmpty()) {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            min \u003d commitInfos.get(0).getTime();"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return min;"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jamessspanggg":6,"-":169}},{"path":"src/main/java/reposense/commits/model/AuthorDailyContribution.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.commits.model;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Date;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"0blivious"},"content":" * Holds the commits made by an {@code Author} for a single day."},{"lineNumber":9,"author":{"gitId":"-"},"content":" */"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class AuthorDailyContribution {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private Date date;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private List\u003cCommitResult\u003e commitResults;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public AuthorDailyContribution(Date date) {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.date \u003d date;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        commitResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Date getDate() {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return date;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setDate(Date date) {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.date \u003d date;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"0blivious"},"content":"     * Adds the {@code commitResult} into the {@code Author}\u0027s daily contribution."},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void addCommitContribution(CommitResult commitResult) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commitResults.add(commitResult);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the total line contribution made by the {@code Author} for the day."},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public int getTotalContribution() {"},{"lineNumber":38,"author":{"gitId":"0blivious"},"content":"        int totalContribution \u003d 0;"},{"lineNumber":39,"author":{"gitId":"0blivious"},"content":"        for (CommitResult commitResult : commitResults) {"},{"lineNumber":40,"author":{"gitId":"0blivious"},"content":"            totalContribution +\u003d commitResult.getDeletions();"},{"lineNumber":41,"author":{"gitId":"0blivious"},"content":"            totalContribution +\u003d commitResult.getInsertions();"},{"lineNumber":42,"author":{"gitId":"0blivious"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"0blivious"},"content":"        return totalContribution;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":37,"0blivious":8}},{"path":"src/main/java/reposense/commits/model/CommitResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.commits.model;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"jamessspanggg"},"content":"import java.util.Arrays;"},{"lineNumber":4,"author":{"gitId":"jamessspanggg"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Date;"},{"lineNumber":6,"author":{"gitId":"jamessspanggg"},"content":"import java.util.Map;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":9,"author":{"gitId":"jamessspanggg"},"content":"import reposense.model.FileType;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Stores the result from analyzing a {@code CommitInfo}."},{"lineNumber":13,"author":{"gitId":"-"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommitResult {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String hash;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String messageTitle;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final String messageBody;"},{"lineNumber":18,"author":{"gitId":"jamessspanggg"},"content":"    private final String[] tags;"},{"lineNumber":19,"author":{"gitId":"jamessspanggg"},"content":"    private final Map\u003cFileType, ContributionPair\u003e fileTypesAndContributionMap;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final transient Author author;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final transient Date time;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"jamessspanggg"},"content":"    public CommitResult(Author author, String hash, Date time, String messageTitle, String messageBody, String[] tags,"},{"lineNumber":25,"author":{"gitId":"jamessspanggg"},"content":"            Map\u003cFileType, ContributionPair\u003e fileTypesAndContributionMap) {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.author \u003d author;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.hash \u003d hash;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.time \u003d time;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.messageTitle \u003d messageTitle;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.messageBody \u003d messageBody;"},{"lineNumber":31,"author":{"gitId":"jamessspanggg"},"content":"        this.tags \u003d tags;"},{"lineNumber":32,"author":{"gitId":"jamessspanggg"},"content":"        this.fileTypesAndContributionMap \u003d fileTypesAndContributionMap;"},{"lineNumber":33,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"    public CommitResult(Author author, String hash, Date time, String messageTitle, String messageBody, String[] tags) {"},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"        this.author \u003d author;"},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":"        this.hash \u003d hash;"},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":"        this.time \u003d time;"},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":"        this.messageTitle \u003d messageTitle;"},{"lineNumber":40,"author":{"gitId":"jamessspanggg"},"content":"        this.messageBody \u003d messageBody;"},{"lineNumber":41,"author":{"gitId":"jamessspanggg"},"content":"        this.tags \u003d tags;"},{"lineNumber":42,"author":{"gitId":"jamessspanggg"},"content":"        this.fileTypesAndContributionMap \u003d Collections.emptyMap();"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String getMessageTitle() {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return messageTitle;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String getMessageBody() {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return messageBody;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"jamessspanggg"},"content":"    public String[] getTags() {"},{"lineNumber":54,"author":{"gitId":"jamessspanggg"},"content":"        return tags;"},{"lineNumber":55,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Author getAuthor() {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return author;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getHash() {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return hash;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Date getTime() {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return time;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int getInsertions() {"},{"lineNumber":70,"author":{"gitId":"jamessspanggg"},"content":"        int insertions \u003d 0;"},{"lineNumber":71,"author":{"gitId":"jamessspanggg"},"content":"        for (ContributionPair contributionPair : fileTypesAndContributionMap.values()) {"},{"lineNumber":72,"author":{"gitId":"jamessspanggg"},"content":"            insertions +\u003d contributionPair.getInsertions();"},{"lineNumber":73,"author":{"gitId":"jamessspanggg"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return insertions;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int getDeletions() {"},{"lineNumber":78,"author":{"gitId":"jamessspanggg"},"content":"        int deletions \u003d 0;"},{"lineNumber":79,"author":{"gitId":"jamessspanggg"},"content":"        for (ContributionPair contributionPair : fileTypesAndContributionMap.values()) {"},{"lineNumber":80,"author":{"gitId":"jamessspanggg"},"content":"            deletions +\u003d contributionPair.getDeletions();"},{"lineNumber":81,"author":{"gitId":"jamessspanggg"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return deletions;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"jamessspanggg"},"content":"    public Map\u003cFileType, ContributionPair\u003e getFileTypesAndContributionMap() {"},{"lineNumber":86,"author":{"gitId":"jamessspanggg"},"content":"        return fileTypesAndContributionMap;"},{"lineNumber":87,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (this \u003d\u003d other) {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommitResult)) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"        CommitResult otherCommitResult \u003d (CommitResult) other;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return author.equals(otherCommitResult.author)"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u0026\u0026 hash.equals(otherCommitResult.hash)"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                \u0026\u0026 time.equals(otherCommitResult.time)"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                \u0026\u0026 messageTitle.equals(otherCommitResult.messageTitle)"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                \u0026\u0026 messageBody.equals(otherCommitResult.messageBody)"},{"lineNumber":105,"author":{"gitId":"jamessspanggg"},"content":"                \u0026\u0026 Arrays.equals(tags, otherCommitResult.tags)"},{"lineNumber":106,"author":{"gitId":"jamessspanggg"},"content":"                \u0026\u0026 fileTypesAndContributionMap.equals(otherCommitResult.fileTypesAndContributionMap);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":109,"author":{"gitId":"ang-zeyu"},"content":"    @Override"},{"lineNumber":110,"author":{"gitId":"ang-zeyu"},"content":"    public int hashCode() {"},{"lineNumber":111,"author":{"gitId":"ang-zeyu"},"content":"        return hash.hashCode();"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jamessspanggg":38,"-":71,"ang-zeyu":4}},{"path":"src/main/java/reposense/commits/model/ContributionPair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamessspanggg"},"content":"package reposense.commits.model;"},{"lineNumber":2,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":3,"author":{"gitId":"jamessspanggg"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jamessspanggg"},"content":" * Stores the insertions and deletions as a pair."},{"lineNumber":5,"author":{"gitId":"jamessspanggg"},"content":" */"},{"lineNumber":6,"author":{"gitId":"jamessspanggg"},"content":"public class ContributionPair {"},{"lineNumber":7,"author":{"gitId":"jamessspanggg"},"content":"    private int insertions;"},{"lineNumber":8,"author":{"gitId":"jamessspanggg"},"content":"    private int deletions;"},{"lineNumber":9,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":10,"author":{"gitId":"jamessspanggg"},"content":"    public ContributionPair() {"},{"lineNumber":11,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":13,"author":{"gitId":"jamessspanggg"},"content":"    public ContributionPair(int insertions, int deletions) {"},{"lineNumber":14,"author":{"gitId":"jamessspanggg"},"content":"        this.insertions \u003d insertions;"},{"lineNumber":15,"author":{"gitId":"jamessspanggg"},"content":"        this.deletions \u003d deletions;"},{"lineNumber":16,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":18,"author":{"gitId":"jamessspanggg"},"content":"    public int getInsertions() {"},{"lineNumber":19,"author":{"gitId":"jamessspanggg"},"content":"        return insertions;"},{"lineNumber":20,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":22,"author":{"gitId":"jamessspanggg"},"content":"    public int getDeletions() {"},{"lineNumber":23,"author":{"gitId":"jamessspanggg"},"content":"        return deletions;"},{"lineNumber":24,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":26,"author":{"gitId":"jamessspanggg"},"content":"    public void addInsertions(int insertions) {"},{"lineNumber":27,"author":{"gitId":"jamessspanggg"},"content":"        this.insertions +\u003d insertions;"},{"lineNumber":28,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":30,"author":{"gitId":"jamessspanggg"},"content":"    public void addDeletions(int deletions) {"},{"lineNumber":31,"author":{"gitId":"jamessspanggg"},"content":"        this.deletions +\u003d deletions;"},{"lineNumber":32,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":34,"author":{"gitId":"jamessspanggg"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"    public boolean equals(Object other) {"},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"        if (this \u003d\u003d other) {"},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":"            return true;"},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":40,"author":{"gitId":"jamessspanggg"},"content":"        if (!(other instanceof ContributionPair)) {"},{"lineNumber":41,"author":{"gitId":"jamessspanggg"},"content":"            return false;"},{"lineNumber":42,"author":{"gitId":"jamessspanggg"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":44,"author":{"gitId":"jamessspanggg"},"content":"        ContributionPair otherContributionPair \u003d (ContributionPair) other;"},{"lineNumber":45,"author":{"gitId":"jamessspanggg"},"content":"        return insertions \u003d\u003d otherContributionPair.insertions \u0026\u0026 deletions \u003d\u003d otherContributionPair.deletions;"},{"lineNumber":46,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"jamessspanggg"},"content":"}"}],"authorContributionMap":{"jamessspanggg":47}},{"path":"src/main/java/reposense/git/GitBlame.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.git;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static reposense.system.CommandRunner.runCommand;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static reposense.util.StringsUtil.addQuote;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import reposense.util.StringsUtil;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Contains git blame related functionalities."},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Git blame is responsible for showing which revision and author last modified each line of a file."},{"lineNumber":14,"author":{"gitId":"-"},"content":" */"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class GitBlame {"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String COMMIT_HASH_REGEX \u003d \"(^[0-9a-f]{40} .*)\";"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String AUTHOR_NAME_REGEX \u003d \"(^author .*)\";"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String AUTHOR_EMAIL_REGEX \u003d \"(^author-mail .*)\";"},{"lineNumber":20,"author":{"gitId":"jamessspanggg"},"content":"    private static final String AUTHOR_TIME_REGEX \u003d \"(^author-time [0-9]+)\";"},{"lineNumber":21,"author":{"gitId":"jamessspanggg"},"content":"    private static final String AUTHOR_TIMEZONE_REGEX \u003d \"(^author-tz .*)\";"},{"lineNumber":22,"author":{"gitId":"jamessspanggg"},"content":"    private static final String COMBINATION_REGEX \u003d COMMIT_HASH_REGEX + \"|\" + AUTHOR_NAME_REGEX + \"|\""},{"lineNumber":23,"author":{"gitId":"jamessspanggg"},"content":"            + AUTHOR_EMAIL_REGEX + \"|\" + AUTHOR_TIME_REGEX + \"|\" + AUTHOR_TIMEZONE_REGEX;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the raw git blame result for the {@code fileDirectory}, performed at the {@code root} directory."},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String blame(String root, String fileDirectory) {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Path rootPath \u003d Paths.get(root);"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String blameCommand \u003d \"git blame -w --line-porcelain\";"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        blameCommand +\u003d \" \" + addQuote(fileDirectory);"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return StringsUtil.filterText(runCommand(rootPath, blameCommand), COMBINATION_REGEX);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jamessspanggg":4,"-":32}},{"path":"src/main/java/reposense/git/GitDiff.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.git;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static reposense.system.CommandRunner.runCommand;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Contains git diff related functionalities."},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Git diff is responsible for obtaining the changes between commits, commit and working tree, etc."},{"lineNumber":13,"author":{"gitId":"-"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class GitDiff {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String EMPTY_TREE_HASH \u003d \"4b825dc642cb6eb9a060e54bf8d69288fbee4904\";"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String CHECKED_OUT_COMMIT_REFERENCE \u003d \"HEAD\";"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Returns the git diff result of the current commit compared to {@code lastCommitHash}, without any context."},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static String diffCommit(String root, String lastCommitHash) {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Path rootPath \u003d Paths.get(root);"},{"lineNumber":23,"author":{"gitId":"ccyccyccy"},"content":"        return runCommand(rootPath, \"git diff -U0 --ignore-submodules\u003dall \" + lastCommitHash);"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns a list of committed files with the corresponding number of lines added and deleted in the repo"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * {@code repoRoot}."},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static List\u003cString\u003e getModifiedFilesList(Path repoRoot) {"},{"lineNumber":31,"author":{"gitId":"ccyccyccy"},"content":"        String diffCommand \u003d String.format(\"git diff --ignore-submodules\u003dall --numstat %s %s\","},{"lineNumber":32,"author":{"gitId":"ccyccyccy"},"content":"                EMPTY_TREE_HASH, CHECKED_OUT_COMMIT_REFERENCE);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String diffResult \u003d runCommand(repoRoot.toAbsolutePath(), diffCommand);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return Arrays.asList(diffResult.split(\"\\n\"));"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ccyccyccy":3,"-":33}},{"path":"src/main/java/reposense/git/GitLog.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.git;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static reposense.system.CommandRunner.runCommand;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static reposense.util.StringsUtil.addQuote;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Contains git log related functionalities."},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Git log is responsible to obtain the commit logs and the authors\u0027 info."},{"lineNumber":15,"author":{"gitId":"-"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class GitLog {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMIT_INFO_DELIMITER \u003d \"(?m)^\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\\\\n\";"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String PRETTY_FORMAT_STRING \u003d"},{"lineNumber":20,"author":{"gitId":"jamessspanggg"},"content":"            \"\\\"\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c%n%H|%n|%aN|%n|%aE|%n|%cI|%n|%s|%n|%w(0,4,4)%b%w(0,0,0)|%n|%D|\\\"\";"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the git commit log info of {@code Author}, in the repository specified in {@code config}."},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String get(RepoConfiguration config, Author author) {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Path rootPath \u003d Paths.get(config.getRepoRoot());"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String command \u003d \"git log --no-merges -i \";"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToGitDateRangeArgs(config.getSinceDate(), config.getUntilDate());"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        command +\u003d \" --pretty\u003dformat:\" + PRETTY_FORMAT_STRING + \" --shortstat\";"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToFilterAuthorArgs(author);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToGitFormatsArgs(config.getFileTypeManager().getFormats());"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToGitExcludeGlobArgs(rootPath.toFile(), author.getIgnoreGlobList());"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return runCommand(rootPath, command);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the git commit log info of {@code Author}, with the files changed, in the repository specified in"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * {@code config}."},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static String getWithFiles(RepoConfiguration config, Author author) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Path rootPath \u003d Paths.get(config.getRepoRoot());"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String command \u003d \"git log --no-merges -i \";"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToGitDateRangeArgs(config.getSinceDate(), config.getUntilDate());"},{"lineNumber":47,"author":{"gitId":"jamessspanggg"},"content":"        command +\u003d \" --pretty\u003dformat:\" + PRETTY_FORMAT_STRING + \" --numstat --shortstat\";"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToFilterAuthorArgs(author);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToGitFormatsArgs(config.getFileTypeManager().getFormats());"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToGitExcludeGlobArgs(rootPath.toFile(), author.getIgnoreGlobList());"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return runCommand(rootPath, command);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns the authors who modified the binary file at {@code filePath}, in the repository specified in"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code config}."},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static String getBinaryFileAuthors(RepoConfiguration config, String filePath) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Path rootPath \u003d Paths.get(config.getRepoRoot());"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String command \u003d \"git log --pretty\u003dformat:\\\"%an\\t%ae\\\" \";"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToGitDateRangeArgs(config.getSinceDate(), config.getUntilDate());"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        command +\u003d \" \" + addQuote(filePath);"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return runCommand(rootPath, command);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jamessspanggg":2,"-":66}},{"path":"src/main/java/reposense/model/Author.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.FileSystems;"},{"lineNumber":4,"author":{"gitId":"anubh-v"},"content":"import java.nio.file.Path;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.PathMatcher;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a Git Author."},{"lineNumber":11,"author":{"gitId":"-"},"content":" */"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Author {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String NAME_NO_AUTHOR_WITH_COMMITS_FOUND \u003d"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"NO AUTHOR WITH COMMITS FOUND WITHIN THIS PERIOD OF TIME\";"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String UNKNOWN_AUTHOR_GIT_ID \u003d \"-\";"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String STANDARD_GITHUB_EMAIL_DOMAIN \u003d \"@users.noreply.github.com\";"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_UNCOMMON_EMAIL_PATTERN \u003d \"The provided email, %s, uses uncommon pattern.\";"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_UNCOMMON_GLOB_PATTERN \u003d \"The provided ignore glob, %s, uses uncommon pattern.\";"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String COMMON_EMAIL_REGEX \u003d"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \"^([a-zA-Z0-9_\\\\-\\\\.\\\\+]+)@([a-zA-Z0-9_\\\\-\\\\.]+)\\\\.([a-zA-Z]{2,5})$\";"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String COMMON_GLOB_REGEX \u003d \"^[-a-zA-Z0-9 _/\\\\\\\\*!{}\\\\[\\\\]!(),:.]*$\";"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final Author UNKNOWN_AUTHOR \u003d new Author(UNKNOWN_AUTHOR_GIT_ID);"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final String gitId;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private transient List\u003cString\u003e emails;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private transient String displayName;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private transient List\u003cString\u003e authorAliases;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private transient List\u003cString\u003e ignoreGlobList;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private transient PathMatcher ignoreGlobMatcher;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Author(String gitId) {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.gitId \u003d gitId;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.emails \u003d new ArrayList\u003c\u003e();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.displayName \u003d gitId;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.authorAliases \u003d new ArrayList\u003c\u003e();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.ignoreGlobList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        addStandardGitHubEmail(this.emails);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        updateIgnoreGlobMatcher();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Author(StandaloneAuthor sa) {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String gitId \u003d sa.getGithubId();"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        List\u003cString\u003e emails \u003d new ArrayList\u003c\u003e(sa.getEmails());"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String displayName \u003d !sa.getDisplayName().isEmpty() ? sa.getDisplayName() : sa.getGithubId();"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cString\u003e authorAliases \u003d sa.getAuthorNames();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        List\u003cString\u003e ignoreGlobList \u003d sa.getIgnoreGlobList();"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.gitId \u003d gitId;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.displayName \u003d displayName;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.authorAliases \u003d authorAliases;"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"        setEmails(emails);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setIgnoreGlobList(ignoreGlobList);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Author(Author another) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.gitId \u003d another.gitId;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.emails \u003d another.emails;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.displayName \u003d another.gitId;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.authorAliases \u003d another.authorAliases;"},{"lineNumber":64,"author":{"gitId":"anubh-v"},"content":"        this.ignoreGlobList \u003d another.ignoreGlobList;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.ignoreGlobMatcher \u003d another.ignoreGlobMatcher;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Checks that all the strings in the {@code emails} only contains commonly used email patterns."},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if any of the values do not meet the criteria."},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void validateEmails(List\u003cString\u003e emails) throws IllegalArgumentException {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        for (String email : emails) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            if (!email.matches(COMMON_EMAIL_REGEX)) {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                throw new IllegalArgumentException(String.format(MESSAGE_UNCOMMON_EMAIL_PATTERN, email));"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Checks that all the strings in the {@code ignoreGlobList} only contains commonly used glob patterns."},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if any of the values do not meet the criteria."},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private static void validateIgnoreGlobs(List\u003cString\u003e ignoreGlobList) throws IllegalArgumentException {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        for (String glob : ignoreGlobList) {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            if (!glob.matches(COMMON_GLOB_REGEX)) {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                throw new IllegalArgumentException(String.format(MESSAGE_UNCOMMON_GLOB_PATTERN, glob));"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String getGitId() {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return gitId;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getEmails() {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return emails;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setEmails(List\u003cString\u003e emails) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        validateEmails(emails);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.emails \u003d new ArrayList\u003c\u003e(emails);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        addStandardGitHubEmail(this.emails);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public String getDisplayName() {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return displayName;"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setDisplayName(String displayName) {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.displayName \u003d displayName;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAuthorAliases() {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return authorAliases;"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void setAuthorAliases(List\u003cString\u003e authorAliases) {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        this.authorAliases \u003d authorAliases;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getIgnoreGlobList() {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return ignoreGlobList;"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void setIgnoreGlobList(List\u003cString\u003e ignoreGlobList) {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        validateIgnoreGlobs(ignoreGlobList);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        this.ignoreGlobList \u003d new ArrayList\u003c\u003e(ignoreGlobList);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        updateIgnoreGlobMatcher();"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"0blivious"},"content":"     * Validates and adds a list of ignore glob into the {@code Author} class instance variable without duplicates"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * and updates the ignore glob matcher."},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":136,"author":{"gitId":"0blivious"},"content":"    public void importIgnoreGlobList(List\u003cString\u003e ignoreGlobList) {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        validateIgnoreGlobs(ignoreGlobList);"},{"lineNumber":138,"author":{"gitId":"0blivious"},"content":"        ignoreGlobList.forEach(ignoreGlob -\u003e {"},{"lineNumber":139,"author":{"gitId":"0blivious"},"content":"            if (!this.ignoreGlobList.contains(ignoreGlob)) {"},{"lineNumber":140,"author":{"gitId":"0blivious"},"content":"                this.ignoreGlobList.add(ignoreGlob);"},{"lineNumber":141,"author":{"gitId":"0blivious"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"0blivious"},"content":"        });"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        updateIgnoreGlobMatcher();"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"anubh-v"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"anubh-v"},"content":"     * Returns true if this author is ignoring the {@code filePath} based on its ignore glob matcher."},{"lineNumber":148,"author":{"gitId":"anubh-v"},"content":"     */"},{"lineNumber":149,"author":{"gitId":"anubh-v"},"content":"    public boolean isIgnoringFile(Path filePath) {"},{"lineNumber":150,"author":{"gitId":"anubh-v"},"content":"        return ignoreGlobMatcher.matches(filePath);"},{"lineNumber":151,"author":{"gitId":"anubh-v"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // short circuit if same object"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (this \u003d\u003d other) {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // instanceof handles null"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (!(other instanceof Author)) {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Author otherAuthor \u003d (Author) other;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return this.gitId.equalsIgnoreCase(otherAuthor.gitId);"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public int hashCode() {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return gitId !\u003d null ? gitId.toLowerCase().hashCode() : 0;"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public String toString() {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return gitId;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Updates the {@code PathMatcher} to the new ignore glob list set."},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Called after a new ignore glob list is set."},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private void updateIgnoreGlobMatcher() {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        String globString \u003d \"glob:{\" + String.join(\",\", ignoreGlobList) + \"}\";"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        ignoreGlobMatcher \u003d FileSystems.getDefault().getPathMatcher(globString);"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Adds the standard github email to {@code emails} if doesn\u0027t exist."},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private void addStandardGitHubEmail(List\u003cString\u003e emails) {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        String standardGitHubEmail \u003d getGitId() + STANDARD_GITHUB_EMAIL_DOMAIN;"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (!emails.contains(standardGitHubEmail)) {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            emails.add(standardGitHubEmail);"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}"},{"lineNumber":198,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"anubh-v":9,"-":182,"0blivious":7}},{"path":"src/main/java/reposense/model/AuthorConfiguration.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.TreeMap;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents author configuration information from CSV config file for a single repository."},{"lineNumber":17,"author":{"gitId":"-"},"content":" */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AuthorConfiguration {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_BRANCH \u003d \"HEAD\";"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(AuthorConfiguration.class);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Pattern EMAIL_PLUS_OPERATOR_PATTERN \u003d"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Pattern.compile(\"^(?\u003cprefix\u003e.+)\\\\+(?\u003csuffix\u003e.*)(?\u003cdomain\u003e@.+)$\");"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private RepoLocation location;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private String branch;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private transient List\u003cAuthor\u003e authorList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private transient Map\u003cString, Author\u003e authorDetailsToAuthorMap \u003d new TreeMap\u003c\u003e(String.CASE_INSENSITIVE_ORDER);"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private transient Map\u003cAuthor, String\u003e authorDisplayNameMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AuthorConfiguration(RepoLocation location) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this(location, DEFAULT_BRANCH);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AuthorConfiguration(RepoLocation location, String branch) {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.location \u003d location;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.branch \u003d location.isEmpty() ? DEFAULT_BRANCH : branch;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Clears authors information and use the information provided from {@code standaloneConfig}."},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void update(StandaloneConfig standaloneConfig, List\u003cString\u003e ignoreGlobList) {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e newAuthorList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Map\u003cString, Author\u003e newAuthorDetailsToAuthorMap \u003d new TreeMap\u003c\u003e(String.CASE_INSENSITIVE_ORDER);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Map\u003cAuthor, String\u003e newAuthorDisplayNameMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"        for (StandaloneAuthor sa : standaloneConfig.getAuthors()) {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            Author author \u003d new Author(sa);"},{"lineNumber":50,"author":{"gitId":"0blivious"},"content":"            author.importIgnoreGlobList(ignoreGlobList);"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"            newAuthorList.add(author);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            newAuthorDisplayNameMap.put(author, author.getDisplayName());"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            List\u003cString\u003e aliases \u003d new ArrayList\u003c\u003e(author.getAuthorAliases());"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            List\u003cString\u003e emails \u003d new ArrayList\u003c\u003e(author.getEmails());"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            aliases.add(author.getGitId());"},{"lineNumber":57,"author":{"gitId":"Tejas2805"},"content":"            aliases.forEach(alias -\u003e {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                checkDuplicateAliases(newAuthorDetailsToAuthorMap, alias, author.getGitId());"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                newAuthorDetailsToAuthorMap.put(alias, author);"},{"lineNumber":60,"author":{"gitId":"Tejas2805"},"content":"            });"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            emails.forEach(email -\u003e newAuthorDetailsToAuthorMap.put(email, author));"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setAuthorList(newAuthorList);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        setAuthorDetailsToAuthorMap(newAuthorDetailsToAuthorMap);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAuthorDisplayNameMap(newAuthorDisplayNameMap);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"Tejas2805"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Checks for duplicate aliases in {@code authorDetailsToAuthorMap} and generates warnings"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param authorDetailsToAuthorMap"},{"lineNumber":72,"author":{"gitId":"Tejas2805"},"content":"     * @param alias"},{"lineNumber":73,"author":{"gitId":"Tejas2805"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void checkDuplicateAliases(Map\u003cString, Author\u003e authorDetailsToAuthorMap, String alias, String gitId) {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (authorDetailsToAuthorMap.containsKey(alias)) {"},{"lineNumber":76,"author":{"gitId":"Tejas2805"},"content":"            logger.warning(String.format("},{"lineNumber":77,"author":{"gitId":"Tejas2805"},"content":"                    \"Duplicate alias %s found. The alias will belong to the last author - %s\", alias, gitId));"},{"lineNumber":78,"author":{"gitId":"Tejas2805"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!(other instanceof AuthorConfiguration)) {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"        AuthorConfiguration otherAuthorConfig \u003d (AuthorConfiguration) other;"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return location.equals(otherAuthorConfig.location)"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 branch.equals(otherAuthorConfig.branch)"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 authorList.equals(otherAuthorConfig.authorList)"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u0026\u0026 authorDetailsToAuthorMap.equals(otherAuthorConfig.authorDetailsToAuthorMap)"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                \u0026\u0026 authorDisplayNameMap.equals(otherAuthorConfig.authorDisplayNameMap);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public Map\u003cAuthor, String\u003e getAuthorDisplayNameMap() {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return authorDisplayNameMap;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setAuthorDisplayNameMap(Map\u003cAuthor, String\u003e authorDisplayNameMap) {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.authorDisplayNameMap \u003d authorDisplayNameMap;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public String getBranch() {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return branch;"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setBranch(String branch) {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.branch \u003d branch;"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public List\u003cAuthor\u003e getAuthorList() {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return authorList;"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Sets the details of {@code author} to {@code AuthorConfiguration} including the default alias, aliases"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * and display name."},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void setAuthorDetails(Author author) {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // Set GitHub Id and its corresponding email as default"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        addAuthorDetailsToAuthorMapEntry(author, Arrays.asList(author.getGitId()));"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"        addAuthorDetailsToAuthorMapEntry(author, author.getAuthorAliases());"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        addAuthorDetailsToAuthorMapEntry(author, author.getEmails());"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"        setAuthorDisplayName(author, author.getDisplayName());"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Propagates {@code ignoreGlobList} to {@code author}."},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static void propagateIgnoreGlobList(Author author, List\u003cString\u003e ignoreGlobList) {"},{"lineNumber":138,"author":{"gitId":"0blivious"},"content":"        author.importIgnoreGlobList(ignoreGlobList);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Adds author to the {@code AuthorList}."},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void addAuthor(Author author) {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        authorList.add(author);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        setAuthorDetails(author);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Adds {@code author} to the {@code AuthorList}, and propagates {@code ignoreGlobList} to the {@code author}."},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void addAuthor(Author author, List\u003cString\u003e ignoreGlobList) {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        addAuthor(author);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        propagateIgnoreGlobList(author, ignoreGlobList);"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Removes the authors provided in {@code ignoredAuthorsList} from the author list."},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void removeIgnoredAuthors(List\u003cString\u003e ignoredAuthorsList) {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        for (String author : ignoredAuthorsList) {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            if (authorDetailsToAuthorMap.containsKey(author)) {"},{"lineNumber":163,"author":{"gitId":"Tejas2805"},"content":"                removeAuthorInformation(author);"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":166,"author":{"gitId":"Tejas2805"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":168,"author":{"gitId":"Tejas2805"},"content":"    /**"},{"lineNumber":169,"author":{"gitId":"Tejas2805"},"content":"     * Removes all information of the {@code author} from the configs"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Precondition: {@code author} must be present in {@code authorDetailsToAuthorMap}"},{"lineNumber":171,"author":{"gitId":"Tejas2805"},"content":"     * @param author Can be an author\u0027s git ID, email, or alias"},{"lineNumber":172,"author":{"gitId":"Tejas2805"},"content":"     */"},{"lineNumber":173,"author":{"gitId":"Tejas2805"},"content":"    public void removeAuthorInformation(String author) {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Author authorToRemove \u003d authorDetailsToAuthorMap.get(author);"},{"lineNumber":175,"author":{"gitId":"Tejas2805"},"content":"        authorList.remove(authorToRemove);"},{"lineNumber":176,"author":{"gitId":"Tejas2805"},"content":"        authorDisplayNameMap.remove(authorToRemove);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        authorDetailsToAuthorMap.remove(authorToRemove.getGitId());"},{"lineNumber":178,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":179,"author":{"gitId":"Tejas2805"},"content":"        List\u003cString\u003e aliases \u003d authorToRemove.getAuthorAliases();"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        aliases.forEach(alias -\u003e authorDetailsToAuthorMap.remove(alias));"},{"lineNumber":181,"author":{"gitId":"Tejas2805"},"content":""},{"lineNumber":182,"author":{"gitId":"Tejas2805"},"content":"        List\u003cString\u003e emails \u003d authorToRemove.getEmails();"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        emails.forEach(email -\u003e authorDetailsToAuthorMap.remove(email));"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Adds new authors from {@code authorList} and sets the default alias, aliases, emails and display name"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * of the new authors. Skips authors that have already been added previously."},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void addAuthors(List\u003cAuthor\u003e authorList, List\u003cString\u003e ignoreGlobList) {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        for (Author author : authorList) {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (containsAuthor(author)) {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                logger.warning(String.format("},{"lineNumber":194,"author":{"gitId":"-"},"content":"                        \"Skipping author as %s already in repository %s %s\", author.getGitId(), location, branch));"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"            addAuthor(author, ignoreGlobList);"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public boolean containsAuthor(Author author) {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        return authorList.contains(author);"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void setAuthorList(List\u003cAuthor\u003e authorList) {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        this.authorList \u003d authorList;"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * Clears author mapping information."},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void clear() {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        authorDetailsToAuthorMap.clear();"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        authorDisplayNameMap.clear();"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * Resets author mapping information with the details of current author list."},{"lineNumber":220,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void buildFromAuthorList() {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        authorList.forEach(this::setAuthorDetails);"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public Map\u003cString, Author\u003e getAuthorDetailsToAuthorMap() {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        return authorDetailsToAuthorMap;"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public void setAuthorDetailsToAuthorMap(Map\u003cString, Author\u003e authorDetailsToAuthorMap) {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        this.authorDetailsToAuthorMap \u003d authorDetailsToAuthorMap;"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public void setAuthorDisplayName(Author author, String displayName) {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        authorDisplayNameMap.put(author, displayName);"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"Tejas2805"},"content":"    /**"},{"lineNumber":238,"author":{"gitId":"Tejas2805"},"content":"     * Adds {@code aliases} of {@code author} into the map"},{"lineNumber":239,"author":{"gitId":"Tejas2805"},"content":"     * @param author"},{"lineNumber":240,"author":{"gitId":"Tejas2805"},"content":"     * @param values"},{"lineNumber":241,"author":{"gitId":"Tejas2805"},"content":"     */"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public void addAuthorDetailsToAuthorMapEntry(Author author, List\u003cString\u003e values) {"},{"lineNumber":243,"author":{"gitId":"Tejas2805"},"content":"        values.forEach(value -\u003e {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            checkDuplicateAliases(authorDetailsToAuthorMap, value, author.getGitId());"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            authorDetailsToAuthorMap.put(value, author);"},{"lineNumber":246,"author":{"gitId":"Tejas2805"},"content":"        });"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"    public RepoLocation getLocation() {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        return location;"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     * Attempts to find matching {@code Author} given a name and an email."},{"lineNumber":255,"author":{"gitId":"-"},"content":"     * If no matching {@code Author} is found, {@code Author#UNKNOWN_AUTHOR} is returned."},{"lineNumber":256,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public Author getAuthor(String name, String email) {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        if (authorDetailsToAuthorMap.containsKey(name)) {"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            return authorDetailsToAuthorMap.get(name);"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        if (authorDetailsToAuthorMap.containsKey(email)) {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            return authorDetailsToAuthorMap.get(email);"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        Matcher matcher \u003d EMAIL_PLUS_OPERATOR_PATTERN.matcher(email);"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"        if (matcher.matches()) {"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            return authorDetailsToAuthorMap.getOrDefault(matcher.group(\"suffix\") + matcher.group(\"domain\"),"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                    Author.UNKNOWN_AUTHOR);"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        return Author.UNKNOWN_AUTHOR;"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"    public boolean isDefaultBranch() {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        return this.branch.equals(DEFAULT_BRANCH);"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Tejas2805":31,"-":243,"0blivious":2}},{"path":"src/main/java/reposense/model/CliArguments.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Date;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents command line arguments user supplied when running the program."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public abstract class CliArguments {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    protected Path outputFilePath;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    protected Path assetsFilePath;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    protected Date sinceDate;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    protected Date untilDate;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    protected boolean isSinceDateProvided;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    protected boolean isUntilDateProvided;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    protected List\u003cFileType\u003e formats;"},{"lineNumber":19,"author":{"gitId":"jamessspanggg"},"content":"    protected boolean isLastModifiedDateIncluded;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    protected boolean isShallowCloningPerformed;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    protected boolean isAutomaticallyLaunching;"},{"lineNumber":22,"author":{"gitId":"anubh-v"},"content":"    protected boolean isStandaloneConfigIgnored;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    protected int numCloningThreads;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    protected int numAnalysisThreads;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    protected ZoneId zoneId;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public ZoneId getZoneId() {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return zoneId;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Path getOutputFilePath() {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return outputFilePath;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getAssetsFilePath() {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return assetsFilePath;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Date getSinceDate() {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sinceDate;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Date getUntilDate() {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return untilDate;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isSinceDateProvided() {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isSinceDateProvided;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean isUntilDateProvided() {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return isUntilDateProvided;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"jamessspanggg"},"content":"    public boolean isLastModifiedDateIncluded() {"},{"lineNumber":56,"author":{"gitId":"jamessspanggg"},"content":"        return isLastModifiedDateIncluded;"},{"lineNumber":57,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean isShallowCloningPerformed() {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return isShallowCloningPerformed;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public List\u003cFileType\u003e getFormats() {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return formats;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean isAutomaticallyLaunching() {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return isAutomaticallyLaunching;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"anubh-v"},"content":"    public boolean isStandaloneConfigIgnored() {"},{"lineNumber":72,"author":{"gitId":"anubh-v"},"content":"        return isStandaloneConfigIgnored;"},{"lineNumber":73,"author":{"gitId":"anubh-v"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int getNumCloningThreads() {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return numCloningThreads;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public int getNumAnalysisThreads() {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return numAnalysisThreads;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // short circuit if same object"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (this \u003d\u003d other) {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // instanceof handles null"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!(other instanceof CliArguments)) {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"        CliArguments otherCliArguments \u003d (CliArguments) other;"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return this.outputFilePath.equals(otherCliArguments.outputFilePath)"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.sinceDate.equals(otherCliArguments.sinceDate)"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.untilDate.equals(otherCliArguments.untilDate)"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.isSinceDateProvided \u003d\u003d otherCliArguments.isSinceDateProvided"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.isUntilDateProvided \u003d\u003d otherCliArguments.isUntilDateProvided"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.formats.equals(otherCliArguments.formats)"},{"lineNumber":103,"author":{"gitId":"jamessspanggg"},"content":"                \u0026\u0026 this.isLastModifiedDateIncluded \u003d\u003d otherCliArguments.isLastModifiedDateIncluded"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.isShallowCloningPerformed \u003d\u003d otherCliArguments.isShallowCloningPerformed"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.isAutomaticallyLaunching \u003d\u003d otherCliArguments.isAutomaticallyLaunching"},{"lineNumber":106,"author":{"gitId":"anubh-v"},"content":"                \u0026\u0026 this.isStandaloneConfigIgnored \u003d\u003d otherCliArguments.isStandaloneConfigIgnored"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.numCloningThreads \u003d\u003d otherCliArguments.numCloningThreads"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.numAnalysisThreads \u003d\u003d otherCliArguments.numAnalysisThreads"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.zoneId.equals(otherCliArguments.zoneId);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"anubh-v":6,"jamessspanggg":6,"-":99}},{"path":"src/main/java/reposense/model/ConfigCliArguments.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Date;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import reposense.parser.AuthorConfigCsvParser;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import reposense.parser.GroupConfigCsvParser;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.parser.RepoConfigCsvParser;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.parser.ReportConfigJsonParser;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents command line arguments user supplied when running the program with mandatory field -config."},{"lineNumber":16,"author":{"gitId":"-"},"content":" */"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ConfigCliArguments extends CliArguments {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path EMPTY_PATH \u003d Paths.get(\"\");"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configFolderPath;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Path repoConfigFilePath;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Path authorConfigFilePath;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Path groupConfigFilePath;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path reportConfigFilePath;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ReportConfiguration reportConfiguration;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public ConfigCliArguments(Path configFolderPath, Path outputFilePath, Path assetsFilePath, Date sinceDate,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Date untilDate, boolean isSinceDateProvided, boolean isUntilDateProvided, int numCloningThreads,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            int numAnalysisThreads, List\u003cFileType\u003e formats, boolean isLastModifiedDateIncluded,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            boolean isShallowCloningPerformed, boolean isAutomaticallyLaunching,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            boolean isStandaloneConfigIgnored, ZoneId zoneId, ReportConfiguration reportConfiguration) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.configFolderPath \u003d configFolderPath.equals(EMPTY_PATH)"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                ? configFolderPath.toAbsolutePath()"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                : configFolderPath;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.repoConfigFilePath \u003d configFolderPath.resolve(RepoConfigCsvParser.REPO_CONFIG_FILENAME);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.authorConfigFilePath \u003d configFolderPath.resolve(AuthorConfigCsvParser.AUTHOR_CONFIG_FILENAME);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.groupConfigFilePath \u003d configFolderPath.resolve(GroupConfigCsvParser.GROUP_CONFIG_FILENAME);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.reportConfigFilePath \u003d configFolderPath.resolve(ReportConfigJsonParser.REPORT_CONFIG_FILENAME);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.outputFilePath \u003d outputFilePath;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.assetsFilePath \u003d assetsFilePath;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.sinceDate \u003d sinceDate;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.untilDate \u003d untilDate;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.isSinceDateProvided \u003d isSinceDateProvided;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.isUntilDateProvided \u003d isUntilDateProvided;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.formats \u003d formats;"},{"lineNumber":46,"author":{"gitId":"jamessspanggg"},"content":"        this.isLastModifiedDateIncluded \u003d isLastModifiedDateIncluded;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.isShallowCloningPerformed \u003d isShallowCloningPerformed;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.isAutomaticallyLaunching \u003d isAutomaticallyLaunching;"},{"lineNumber":49,"author":{"gitId":"anubh-v"},"content":"        this.isStandaloneConfigIgnored \u003d isStandaloneConfigIgnored;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.numCloningThreads \u003d numCloningThreads;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.numAnalysisThreads \u003d numAnalysisThreads;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.zoneId \u003d zoneId;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.reportConfiguration \u003d reportConfiguration;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Path getConfigFolderPath() {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return configFolderPath;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Path getRepoConfigFilePath() {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return repoConfigFilePath;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Path getAuthorConfigFilePath() {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return authorConfigFilePath;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getGroupConfigFilePath() {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return groupConfigFilePath;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getReportConfigFilePath() {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return reportConfigFilePath;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public ReportConfiguration getReportConfiguration() {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return reportConfiguration;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // short circuit if same object"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (this \u003d\u003d other) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // instanceof handles null"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!(other instanceof ConfigCliArguments)) {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"        ConfigCliArguments otherConfigCliArguments \u003d (ConfigCliArguments) other;"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return super.equals(other)"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.repoConfigFilePath.equals(otherConfigCliArguments.repoConfigFilePath)"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.authorConfigFilePath.equals(otherConfigCliArguments.authorConfigFilePath)"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.groupConfigFilePath.equals(otherConfigCliArguments.groupConfigFilePath)"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.reportConfigFilePath.equals(otherConfigCliArguments.reportConfigFilePath);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"anubh-v":1,"jamessspanggg":1,"-":98}},{"path":"src/main/java/reposense/model/FileType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.lang.reflect.Type;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.FileSystems;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.PathMatcher;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.google.gson.JsonElement;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.google.gson.JsonPrimitive;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.google.gson.JsonSerializationContext;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.google.gson.JsonSerializer;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents a file type for use in {@link FileTypeManager}."},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FileType {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Pattern FILE_FORMAT_VALIDATION_PATTERN \u003d Pattern.compile(\"^\\\\w+$\");"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_ILLEGAL_FILE_FORMAT \u003d \"The provided file format, %s, contains illegal \""},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"characters.\";"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private String label;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e paths;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private PathMatcher pathsGlob;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public FileType(String label, List\u003cString\u003e paths) {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        validateFileTypeLabel(label);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.label \u003d label;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        setPaths(paths);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns a list of {@code FileType} from {@code formats}, with each {@code FileType}"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * containing the format name and associated files ending with the format."},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static List\u003cFileType\u003e convertFormatStringsToFileTypes(List\u003cString\u003e formats) {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return formats.stream().map(FileType::convertStringFormatToFileType).collect(Collectors.toList());"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns a {@code FileType} with label named {@code format} and globs that include all files that end with"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code format}."},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static FileType convertStringFormatToFileType(String format) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        validateFileFormat(format);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new FileType(format, Collections.singletonList(\"**\" + format));"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Ensures that the string {@code label} is a valid file type."},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code label} is an empty string."},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static void validateFileTypeLabel(String label) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (label.isEmpty()) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Ensures that {@code format} is a valid file format."},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code format} is not alphanumeric."},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static void validateFileFormat(String format) throws IllegalArgumentException {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!FILE_FORMAT_VALIDATION_PATTERN.matcher(format).matches()) {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(MESSAGE_ILLEGAL_FILE_FORMAT, format));"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private void setPaths(List\u003cString\u003e paths) {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.paths \u003d paths;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setPathsGlobMatcher(paths);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean isFileGlobMatching(String fileName) {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return pathsGlob.matches(Paths.get(fileName));"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void setPathsGlobMatcher(List\u003cString\u003e filePaths) {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String globString \u003d \"glob:{\" + String.join(\",\", filePaths) + \"}\";"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.pathsGlob \u003d FileSystems.getDefault().getPathMatcher(globString);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public String toString() {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return label;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"0blivious"},"content":"    @Override"},{"lineNumber":92,"author":{"gitId":"0blivious"},"content":"    public int hashCode() {"},{"lineNumber":93,"author":{"gitId":"0blivious"},"content":"        return this.label.hashCode();"},{"lineNumber":94,"author":{"gitId":"0blivious"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // short circuit if same object"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (this \u003d\u003d other) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // instanceof handles null"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!(other instanceof FileType)) {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        FileType otherFileType \u003d (FileType) other;"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return this.label.equals(otherFileType.label) \u0026\u0026 this.paths.equals(otherFileType.paths);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Overrides the Gson serializer to serialize only the label of each file type instead on the entire object."},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static class FileTypeSerializer implements JsonSerializer\u003cFileType\u003e {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public JsonElement serialize(FileType fileType, Type typeOfSource, JsonSerializationContext context) {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return new JsonPrimitive(fileType.toString());"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}"},{"lineNumber":121,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"-":116,"0blivious":5}},{"path":"src/main/java/reposense/model/FileTypeManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code FileTypeManager} is responsible for holding a list of whitelisted formats and user-specified custom"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * groupings."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class FileTypeManager {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String DEFAULT_GROUP \u003d \"other\";"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final FileType DEFAULT_GROUP_TYPE \u003d new FileType(DEFAULT_GROUP, Collections.singletonList(\"**\"));"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private List\u003cFileType\u003e formats;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private List\u003cFileType\u003e groups;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public FileTypeManager(List\u003cFileType\u003e formats) {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.formats \u003d formats;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        groups \u003d new ArrayList\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the assigned file type of the file {@code fileName}."},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public FileType getFileType(String fileName) {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!hasCustomGroups()) {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return getFileFormat(fileName);"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"        FileType result \u003d DEFAULT_GROUP_TYPE;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        for (FileType group : groups) {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            if (group.isFileGlobMatching(fileName)) {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                result \u003d group;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return result;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the file format of the given {@code fileName}."},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the file type \"other\" if the format of the file is not of the standard type."},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FileType getFileFormat(String fileName) {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (hasSpecifiedFormats()) {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            for (FileType format : formats) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                if (format.isFileGlobMatching(fileName)) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    return format;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new AssertionError("},{"lineNumber":52,"author":{"gitId":"-"},"content":"                    \"This exception should not happen as we have performed the whitelisted formats check.\");"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            String[] tok \u003d fileName.split(\"[./\\\\\\\\]+\");"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            String label \u003d tok[tok.length - 1];"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                FileType.validateFileFormat(label);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                return new FileType(label, Collections.singletonList(\"**\" + label));"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } catch (IllegalArgumentException iae) {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                return DEFAULT_GROUP_TYPE;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public List\u003cFileType\u003e getAllFileTypes() {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return hasCustomGroups() ? groups : formats;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if the {@code fileName}\u0027s file type is inside the list of specified formats to be analyzed."},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean isInsideWhitelistedFormats(String fileName) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return !hasSpecifiedFormats() || getFormats().stream().anyMatch(format -\u003e format.isFileGlobMatching(fileName));"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public List\u003cFileType\u003e getFormats() {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return formats;"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setFormats(List\u003cFileType\u003e formats) {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.formats \u003d formats;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean hasSpecifiedFormats() {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return !formats.isEmpty();"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public List\u003cFileType\u003e getGroups() {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return groups;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"0blivious"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"0blivious"},"content":"     * Adds new groups from {@code groupList}. Skips groups that have already been added previously."},{"lineNumber":95,"author":{"gitId":"0blivious"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"0blivious"},"content":"    public void addGroups(List\u003cFileType\u003e groupList) {"},{"lineNumber":97,"author":{"gitId":"0blivious"},"content":"        groupList.stream().filter(group -\u003e !this.containsGroup(group)).forEach(groups::add);"},{"lineNumber":98,"author":{"gitId":"0blivious"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":100,"author":{"gitId":"0blivious"},"content":"    public boolean containsGroup(FileType group) {"},{"lineNumber":101,"author":{"gitId":"0blivious"},"content":"        return groups.contains(group);"},{"lineNumber":102,"author":{"gitId":"0blivious"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setGroups(List\u003cFileType\u003e groups) {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.groups \u003d groups;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private boolean hasCustomGroups() {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return !groups.isEmpty();"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // short circuit if same object"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (this \u003d\u003d other) {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // instanceof handles null"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!(other instanceof FileTypeManager)) {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        FileTypeManager otherFileType \u003d (FileTypeManager) other;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return this.groups.equals(otherFileType.groups) \u0026\u0026 this.formats.equals(otherFileType.formats);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":116,"0blivious":11}},{"path":"src/main/java/reposense/model/LocationsCliArguments.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Date;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents command line arguments user supplied when running the program with mandatory field -repos."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class LocationsCliArguments extends CliArguments {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e locations;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public LocationsCliArguments(List\u003cString\u003e locations, Path outputFilePath, Path assetsFilePath, Date sinceDate,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            Date untilDate, boolean isSinceDateProvided, boolean isUntilDateProvided, int numCloningThreads,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            int numAnalysisThreads, List\u003cFileType\u003e formats, boolean isLastModifiedDateIncluded,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            boolean isShallowCloningPerformed, boolean isAutomaticallyLaunching,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            boolean isStandaloneConfigIgnored, ZoneId zoneId) {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.locations \u003d locations;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.outputFilePath \u003d outputFilePath;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.assetsFilePath \u003d assetsFilePath;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.sinceDate \u003d sinceDate;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.untilDate \u003d untilDate;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.isSinceDateProvided \u003d isSinceDateProvided;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.isUntilDateProvided \u003d isUntilDateProvided;"},{"lineNumber":26,"author":{"gitId":"jamessspanggg"},"content":"        this.isLastModifiedDateIncluded \u003d isLastModifiedDateIncluded;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.isShallowCloningPerformed \u003d isShallowCloningPerformed;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.formats \u003d formats;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.isAutomaticallyLaunching \u003d isAutomaticallyLaunching;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.isStandaloneConfigIgnored \u003d isStandaloneConfigIgnored;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.numCloningThreads \u003d numCloningThreads;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.numAnalysisThreads \u003d numAnalysisThreads;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.zoneId \u003d zoneId;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getLocations() {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return locations;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // short circuit if same object"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (this \u003d\u003d other) {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles null"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof LocationsCliArguments)) {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        LocationsCliArguments otherLocationsCliArguments \u003d (LocationsCliArguments) other;"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return super.equals(other)"},{"lineNumber":55,"author":{"gitId":"anubh-v"},"content":"                \u0026\u0026 this.locations.equals(otherLocationsCliArguments.locations);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"anubh-v":1,"jamessspanggg":1,"-":55}},{"path":"src/main/java/reposense/model/RepoConfiguration.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Date;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.git.GitBranch;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.git.exception.GitBranchException;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents configuration information from CSV config file for a single repository."},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class RepoConfiguration {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_BRANCH \u003d \"HEAD\";"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(RepoConfiguration.class);"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private RepoLocation location;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private String branch;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String displayName;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private String outputFolderName;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private transient String zoneId;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private transient Date sinceDate;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private transient Date untilDate;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private transient String repoFolderName;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private transient FileTypeManager fileTypeManager;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private transient List\u003cString\u003e ignoreGlobList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private transient List\u003cString\u003e ignoredAuthorsList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private transient AuthorConfiguration authorConfig;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private transient boolean isStandaloneConfigIgnored;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private transient List\u003cCommitHash\u003e ignoreCommitList;"},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":"    private transient boolean isLastModifiedDateIncluded;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private transient boolean isShallowCloningPerformed;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private transient boolean isFormatsOverriding;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private transient boolean isIgnoreGlobListOverriding;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private transient boolean isIgnoreCommitListOverriding;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private transient boolean isIgnoredAuthorsListOverriding \u003d false;"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public RepoConfiguration(RepoLocation location) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this(location, DEFAULT_BRANCH);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public RepoConfiguration(RepoLocation location, String branch) {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(location, branch, Collections.emptyList(), Collections.emptyList(), false, Collections.emptyList(),"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                false, false, false, false);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public RepoConfiguration(RepoLocation location, String branch, List\u003cFileType\u003e formats, List\u003cString\u003e ignoreGlobList,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            boolean isStandaloneConfigIgnored, List\u003cCommitHash\u003e ignoreCommitList, boolean isFormatsOverriding,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            boolean isIgnoreGlobListOverriding, boolean isIgnoreCommitListOverriding,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            boolean isShallowCloningPerformed) {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.authorConfig \u003d new AuthorConfiguration(location, branch);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.location \u003d location;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.branch \u003d location.isEmpty() ? DEFAULT_BRANCH : branch;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.ignoreGlobList \u003d ignoreGlobList;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.isStandaloneConfigIgnored \u003d isStandaloneConfigIgnored;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.fileTypeManager \u003d new FileTypeManager(formats);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.ignoreCommitList \u003d ignoreCommitList;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.isFormatsOverriding \u003d isFormatsOverriding;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.isIgnoreGlobListOverriding \u003d isIgnoreGlobListOverriding;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.isIgnoreCommitListOverriding \u003d isIgnoreCommitListOverriding;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.isShallowCloningPerformed \u003d isShallowCloningPerformed;"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String organization \u003d location.getOrganization();"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String repoName \u003d location.getRepoName();"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        displayName \u003d repoName + \"[\" + branch + \"]\";"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        outputFolderName \u003d repoName + \"_\" + branch;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        repoFolderName \u003d repoName;"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (organization !\u003d null) {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            repoFolderName \u003d organization + \"_\" + repoFolderName;"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            displayName \u003d organization + \"/\" + displayName;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            outputFolderName \u003d organization + \"_\" + outputFolderName;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static void setDatesToRepoConfigs(List\u003cRepoConfiguration\u003e configs, Date sinceDate, Date untilDate) {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        for (RepoConfiguration config : configs) {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            config.setSinceDate(sinceDate);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            config.setUntilDate(untilDate);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static void setZoneIdToRepoConfigs(List\u003cRepoConfiguration\u003e configs, String zoneId) {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        for (RepoConfiguration config : configs) {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            config.setZoneId(zoneId);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"jamessspanggg"},"content":"    public static void setIsLastModifiedDateIncludedToRepoConfigs(List\u003cRepoConfiguration\u003e configs,"},{"lineNumber":98,"author":{"gitId":"jamessspanggg"},"content":"                                                                  boolean isLastModifiedDateIncluded) {"},{"lineNumber":99,"author":{"gitId":"jamessspanggg"},"content":"        for (RepoConfiguration config : configs) {"},{"lineNumber":100,"author":{"gitId":"jamessspanggg"},"content":"            config.setIsLastModifiedDateIncluded(isLastModifiedDateIncluded);"},{"lineNumber":101,"author":{"gitId":"jamessspanggg"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void setIsShallowCloningPerformedToRepoConfigs(List\u003cRepoConfiguration\u003e configs,"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                                                                 boolean isShallowCloningPerformed) {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (isShallowCloningPerformed) {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            configs.stream().forEach(config -\u003e config.setIsShallowCloningPerformed(true));"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Merges a {@code RepoConfiguration} from {@code repoConfigs} with an {@code AuthorConfiguration} from"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * {@code authorConfigs} if their {@code RepoLocation} and branch matches"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static void merge(List\u003cRepoConfiguration\u003e repoConfigs, List\u003cAuthorConfiguration\u003e authorConfigs) {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        for (AuthorConfiguration authorConfig : authorConfigs) {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            if (authorConfig.getLocation().isEmpty()) {"},{"lineNumber":118,"author":{"gitId":"0blivious"},"content":"                for (RepoConfiguration repoConfig : repoConfigs) {"},{"lineNumber":119,"author":{"gitId":"0blivious"},"content":"                    repoConfig.addAuthors(authorConfig.getAuthorList());"},{"lineNumber":120,"author":{"gitId":"0blivious"},"content":"                }"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"0blivious"},"content":"            List\u003cRepoConfiguration\u003e locationMatchingRepoConfigs \u003d"},{"lineNumber":125,"author":{"gitId":"0blivious"},"content":"                    getMatchingRepoConfigsByLocation(repoConfigs, authorConfig.getLocation());"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"0blivious"},"content":"            if (locationMatchingRepoConfigs.isEmpty()) {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                logger.warning(String.format("},{"lineNumber":129,"author":{"gitId":"0blivious"},"content":"                        \"Repository %s is not found in repo-config.csv.\","},{"lineNumber":130,"author":{"gitId":"0blivious"},"content":"                        authorConfig.getLocation()));"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":133,"author":{"gitId":"0blivious"},"content":"            if (authorConfig.isDefaultBranch()) {"},{"lineNumber":134,"author":{"gitId":"0blivious"},"content":"                locationMatchingRepoConfigs.forEach(matchingRepoConfig -\u003e {"},{"lineNumber":135,"author":{"gitId":"0blivious"},"content":"                    matchingRepoConfig.addAuthors(authorConfig.getAuthorList());"},{"lineNumber":136,"author":{"gitId":"0blivious"},"content":"                });"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"0blivious"},"content":"            RepoConfiguration branchMatchingRepoConfig \u003d getMatchingRepoConfig(repoConfigs, authorConfig);"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"0blivious"},"content":"            if (branchMatchingRepoConfig \u003d\u003d null) {"},{"lineNumber":143,"author":{"gitId":"0blivious"},"content":"                if (!authorConfig.isDefaultBranch()) {"},{"lineNumber":144,"author":{"gitId":"0blivious"},"content":"                    logger.warning(String.format("},{"lineNumber":145,"author":{"gitId":"0blivious"},"content":"                            \"Repository %s (branch %s) is not found in repo-config.csv.\","},{"lineNumber":146,"author":{"gitId":"0blivious"},"content":"                            authorConfig.getLocation(), authorConfig.getBranch()));"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":148,"author":{"gitId":"0blivious"},"content":"                continue;"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":150,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":151,"author":{"gitId":"0blivious"},"content":"            branchMatchingRepoConfig.addAuthors(authorConfig.getAuthorList());"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Sets the list of groups in {@code groupConfigs} to the respective {@code repoConfigs}."},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public static void setGroupConfigsToRepos(List\u003cRepoConfiguration\u003e repoConfigs,"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            List\u003cGroupConfiguration\u003e groupConfigs) {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        for (GroupConfiguration groupConfig : groupConfigs) {"},{"lineNumber":161,"author":{"gitId":"0blivious"},"content":"            List\u003cRepoConfiguration\u003e matchingRepoConfigs;"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            if (groupConfig.getLocation().isEmpty()) {"},{"lineNumber":163,"author":{"gitId":"0blivious"},"content":"                matchingRepoConfigs \u003d repoConfigs;"},{"lineNumber":164,"author":{"gitId":"0blivious"},"content":"            } else {"},{"lineNumber":165,"author":{"gitId":"0blivious"},"content":"                matchingRepoConfigs \u003d getMatchingRepoConfigsByLocation(repoConfigs,"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                        groupConfig.getLocation());"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            if (matchingRepoConfigs.isEmpty()) {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                logger.warning(String.format("},{"lineNumber":170,"author":{"gitId":"-"},"content":"                        \"Repository %s is not found in repo-config.csv.\", groupConfig.getLocation()));"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            matchingRepoConfigs.forEach(matchingRepoConfig -\u003e {"},{"lineNumber":174,"author":{"gitId":"0blivious"},"content":"                matchingRepoConfig.addGroups(groupConfig.getGroupsList());"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Iterates through {@code repoConfigs} to find a {@code RepoConfiguration} with {@code RepoLocation} and branch"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * that matches {@code authorConfig}. Returns {@code null} if no match is found."},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private static RepoConfiguration getMatchingRepoConfig("},{"lineNumber":184,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e repoConfigs, AuthorConfiguration authorConfig) {"},{"lineNumber":185,"author":{"gitId":"0blivious"},"content":"        if (authorConfig.isDefaultBranch()) {"},{"lineNumber":186,"author":{"gitId":"0blivious"},"content":"            return null;"},{"lineNumber":187,"author":{"gitId":"0blivious"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        for (RepoConfiguration repoConfig : repoConfigs) {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            if (repoConfig.getLocation().equals(authorConfig.getLocation())"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                    \u0026\u0026 repoConfig.getBranch().equals(authorConfig.getBranch())) {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                return repoConfig;"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return null;"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * Returns a list of {@link RepoConfiguration} where the {@link RepoLocation} matches {@code targetRepoLocation}."},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":200,"author":{"gitId":"0blivious"},"content":"    private static List\u003cRepoConfiguration\u003e getMatchingRepoConfigsByLocation("},{"lineNumber":201,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e configs, RepoLocation targetRepoLocation) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        return configs.stream().filter(config -\u003e config.getLocation().equals(targetRepoLocation))"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Sets {@code formats} to {@code RepoConfiguration} in {@code configs} if its format list is empty."},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public static void setFormatsToRepoConfigs(List\u003cRepoConfiguration\u003e configs, List\u003cFileType\u003e formats) {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        for (RepoConfiguration config : configs) {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            if (!config.fileTypeManager.hasSpecifiedFormats()) {"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                config.fileTypeManager.setFormats(formats);"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":218,"author":{"gitId":"anubh-v"},"content":"     * Sets each {@code RepoConfiguration} in {@code configs} to ignore its standalone config, if"},{"lineNumber":219,"author":{"gitId":"anubh-v"},"content":"     * {@code ignoreAllStandaloneConfigs} is true."},{"lineNumber":220,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public static void setStandaloneConfigIgnoredToRepoConfigs("},{"lineNumber":222,"author":{"gitId":"anubh-v"},"content":"            List\u003cRepoConfiguration\u003e configs, boolean ignoreAllStandaloneConfigs) {"},{"lineNumber":223,"author":{"gitId":"anubh-v"},"content":"        if (ignoreAllStandaloneConfigs) {"},{"lineNumber":224,"author":{"gitId":"anubh-v"},"content":"            configs.stream().forEach(config -\u003e config.setStandaloneConfigIgnored(true));"},{"lineNumber":225,"author":{"gitId":"anubh-v"},"content":"        }"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * Clears existing information related to this repository and its authors, and replaces it with information from the"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * {@code standaloneConfig}."},{"lineNumber":231,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void update(StandaloneConfig standaloneConfig) {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // only assign the new values when all the fields in {@code standaloneConfig} pass the validations."},{"lineNumber":234,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e replacementFileTypes \u003d FileType.convertFormatStringsToFileTypes(standaloneConfig.getFormats());"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        CommitHash.validateCommits(standaloneConfig.getIgnoreCommitList());"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"        if (!isIgnoreGlobListOverriding) {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            ignoreGlobList \u003d standaloneConfig.getIgnoreGlobList();"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        if (!isFormatsOverriding) {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            fileTypeManager.setFormats(replacementFileTypes);"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        if (!isIgnoreCommitListOverriding) {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            ignoreCommitList \u003d CommitHash.convertStringsToCommits(standaloneConfig.getIgnoreCommitList());"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        if (!isIgnoredAuthorsListOverriding) {"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            ignoredAuthorsList \u003d standaloneConfig.getIgnoreAuthorList();"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        authorConfig.update(standaloneConfig, ignoreGlobList);"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     * Attempts to find matching {@code Author} given a name and an email."},{"lineNumber":254,"author":{"gitId":"-"},"content":"     * If no matching {@code Author} is found, {@code Author#UNKNOWN_AUTHOR} is returned."},{"lineNumber":255,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    public Author getAuthor(String name, String email) {"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        return authorConfig.getAuthor(name, email);"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":261,"author":{"gitId":"-"},"content":"     * Updates branch with {@code currentBranch} if default branch is specified."},{"lineNumber":262,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    public void updateBranch(String currentBranch) {"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        if (branch.equals(DEFAULT_BRANCH)) {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            setBranch(currentBranch);"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     * Gets the current branch and updates branch with current branch if default branch is specified."},{"lineNumber":271,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    public void updateBranch() throws GitBranchException {"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        if (branch.equals(DEFAULT_BRANCH)) {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            String currentBranch \u003d GitBranch.getCurrentBranch(getRepoRoot());"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            setBranch(currentBranch);"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":280,"author":{"gitId":"-"},"content":"     * Gets the path to the root folder of the repository."},{"lineNumber":281,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    public String getRepoRoot() {"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        String path \u003d FileUtil.REPOS_ADDRESS + File.separator + getRepoFolderName() + File.separator;"},{"lineNumber":284,"author":{"gitId":"-"},"content":""},{"lineNumber":285,"author":{"gitId":"-"},"content":"        if (!getRepoName().isEmpty()) {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            path +\u003d getRepoName() + File.separator;"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"        return path;"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":291,"author":{"gitId":"-"},"content":""},{"lineNumber":292,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":293,"author":{"gitId":"-"},"content":"     * Gets the name of the folder containing the cloned repository; the parent directory of the repo\u0027s root folder."},{"lineNumber":294,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    public String getRepoFolderName() {"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        return repoFolderName;"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"        if (!(other instanceof RepoConfiguration)) {"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"        RepoConfiguration otherRepoConfig \u003d (RepoConfiguration) other;"},{"lineNumber":311,"author":{"gitId":"-"},"content":""},{"lineNumber":312,"author":{"gitId":"-"},"content":"        return location.equals(otherRepoConfig.location)"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                \u0026\u0026 branch.equals(otherRepoConfig.branch)"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                \u0026\u0026 authorConfig.equals(otherRepoConfig.authorConfig)"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                \u0026\u0026 ignoreGlobList.equals(otherRepoConfig.ignoreGlobList)"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                \u0026\u0026 ignoredAuthorsList.equals(otherRepoConfig.ignoredAuthorsList)"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                \u0026\u0026 isStandaloneConfigIgnored \u003d\u003d otherRepoConfig.isStandaloneConfigIgnored"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                \u0026\u0026 fileTypeManager.equals(otherRepoConfig.fileTypeManager)"},{"lineNumber":319,"author":{"gitId":"jamessspanggg"},"content":"                \u0026\u0026 isLastModifiedDateIncluded \u003d\u003d otherRepoConfig.isLastModifiedDateIncluded"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                \u0026\u0026 isFormatsOverriding \u003d\u003d otherRepoConfig.isFormatsOverriding"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                \u0026\u0026 isShallowCloningPerformed \u003d\u003d otherRepoConfig.isShallowCloningPerformed"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                \u0026\u0026 isIgnoreGlobListOverriding \u003d\u003d otherRepoConfig.isIgnoreGlobListOverriding"},{"lineNumber":323,"author":{"gitId":"-"},"content":"                \u0026\u0026 isIgnoreCommitListOverriding \u003d\u003d otherRepoConfig.isIgnoreCommitListOverriding"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                \u0026\u0026 isIgnoredAuthorsListOverriding \u003d\u003d otherRepoConfig.isIgnoredAuthorsListOverriding;"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"    public Map\u003cAuthor, String\u003e getAuthorDisplayNameMap() {"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        return authorConfig.getAuthorDisplayNameMap();"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"    public void setAuthorDisplayNameMap(Map\u003cAuthor, String\u003e authorDisplayNameMap) {"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        authorConfig.setAuthorDisplayNameMap(authorDisplayNameMap);"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public String getBranch() {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        return branch;"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":338,"author":{"gitId":"-"},"content":""},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public void setBranch(String branch) {"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        updateDisplayName(branch);"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        updateOutputFolderName(branch);"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        this.branch \u003d branch;"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        authorConfig.setBranch(branch);"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":345,"author":{"gitId":"-"},"content":""},{"lineNumber":346,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":347,"author":{"gitId":"-"},"content":"     * Updates the branch in the {@code displayName} to the"},{"lineNumber":348,"author":{"gitId":"-"},"content":"     * current {@code branch}."},{"lineNumber":349,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    public void updateDisplayName(String branch) {"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        this.displayName \u003d displayName.substring(0, displayName.lastIndexOf(\u0027[\u0027) + 1) + branch + \"]\";"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":355,"author":{"gitId":"-"},"content":"     * Updates the branch in the {@code outputFolderName} to the"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * current {@code branch}."},{"lineNumber":357,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    public void updateOutputFolderName(String branch) {"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        this.outputFolderName \u003d outputFolderName.substring(0, outputFolderName.lastIndexOf(\u0027_\u0027) + 1) + branch;"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":361,"author":{"gitId":"-"},"content":""},{"lineNumber":362,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getIgnoreGlobList() {"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        return ignoreGlobList;"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"    public void setIgnoreGlobList(List\u003cString\u003e ignoreGlobList) {"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        this.ignoreGlobList \u003d ignoreGlobList;"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"-"},"content":"    public List\u003cCommitHash\u003e getIgnoreCommitList() {"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        return ignoreCommitList;"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":373,"author":{"gitId":"-"},"content":""},{"lineNumber":374,"author":{"gitId":"-"},"content":"    public void setIgnoreCommitList(List\u003cCommitHash\u003e ignoreCommitList) {"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        this.ignoreCommitList \u003d ignoreCommitList;"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":377,"author":{"gitId":"-"},"content":""},{"lineNumber":378,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getIgnoredAuthorsList() {"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        return this.ignoredAuthorsList;"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"-"},"content":"    public void setIgnoredAuthorsList(List\u003cString\u003e ignoredAuthorsList) {"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        this.ignoredAuthorsList \u003d ignoredAuthorsList;"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"    public boolean isIgnoredAuthorsListOverriding() {"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        return this.isIgnoredAuthorsListOverriding;"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":389,"author":{"gitId":"-"},"content":""},{"lineNumber":390,"author":{"gitId":"jamessspanggg"},"content":"    public void setIsLastModifiedDateIncluded(boolean lastModifiedDateIncluded) {"},{"lineNumber":391,"author":{"gitId":"jamessspanggg"},"content":"        this.isLastModifiedDateIncluded \u003d lastModifiedDateIncluded;"},{"lineNumber":392,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":393,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":394,"author":{"gitId":"-"},"content":"    public void setIsShallowCloningPerformed(boolean isShallowCloningPerformed) {"},{"lineNumber":395,"author":{"gitId":"-"},"content":"        this.isShallowCloningPerformed \u003d isShallowCloningPerformed;"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":397,"author":{"gitId":"-"},"content":""},{"lineNumber":398,"author":{"gitId":"jamessspanggg"},"content":"    public boolean isLastModifiedDateIncluded() {"},{"lineNumber":399,"author":{"gitId":"jamessspanggg"},"content":"        return this.isLastModifiedDateIncluded;"},{"lineNumber":400,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":401,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":402,"author":{"gitId":"-"},"content":"    public boolean isShallowCloningPerformed() {"},{"lineNumber":403,"author":{"gitId":"-"},"content":"        return this.isShallowCloningPerformed;"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":405,"author":{"gitId":"-"},"content":""},{"lineNumber":406,"author":{"gitId":"-"},"content":"    public void setIsIgnoredAuthorsListOverriding(boolean isIgnoredAuthorsListOverriding) {"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        this.isIgnoredAuthorsListOverriding \u003d isIgnoredAuthorsListOverriding;"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":409,"author":{"gitId":"-"},"content":""},{"lineNumber":410,"author":{"gitId":"-"},"content":"    public void removeIgnoredAuthors() {"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        authorConfig.removeIgnoredAuthors(ignoredAuthorsList);"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":413,"author":{"gitId":"-"},"content":""},{"lineNumber":414,"author":{"gitId":"-"},"content":"    public List\u003cAuthor\u003e getAuthorList() {"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        return authorConfig.getAuthorList();"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":417,"author":{"gitId":"-"},"content":""},{"lineNumber":418,"author":{"gitId":"-"},"content":"    public void addAuthor(Author author) {"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        authorConfig.addAuthor(author, this.getIgnoreGlobList());"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":421,"author":{"gitId":"-"},"content":""},{"lineNumber":422,"author":{"gitId":"-"},"content":"    public void addAuthors(List\u003cAuthor\u003e authorList) {"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        authorConfig.addAuthors(authorList, this.getIgnoreGlobList());"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":425,"author":{"gitId":"-"},"content":""},{"lineNumber":426,"author":{"gitId":"-"},"content":"    public void setAuthorConfiguration(AuthorConfiguration authorConfig) {"},{"lineNumber":427,"author":{"gitId":"-"},"content":"        this.authorConfig \u003d authorConfig;"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        for (Author author : authorConfig.getAuthorList()) {"},{"lineNumber":429,"author":{"gitId":"-"},"content":"            AuthorConfiguration.propagateIgnoreGlobList(author, ignoreGlobList);"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":432,"author":{"gitId":"-"},"content":""},{"lineNumber":433,"author":{"gitId":"-"},"content":"    public boolean containsAuthor(Author author) {"},{"lineNumber":434,"author":{"gitId":"-"},"content":"        return authorConfig.containsAuthor(author);"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":436,"author":{"gitId":"-"},"content":""},{"lineNumber":437,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":438,"author":{"gitId":"-"},"content":"     * Clears authors information and sets the {@code authorList} to {@code RepoConfiguration}."},{"lineNumber":439,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    public void setAuthorList(List\u003cAuthor\u003e authorList) {"},{"lineNumber":441,"author":{"gitId":"-"},"content":"        authorConfig.clear();"},{"lineNumber":442,"author":{"gitId":"-"},"content":"        authorConfig.setAuthorList(authorList);"},{"lineNumber":443,"author":{"gitId":"-"},"content":"        authorConfig.buildFromAuthorList();"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        authorList.forEach(author -\u003e AuthorConfiguration.propagateIgnoreGlobList(author, this.getIgnoreGlobList()));"},{"lineNumber":445,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":446,"author":{"gitId":"-"},"content":""},{"lineNumber":447,"author":{"gitId":"-"},"content":"    public Map\u003cString, Author\u003e getAuthorDetailsToAuthorMap() {"},{"lineNumber":448,"author":{"gitId":"-"},"content":"        return authorConfig.getAuthorDetailsToAuthorMap();"},{"lineNumber":449,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":450,"author":{"gitId":"-"},"content":""},{"lineNumber":451,"author":{"gitId":"-"},"content":"    public void setAuthorDetailsToAuthorMap(Map\u003cString, Author\u003e authorDetailsToAuthorMap) {"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        authorConfig.setAuthorDetailsToAuthorMap(authorDetailsToAuthorMap);"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":454,"author":{"gitId":"-"},"content":""},{"lineNumber":455,"author":{"gitId":"-"},"content":"    public void setFormats(List\u003cFileType\u003e formats) {"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        fileTypeManager.setFormats(formats);"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":458,"author":{"gitId":"-"},"content":""},{"lineNumber":459,"author":{"gitId":"-"},"content":"    private void setGroups(List\u003cFileType\u003e groups) {"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        fileTypeManager.setGroups(groups);"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":462,"author":{"gitId":"-"},"content":""},{"lineNumber":463,"author":{"gitId":"0blivious"},"content":"    public void addGroups(List\u003cFileType\u003e groups) {"},{"lineNumber":464,"author":{"gitId":"0blivious"},"content":"        fileTypeManager.addGroups(groups);"},{"lineNumber":465,"author":{"gitId":"0blivious"},"content":"    }"},{"lineNumber":466,"author":{"gitId":"0blivious"},"content":""},{"lineNumber":467,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":468,"author":{"gitId":"-"},"content":"     * Returns all format or group types (depending on whether the user has specified a custom grouping)."},{"lineNumber":469,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":470,"author":{"gitId":"-"},"content":"    public List\u003cFileType\u003e getAllFileTypes() {"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        return fileTypeManager.getAllFileTypes();"},{"lineNumber":472,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":473,"author":{"gitId":"-"},"content":""},{"lineNumber":474,"author":{"gitId":"-"},"content":"    public FileType getFileType(String fileName) {"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        return fileTypeManager.getFileType(fileName);"},{"lineNumber":476,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":477,"author":{"gitId":"-"},"content":""},{"lineNumber":478,"author":{"gitId":"-"},"content":"    public FileTypeManager getFileTypeManager() {"},{"lineNumber":479,"author":{"gitId":"-"},"content":"        return fileTypeManager;"},{"lineNumber":480,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":481,"author":{"gitId":"-"},"content":""},{"lineNumber":482,"author":{"gitId":"-"},"content":"    public Date getSinceDate() {"},{"lineNumber":483,"author":{"gitId":"-"},"content":"        return sinceDate;"},{"lineNumber":484,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":485,"author":{"gitId":"-"},"content":""},{"lineNumber":486,"author":{"gitId":"-"},"content":"    public void setSinceDate(Date sinceDate) {"},{"lineNumber":487,"author":{"gitId":"-"},"content":"        this.sinceDate \u003d sinceDate;"},{"lineNumber":488,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":489,"author":{"gitId":"-"},"content":""},{"lineNumber":490,"author":{"gitId":"-"},"content":"    public Date getUntilDate() {"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        return untilDate;"},{"lineNumber":492,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":493,"author":{"gitId":"-"},"content":""},{"lineNumber":494,"author":{"gitId":"-"},"content":"    public void setUntilDate(Date untilDate) {"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        this.untilDate \u003d untilDate;"},{"lineNumber":496,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":497,"author":{"gitId":"-"},"content":""},{"lineNumber":498,"author":{"gitId":"-"},"content":"    public String getZoneId() {"},{"lineNumber":499,"author":{"gitId":"-"},"content":"        return zoneId;"},{"lineNumber":500,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":501,"author":{"gitId":"-"},"content":""},{"lineNumber":502,"author":{"gitId":"-"},"content":"    public void setZoneId(String zoneId) {"},{"lineNumber":503,"author":{"gitId":"-"},"content":"        this.zoneId \u003d zoneId;"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":505,"author":{"gitId":"-"},"content":""},{"lineNumber":506,"author":{"gitId":"-"},"content":"    public void setAuthorDisplayName(Author author, String displayName) {"},{"lineNumber":507,"author":{"gitId":"-"},"content":"        authorConfig.setAuthorDisplayName(author, displayName);"},{"lineNumber":508,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":509,"author":{"gitId":"-"},"content":""},{"lineNumber":510,"author":{"gitId":"-"},"content":"    public void addAuthorDetailsToAuthorMapEntry(Author author, List\u003cString\u003e values) {"},{"lineNumber":511,"author":{"gitId":"-"},"content":"        authorConfig.addAuthorDetailsToAuthorMapEntry(author, values);"},{"lineNumber":512,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":513,"author":{"gitId":"-"},"content":""},{"lineNumber":514,"author":{"gitId":"-"},"content":"    public String getDisplayName() {"},{"lineNumber":515,"author":{"gitId":"-"},"content":"        return displayName;"},{"lineNumber":516,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":517,"author":{"gitId":"-"},"content":""},{"lineNumber":518,"author":{"gitId":"-"},"content":"    public String getRepoName() {"},{"lineNumber":519,"author":{"gitId":"-"},"content":"        return location.getRepoName();"},{"lineNumber":520,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":521,"author":{"gitId":"-"},"content":""},{"lineNumber":522,"author":{"gitId":"-"},"content":"    public String getOutputFolderName() {"},{"lineNumber":523,"author":{"gitId":"-"},"content":"        return outputFolderName;"},{"lineNumber":524,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":525,"author":{"gitId":"-"},"content":""},{"lineNumber":526,"author":{"gitId":"-"},"content":"    public void setStandaloneConfigIgnored(boolean isStandaloneConfigIgnored) {"},{"lineNumber":527,"author":{"gitId":"-"},"content":"        this.isStandaloneConfigIgnored \u003d isStandaloneConfigIgnored;"},{"lineNumber":528,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":529,"author":{"gitId":"-"},"content":""},{"lineNumber":530,"author":{"gitId":"-"},"content":"    public RepoLocation getLocation() {"},{"lineNumber":531,"author":{"gitId":"-"},"content":"        return location;"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":533,"author":{"gitId":"-"},"content":""},{"lineNumber":534,"author":{"gitId":"-"},"content":"    public String getOrganization() {"},{"lineNumber":535,"author":{"gitId":"-"},"content":"        return location.getOrganization();"},{"lineNumber":536,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":537,"author":{"gitId":"-"},"content":""},{"lineNumber":538,"author":{"gitId":"-"},"content":"    public boolean isStandaloneConfigIgnored() {"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        return isStandaloneConfigIgnored;"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":541,"author":{"gitId":"-"},"content":""},{"lineNumber":542,"author":{"gitId":"-"},"content":"    public boolean isFormatsOverriding() {"},{"lineNumber":543,"author":{"gitId":"-"},"content":"        return isFormatsOverriding;"},{"lineNumber":544,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":545,"author":{"gitId":"-"},"content":""},{"lineNumber":546,"author":{"gitId":"-"},"content":"    public boolean isIgnoreGlobListOverriding() {"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        return isIgnoreGlobListOverriding;"},{"lineNumber":548,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":549,"author":{"gitId":"-"},"content":""},{"lineNumber":550,"author":{"gitId":"-"},"content":"    public boolean isIgnoreCommitListOverriding() {"},{"lineNumber":551,"author":{"gitId":"-"},"content":"        return isIgnoreCommitListOverriding;"},{"lineNumber":552,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":553,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"anubh-v":6,"jamessspanggg":17,"-":496,"0blivious":34}},{"path":"src/main/java/reposense/parser/ArgsParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.parser;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"Tejas2805"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Date;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.google.gson.JsonSyntaxException;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.ArgumentParsers;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.helper.HelpScreenException;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.impl.Arguments;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.impl.action.HelpArgumentAction;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.impl.action.VersionArgumentAction;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.inf.ArgumentParser;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.inf.ArgumentParserException;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.inf.FeatureControl;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.inf.MutuallyExclusiveGroup;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.inf.Namespace;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.RepoSense;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.model.CliArguments;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import reposense.model.ConfigCliArguments;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import reposense.model.FileType;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import reposense.model.LocationsCliArguments;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import reposense.model.ReportConfiguration;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import reposense.model.ViewCliArguments;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import reposense.util.TimeUtil;"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Verifies and parses a string-formatted date to a {@code CliArguments} object."},{"lineNumber":38,"author":{"gitId":"-"},"content":" */"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class ArgsParser {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_REPORT_NAME \u003d \"reposense-report\";"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final int DEFAULT_NUM_CLONING_THREADS \u003d 4;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final int DEFAULT_NUM_ANALYSIS_THREADS \u003d Runtime.getRuntime().availableProcessors();"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String[] HELP_FLAGS \u003d new String[]{\"--help\", \"-h\"};"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String[] CONFIG_FLAGS \u003d new String[]{\"--config\", \"-c\"};"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String[] REPO_FLAGS \u003d new String[]{\"--repo\", \"--repos\", \"-r\"};"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String[] VIEW_FLAGS \u003d new String[]{\"--view\", \"-v\"};"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String[] OUTPUT_FLAGS \u003d new String[]{\"--output\", \"-o\"};"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String[] ASSETS_FLAGS \u003d new String[]{\"--assets\", \"-a\"};"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String[] SINCE_FLAGS \u003d new String[]{\"--since\", \"-s\"};"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String[] UNTIL_FLAGS \u003d new String[]{\"--until\", \"-u\"};"},{"lineNumber":52,"author":{"gitId":"niqiukun"},"content":"    public static final String[] PERIOD_FLAGS \u003d new String[]{\"--period\", \"-p\"};"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String[] SHALLOW_CLONING_FLAGS \u003d new String[]{\"--shallow-cloning\", \"-S\"};"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String[] FORMAT_FLAGS \u003d new String[]{\"--formats\", \"-f\"};"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String[] IGNORE_FLAGS \u003d new String[]{\"--ignore-standalone-config\", \"-i\"};"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String[] TIMEZONE_FLAGS \u003d new String[]{\"--timezone\", \"-t\"};"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String[] VERSION_FLAGS \u003d new String[]{\"--version\", \"-V\"};"},{"lineNumber":58,"author":{"gitId":"jamessspanggg"},"content":"    public static final String[] LAST_MODIFIED_DATE_FLAGS \u003d new String[]{\"--last-modified-date\", \"-l\"};"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String[] CLONING_THREADS_FLAG \u003d new String[]{\"--cloning-threads\"};"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String[] ANALYSIS_THREADS_FLAG \u003d new String[]{\"--analysis-threads\"};"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(ArgsParser.class);"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static final String PROGRAM_USAGE \u003d \"java -jar RepoSense.jar\";"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static final String PROGRAM_DESCRIPTION \u003d"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \"RepoSense is a contribution analysis tool for Git repositories.\";"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_HEADER_MUTEX \u003d \"mutual exclusive arguments\";"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_SINCE_DATE_LATER_THAN_UNTIL_DATE \u003d"},{"lineNumber":70,"author":{"gitId":"niqiukun"},"content":"            \"\\\"Since Date\\\" cannot be later than \\\"Until Date\\\".\";"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_SINCE_DATE_LATER_THAN_TODAY_DATE \u003d"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            \"\\\"Since Date\\\" must not be later than today\u0027s date.\";"},{"lineNumber":73,"author":{"gitId":"niqiukun"},"content":"    private static final String MESSAGE_HAVE_SINCE_DATE_UNTIL_DATE_AND_PERIOD \u003d"},{"lineNumber":74,"author":{"gitId":"niqiukun"},"content":"            \"\\\"Since Date\\\", \\\"Until Date\\\", and \\\"Period\\\" cannot be applied together.\";"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_USING_DEFAULT_CONFIG_PATH \u003d"},{"lineNumber":76,"author":{"gitId":"Tejas2805"},"content":"            \"Config path not provided, using the config folder as default.\";"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_CONFIG_PATH \u003d \"%s is malformed.\";"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_CONFIG_JSON \u003d \"%s Ignoring the report config provided.\";"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_IGNORING_REPORT_CONFIG_SINCE_DATE \u003d"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \"Ignoring \\\"Since Date\\\" in report config, it has already been provided as a command line argument.\";"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_IGNORING_REPORT_CONFIG_UNTIL_DATE \u003d"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            \"Ignoring \\\"Until Date\\\" in report config, it has already been provided as a command line argument.\";"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_IGNORING_REPORT_CONFIG_PERIOD \u003d"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            \"Ignoring \\\"Period\\\" in report config, it has already been provided as a command line argument.\";"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_IGNORING_REPORT_SINCE_DATE_UNTIL_DATE_AND_PERIOD \u003d"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            \"Ignoring \\\"Since Date\\\", \\\"Until Date\\\" and/or \\\"Period\\\" in report config as they cannot be applied \""},{"lineNumber":87,"author":{"gitId":"-"},"content":"                    + \"together.\";"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static final Path EMPTY_PATH \u003d Paths.get(\"\");"},{"lineNumber":89,"author":{"gitId":"Tejas2805"},"content":"    private static final Path DEFAULT_CONFIG_PATH \u003d Paths.get(System.getProperty(\"user.dir\")"},{"lineNumber":90,"author":{"gitId":"Tejas2805"},"content":"            + File.separator + \"config\" + File.separator);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static final Path DEFAULT_ASSETS_PATH \u003d Paths.get(System.getProperty(\"user.dir\")"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            + File.separator + \"assets\" + File.separator);"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static ArgumentParser getArgumentParser() {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        ArgumentParser parser \u003d ArgumentParsers"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .newFor(PROGRAM_USAGE)"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .addHelp(false)"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .build()"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .description(PROGRAM_DESCRIPTION);"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"        MutuallyExclusiveGroup mutexParser \u003d parser"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .addMutuallyExclusiveGroup(MESSAGE_HEADER_MUTEX)"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .required(false);"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"        MutuallyExclusiveGroup mutexParser2 \u003d parser"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .addMutuallyExclusiveGroup(MESSAGE_HEADER_MUTEX)"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .required(false);"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // Boolean flags"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        parser.addArgument(HELP_FLAGS)"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .help(\"Show help message.\")"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .action(new HelpArgumentAction());"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"        parser.version(\"RepoSense \" + RepoSense.getVersion());"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        parser.addArgument(VERSION_FLAGS)"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .help(\"Show the version of RepoSense.\")"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .action(new VersionArgumentAction());"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"        parser.addArgument(IGNORE_FLAGS)"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .dest(IGNORE_FLAGS[0])"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .action(Arguments.storeTrue())"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .help(\"A flag to ignore the standalone config file in the repo.\");"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        parser.addArgument(VIEW_FLAGS)"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .dest(VIEW_FLAGS[0])"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .nargs(\"?\")"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .metavar(\"PATH\")"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .type(new ReportFolderArgumentType())"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .setConst(EMPTY_PATH)"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .help(\"Starts a server to display the report in the provided directory. \""},{"lineNumber":131,"author":{"gitId":"-"},"content":"                        + \"If used as a flag (with no argument), \""},{"lineNumber":132,"author":{"gitId":"-"},"content":"                        + \"generates a report and automatically displays the report.\");"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"        parser.addArgument(OUTPUT_FLAGS)"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .dest(OUTPUT_FLAGS[0])"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .metavar(\"PATH\")"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .type(new OutputFolderArgumentType())"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .setDefault(Paths.get(ArgsParser.DEFAULT_REPORT_NAME))"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .help(\"The directory to output the report folder, reposense-report. \""},{"lineNumber":140,"author":{"gitId":"-"},"content":"                        + \"If not provided, the report folder will be created in the current working directory.\");"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"        parser.addArgument(ASSETS_FLAGS)"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .dest(ASSETS_FLAGS[0])"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .metavar(\"PATH\")"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .type(new AssetsFolderArgumentType())"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .setDefault(DEFAULT_ASSETS_PATH)"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .help(\"The directory to place assets files to customize report generation. \""},{"lineNumber":148,"author":{"gitId":"-"},"content":"                        + \"If not provided, the assets folder in the current working directory will be used.\");"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"        parser.addArgument(SINCE_FLAGS)"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .dest(SINCE_FLAGS[0])"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .metavar(\"dd/MM/yyyy\")"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .type(new SinceDateArgumentType())"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                .setDefault(Optional.empty())"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                .help(\"The date to start filtering.\");"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"        parser.addArgument(UNTIL_FLAGS)"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                .dest(UNTIL_FLAGS[0])"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .metavar(\"dd/MM/yyyy\")"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                .type(new UntilDateArgumentType())"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                .setDefault(Optional.empty())"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                .help(\"The date to stop filtering.\");"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"niqiukun"},"content":"        parser.addArgument(PERIOD_FLAGS)"},{"lineNumber":165,"author":{"gitId":"niqiukun"},"content":"                .dest(PERIOD_FLAGS[0])"},{"lineNumber":166,"author":{"gitId":"niqiukun"},"content":"                .metavar(\"PERIOD\")"},{"lineNumber":167,"author":{"gitId":"niqiukun"},"content":"                .type(new PeriodArgumentType())"},{"lineNumber":168,"author":{"gitId":"niqiukun"},"content":"                .setDefault(Optional.empty())"},{"lineNumber":169,"author":{"gitId":"niqiukun"},"content":"                .help(\"The number of days of the filtering window.\");"},{"lineNumber":170,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"        parser.addArgument(FORMAT_FLAGS)"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                .dest(FORMAT_FLAGS[0])"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                .nargs(\"*\")"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                .metavar(\"FORMAT\")"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                .type(new AlphanumericArgumentType())"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .setDefault(Collections.emptyList())"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .help(\"The alphanumeric file formats to process.\\n\""},{"lineNumber":178,"author":{"gitId":"-"},"content":"                        + \"If not provided, default file formats will be used.\\n\""},{"lineNumber":179,"author":{"gitId":"-"},"content":"                        + \"Please refer to userguide for more information.\");"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"        parser.addArgument(TIMEZONE_FLAGS)"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                .dest(TIMEZONE_FLAGS[0])"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                .metavar(\"ZONE_ID[±hh[mm]]\")"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                .type(new ZoneIdArgumentType())"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                .setDefault(ZoneId.systemDefault())"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                .help(\"The timezone to use for the generated report. \""},{"lineNumber":187,"author":{"gitId":"-"},"content":"                        + \"One kind of valid timezones is relative to UTC. E.g. UTC, UTC+08, UTC-1030. \\n\""},{"lineNumber":188,"author":{"gitId":"-"},"content":"                        + \"If not provided, system default timezone will be used.\");"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // Mutex flags - these will always be the last parameters in help message."},{"lineNumber":191,"author":{"gitId":"-"},"content":"        mutexParser.addArgument(CONFIG_FLAGS)"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                .dest(CONFIG_FLAGS[0])"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                .type(new ConfigFolderArgumentType())"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                .metavar(\"PATH\")"},{"lineNumber":195,"author":{"gitId":"Tejas2805"},"content":"                .setDefault(DEFAULT_CONFIG_PATH)"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .help(\"The directory containing the config files.\""},{"lineNumber":197,"author":{"gitId":"Tejas2805"},"content":"                        + \"If not provided, the config files will be obtained from the config folder.\");"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"        mutexParser.addArgument(REPO_FLAGS)"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                .nargs(\"+\")"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                .dest(REPO_FLAGS[0])"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                .metavar(\"LOCATION\")"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                .help(\"The GitHub URL or disk locations to clone repository.\");"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"        mutexParser2.addArgument(LAST_MODIFIED_DATE_FLAGS)"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                .dest(LAST_MODIFIED_DATE_FLAGS[0])"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                .action(Arguments.storeTrue())"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                .help(\"A flag to keep track of the last modified date of each line of code.\");"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"        mutexParser2.addArgument(SHALLOW_CLONING_FLAGS)"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                .dest(SHALLOW_CLONING_FLAGS[0])"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                .action(Arguments.storeTrue())"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                .help(\"A flag to make RepoSense employ Git\u0027s shallow cloning functionality, which can significantly \""},{"lineNumber":214,"author":{"gitId":"-"},"content":"                        + \"reduce the time taken to clone large repositories. This flag should not be used for \""},{"lineNumber":215,"author":{"gitId":"-"},"content":"                        + \"smaller repositories, where the .git file is smaller than 500 MB.\");"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"        parser.addArgument(CLONING_THREADS_FLAG)"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                .dest(CLONING_THREADS_FLAG[0])"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                .type(new CloningThreadsArgumentType())"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                .setDefault(DEFAULT_NUM_CLONING_THREADS)"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                .help(FeatureControl.SUPPRESS);"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"        parser.addArgument(ANALYSIS_THREADS_FLAG)"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                .dest(ANALYSIS_THREADS_FLAG[0])"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                .type(new AnalysisThreadsArgumentType())"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                .setDefault(DEFAULT_NUM_ANALYSIS_THREADS)"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                .help(FeatureControl.SUPPRESS);"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"        return parser;"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * Parses the given string arguments to a {@code CliArguments} object."},{"lineNumber":234,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * @throws HelpScreenException if given args contain the --help flag. Help message will be printed out"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * by the {@code ArgumentParser} hence this is to signal to the caller that the program is safe to exit."},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given string arguments fails to parse to a {@code CliArguments} object."},{"lineNumber":238,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public static CliArguments parse(String[] args) throws HelpScreenException, ParseException {"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            ReportConfiguration reportConfig \u003d new ReportConfiguration();"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            ArgumentParser parser \u003d getArgumentParser();"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            Namespace results \u003d parser.parseArgs(args);"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            Date sinceDate;"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            Date untilDate;"},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"-"},"content":"            Path configFolderPath \u003d results.get(CONFIG_FLAGS[0]);"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            Path reportFolderPath \u003d results.get(VIEW_FLAGS[0]);"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            Path outputFolderPath \u003d results.get(OUTPUT_FLAGS[0]);"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            ZoneId zoneId \u003d results.get(TIMEZONE_FLAGS[0]);"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            Path assetsFolderPath \u003d results.get(ASSETS_FLAGS[0]);"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            Optional\u003cDate\u003e cliSinceDate \u003d results.get(SINCE_FLAGS[0]);"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            Optional\u003cDate\u003e cliUntilDate \u003d results.get(UNTIL_FLAGS[0]);"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            Optional\u003cInteger\u003e cliPeriod \u003d results.get(PERIOD_FLAGS[0]);"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            List\u003cString\u003e locations \u003d results.get(REPO_FLAGS[0]);"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            List\u003cFileType\u003e formats \u003d FileType.convertFormatStringsToFileTypes(results.get(FORMAT_FLAGS[0]));"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            boolean isStandaloneConfigIgnored \u003d results.get(IGNORE_FLAGS[0]);"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            boolean shouldIncludeLastModifiedDate \u003d results.get(LAST_MODIFIED_DATE_FLAGS[0]);"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            boolean shouldPerformShallowCloning \u003d results.get(SHALLOW_CLONING_FLAGS[0]);"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"            // Report config is ignored if --repos is provided"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            if (locations \u003d\u003d null) {"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                Path reportConfigFilePath \u003d configFolderPath.resolve(ReportConfigJsonParser.REPORT_CONFIG_FILENAME);"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"                try {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                    reportConfig \u003d new ReportConfigJsonParser().parse(reportConfigFilePath);"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                } catch (JsonSyntaxException jse) {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                    logger.warning(String.format(MESSAGE_INVALID_CONFIG_PATH, reportConfigFilePath));"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                } catch (IllegalArgumentException iae) {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                    logger.warning(String.format(MESSAGE_INVALID_CONFIG_JSON, iae.getMessage()));"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                } catch (IOException ioe) {"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                    // IOException thrown as report-config.json is not found."},{"lineNumber":273,"author":{"gitId":"-"},"content":"                    // Ignore exception as the file is optional."},{"lineNumber":274,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"            boolean isSinceDateProvided \u003d cliSinceDate.isPresent();"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            boolean isUntilDateProvided \u003d cliUntilDate.isPresent();"},{"lineNumber":279,"author":{"gitId":"niqiukun"},"content":"            boolean isPeriodProvided \u003d cliPeriod.isPresent();"},{"lineNumber":280,"author":{"gitId":"niqiukun"},"content":"            if (isSinceDateProvided \u0026\u0026 isUntilDateProvided \u0026\u0026 isPeriodProvided) {"},{"lineNumber":281,"author":{"gitId":"niqiukun"},"content":"                throw new ParseException(MESSAGE_HAVE_SINCE_DATE_UNTIL_DATE_AND_PERIOD);"},{"lineNumber":282,"author":{"gitId":"niqiukun"},"content":"            }"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            int numCloningThreads \u003d results.get(CLONING_THREADS_FLAG[0]);"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            int numAnalysisThreads \u003d results.get(ANALYSIS_THREADS_FLAG[0]);"},{"lineNumber":285,"author":{"gitId":"-"},"content":""},{"lineNumber":286,"author":{"gitId":"-"},"content":"            Date currentDate \u003d TimeUtil.getCurrentDate(zoneId);"},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"-"},"content":"            if (isSinceDateProvided) {"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                sinceDate \u003d TimeUtil.getZonedSinceDate(cliSinceDate.get(), zoneId);"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                sinceDate \u003d isPeriodProvided"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                        ? TimeUtil.getDateMinusNDays(cliUntilDate, zoneId, cliPeriod.get())"},{"lineNumber":293,"author":{"gitId":"-"},"content":"                        : TimeUtil.getDateMinusAMonth(cliUntilDate, zoneId);"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"-"},"content":"            if (isUntilDateProvided) {"},{"lineNumber":297,"author":{"gitId":"-"},"content":"                untilDate \u003d TimeUtil.getZonedUntilDate(cliUntilDate.get(), zoneId);"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":299,"author":{"gitId":"-"},"content":"                untilDate \u003d (isSinceDateProvided \u0026\u0026 isPeriodProvided)"},{"lineNumber":300,"author":{"gitId":"-"},"content":"                        ? TimeUtil.getDatePlusNDays(cliSinceDate, zoneId, cliPeriod.get())"},{"lineNumber":301,"author":{"gitId":"-"},"content":"                        : currentDate;"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"niqiukun"},"content":"            untilDate \u003d untilDate.compareTo(currentDate) \u003c 0"},{"lineNumber":305,"author":{"gitId":"niqiukun"},"content":"                    ? untilDate"},{"lineNumber":306,"author":{"gitId":"niqiukun"},"content":"                    : currentDate;"},{"lineNumber":307,"author":{"gitId":"-"},"content":""},{"lineNumber":308,"author":{"gitId":"-"},"content":"            LogsManager.setLogFolderLocation(outputFolderPath);"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"            TimeUtil.verifySinceDateIsValid(sinceDate);"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            TimeUtil.verifyDatesRangeIsCorrect(sinceDate, untilDate);"},{"lineNumber":312,"author":{"gitId":"-"},"content":""},{"lineNumber":313,"author":{"gitId":"Tejas2805"},"content":"            if (reportFolderPath !\u003d null \u0026\u0026 !reportFolderPath.equals(EMPTY_PATH)"},{"lineNumber":314,"author":{"gitId":"Tejas2805"},"content":"                    \u0026\u0026 configFolderPath.equals(DEFAULT_CONFIG_PATH) \u0026\u0026 locations \u003d\u003d null) {"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                return new ViewCliArguments(reportFolderPath);"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"-"},"content":"            boolean isAutomaticallyLaunching \u003d reportFolderPath !\u003d null;"},{"lineNumber":319,"author":{"gitId":"-"},"content":""},{"lineNumber":320,"author":{"gitId":"-"},"content":"            if (isAutomaticallyLaunching \u0026\u0026 !reportFolderPath.equals(EMPTY_PATH)) {"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                logger.info(String.format(\"Ignoring argument \u0027%s\u0027 for --view.\", reportFolderPath.toString()));"},{"lineNumber":322,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":"            if (locations !\u003d null) {"},{"lineNumber":325,"author":{"gitId":"-"},"content":"                return new LocationsCliArguments(locations, outputFolderPath, assetsFolderPath, sinceDate, untilDate,"},{"lineNumber":326,"author":{"gitId":"-"},"content":"                        isSinceDateProvided, isUntilDateProvided, numCloningThreads, numAnalysisThreads, formats,"},{"lineNumber":327,"author":{"gitId":"-"},"content":"                        shouldIncludeLastModifiedDate, shouldPerformShallowCloning, isAutomaticallyLaunching,"},{"lineNumber":328,"author":{"gitId":"-"},"content":"                        isStandaloneConfigIgnored, zoneId);"},{"lineNumber":329,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"            if (configFolderPath.equals(EMPTY_PATH)) {"},{"lineNumber":332,"author":{"gitId":"-"},"content":"                logger.info(MESSAGE_USING_DEFAULT_CONFIG_PATH);"},{"lineNumber":333,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":334,"author":{"gitId":"-"},"content":"            return new ConfigCliArguments(configFolderPath, outputFolderPath, assetsFolderPath, sinceDate, untilDate,"},{"lineNumber":335,"author":{"gitId":"-"},"content":"                    isSinceDateProvided, isUntilDateProvided, numCloningThreads, numAnalysisThreads, formats,"},{"lineNumber":336,"author":{"gitId":"-"},"content":"                    shouldIncludeLastModifiedDate, shouldPerformShallowCloning, isAutomaticallyLaunching,"},{"lineNumber":337,"author":{"gitId":"-"},"content":"                    isStandaloneConfigIgnored, zoneId, reportConfig);"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        } catch (HelpScreenException hse) {"},{"lineNumber":339,"author":{"gitId":"-"},"content":"            throw hse;"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        } catch (ArgumentParserException ape) {"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            throw new ParseException(getArgumentParser().formatUsage() + ape.getMessage() + \"\\n\");"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"niqiukun":18,"Tejas2805":8,"jamessspanggg":1,"-":317}},{"path":"src/main/java/reposense/parser/AuthorConfigCsvParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.parser;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.apache.commons.csv.CSVRecord;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.model.AuthorConfiguration;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Container for the values parsed from {@code author-config.csv} file."},{"lineNumber":16,"author":{"gitId":"-"},"content":" */"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AuthorConfigCsvParser extends CsvParser\u003cAuthorConfiguration\u003e {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String AUTHOR_CONFIG_FILENAME \u003d \"author-config.csv\";"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Positions of the elements of a line in author-config.csv config file."},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOCATION_HEADER \u003d \"Repository\u0027s Location\";"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String BRANCH_HEADER \u003d \"Branch\";"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String GITHUB_ID_HEADER \u003d \"Author\u0027s GitHub ID\";"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String EMAIL_HEADER \u003d \"Author\u0027s Emails\";"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String DISPLAY_NAME_HEADER \u003d \"Author\u0027s Display Name\";"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String ALIAS_HEADER \u003d \"Author\u0027s Git Author Name\";"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String IGNORE_GLOB_LIST_HEADER \u003d \"Ignore Glob List\";"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AuthorConfigCsvParser(Path csvFilePath) throws IOException {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super(csvFilePath);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Gets the list of headers that are mandatory for verification."},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    protected String[] mandatoryHeaders() {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new String[] {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                GITHUB_ID_HEADER,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Gets the list of optional headers that can be parsed."},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected String[] optionalHeaders() {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new String[] {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                LOCATION_HEADER, BRANCH_HEADER, EMAIL_HEADER, DISPLAY_NAME_HEADER, ALIAS_HEADER,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                IGNORE_GLOB_LIST_HEADER,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Processes the csv file line by line and add created {@code AuthorConfiguration} into {@code results} but"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * skips {@code author} already exists in a {@code AuthorConfiguration} that has same {@code location} and"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code branch}."},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    protected void processLine(List\u003cAuthorConfiguration\u003e results, CSVRecord record)"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throws ParseException {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String location \u003d get(record, LOCATION_HEADER);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String branch \u003d getOrDefault(record, BRANCH_HEADER, AuthorConfiguration.DEFAULT_BRANCH);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String gitHubId \u003d get(record, GITHUB_ID_HEADER);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        List\u003cString\u003e emails \u003d getAsList(record, EMAIL_HEADER);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String displayName \u003d get(record, DISPLAY_NAME_HEADER);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        List\u003cString\u003e aliases \u003d getAsList(record, ALIAS_HEADER);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        List\u003cString\u003e ignoreGlobList \u003d getAsList(record, IGNORE_GLOB_LIST_HEADER);"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d findMatchingAuthorConfiguration(results, location, branch);"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(gitHubId);"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (config.containsAuthor(author)) {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            logger.warning(String.format("},{"lineNumber":78,"author":{"gitId":"-"},"content":"                    \"Skipping author as %s already in repository %s %s\","},{"lineNumber":79,"author":{"gitId":"-"},"content":"                    author.getGitId(), config.getLocation(), config.getBranch()));"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"anubh-v"},"content":"        author.setEmails(new ArrayList\u003c\u003e(emails));"},{"lineNumber":84,"author":{"gitId":"anubh-v"},"content":"        author.setDisplayName(!displayName.isEmpty() ? displayName : author.getGitId());"},{"lineNumber":85,"author":{"gitId":"anubh-v"},"content":"        if (!aliases.isEmpty()) {"},{"lineNumber":86,"author":{"gitId":"anubh-v"},"content":"            author.setAuthorAliases(aliases);"},{"lineNumber":87,"author":{"gitId":"anubh-v"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"anubh-v"},"content":"        if (!ignoreGlobList.isEmpty()) {"},{"lineNumber":89,"author":{"gitId":"anubh-v"},"content":"            author.setIgnoreGlobList(ignoreGlobList);"},{"lineNumber":90,"author":{"gitId":"anubh-v"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"        config.addAuthor(author);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Gets an existing {@code AuthorConfiguration} from {@code results} if {@code location} and {@code branch} matches."},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Otherwise adds a newly created {@code AuthorConfiguration} into {@code results} and returns it."},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @throws InvalidLocationException if {@code location} is invalid."},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private static AuthorConfiguration findMatchingAuthorConfiguration("},{"lineNumber":103,"author":{"gitId":"-"},"content":"            List\u003cAuthorConfiguration\u003e results, String location, String branch) throws InvalidLocationException {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d new AuthorConfiguration(new RepoLocation(location), branch);"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"        for (AuthorConfiguration authorConfig : results) {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (authorConfig.getLocation().equals(config.getLocation())"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                    \u0026\u0026 authorConfig.getBranch().equals(config.getBranch())) {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                return authorConfig;"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"        results.add(config);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return config;"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"anubh-v":9,"-":107}},{"path":"src/main/java/reposense/parser/CsvParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.parser;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"anubh-v"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"anubh-v"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.FileReader;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":15,"author":{"gitId":"anubh-v"},"content":"import java.util.Optional;"},{"lineNumber":16,"author":{"gitId":"anubh-v"},"content":"import java.util.StringJoiner;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.logging.Level;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.apache.commons.csv.CSVFormat;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.apache.commons.csv.CSVRecord;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains CSV parsing related functionalities."},{"lineNumber":29,"author":{"gitId":"-"},"content":" */"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public abstract class CsvParser\u003cT\u003e {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    protected static final String COLUMN_VALUES_SEPARATOR \u003d \";\";"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    protected static final Logger logger \u003d LogsManager.getLogger(CsvParser.class);"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String EMPTY_STRING \u003d \"\";"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String OVERRIDE_KEYWORD \u003d \"override:\";"},{"lineNumber":36,"author":{"gitId":"anubh-v"},"content":"    private static final String MESSAGE_EMPTY_LINE \u003d \"[EMPTY LINE]\";"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_UNABLE_TO_READ_CSV_FILE \u003d \"Unable to read the supplied CSV file.\";"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_MALFORMED_LINE_FORMAT \u003d \"Line %d in CSV file, %s, is malformed.\\n\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Content: %s\";"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_LINE_PARSE_EXCEPTION_FORMAT \u003d \"Error parsing line %d in CSV file, %s.\\n\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Content: %s\\n\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Error: %s\";"},{"lineNumber":43,"author":{"gitId":"anubh-v"},"content":"    private static final String MESSAGE_EMPTY_CSV_FORMAT \u003d \"The CSV file, %s, is empty.\";"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_MANDATORY_HEADER_MISSING \u003d \"Required column header, %s, not found in \""},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"CSV file, %s\";"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_DUPLICATE_COLUMN_HEADER \u003d \"Duplicate columns are present in CSV file, %s.\";"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_COLUMNS_RECOGNIZED \u003d \"Parsed header of CSV file, %s, and recognized columns: \""},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"%s\";"},{"lineNumber":49,"author":{"gitId":"anubh-v"},"content":"    private static final String MESSAGE_ZERO_VALID_CONFIGS \u003d \"No valid configurations in the %s.\";"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private Path csvFilePath;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private Map\u003cString, Integer\u003e headerMap \u003d new HashMap();"},{"lineNumber":53,"author":{"gitId":"anubh-v"},"content":"    private int numOfLinesBeforeFirstRecord \u003d 0;"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws IOException if {@code csvFilePath} is an invalid path."},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public CsvParser(Path csvFilePath) throws IOException {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (csvFilePath \u003d\u003d null || !Files.exists(csvFilePath)) {"},{"lineNumber":60,"author":{"gitId":"anubh-v"},"content":"            throw new FileNotFoundException(\"Csv file does not exist at the given path.\\n\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"                    + \"Use \u0027-help\u0027 to list all the available subcommands and some concept guides.\");"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.csvFilePath \u003d csvFilePath;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"anubh-v"},"content":"     * Parses the csv file associated with this instance of the {@code CsvParser} and returns a {@code List}"},{"lineNumber":69,"author":{"gitId":"anubh-v"},"content":"     * containing the records in this file."},{"lineNumber":70,"author":{"gitId":"anubh-v"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"anubh-v"},"content":"     * @throws IOException if there are errors accessing the given csv file."},{"lineNumber":72,"author":{"gitId":"anubh-v"},"content":"     * @throws InvalidCsvException if the csv is malformed."},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"anubh-v"},"content":"    public List\u003cT\u003e parse() throws IOException, InvalidCsvException {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cT\u003e results \u003d new ArrayList\u003c\u003e();"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Iterable\u003cCSVRecord\u003e records;"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"anubh-v"},"content":"        try (BufferedReader csvReader \u003d new BufferedReader(new FileReader(csvFilePath.toFile()))) {"},{"lineNumber":79,"author":{"gitId":"anubh-v"},"content":"            String[] header \u003d getHeader(csvReader);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                records \u003d CSVFormat.DEFAULT.withIgnoreEmptyLines(false).withHeader(header).withTrim()"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                        .withIgnoreHeaderCase().parse(csvReader);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            } catch (IllegalArgumentException iae) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                throw new InvalidCsvException("},{"lineNumber":85,"author":{"gitId":"-"},"content":"                        String.format(MESSAGE_DUPLICATE_COLUMN_HEADER, csvFilePath.getFileName()));"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"            for (CSVRecord record : records) {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                if (isLineMalformed(record)) {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                    continue;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                try {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                    processLine(results, record);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                } catch (ParseException pe) {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                    logger.warning(String.format(MESSAGE_LINE_PARSE_EXCEPTION_FORMAT, getLineNumber(record),"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                            csvFilePath.getFileName(), getRowContentAsRawString(record), pe.getMessage()));"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                } catch (IllegalArgumentException iae) {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                    logger.log(Level.WARNING, iae.getMessage(), iae);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IOException(MESSAGE_UNABLE_TO_READ_CSV_FILE, ioe);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":105,"author":{"gitId":"anubh-v"},"content":"        if (results.isEmpty()) {"},{"lineNumber":106,"author":{"gitId":"anubh-v"},"content":"            throw new InvalidCsvException(String.format(MESSAGE_ZERO_VALID_CONFIGS, csvFilePath.getFileName()));"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return results;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"anubh-v"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"anubh-v"},"content":"     * Returns the header of a CSV file, which is assumed to be the first non-empty / non-whitespace line in the file."},{"lineNumber":113,"author":{"gitId":"anubh-v"},"content":"     * The line is split into an array of Strings, using the comma symbol as delimiter."},{"lineNumber":114,"author":{"gitId":"anubh-v"},"content":"     *"},{"lineNumber":115,"author":{"gitId":"anubh-v"},"content":"     * @throws IOException if there is an error accessing the file."},{"lineNumber":116,"author":{"gitId":"anubh-v"},"content":"     * @throws InvalidCsvException if the file has only empty or blank lines."},{"lineNumber":117,"author":{"gitId":"anubh-v"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"anubh-v"},"content":"    private String[] getHeader(BufferedReader reader) throws IOException, InvalidCsvException {"},{"lineNumber":119,"author":{"gitId":"anubh-v"},"content":"        String currentLine \u003d \"\";"},{"lineNumber":120,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":121,"author":{"gitId":"anubh-v"},"content":"        // read from file until we encounter a line that is neither blank nor empty"},{"lineNumber":122,"author":{"gitId":"anubh-v"},"content":"        while (currentLine.isEmpty()) {"},{"lineNumber":123,"author":{"gitId":"anubh-v"},"content":"            currentLine \u003d Optional.ofNullable(reader.readLine())"},{"lineNumber":124,"author":{"gitId":"anubh-v"},"content":"                    .map(String::trim)"},{"lineNumber":125,"author":{"gitId":"anubh-v"},"content":"                    .orElseThrow(() -\u003e new InvalidCsvException(String.format("},{"lineNumber":126,"author":{"gitId":"anubh-v"},"content":"                            MESSAGE_EMPTY_CSV_FORMAT, csvFilePath.getFileName())));"},{"lineNumber":127,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":128,"author":{"gitId":"anubh-v"},"content":"            numOfLinesBeforeFirstRecord++;"},{"lineNumber":129,"author":{"gitId":"anubh-v"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"anubh-v"},"content":"        String[] header \u003d currentLine.split(\",\");"},{"lineNumber":131,"author":{"gitId":"anubh-v"},"content":"        validateHeader(header);"},{"lineNumber":132,"author":{"gitId":"anubh-v"},"content":"        return header;"},{"lineNumber":133,"author":{"gitId":"anubh-v"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Returns true if {@code record} does not contain the same number of columns as the header or contains missing"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * values at the mandatory columns in CSV format."},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private boolean isLineMalformed(CSVRecord record) {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!record.isConsistent()) {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            logger.warning(String.format(MESSAGE_MALFORMED_LINE_FORMAT, getLineNumber(record),"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                    csvFilePath.getFileName(), getRowContentAsRawString(record)));"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        for (String header : mandatoryHeaders()) {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            if (get(record, header).isEmpty()) {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                logger.warning(String.format(MESSAGE_MALFORMED_LINE_FORMAT, getLineNumber(record),"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                        csvFilePath.getFileName(), getRowContentAsRawString(record)));"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                return true;"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return false;"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Returns the value of {@code record} at the column with the header {@code header}."},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    protected String get(final CSVRecord record, String header) {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (headerMap.containsKey(header)) {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return record.get(headerMap.get(header)).trim();"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return EMPTY_STRING;"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Returns the value of {@code record} at the column with the header {@code header} if present, or"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * returns {@code defaultValue} otherwise."},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    protected String getOrDefault(final CSVRecord record, String header, String defaultValue) {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return get(record, header).isEmpty() ? defaultValue : get(record, header);"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Returns the value of {@code record} at the column with the header {@code header} as a {@code List},"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * delimited by {@code COLUMN_VALUES_SEPARATOR} if it is in {@code record} and not empty, or"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * returns an empty {@code List} otherwise."},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    protected List\u003cString\u003e getAsList(final CSVRecord record, String header) {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        if (get(record, header).isEmpty()) {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return Collections.emptyList();"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return Arrays.stream(get(record, header).split(COLUMN_VALUES_SEPARATOR))"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                .map(String::trim)"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Returns the values in {@code record} as a list with the {@link CsvParser#OVERRIDE_KEYWORD} prefix removed."},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Returns an empty list if {@code record} at the column with the header {@code header} is empty."},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    protected List\u003cString\u003e getAsListWithoutOverridePrefix(final CSVRecord record, String header) {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        List\u003cString\u003e data \u003d getAsList(record, header);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        if (isElementOverridingStandaloneConfig(record, header)) {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            data.set(0, data.get(0).replaceFirst(OVERRIDE_KEYWORD, \"\"));"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            data.removeIf(String::isEmpty);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        return data;"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"    private long getLineNumber(final CSVRecord record) {"},{"lineNumber":203,"author":{"gitId":"anubh-v"},"content":"        return  record.getRecordNumber() + numOfLinesBeforeFirstRecord;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Returns true if the {@code record} at the column with the header {@code header} is prefixed with"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * the override keyword."},{"lineNumber":209,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    protected boolean isElementOverridingStandaloneConfig(final CSVRecord record, String header) {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return get(record, header).startsWith(OVERRIDE_KEYWORD);"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * Returns the contents of {@code record} as a raw string."},{"lineNumber":216,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    private String getRowContentAsRawString(final CSVRecord record) {"},{"lineNumber":218,"author":{"gitId":"anubh-v"},"content":"        StringJoiner inputRowString \u003d new StringJoiner(\",\");"},{"lineNumber":219,"author":{"gitId":"anubh-v"},"content":"        for (String value : record) {"},{"lineNumber":220,"author":{"gitId":"anubh-v"},"content":"            inputRowString.add(value);"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":222,"author":{"gitId":"anubh-v"},"content":"        String contentAsString \u003d inputRowString.toString();"},{"lineNumber":223,"author":{"gitId":"anubh-v"},"content":"        if (contentAsString.trim().isEmpty()) {"},{"lineNumber":224,"author":{"gitId":"anubh-v"},"content":"            contentAsString \u003d MESSAGE_EMPTY_LINE;"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":226,"author":{"gitId":"anubh-v"},"content":"        return contentAsString;"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * Generates map of column header to position number for input {@code possibleHeader}."},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * @throws InvalidCsvException if {@code possibleHeader} does not contain all the mandatory headers."},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":233,"author":{"gitId":"anubh-v"},"content":"    private void validateHeader(String[] possibleHeader) throws InvalidCsvException {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        int headerSize \u003d possibleHeader.length;"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c headerSize; i++) {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            String possible \u003d possibleHeader[i].trim();"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            for (String parsedHeader : mandatoryAndOptionalHeaders()) {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                if (possible.equalsIgnoreCase(parsedHeader)) {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    headerMap.put(parsedHeader, i);"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        for (String mandatory : mandatoryHeaders()) {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            if (!headerMap.containsKey(mandatory)) {"},{"lineNumber":246,"author":{"gitId":"anubh-v"},"content":"                throw new InvalidCsvException(String.format("},{"lineNumber":247,"author":{"gitId":"-"},"content":"                        MESSAGE_MANDATORY_HEADER_MISSING, mandatory, csvFilePath.getFileName()));"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":249,"author":{"gitId":"anubh-v"},"content":"        }"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        logger.info(String.format(MESSAGE_COLUMNS_RECOGNIZED, csvFilePath.getFileName(),"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                String.join(\",  \", headerMap.keySet())));"},{"lineNumber":252,"author":{"gitId":"anubh-v"},"content":"    }"},{"lineNumber":253,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":255,"author":{"gitId":"-"},"content":"     * Gets the list of headers that are mandatory for verification."},{"lineNumber":256,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    protected abstract String[] mandatoryHeaders();"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":260,"author":{"gitId":"-"},"content":"     * Gets the list of optional headers that can be parsed."},{"lineNumber":261,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    protected abstract String[] optionalHeaders();"},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":265,"author":{"gitId":"-"},"content":"     * Gets the list of all mandatory and optional headers that can be parsed."},{"lineNumber":266,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    protected List\u003cString\u003e mandatoryAndOptionalHeaders() {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        return Stream.concat(Arrays.stream(mandatoryHeaders()), Arrays.stream(optionalHeaders()))"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":271,"author":{"gitId":"-"},"content":""},{"lineNumber":272,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":273,"author":{"gitId":"-"},"content":"     * Processes the csv file line by line."},{"lineNumber":274,"author":{"gitId":"-"},"content":"     * All CsvParsers must use {@link CsvParser#get}, {@link CsvParser#getOrDefault},"},{"lineNumber":275,"author":{"gitId":"-"},"content":"     * {@link CsvParser#getAsList} or {@link CsvParser#getAsListWithoutOverridePrefix} to read contents in"},{"lineNumber":276,"author":{"gitId":"-"},"content":"     * {@code record} and add created objects into {@code results}."},{"lineNumber":277,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    protected abstract void processLine(List\u003cT\u003e results, final CSVRecord record) throws ParseException;"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"anubh-v":57,"-":222}},{"path":"src/main/java/reposense/parser/InvalidCsvException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anubh-v"},"content":"package reposense.parser;"},{"lineNumber":2,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":3,"author":{"gitId":"anubh-v"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"anubh-v"},"content":" * Signals that there is a major error in a CSV file (e.g. wrong number of columns, zero valid records)."},{"lineNumber":5,"author":{"gitId":"anubh-v"},"content":" */"},{"lineNumber":6,"author":{"gitId":"anubh-v"},"content":"public class InvalidCsvException extends Exception {"},{"lineNumber":7,"author":{"gitId":"anubh-v"},"content":"    public InvalidCsvException(String message) {"},{"lineNumber":8,"author":{"gitId":"anubh-v"},"content":"        super(message);"},{"lineNumber":9,"author":{"gitId":"anubh-v"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"anubh-v"},"content":"}"}],"authorContributionMap":{"anubh-v":10}},{"path":"src/main/java/reposense/parser/PeriodArgumentType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niqiukun"},"content":"package reposense.parser;"},{"lineNumber":2,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":3,"author":{"gitId":"niqiukun"},"content":"import java.util.Optional;"},{"lineNumber":4,"author":{"gitId":"niqiukun"},"content":"import java.util.regex.Pattern;"},{"lineNumber":5,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":6,"author":{"gitId":"niqiukun"},"content":"import net.sourceforge.argparse4j.inf.Argument;"},{"lineNumber":7,"author":{"gitId":"niqiukun"},"content":"import net.sourceforge.argparse4j.inf.ArgumentParser;"},{"lineNumber":8,"author":{"gitId":"niqiukun"},"content":"import net.sourceforge.argparse4j.inf.ArgumentParserException;"},{"lineNumber":9,"author":{"gitId":"niqiukun"},"content":"import net.sourceforge.argparse4j.inf.ArgumentType;"},{"lineNumber":10,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":11,"author":{"gitId":"niqiukun"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"niqiukun"},"content":" * Verifies and parses a string-formatted period to an integer."},{"lineNumber":13,"author":{"gitId":"niqiukun"},"content":" */"},{"lineNumber":14,"author":{"gitId":"niqiukun"},"content":"public class PeriodArgumentType implements ArgumentType\u003cOptional\u003cInteger\u003e\u003e {"},{"lineNumber":15,"author":{"gitId":"niqiukun"},"content":"    private static final String PARSE_EXCEPTION_MESSAGE_NOT_IN_NUMERIC \u003d"},{"lineNumber":16,"author":{"gitId":"niqiukun"},"content":"            \"Invalid format. Period must be in the format of nd (n days) or nw (n weeks), \""},{"lineNumber":17,"author":{"gitId":"niqiukun"},"content":"            + \"where n is a number greater than 0.\";"},{"lineNumber":18,"author":{"gitId":"niqiukun"},"content":"    private static final String PARSE_EXCEPTION_MESSAGE_SMALLER_THAN_ZERO \u003d"},{"lineNumber":19,"author":{"gitId":"niqiukun"},"content":"            \"Invalid format. Period must be greater than 0.\";"},{"lineNumber":20,"author":{"gitId":"niqiukun"},"content":"    private static final String PARSE_EXCEPTION_MESSAGE_NUMBER_TOO_LARGE \u003d"},{"lineNumber":21,"author":{"gitId":"niqiukun"},"content":"            \"Invalid format. Input number may be too large.\";"},{"lineNumber":22,"author":{"gitId":"niqiukun"},"content":"    private static final Pattern PERIOD_PATTERN \u003d Pattern.compile(\"[0-9]+[dw]\");"},{"lineNumber":23,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":24,"author":{"gitId":"niqiukun"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"niqiukun"},"content":"    public Optional\u003cInteger\u003e convert(ArgumentParser parser, Argument arg, String value) throws ArgumentParserException {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            return parse(value);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            throw new ArgumentParserException(pe.getMessage(), parser);"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"niqiukun"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * This function parses a {@code period} String and returns an Integer representing the number of days."},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Optional\u003cInteger\u003e parse(String period) throws ParseException {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!PERIOD_PATTERN.matcher(period).matches()) {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(PARSE_EXCEPTION_MESSAGE_NOT_IN_NUMERIC, period));"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        int multiplier \u003d period.substring(period.length() - 1).equals(\"d\") ? 1 : 7;"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"niqiukun"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            int convertedValue \u003d Integer.parseInt(period.substring(0, period.length() - 1)) * multiplier;"},{"lineNumber":45,"author":{"gitId":"niqiukun"},"content":"            if (convertedValue \u003c\u003d 0) {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                throw new ParseException(String.format(PARSE_EXCEPTION_MESSAGE_SMALLER_THAN_ZERO, period));"},{"lineNumber":47,"author":{"gitId":"niqiukun"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":49,"author":{"gitId":"niqiukun"},"content":"            return Optional.of(convertedValue);"},{"lineNumber":50,"author":{"gitId":"niqiukun"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(PARSE_EXCEPTION_MESSAGE_NUMBER_TOO_LARGE, period));"},{"lineNumber":52,"author":{"gitId":"niqiukun"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"niqiukun"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"niqiukun"},"content":"}"}],"authorContributionMap":{"niqiukun":36,"-":18}},{"path":"src/main/java/reposense/report/ReportGenerator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.report;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.apache.commons.text.StringEscapeUtils.escapeHtml4;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.InputStream;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.StringWriter;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Date;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Iterator;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":21,"author":{"gitId":"anubh-v"},"content":"import java.util.Optional;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.concurrent.CompletableFuture;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.concurrent.ExecutorService;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.concurrent.Executors;"},{"lineNumber":25,"author":{"gitId":"anubh-v"},"content":"import java.util.function.Supplier;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import java.util.logging.Level;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"import com.google.gson.JsonSyntaxException;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"import reposense.RepoSense;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import reposense.authorship.AuthorshipReporter;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import reposense.authorship.model.AuthorshipSummary;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import reposense.commits.CommitsReporter;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitContributionSummary;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import reposense.git.GitClone;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import reposense.git.GitLsTree;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import reposense.git.GitRevParse;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import reposense.git.GitShortlog;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import reposense.git.exception.GitBranchException;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import reposense.git.exception.GitCloneException;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import reposense.git.exception.InvalidFilePathException;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import reposense.model.ReportConfiguration;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import reposense.model.StandaloneConfig;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import reposense.parser.SinceDateArgumentType;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import reposense.parser.StandaloneConfigJsonParser;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import reposense.report.exception.NoAuthorsWithCommitsFoundException;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import reposense.util.ProgressTracker;"},{"lineNumber":56,"author":{"gitId":"jamessspanggg"},"content":"import reposense.util.TimeUtil;"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":59,"author":{"gitId":"-"},"content":" * Contains report generation related functionalities."},{"lineNumber":60,"author":{"gitId":"-"},"content":" */"},{"lineNumber":61,"author":{"gitId":"-"},"content":"public class ReportGenerator {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static final String REPOSENSE_CONFIG_FOLDER \u003d \"_reposense\";"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static final String REPOSENSE_CONFIG_FILE \u003d \"config.json\";"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(ReportGenerator.class);"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    // zip file which contains all the report template files"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static final String TEMPLATE_FILE \u003d \"/templateZip.zip\";"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static final String INDEX_PAGE_TEMPLATE \u003d \"index.html\";"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static final String INDEX_PAGE_DEFAULT_TITLE \u003d \"\u003ctitle\u003eRepoSense Report\u003c/title\u003e\";"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_CONFIG_JSON \u003d \"%s Ignoring the config provided by %s (%s).\";"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_ERROR_CREATING_DIRECTORY \u003d"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            \"Error has occurred while creating repo directory for %s (%s), will skip this repo.\";"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_NO_STANDALONE_CONFIG \u003d \"%s (%s) does not contain a standalone config file.\";"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_IGNORING_STANDALONE_CONFIG \u003d \"Ignoring standalone config file in %s (%s).\";"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_MALFORMED_STANDALONE_CONFIG \u003d \"%s/%s/%s is malformed for %s (%s).\";"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_NO_AUTHORS_SPECIFIED \u003d"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            \"%s (%s) has no authors specified, using all authors by default.\";"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_NO_AUTHORS_WITH_COMMITS_FOUND \u003d"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \"No authors found with commits for %s (%s).\";"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_START_ANALYSIS \u003d \"Analyzing %s (%s)...\";"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_COMPLETE_ANALYSIS \u003d \"Analysis of %s (%s) completed!\";"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_REPORT_GENERATED \u003d \"The report is generated at %s\";"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_BRANCH_DOES_NOT_EXIST \u003d \"Branch %s does not exist in %s! Analysis terminated.\";"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static final String LOG_ERROR_CLONING \u003d \"Failed to clone from %s\";"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static final String LOG_BRANCH_DOES_NOT_EXIST \u003d \"Branch \\\"%s\\\" does not exist.\";"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static final String LOG_BRANCH_CONTAINS_ILLEGAL_FILE_PATH \u003d"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            \"Branch contains file paths with illegal characters and not analyzable.\";"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static final String LOG_ERROR_CLONING_OR_BRANCHING \u003d \"Exception met while cloning or checking out.\";"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static final String LOG_UNEXPECTED_ERROR \u003d \"Unexpected error stack trace for %s:\\n\u003e%s\";"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static Date earliestSinceDate \u003d null;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static ProgressTracker progressTracker \u003d null;"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e assetsFilesWhiteList \u003d"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            Collections.unmodifiableList(Arrays.asList(new String[] {\"favicon.ico\"}));"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Generates the authorship and commits JSON file for each repo in {@code configs} at {@code outputPath}, as"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * well as the summary JSON file of all the repos."},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @return the list of file paths that were generated."},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws IOException if templateZip.zip does not exists in jar file."},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static List\u003cPath\u003e generateReposReport(List\u003cRepoConfiguration\u003e configs, String outputPath, String assetsPath,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            ReportConfiguration reportConfig, String generationDate, Date cliSinceDate, Date untilDate,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            boolean isSinceDateProvided, boolean isUntilDateProvided, int numCloningThreads, int numAnalysisThreads,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Supplier\u003cString\u003e reportGenerationTimeProvider, ZoneId zoneId) throws IOException {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        prepareTemplateFile(reportConfig, outputPath);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (Files.exists(Paths.get(assetsPath))) {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            FileUtil.copyDirectoryContents(assetsPath, outputPath, assetsFilesWhiteList);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"        earliestSinceDate \u003d null;"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        progressTracker \u003d new ProgressTracker(configs.size());"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e reportFoldersAndFiles \u003d cloneAndAnalyzeRepos(configs, outputPath,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                numCloningThreads, numAnalysisThreads);"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Date reportSinceDate \u003d (cliSinceDate.equals(SinceDateArgumentType.ARBITRARY_FIRST_COMMIT_DATE))"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                ? earliestSinceDate : cliSinceDate;"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"anubh-v"},"content":"        Optional\u003cPath\u003e summaryPath \u003d FileUtil.writeJsonFile("},{"lineNumber":124,"author":{"gitId":"-"},"content":"                new SummaryJson(configs, reportConfig, generationDate,"},{"lineNumber":125,"author":{"gitId":"jamessspanggg"},"content":"                        TimeUtil.getZonedDateFromSystemDate(reportSinceDate, zoneId),"},{"lineNumber":126,"author":{"gitId":"jamessspanggg"},"content":"                        TimeUtil.getZonedDateFromSystemDate(untilDate, zoneId), isSinceDateProvided,"},{"lineNumber":127,"author":{"gitId":"anubh-v"},"content":"                        isUntilDateProvided, RepoSense.getVersion(), ErrorSummary.getInstance().getErrorList(),"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                        reportGenerationTimeProvider.get(), zoneId.toString()),"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                getSummaryResultPath(outputPath));"},{"lineNumber":130,"author":{"gitId":"anubh-v"},"content":"        summaryPath.ifPresent(reportFoldersAndFiles::add);"},{"lineNumber":131,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"        logger.info(String.format(MESSAGE_REPORT_GENERATED, outputPath));"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return reportFoldersAndFiles;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"ccyccyccy"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"ccyccyccy"},"content":"     * Copies the template file to the specified {@code outputPath} for the repo report to be generated."},{"lineNumber":139,"author":{"gitId":"ccyccyccy"},"content":"     * @throws IOException if template resource is not found."},{"lineNumber":140,"author":{"gitId":"ccyccyccy"},"content":"     */"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private static void prepareTemplateFile(ReportConfiguration config, String outputPath) throws IOException {"},{"lineNumber":142,"author":{"gitId":"ccyccyccy"},"content":"        InputStream is \u003d RepoSense.class.getResourceAsStream(TEMPLATE_FILE);"},{"lineNumber":143,"author":{"gitId":"ccyccyccy"},"content":"        FileUtil.copyTemplate(is, outputPath);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        setReportConfiguration(config, outputPath);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private static void setReportConfiguration(ReportConfiguration config, String outputPath) throws IOException {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        setLandingPageTitle(outputPath, config.getTitle());"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Set title of template file located at {@code filePath} to {@code pageTitle}"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private static void setLandingPageTitle(String filePath, String pageTitle) throws IOException {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Path indexPagePath \u003d Paths.get(filePath, INDEX_PAGE_TEMPLATE);"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        String line \u003d new String(Files.readAllBytes(indexPagePath));"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String newLine \u003d line.replaceAll(INDEX_PAGE_DEFAULT_TITLE, \"\u003ctitle\u003e\" + escapeHtml4(pageTitle) + \"\u003c/title\u003e\");"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Files.write(indexPagePath, newLine.getBytes());"},{"lineNumber":159,"author":{"gitId":"ccyccyccy"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"ccyccyccy"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Groups {@code RepoConfiguration} with the same {@code RepoLocation} together so that they are only cloned once."},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    private static Map\u003cRepoLocation, List\u003cRepoConfiguration\u003e\u003e groupConfigsByRepoLocation("},{"lineNumber":165,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e configs) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Map\u003cRepoLocation, List\u003cRepoConfiguration\u003e\u003e repoLocationMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        for (RepoConfiguration config : configs) {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            RepoLocation location \u003d config.getLocation();"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"            if (!repoLocationMap.containsKey(location)) {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                repoLocationMap.put(location, new ArrayList\u003c\u003e());"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            repoLocationMap.get(location).add(config);"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return repoLocationMap;"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Clone, analyze and generate the report for repositories in {@code repoLocationMap}."},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Performs cloning and analysis of each repository in parallel, and generates the report."},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Also removes any configs that failed to clone or analyze from {@code configs}."},{"lineNumber":182,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * By default, runs in multi-threaded mode with {@code numCloningThreads} threads for cloning"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * and {@code numAnalysisThreads} threads for analysis."},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * To turn off multi-threading, run the program with the flags"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * {@code --cloning-threads 1 --analysis-threads 1}."},{"lineNumber":187,"author":{"gitId":"anubh-v"},"content":"     *"},{"lineNumber":188,"author":{"gitId":"anubh-v"},"content":"     * @return A list of paths to the JSON report files generated for each repository."},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private static List\u003cPath\u003e cloneAndAnalyzeRepos(List\u003cRepoConfiguration\u003e configs, String outputPath,"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            int numCloningThreads, int numAnalysisThreads) {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Map\u003cRepoLocation, List\u003cRepoConfiguration\u003e\u003e repoLocationMap \u003d groupConfigsByRepoLocation(configs);"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        List\u003cRepoLocation\u003e repoLocationList \u003d new ArrayList\u003c\u003e(repoLocationMap.keySet());"},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // Fixed thread pools are used to limit the number of threads used by cloning and analysis jobs at any one time"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        ExecutorService cloneExecutor \u003d Executors.newFixedThreadPool(numCloningThreads);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        ExecutorService analyzeExecutor \u003d Executors.newFixedThreadPool(numAnalysisThreads);"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"        List\u003cCompletableFuture\u003cAnalyzeJobOutput\u003e\u003e analyzeJobFutures \u003d new ArrayList\u003c\u003e();"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        for (RepoLocation location : repoLocationList) {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e configsToAnalyze \u003d repoLocationMap.get(location);"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"            // The `CompletableFuture.supplyAsync` method is used to clone the repo in parallel."},{"lineNumber":204,"author":{"gitId":"-"},"content":"            // Note that the `cloneExecutor` is passed as a parameter to ensure that the number of threads used"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            // for cloning is no more than `numCloningThreads`."},{"lineNumber":206,"author":{"gitId":"-"},"content":"            CompletableFuture\u003cCloneJobOutput\u003e cloneFuture \u003d CompletableFuture.supplyAsync(() -\u003e"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                    cloneRepo(configsToAnalyze.get(0), location), cloneExecutor);"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"            // The `thenApplyAsync` method is used to analyze the cloned repo in parallel."},{"lineNumber":210,"author":{"gitId":"-"},"content":"            // This ensures that the analysis job for each repo will only be run after the repo has been cloned."},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // Note that the `analyzeExecutor` is passed as a parameter to ensure that the number of threads used"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            // for analysis is no more than `numAnalysisThreads`."},{"lineNumber":213,"author":{"gitId":"-"},"content":"            CompletableFuture\u003cAnalyzeJobOutput\u003e analyzeFuture \u003d cloneFuture.thenApplyAsync("},{"lineNumber":214,"author":{"gitId":"-"},"content":"                    cloneJobOutput -\u003e analyzeRepos(outputPath, configsToAnalyze, cloneJobOutput), analyzeExecutor);"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"            analyzeJobFutures.add(analyzeFuture);"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // Next, we collect the list of outputs from all the analyze jobs"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        List\u003cAnalyzeJobOutput\u003e jobOutputs \u003d analyzeJobFutures.stream()"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                .map(CompletableFuture::join)"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"        // Finally, the ExecutorService objects are shut down to prevent memory leaks"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        cloneExecutor.shutdown();"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        analyzeExecutor.shutdown();"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e generatedFiles \u003d jobOutputs.stream()"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                .flatMap(jobOutput -\u003e jobOutput.getFiles().stream())"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"        List\u003cRepoLocation\u003e cloneFailLocations \u003d jobOutputs"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                .filter(jobOutput -\u003e !jobOutput.isCloneSuccessful())"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                .map(jobOutput -\u003e jobOutput.getLocation())"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        cloneFailLocations.forEach(location -\u003e handleCloningFailed(configs, location));"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"        List\u003cAnalysisErrorInfo\u003e analysisErrors \u003d jobOutputs"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                .flatMap(jobOutput -\u003e jobOutput.getAnalyseErrors().stream())"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        analysisErrors.forEach(errorInfo -\u003e"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                handleAnalysisFailed(configs, errorInfo.getFailedConfig(), errorInfo.getErrorMessage()));"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"        RepoCloner repoCloner \u003d new RepoCloner();"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        repoCloner.cleanup();"},{"lineNumber":248,"author":{"gitId":"anubh-v"},"content":"        return generatedFiles;"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * Clones repo at {@code location}."},{"lineNumber":253,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     * @return A {@code CloneJobOutput} object comprising the {@code location} of the repo, whether the cloning was"},{"lineNumber":255,"author":{"gitId":"-"},"content":"     * successful, and the {@code defaultBranch} of the repo."},{"lineNumber":256,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    private static CloneJobOutput cloneRepo(RepoConfiguration config, RepoLocation location) {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        RepoCloner repoCloner \u003d new RepoCloner();"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        repoCloner.cloneBare(config);"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        RepoLocation clonedRepoLocation \u003d repoCloner.getClonedRepoLocation();"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        if (clonedRepoLocation !\u003d null) {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            String defaultBranch \u003d repoCloner.getCurrentRepoDefaultBranch();"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            return new CloneJobOutput(location, defaultBranch);"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            return new CloneJobOutput(location);"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     * Analyzes all repos in {@code configsToAnalyze} and generates their report."},{"lineNumber":271,"author":{"gitId":"anubh-v"},"content":"     *"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     * @return An {@code AnalyzeJobOutput} object comprising the {@code location} of the repo, whether the cloning was"},{"lineNumber":273,"author":{"gitId":"-"},"content":"     * successful, the list of {@code filesGenerated} by the analysis and a list of {@code analysisErrors} encountered."},{"lineNumber":274,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    private static AnalyzeJobOutput analyzeRepos(String outputPath, List\u003cRepoConfiguration\u003e configsToAnalyze,"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            CloneJobOutput cloneJobOutput) {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        RepoLocation location \u003d cloneJobOutput.getLocation();"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        boolean cloneSuccessful \u003d cloneJobOutput.isCloneSuccessful();"},{"lineNumber":279,"author":{"gitId":"-"},"content":""},{"lineNumber":280,"author":{"gitId":"anubh-v"},"content":"        List\u003cPath\u003e generatedFiles \u003d new ArrayList\u003c\u003e();"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        List\u003cAnalysisErrorInfo\u003e analysisErrors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        RepoCloner repoCloner \u003d new RepoCloner();"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        if (!cloneSuccessful) {"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            repoCloner.cleanupRepo(configsToAnalyze.get(0));"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            return new AnalyzeJobOutput(location, cloneSuccessful, generatedFiles, analysisErrors);"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        Iterator\u003cRepoConfiguration\u003e itr \u003d configsToAnalyze.iterator();"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        while (itr.hasNext()) {"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            progressTracker.incrementProgress();"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            RepoConfiguration configToAnalyze \u003d itr.next();"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            configToAnalyze.updateBranch(cloneJobOutput.getDefaultBranch());"},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"-"},"content":"            Path repoReportDirectory \u003d Paths.get(outputPath, configToAnalyze.getOutputFolderName());"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            logger.info("},{"lineNumber":295,"author":{"gitId":"-"},"content":"                    String.format(progressTracker.getProgress() + \" \""},{"lineNumber":296,"author":{"gitId":"-"},"content":"                            + MESSAGE_START_ANALYSIS, configToAnalyze.getLocation(), configToAnalyze.getBranch()));"},{"lineNumber":297,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":298,"author":{"gitId":"-"},"content":"                GitRevParse.assertBranchExists(configToAnalyze, FileUtil.getBareRepoPath(configToAnalyze));"},{"lineNumber":299,"author":{"gitId":"-"},"content":"                GitLsTree.validateFilePaths(configToAnalyze, FileUtil.getBareRepoPath(configToAnalyze));"},{"lineNumber":300,"author":{"gitId":"-"},"content":"                GitClone.cloneFromBareAndUpdateBranch(Paths.get(FileUtil.REPOS_ADDRESS), configToAnalyze);"},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"-"},"content":"                FileUtil.createDirectory(repoReportDirectory);"},{"lineNumber":303,"author":{"gitId":"anubh-v"},"content":"                generatedFiles.addAll(analyzeRepo(configToAnalyze, repoReportDirectory.toString()));"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            } catch (IOException ioe) {"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                String logMessage \u003d String.format(MESSAGE_ERROR_CREATING_DIRECTORY,"},{"lineNumber":306,"author":{"gitId":"-"},"content":"                        configToAnalyze.getLocation(), configToAnalyze.getBranch());"},{"lineNumber":307,"author":{"gitId":"-"},"content":"                logger.log(Level.WARNING, logMessage, ioe);"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            } catch (GitBranchException gbe) {"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                logger.log(Level.SEVERE, String.format(MESSAGE_BRANCH_DOES_NOT_EXIST,"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                        configToAnalyze.getBranch(), configToAnalyze.getLocation()), gbe);"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                analysisErrors.add(new AnalysisErrorInfo(configToAnalyze,"},{"lineNumber":312,"author":{"gitId":"-"},"content":"                        String.format(LOG_BRANCH_DOES_NOT_EXIST, configToAnalyze.getBranch())));"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            } catch (InvalidFilePathException ipe) {"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                analysisErrors.add(new AnalysisErrorInfo(configToAnalyze, LOG_BRANCH_CONTAINS_ILLEGAL_FILE_PATH));"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            } catch (GitCloneException gce) {"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                analysisErrors.add(new AnalysisErrorInfo(configToAnalyze, LOG_ERROR_CLONING_OR_BRANCHING));"},{"lineNumber":317,"author":{"gitId":"-"},"content":"            } catch (NoAuthorsWithCommitsFoundException nafe) {"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                logger.log(Level.WARNING, String.format(MESSAGE_NO_AUTHORS_WITH_COMMITS_FOUND,"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                        configToAnalyze.getLocation(), configToAnalyze.getBranch()));"},{"lineNumber":320,"author":{"gitId":"anubh-v"},"content":"                generatedFiles.addAll(generateEmptyRepoReport(repoReportDirectory.toString(),"},{"lineNumber":321,"author":{"gitId":"anubh-v"},"content":"                        Author.NAME_NO_AUTHOR_WITH_COMMITS_FOUND));"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                generateEmptyRepoReport(repoReportDirectory.toString(), Author.NAME_NO_AUTHOR_WITH_COMMITS_FOUND);"},{"lineNumber":323,"author":{"gitId":"-"},"content":"            } catch (Exception e) {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                StringWriter sw \u003d new StringWriter();"},{"lineNumber":325,"author":{"gitId":"-"},"content":"                e.printStackTrace(new PrintWriter(sw));"},{"lineNumber":326,"author":{"gitId":"-"},"content":"                logger.log(Level.SEVERE, sw.toString());"},{"lineNumber":327,"author":{"gitId":"-"},"content":"                analysisErrors.add(new AnalysisErrorInfo(configToAnalyze,"},{"lineNumber":328,"author":{"gitId":"-"},"content":"                        String.format(LOG_UNEXPECTED_ERROR, configToAnalyze.getLocation(), sw.toString())));"},{"lineNumber":329,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        repoCloner.cleanupRepo(configsToAnalyze.get(0));"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        return new AnalyzeJobOutput(location, cloneSuccessful, generatedFiles, analysisErrors);"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":336,"author":{"gitId":"-"},"content":"     * Analyzes repo specified by {@code config} and generates the report."},{"lineNumber":337,"author":{"gitId":"anubh-v"},"content":"     * @return A list of paths to the JSON report files generated for the repo specified by {@code config}."},{"lineNumber":338,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":339,"author":{"gitId":"anubh-v"},"content":"    private static List\u003cPath\u003e analyzeRepo("},{"lineNumber":340,"author":{"gitId":"-"},"content":"            RepoConfiguration config, String repoReportDirectory) throws NoAuthorsWithCommitsFoundException {"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        // preprocess the config and repo"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        updateRepoConfig(config);"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        updateAuthorList(config);"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        updateIgnoreCommitList(config);"},{"lineNumber":345,"author":{"gitId":"-"},"content":""},{"lineNumber":346,"author":{"gitId":"-"},"content":"        CommitContributionSummary commitSummary \u003d CommitsReporter.generateCommitSummary(config);"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        AuthorshipSummary authorshipSummary \u003d AuthorshipReporter.generateAuthorshipSummary(config);"},{"lineNumber":348,"author":{"gitId":"anubh-v"},"content":"        List\u003cPath\u003e generatedFiles \u003d generateIndividualRepoReport(repoReportDirectory, commitSummary, authorshipSummary);"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        logger.info(String.format(MESSAGE_COMPLETE_ANALYSIS, config.getLocation(), config.getBranch()));"},{"lineNumber":350,"author":{"gitId":"anubh-v"},"content":"        return generatedFiles;"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Updates {@code config} with configuration provided by repository if exists."},{"lineNumber":355,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    public static void updateRepoConfig(RepoConfiguration config) {"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        Path configJsonPath \u003d"},{"lineNumber":358,"author":{"gitId":"-"},"content":"                Paths.get(config.getRepoRoot(), REPOSENSE_CONFIG_FOLDER, REPOSENSE_CONFIG_FILE).toAbsolutePath();"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"        if (!Files.exists(configJsonPath)) {"},{"lineNumber":361,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_NO_STANDALONE_CONFIG, config.getLocation(), config.getBranch()));"},{"lineNumber":362,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":364,"author":{"gitId":"-"},"content":""},{"lineNumber":365,"author":{"gitId":"-"},"content":"        if (config.isStandaloneConfigIgnored()) {"},{"lineNumber":366,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_IGNORING_STANDALONE_CONFIG, config.getLocation(), config.getBranch()));"},{"lineNumber":367,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":371,"author":{"gitId":"-"},"content":"            StandaloneConfig standaloneConfig \u003d new StandaloneConfigJsonParser().parse(configJsonPath);"},{"lineNumber":372,"author":{"gitId":"-"},"content":"            config.update(standaloneConfig);"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        } catch (JsonSyntaxException jse) {"},{"lineNumber":374,"author":{"gitId":"-"},"content":"            logger.warning(String.format(MESSAGE_MALFORMED_STANDALONE_CONFIG, config.getDisplayName(),"},{"lineNumber":375,"author":{"gitId":"-"},"content":"                    REPOSENSE_CONFIG_FOLDER, REPOSENSE_CONFIG_FILE, config.getLocation(), config.getBranch()));"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        } catch (IllegalArgumentException iae) {"},{"lineNumber":377,"author":{"gitId":"-"},"content":"            logger.warning(String.format(MESSAGE_INVALID_CONFIG_JSON,"},{"lineNumber":378,"author":{"gitId":"-"},"content":"                    iae.getMessage(), config.getLocation(), config.getBranch()));"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"            throw new AssertionError("},{"lineNumber":381,"author":{"gitId":"-"},"content":"                    \"This exception should not happen as we have performed the file existence check.\");"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":384,"author":{"gitId":"-"},"content":""},{"lineNumber":385,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":386,"author":{"gitId":"-"},"content":"     * Find and update {@code config} with all the author identities if author list is empty."},{"lineNumber":387,"author":{"gitId":"-"},"content":"     * Also removes ignored authors from author list."},{"lineNumber":388,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    private static void updateAuthorList(RepoConfiguration config) throws NoAuthorsWithCommitsFoundException {"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        if (config.getAuthorList().isEmpty()) {"},{"lineNumber":391,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_NO_AUTHORS_SPECIFIED, config.getLocation(), config.getBranch()));"},{"lineNumber":392,"author":{"gitId":"-"},"content":"            List\u003cAuthor\u003e authorList \u003d GitShortlog.getAuthors(config);"},{"lineNumber":393,"author":{"gitId":"-"},"content":""},{"lineNumber":394,"author":{"gitId":"-"},"content":"            if (authorList.isEmpty()) {"},{"lineNumber":395,"author":{"gitId":"-"},"content":"                throw new NoAuthorsWithCommitsFoundException();"},{"lineNumber":396,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":397,"author":{"gitId":"-"},"content":""},{"lineNumber":398,"author":{"gitId":"-"},"content":"            config.setAuthorList(authorList);"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":400,"author":{"gitId":"-"},"content":"        config.removeIgnoredAuthors();"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":402,"author":{"gitId":"-"},"content":""},{"lineNumber":403,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":404,"author":{"gitId":"-"},"content":"     * Updates {@code config} with the exact list of commits if commit ranges are provided."},{"lineNumber":405,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    private static void updateIgnoreCommitList(RepoConfiguration config) {"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        List\u003cCommitHash\u003e updatedIgnoreCommitList \u003d config.getIgnoreCommitList().stream()"},{"lineNumber":408,"author":{"gitId":"-"},"content":"                .flatMap(x -\u003e CommitHash.getHashes(config.getRepoRoot(), config.getBranch(), x))"},{"lineNumber":409,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":410,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(updatedIgnoreCommitList);"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":412,"author":{"gitId":"-"},"content":""},{"lineNumber":413,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":414,"author":{"gitId":"-"},"content":"     * Adds {@code configs} that were not successfully cloned from {@code failedRepoLocation}"},{"lineNumber":415,"author":{"gitId":"-"},"content":"     * into the list of errors in the summary report and removes them from the list of {@code configs}."},{"lineNumber":416,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    private static void handleCloningFailed(List\u003cRepoConfiguration\u003e configs, RepoLocation failedRepoLocation) {"},{"lineNumber":418,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e failedConfigs \u003d configs.stream()"},{"lineNumber":419,"author":{"gitId":"-"},"content":"                .filter(config -\u003e config.getLocation().equals(failedRepoLocation))"},{"lineNumber":420,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        handleFailedConfigs(configs, failedConfigs, String.format(LOG_ERROR_CLONING, failedRepoLocation));"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":423,"author":{"gitId":"-"},"content":""},{"lineNumber":424,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":425,"author":{"gitId":"-"},"content":"     * Adds {@code failedConfig} that failed analysis into the list of errors in the summary report and"},{"lineNumber":426,"author":{"gitId":"-"},"content":"     * removes {@code failedConfig} from the list of {@code configs}."},{"lineNumber":427,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    private static void handleAnalysisFailed(List\u003cRepoConfiguration\u003e configs, RepoConfiguration failedConfig,"},{"lineNumber":429,"author":{"gitId":"-"},"content":"            String errorMessage) {"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        handleFailedConfigs(configs, Collections.singletonList(failedConfig), errorMessage);"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":432,"author":{"gitId":"-"},"content":""},{"lineNumber":433,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":434,"author":{"gitId":"-"},"content":"     * Adds {@code failedConfigs} that failed cloning/analysis into the list of errors in the summary report and"},{"lineNumber":435,"author":{"gitId":"-"},"content":"     * removes {@code failedConfigs} from the list of {@code configs}."},{"lineNumber":436,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":437,"author":{"gitId":"-"},"content":"    private static void handleFailedConfigs("},{"lineNumber":438,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e configs, List\u003cRepoConfiguration\u003e failedConfigs, String errorMessage) {"},{"lineNumber":439,"author":{"gitId":"-"},"content":"        Iterator\u003cRepoConfiguration\u003e itr \u003d configs.iterator();"},{"lineNumber":440,"author":{"gitId":"-"},"content":"        while (itr.hasNext()) {"},{"lineNumber":441,"author":{"gitId":"-"},"content":"            RepoConfiguration config \u003d itr.next();"},{"lineNumber":442,"author":{"gitId":"-"},"content":"            if (failedConfigs.contains(config)) {"},{"lineNumber":443,"author":{"gitId":"-"},"content":"                ErrorSummary.getInstance().addErrorMessage(config.getDisplayName(), errorMessage);"},{"lineNumber":444,"author":{"gitId":"-"},"content":"                itr.remove();"},{"lineNumber":445,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":448,"author":{"gitId":"-"},"content":""},{"lineNumber":449,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":450,"author":{"gitId":"-"},"content":"     * Generates a report at the {@code repoReportDirectory}."},{"lineNumber":451,"author":{"gitId":"anubh-v"},"content":"     * @return A list of paths to the JSON report files generated for this empty report."},{"lineNumber":452,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":453,"author":{"gitId":"anubh-v"},"content":"    private static List\u003cPath\u003e generateEmptyRepoReport(String repoReportDirectory, String displayName) {"},{"lineNumber":454,"author":{"gitId":"-"},"content":"        CommitReportJson emptyCommitReportJson \u003d new CommitReportJson(displayName);"},{"lineNumber":455,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":456,"author":{"gitId":"anubh-v"},"content":"        List\u003cPath\u003e generatedFiles \u003d new ArrayList\u003c\u003e();"},{"lineNumber":457,"author":{"gitId":"anubh-v"},"content":"        FileUtil.writeJsonFile(emptyCommitReportJson, getIndividualCommitsPath(repoReportDirectory))"},{"lineNumber":458,"author":{"gitId":"anubh-v"},"content":"                .ifPresent(generatedFiles::add);"},{"lineNumber":459,"author":{"gitId":"anubh-v"},"content":"        FileUtil.writeJsonFile(Collections.emptyList(), getIndividualAuthorshipPath(repoReportDirectory))"},{"lineNumber":460,"author":{"gitId":"anubh-v"},"content":"                .ifPresent(generatedFiles::add);"},{"lineNumber":461,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":462,"author":{"gitId":"anubh-v"},"content":"        return generatedFiles;"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":464,"author":{"gitId":"-"},"content":""},{"lineNumber":465,"author":{"gitId":"anubh-v"},"content":"    /**"},{"lineNumber":466,"author":{"gitId":"anubh-v"},"content":"     * Generates a report for a single repository at {@code repoReportDirectory}."},{"lineNumber":467,"author":{"gitId":"anubh-v"},"content":"     * @return A list of paths to the JSON report files generated for this report."},{"lineNumber":468,"author":{"gitId":"anubh-v"},"content":"     */"},{"lineNumber":469,"author":{"gitId":"anubh-v"},"content":"    private static List\u003cPath\u003e generateIndividualRepoReport("},{"lineNumber":470,"author":{"gitId":"-"},"content":"            String repoReportDirectory, CommitContributionSummary commitSummary, AuthorshipSummary authorshipSummary) {"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        CommitReportJson commitReportJson \u003d new CommitReportJson(commitSummary, authorshipSummary);"},{"lineNumber":472,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":473,"author":{"gitId":"anubh-v"},"content":"        List\u003cPath\u003e generatedFiles \u003d new ArrayList\u003c\u003e();"},{"lineNumber":474,"author":{"gitId":"anubh-v"},"content":"        FileUtil.writeJsonFile(commitReportJson, getIndividualCommitsPath(repoReportDirectory))"},{"lineNumber":475,"author":{"gitId":"anubh-v"},"content":"                .ifPresent(generatedFiles::add);"},{"lineNumber":476,"author":{"gitId":"anubh-v"},"content":"        FileUtil.writeJsonFile(authorshipSummary.getFileResults(), getIndividualAuthorshipPath(repoReportDirectory))"},{"lineNumber":477,"author":{"gitId":"anubh-v"},"content":"                .ifPresent(generatedFiles::add);"},{"lineNumber":478,"author":{"gitId":"anubh-v"},"content":"        return generatedFiles;"},{"lineNumber":479,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":480,"author":{"gitId":"-"},"content":""},{"lineNumber":481,"author":{"gitId":"-"},"content":"    private static String getSummaryResultPath(String targetFileLocation) {"},{"lineNumber":482,"author":{"gitId":"-"},"content":"        return targetFileLocation + \"/\" + SummaryJson.SUMMARY_JSON_FILE_NAME;"},{"lineNumber":483,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":484,"author":{"gitId":"-"},"content":""},{"lineNumber":485,"author":{"gitId":"-"},"content":"    private static String getIndividualAuthorshipPath(String repoReportDirectory) {"},{"lineNumber":486,"author":{"gitId":"-"},"content":"        return repoReportDirectory + \"/authorship.json\";"},{"lineNumber":487,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":488,"author":{"gitId":"-"},"content":""},{"lineNumber":489,"author":{"gitId":"-"},"content":"    private static String getIndividualCommitsPath(String repoReportDirectory) {"},{"lineNumber":490,"author":{"gitId":"-"},"content":"        return repoReportDirectory + \"/commits.json\";"},{"lineNumber":491,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":492,"author":{"gitId":"-"},"content":""},{"lineNumber":493,"author":{"gitId":"-"},"content":"    public static void setEarliestSinceDate(Date newEarliestSinceDate) {"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        if (earliestSinceDate \u003d\u003d null || newEarliestSinceDate.before(earliestSinceDate)) {"},{"lineNumber":495,"author":{"gitId":"-"},"content":"            earliestSinceDate \u003d newEarliestSinceDate;"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":497,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":498,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ccyccyccy":8,"anubh-v":40,"jamessspanggg":3,"-":447}},{"path":"src/main/java/reposense/report/SummaryJson.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.report;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Date;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import reposense.model.ReportConfiguration;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents the structure of summary.json file in reposense-report folder."},{"lineNumber":12,"author":{"gitId":"-"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class SummaryJson {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String SUMMARY_JSON_FILE_NAME \u003d \"summary.json\";"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String repoSenseVersion;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final String reportGeneratedTime;"},{"lineNumber":18,"author":{"gitId":"anubh-v"},"content":"    private final String reportGenerationTime;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final String zoneId;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final String reportTitle;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final List\u003cRepoConfiguration\u003e repos;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final List\u003cMap\u003cString, String\u003e\u003e errorList;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Date sinceDate;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Date untilDate;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final boolean isSinceDateProvided;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final boolean isUntilDateProvided;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public SummaryJson(List\u003cRepoConfiguration\u003e repos, ReportConfiguration reportConfig, String reportGeneratedTime,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            Date sinceDate, Date untilDate, boolean isSinceDateProvided, boolean isUntilDateProvided,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            String repoSenseVersion, List\u003cMap\u003cString, String\u003e\u003e errorList, String reportGenerationTime, String zoneId) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.repos \u003d repos;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.reportGeneratedTime \u003d reportGeneratedTime;"},{"lineNumber":33,"author":{"gitId":"anubh-v"},"content":"        this.reportGenerationTime \u003d reportGenerationTime;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.reportTitle \u003d reportConfig.getTitle();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.sinceDate \u003d sinceDate;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.untilDate \u003d untilDate;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.isSinceDateProvided \u003d isSinceDateProvided;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.isUntilDateProvided \u003d isUntilDateProvided;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.repoSenseVersion \u003d repoSenseVersion;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.errorList \u003d errorList;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.zoneId \u003d zoneId;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"anubh-v":2,"-":41}},{"path":"src/main/java/reposense/util/FileUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.FileOutputStream;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.InputStream;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.OutputStream;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.ByteBuffer;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.StandardCopyOption;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":18,"author":{"gitId":"anubh-v"},"content":"import java.util.Optional;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.logging.Level;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.zip.ZipEntry;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.zip.ZipInputStream;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.zip.ZipOutputStream;"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"import com.google.gson.Gson;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import com.google.gson.GsonBuilder;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"import reposense.model.FileType;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains file processing related functionalities."},{"lineNumber":35,"author":{"gitId":"-"},"content":" */"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class FileUtil {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String REPOS_ADDRESS \u003d \"repos\";"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    // zip file which contains all the specified file types"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String ZIP_FILE \u003d \"archive.zip\";"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(FileUtil.class);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String GITHUB_API_DATE_FORMAT \u003d \"yyyy-MM-dd\";"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final ByteBuffer buffer \u003d ByteBuffer.allocate(1 \u003c\u003c 11); // 2KB"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String BARE_REPO_SUFFIX \u003d \"_bare\";"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String PARTIAL_REPO_SUFFIX \u003d \"_partial\";"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String SHALLOW_PARTIAL_REPO_SUFFIX \u003d \"_shallow_partial\";"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FILE_PATH \u003d \"\\\"%s\\\" is an invalid file path. Skipping this directory.\";"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_FAIL_TO_ZIP_FILES \u003d"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \"Exception occurred while attempting to zip the report files.\";"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_FAIL_TO_COPY_ASSETS \u003d"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \"Exception occurred while attempting to copy custom assets.\";"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Zips all files of type {@code fileTypes} that are in the directory {@code pathsToZip} into a single file and"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * output it to {@code sourceAndOutputPath}."},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void zipFoldersAndFiles(List\u003cPath\u003e pathsToZip, Path sourceAndOutputPath, String... fileTypes) {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        zipFoldersAndFiles(pathsToZip, sourceAndOutputPath, sourceAndOutputPath, fileTypes);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Zips all files listed in {@code pathsToZip} of type {@code fileTypes} located in the directory"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * {@code sourcePath} into {@code outputPath}."},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static void zipFoldersAndFiles(List\u003cPath\u003e pathsToZip,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            Path sourcePath, Path outputPath, String... fileTypes) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try ("},{"lineNumber":71,"author":{"gitId":"-"},"content":"                FileOutputStream fos \u003d new FileOutputStream(outputPath + File.separator + ZIP_FILE);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                ZipOutputStream zos \u003d new ZipOutputStream(fos)"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            for (Path pathToZip : pathsToZip) {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                List\u003cPath\u003e allPaths \u003d getFilePaths(pathToZip, fileTypes);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                for (Path path : allPaths) {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                    String filePath \u003d sourcePath.relativize(path.toAbsolutePath()).toString();"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                    String zipEntry \u003d Files.isDirectory(path) ? filePath + File.separator : filePath;"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                    zos.putNextEntry(new ZipEntry(zipEntry.replace(\"\\\\\", \"/\")));"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                    if (Files.isRegularFile(path)) {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                        Files.copy(path, zos);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                    zos.closeEntry();"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            logger.severe(MESSAGE_FAIL_TO_ZIP_FILES);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Writes the JSON file representing the {@code object} at the given {@code path}."},{"lineNumber":93,"author":{"gitId":"anubh-v"},"content":"     * @return An Optional containing the Path to the JSON file, or an empty Optional"},{"lineNumber":94,"author":{"gitId":"anubh-v"},"content":"     *         if there was an error while writing the JSON file."},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"anubh-v"},"content":"    public static Optional\u003cPath\u003e writeJsonFile(Object object, String path) {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Gson gson \u003d new GsonBuilder()"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .setDateFormat(GITHUB_API_DATE_FORMAT)"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .registerTypeAdapter(FileType.class, new FileType.FileTypeSerializer())"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .create();"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String result \u003d gson.toJson(object);"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"        try (PrintWriter out \u003d new PrintWriter(path)) {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            out.print(result);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            out.print(\"\\n\");"},{"lineNumber":106,"author":{"gitId":"anubh-v"},"content":"            return Optional.of(path).map(Paths::get);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            logger.log(Level.SEVERE, e.getMessage(), e);"},{"lineNumber":109,"author":{"gitId":"anubh-v"},"content":"            return Optional.empty();"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Deletes the {@code root} directory."},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @throws IOException if the root path does not exist."},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static void deleteDirectory(String root) throws IOException {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        File rootDirectory \u003d Paths.get(root).toFile();"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (rootDirectory.exists()) {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            for (File file : rootDirectory.listFiles()) {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                if (file.isDirectory()) {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                    deleteDirectory(file.toString());"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                } else {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    file.delete();"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            rootDirectory.delete();"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            if (rootDirectory.exists()) {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                throw new IOException(String.format(\"Fail to delete directory %s\", rootDirectory));"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Unzips the contents of the {@code zipSourcePath} into {@code outputPath}."},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @throws IOException if {@code zipSourcePath} is an invalid path."},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static void unzip(Path zipSourcePath, Path outputPath) throws IOException {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        try (InputStream is \u003d Files.newInputStream(zipSourcePath)) {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            unzip(is, outputPath);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Unzips the contents of the {@code is} into {@code outputPath}."},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @throws IOException if {@code is} refers to an invalid path."},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static void unzip(InputStream is, Path outputPath) throws IOException {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try (ZipInputStream zis \u003d new ZipInputStream(is)) {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            ZipEntry entry;"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            Files.createDirectories(outputPath);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            while ((entry \u003d zis.getNextEntry()) !\u003d null) {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                Path path \u003d Paths.get(outputPath.toString(), entry.getName());"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                // create the directories of the zip directory"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                if (entry.isDirectory()) {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    Files.createDirectories(path.toAbsolutePath());"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    zis.closeEntry();"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    continue;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                if (!Files.exists(path.getParent())) {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                    Files.createDirectories(path.getParent());"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                try (OutputStream output \u003d Files.newOutputStream(path)) {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                    int length;"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                    while ((length \u003d zis.read(buffer.array())) \u003e 0) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                        output.write(buffer.array(), 0, length);"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                zis.closeEntry();"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Copies the template files from {@code sourcePath} to the {@code outputPath}."},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * @throws IOException if {@code is} refers to an invalid path."},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public static void copyTemplate(InputStream is, String outputPath) throws IOException {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        FileUtil.unzip(is, Paths.get(outputPath));"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Copies files from {@code sourcePath} to the {@code outputPath}."},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * @throws IOException if {@code is} refers to an invalid path."},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public static void copyDirectoryContents(String sourcePath, String outputPath) throws IOException {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        copyDirectoryContents(sourcePath, outputPath, null);"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Copies files from {@code sourcePath} to the {@code outputPath}."},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * If {@code whiteList} is provided, only filenames specified by the whitelist will be copied."},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * @throws IOException if {@code is} refers to an invalid path."},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public static void copyDirectoryContents(String sourcePath, String outputPath, List\u003cString\u003e whiteList)"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            throws IOException {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Path source \u003d Paths.get(sourcePath);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Path out \u003d Paths.get(outputPath);"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Files.walk(source, 1).skip(1).forEach(file -\u003e {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            if (whiteList \u003d\u003d null || whiteList !\u003d null \u0026\u0026 whiteList.contains(file.getFileName().toString())) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                try {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                    Files.copy(file, out.resolve(source.relativize(file)), StandardCopyOption.REPLACE_EXISTING);"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                } catch (IOException ioe) {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                    logger.severe(MESSAGE_FAIL_TO_COPY_ASSETS);"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * Creates the {@code dest} directory if it does not exist."},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public static void createDirectory(Path dest) throws IOException {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        Files.createDirectories(dest);"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * Returns the relative path to the bare repo version of {@code config}."},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public static Path getRepoParentFolder(RepoConfiguration config) {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        return Paths.get(FileUtil.REPOS_ADDRESS, config.getRepoFolderName());"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     * Returns the relative path to the bare repo version of {@code config}."},{"lineNumber":226,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public static Path getBareRepoPath(RepoConfiguration config) {"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        return Paths.get(FileUtil.REPOS_ADDRESS,"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                config.getRepoFolderName(), config.getRepoName() + BARE_REPO_SUFFIX);"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * Returns the relative path to the partial bare repo version of {@code config}."},{"lineNumber":234,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public static Path getPartialBareRepoPath(RepoConfiguration config) {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        return Paths.get(FileUtil.REPOS_ADDRESS,"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                config.getRepoFolderName(), config.getRepoName() + PARTIAL_REPO_SUFFIX);"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     * Returns the relative path to the shallow partial bare repo version of {@code config}."},{"lineNumber":242,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    public static Path getShallowPartialBareRepoPath(RepoConfiguration config) {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        return Paths.get(FileUtil.REPOS_ADDRESS,"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                config.getRepoFolderName(), config.getRepoName() + SHALLOW_PARTIAL_REPO_SUFFIX);"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     * Returns the folder name of the bare repo version of {@code config}."},{"lineNumber":250,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public static String getBareRepoFolderName(RepoConfiguration config) {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        return config.getRepoName() + BARE_REPO_SUFFIX;"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     * Returns the folder name of the partial bare repo version of {@code config}."},{"lineNumber":257,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    public static String getPartialBareRepoFolderName(RepoConfiguration config) {"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        return config.getRepoName() + PARTIAL_REPO_SUFFIX;"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":263,"author":{"gitId":"-"},"content":"     * Returns the folder name of the shallow partial bare repo version of {@code config}."},{"lineNumber":264,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public static String getShallowPartialBareRepoFolderName(RepoConfiguration config) {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        return config.getRepoName() + SHALLOW_PARTIAL_REPO_SUFFIX;"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} is a valid path."},{"lineNumber":271,"author":{"gitId":"-"},"content":"     * Produces log messages when the invalid file path is skipped."},{"lineNumber":272,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            Paths.get(path);"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, String.format(MESSAGE_INVALID_FILE_PATH, path));"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"anubh-v"},"content":"    public static boolean isEmptyFile(String directoryPath, String relativeFilePath) {"},{"lineNumber":284,"author":{"gitId":"anubh-v"},"content":"        return (new File(directoryPath, relativeFilePath).length() \u003d\u003d 0);"},{"lineNumber":285,"author":{"gitId":"anubh-v"},"content":"    }"},{"lineNumber":286,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":288,"author":{"gitId":"-"},"content":"     * Returns a list of {@code Path} of {@code fileTypes} contained in the given {@code directoryPath} directory."},{"lineNumber":289,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    private static List\u003cPath\u003e getFilePaths(Path directoryPath, String... fileTypes) throws IOException {"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        return Files.walk(directoryPath)"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                .filter(p -\u003e FileUtil.isFileTypeInPath(p, fileTypes) || Files.isDirectory(p))"},{"lineNumber":293,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":297,"author":{"gitId":"-"},"content":"     * Returns true if the {@code path} contains one of the {@code fileTypes} extension."},{"lineNumber":298,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    private static boolean isFileTypeInPath(Path path, String... fileTypes) {"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        return Arrays.stream(fileTypes).anyMatch(path.toString()::endsWith);"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"anubh-v":10,"-":292}},{"path":"src/main/java/reposense/util/TimeUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamessspanggg"},"content":"package reposense.util;"},{"lineNumber":2,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.text.DateFormat;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":5,"author":{"gitId":"jamessspanggg"},"content":"import java.time.Instant;"},{"lineNumber":6,"author":{"gitId":"jamessspanggg"},"content":"import java.time.ZoneId;"},{"lineNumber":7,"author":{"gitId":"jamessspanggg"},"content":"import java.time.ZoneOffset;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Calendar;"},{"lineNumber":9,"author":{"gitId":"jamessspanggg"},"content":"import java.util.Date;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.parser.ParseException;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.parser.SinceDateArgumentType;"},{"lineNumber":16,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":17,"author":{"gitId":"jamessspanggg"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"jamessspanggg"},"content":" * Contains time related functionalities."},{"lineNumber":19,"author":{"gitId":"jamessspanggg"},"content":" */"},{"lineNumber":20,"author":{"gitId":"jamessspanggg"},"content":"public class TimeUtil {"},{"lineNumber":21,"author":{"gitId":"jamessspanggg"},"content":"    private static Long startTime;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String DATE_FORMAT_REGEX \u003d"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \"^((0[1-9]|[12][0-9]|3[01])\\\\/(0[1-9]|1[012])\\\\/(19|2[0-9])[0-9]{2})\";"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final DateFormat CLI_ARGS_DATE_FORMAT \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_SINCE_DATE_LATER_THAN_UNTIL_DATE \u003d"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \"\\\"Since Date\\\" cannot be later than \\\"Until Date\\\".\";"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_SINCE_DATE_LATER_THAN_TODAY_DATE \u003d"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"\\\"Since Date\\\" must not be later than today\u0027s date.\";"},{"lineNumber":29,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":30,"author":{"gitId":"jamessspanggg"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"jamessspanggg"},"content":"     * Sets the {@code startTime} to be the current time"},{"lineNumber":32,"author":{"gitId":"jamessspanggg"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"jamessspanggg"},"content":"    public static void startTimer() {"},{"lineNumber":34,"author":{"gitId":"jamessspanggg"},"content":"        startTime \u003d System.nanoTime();"},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":"     * Returns the formatted elapsed time from {@code startTime} until current time"},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"anubh-v"},"content":"    public static String getElapsedTime() {"},{"lineNumber":41,"author":{"gitId":"jamessspanggg"},"content":"        long endTime \u003d System.nanoTime();"},{"lineNumber":42,"author":{"gitId":"jamessspanggg"},"content":"        double elapsedTime \u003d (double) (endTime - startTime) / 1_000_000_000.0;"},{"lineNumber":43,"author":{"gitId":"jamessspanggg"},"content":"        int elapsedHours \u003d (int) elapsedTime / 3600;"},{"lineNumber":44,"author":{"gitId":"jamessspanggg"},"content":"        int elapsedMinutes \u003d (int) (elapsedTime % 3600) / 60;"},{"lineNumber":45,"author":{"gitId":"jamessspanggg"},"content":"        double elapsedSeconds \u003d elapsedTime % 60;"},{"lineNumber":46,"author":{"gitId":"anubh-v"},"content":"        String formattedElapsedTime \u003d \"\";"},{"lineNumber":47,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":48,"author":{"gitId":"jamessspanggg"},"content":"        if (elapsedHours \u003e 0) {"},{"lineNumber":49,"author":{"gitId":"anubh-v"},"content":"            formattedElapsedTime +\u003d String.format(\" %d hour(s)\", elapsedHours);"},{"lineNumber":50,"author":{"gitId":"jamessspanggg"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":52,"author":{"gitId":"jamessspanggg"},"content":"        if (elapsedMinutes \u003e 0) {"},{"lineNumber":53,"author":{"gitId":"anubh-v"},"content":"            formattedElapsedTime +\u003d String.format(\" %d minute(s)\", elapsedMinutes);"},{"lineNumber":54,"author":{"gitId":"jamessspanggg"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":56,"author":{"gitId":"anubh-v"},"content":"        formattedElapsedTime +\u003d String.format(\" %.2f second(s)\", elapsedSeconds);"},{"lineNumber":57,"author":{"gitId":"anubh-v"},"content":"        return formattedElapsedTime;"},{"lineNumber":58,"author":{"gitId":"anubh-v"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":60,"author":{"gitId":"anubh-v"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"anubh-v"},"content":"     * Returns the formatted elapsed time from {@code startTime} until current time,"},{"lineNumber":62,"author":{"gitId":"anubh-v"},"content":"     * with an additional explanatory string."},{"lineNumber":63,"author":{"gitId":"anubh-v"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"anubh-v"},"content":"    public static String getElapsedTimeMessage() {"},{"lineNumber":65,"author":{"gitId":"anubh-v"},"content":"        return \"Elapsed processing time:\" + getElapsedTime();"},{"lineNumber":66,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":68,"author":{"gitId":"jamessspanggg"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"jamessspanggg"},"content":"     * Get the raw offset in milliseconds for the {@code zoneId} timezone compared to UTC."},{"lineNumber":70,"author":{"gitId":"jamessspanggg"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"jamessspanggg"},"content":"    public static int getZoneRawOffset(ZoneId zoneId) {"},{"lineNumber":72,"author":{"gitId":"jamessspanggg"},"content":"        Instant now \u003d Instant.now();"},{"lineNumber":73,"author":{"gitId":"jamessspanggg"},"content":"        ZoneOffset zoneOffset \u003d zoneId.getRules().getOffset(now);"},{"lineNumber":74,"author":{"gitId":"jamessspanggg"},"content":"        return zoneOffset.getTotalSeconds() * 1000;"},{"lineNumber":75,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":77,"author":{"gitId":"jamessspanggg"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"jamessspanggg"},"content":"     * Get the {@code current} date that is in the system\u0027s timezone into the {@code zoneId} timezone."},{"lineNumber":79,"author":{"gitId":"jamessspanggg"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"jamessspanggg"},"content":"    public static Date getZonedDateFromSystemDate(Date current, ZoneId zoneId) {"},{"lineNumber":81,"author":{"gitId":"jamessspanggg"},"content":"        int zoneRawOffset \u003d getZoneRawOffset(zoneId);"},{"lineNumber":82,"author":{"gitId":"jamessspanggg"},"content":"        int systemRawOffset \u003d getZoneRawOffset(ZoneId.systemDefault());"},{"lineNumber":83,"author":{"gitId":"jamessspanggg"},"content":"        return new Date(current.getTime() + zoneRawOffset - systemRawOffset);"},{"lineNumber":84,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns a {@code Date} that is set to midnight for the given {@code zoneId}."},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Date getZonedSinceDate(Date sinceDate, ZoneId zoneId) {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (sinceDate.equals(SinceDateArgumentType.ARBITRARY_FIRST_COMMIT_DATE)) {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return sinceDate;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"        int zoneRawOffset \u003d getZoneRawOffset(zoneId);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        int systemRawOffset \u003d getZoneRawOffset(ZoneId.systemDefault());"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Calendar cal \u003d new Calendar"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .Builder()"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .setInstant(sinceDate.getTime())"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        cal.set(Calendar.HOUR_OF_DAY, 0);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MINUTE, 0);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        cal.set(Calendar.SECOND, 0);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MILLISECOND, 0);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        cal.add(Calendar.MILLISECOND, systemRawOffset - zoneRawOffset);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return cal.getTime();"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Returns a {@code Date} that is set to 23:59:59 for the given {@code zoneId}."},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static Date getZonedUntilDate(Date untilDate, ZoneId zoneId) {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        int zoneRawOffset \u003d getZoneRawOffset(zoneId);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        int systemRawOffset \u003d getZoneRawOffset(ZoneId.systemDefault());"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Calendar cal \u003d new Calendar"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .Builder()"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .setInstant(untilDate.getTime())"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        cal.set(Calendar.HOUR_OF_DAY, 23);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MINUTE, 59);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        cal.set(Calendar.SECOND, 59);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MILLISECOND, 0);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        cal.add(Calendar.MILLISECOND, systemRawOffset - zoneRawOffset);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return cal.getTime();"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Returns a {@code Date} that is one month before {@code cliUntilDate} (if present) or one month before report"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * generation date otherwise. The time zone is adjusted to the given {@code zoneId}."},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static Date getDateMinusAMonth(Optional\u003cDate\u003e cliUntilDate, ZoneId zoneId) {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Calendar cal \u003d Calendar.getInstance();"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        cliUntilDate.ifPresent(cal::setTime);"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        cal.setTime(getZonedSinceDate(cal.getTime(), zoneId));"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        cal.add(Calendar.MONTH, -1);"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return cal.getTime();"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns a {@code Date} that is {@code numOfDays} before {@code cliUntilDate} (if present) or one month before"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * report generation date otherwise. The time zone is adjusted to the given {@code zoneId}."},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static Date getDateMinusNDays(Optional\u003cDate\u003e cliUntilDate, ZoneId zoneId, int numOfDays) {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Calendar cal \u003d Calendar.getInstance();"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        cliUntilDate.ifPresent(cal::setTime);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        cal.setTime(getZonedSinceDate(cal.getTime(), zoneId));"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        cal.add(Calendar.DATE, -numOfDays + 1);"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return cal.getTime();"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Returns a {@code Date} that is {@code numOfDays} after {@code cliSinceDate} (if present). The time zone is"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * adjusted to the given {@code zoneId}."},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public static Date getDatePlusNDays(Optional\u003cDate\u003e cliSinceDate, ZoneId zoneId, int numOfDays) {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Calendar cal \u003d Calendar.getInstance();"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        cliSinceDate.ifPresent(cal::setTime);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        cal.setTime(getZonedUntilDate(cal.getTime(), zoneId));"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        cal.add(Calendar.DATE, numOfDays - 1);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return cal.getTime();"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Returns current date with time set to 23:59:59. The time zone is adjusted to the given {@code zoneId}."},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public static Date getCurrentDate(ZoneId zoneId) {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Calendar cal \u003d Calendar.getInstance();"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        cal.setTime(getZonedUntilDate(cal.getTime(), zoneId));"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return cal.getTime();"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Verifies that {@code sinceDate} is earlier than {@code untilDate}."},{"lineNumber":175,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code sinceDate} supplied is later than {@code untilDate}."},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public static void verifyDatesRangeIsCorrect(Date sinceDate, Date untilDate)"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            throws ParseException {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        if (sinceDate.getTime() \u003e untilDate.getTime()) {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_SINCE_DATE_LATER_THAN_UNTIL_DATE);"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Verifies that {@code sinceDate} is no later than the date of report generation."},{"lineNumber":187,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code sinceDate} supplied is later than date of report generation."},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public static void verifySinceDateIsValid(Date sinceDate) throws ParseException {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Date dateToday \u003d new Date();"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (sinceDate.getTime() \u003e dateToday.getTime()) {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_SINCE_DATE_LATER_THAN_TODAY_DATE);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * Extracts the first substring that matches the {@code DATE_FORMAT_REGEX}."},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public static String extractDate(String date) {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Matcher matcher \u003d Pattern.compile(DATE_FORMAT_REGEX).matcher(date);"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        String extractedDate \u003d date;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        if (matcher.find()) {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            extractedDate \u003d matcher.group(1);"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        return extractedDate;"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Parses the given String as a Date based on the {@code CLI_ARGS_DATE_FORMAT}."},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * Setting setLenient to false prevents unexpected results."},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * Without it, even with \"dd/MM/yyyy HH:mm:ss\" format, 11/31/2017 00:00:00 will be parsed to 11/7/2019 00:00:00."},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public static Date parseDate(String date) throws java.text.ParseException {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        CLI_ARGS_DATE_FORMAT.setLenient(false);"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        return CLI_ARGS_DATE_FORMAT.parse(date);"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"jamessspanggg"},"content":"}"}],"authorContributionMap":{"anubh-v":13,"jamessspanggg":56,"-":149}},{"path":"src/systemtest/java/reposense/ConfigSystemTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.apache.tools.ant.types.Commandline.translateCommandline;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"anubh-v"},"content":"import static reposense.util.TestUtil.loadResource;"},{"lineNumber":6,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"ccyccyccy"},"content":"import org.junit.After;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.Assert;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.Before;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.Test;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.model.AuthorConfiguration;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.model.CliArguments;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.model.ConfigCliArguments;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.model.GroupConfiguration;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.model.ReportConfiguration;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.parser.ArgsParser;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import reposense.parser.AuthorConfigCsvParser;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import reposense.parser.GroupConfigCsvParser;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import reposense.parser.RepoConfigCsvParser;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import reposense.parser.ReportConfigJsonParser;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import reposense.parser.SinceDateArgumentType;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import reposense.report.ErrorSummary;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import reposense.report.ReportGenerator;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import reposense.util.InputBuilder;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class ConfigSystemTest {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String FT_TEMP_DIR \u003d \"ft_temp\";"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String DUMMY_ASSETS_DIR \u003d \"dummy\";"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String EXPECTED_FOLDER \u003d \"expected\";"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e TESTING_FILE_FORMATS \u003d Arrays.asList(\"java\", \"adoc\");"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String TEST_REPORT_GENERATED_TIME \u003d \"Tue Jul 24 17:45:15 SGT 2018\";"},{"lineNumber":45,"author":{"gitId":"anubh-v"},"content":"    private static final String TEST_REPORT_GENERATION_TIME \u003d \"15 second(s)\";"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String TEST_TIME_ZONE \u003d \"Asia/Singapore\";"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Before"},{"lineNumber":49,"author":{"gitId":"yash-chowdhary"},"content":"    public void setUp() throws Exception {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        FileUtil.deleteDirectory(FT_TEMP_DIR);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ErrorSummary.getInstance().clearErrorList();"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"ccyccyccy"},"content":"    @After"},{"lineNumber":55,"author":{"gitId":"yash-chowdhary"},"content":"    public void tearDown() throws Exception {"},{"lineNumber":56,"author":{"gitId":"ccyccyccy"},"content":"        FileUtil.deleteDirectory(FT_TEMP_DIR);"},{"lineNumber":57,"author":{"gitId":"ccyccyccy"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"ccyccyccy"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * System test with a specified until date and a {@link SinceDateArgumentType#FIRST_COMMIT_DATE_SHORTHAND}"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * since date to capture from the first commit."},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":64,"author":{"gitId":"anubh-v"},"content":"    public void testSinceBeginningDateRange() throws Exception {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        generateReport(getInputWithDates(SinceDateArgumentType.FIRST_COMMIT_DATE_SHORTHAND, \"2/3/2019\"), false, false);"},{"lineNumber":66,"author":{"gitId":"anubh-v"},"content":"        Path actualFiles \u003d loadResource(getClass(), \"sinceBeginningDateRange/expected\");"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        verifyAllJson(actualFiles, FT_TEMP_DIR);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":71,"author":{"gitId":"anubh-v"},"content":"    public void test30DaysFromUntilDate() throws Exception {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        generateReport(getInputWithUntilDate(\"1/11/2017\"), false, false);"},{"lineNumber":73,"author":{"gitId":"anubh-v"},"content":"        Path actualFiles \u003d loadResource(getClass(), \"30daysFromUntilDate/expected\");"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        verifyAllJson(actualFiles, FT_TEMP_DIR);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"jamessspanggg"},"content":"     * System test with a specified since date and until date, with the last modified date time in each"},{"lineNumber":79,"author":{"gitId":"jamessspanggg"},"content":"     * line of code."},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":82,"author":{"gitId":"jamessspanggg"},"content":"    public void testDateRangeWithModifiedDateTimeInLines() throws Exception {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        generateReport(getInputWithDates(\"1/9/2017\", \"30/10/2017\"),"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                true, false);"},{"lineNumber":85,"author":{"gitId":"jamessspanggg"},"content":"        Path actualFiles \u003d loadResource(getClass(), \"dateRangeWithModifiedDateTimeInLines/expected\");"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        verifyAllJson(actualFiles, FT_TEMP_DIR);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * System test with a specified until date and a {@link SinceDateArgumentType#FIRST_COMMIT_DATE_SHORTHAND}"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * since date to capture from the first commit, using shallow cloning."},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void testSinceBeginningDateRangeWithShallowCloning() throws Exception {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        generateReport(getInputWithDates(SinceDateArgumentType.FIRST_COMMIT_DATE_SHORTHAND, \"2/3/2019\"),"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                false, true);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Path actualFiles \u003d loadResource(getClass(), \"sinceBeginningDateRange/expected\");"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        verifyAllJson(actualFiles, FT_TEMP_DIR);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void test30DaysFromUntilDateWithShallowCloning() throws Exception {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        generateReport(getInputWithUntilDate(\"1/11/2017\"), false, true);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Path actualFiles \u003d loadResource(getClass(), \"30daysFromUntilDate/expected\");"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        verifyAllJson(actualFiles, FT_TEMP_DIR);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private String getInputWithUntilDate(String untilDate) {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return String.format(\"--until %s\", untilDate);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private String getInputWithDates(String sinceDate, String untilDate) {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return String.format(\"--since %s --until %s\", sinceDate, untilDate);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Generates the testing report to be compared with expected report."},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void generateReport(String inputDates, boolean shouldIncludeModifiedDateInLines, boolean shallowCloning)"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throws Exception {"},{"lineNumber":121,"author":{"gitId":"anubh-v"},"content":"        Path configFolder \u003d loadResource(getClass(), \"repo-config.csv\").getParent();"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", TESTING_FILE_FORMATS);"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"        InputBuilder inputBuilder \u003d new InputBuilder().addConfig(configFolder)"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .addFormats(formats)"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .addTimezone(TEST_TIME_ZONE)"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .add(inputDates);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (shallowCloning) {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            inputBuilder \u003d inputBuilder.addShallowCloning();"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String input \u003d inputBuilder.build();"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e repoConfigs \u003d"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(((ConfigCliArguments) cliArguments).getRepoConfigFilePath()).parse();"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e authorConfigs \u003d"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                new AuthorConfigCsvParser(((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()).parse();"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        List\u003cGroupConfiguration\u003e groupConfigs \u003d"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                new GroupConfigCsvParser(((ConfigCliArguments) cliArguments).getGroupConfigFilePath()).parse();"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        ReportConfiguration reportConfig \u003d new ReportConfigJsonParser().parse(("},{"lineNumber":143,"author":{"gitId":"-"},"content":"                (ConfigCliArguments) cliArguments).getReportConfigFilePath());"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"        RepoConfiguration.merge(repoConfigs, authorConfigs);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        RepoConfiguration.setGroupConfigsToRepos(repoConfigs, groupConfigs);"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"        RepoConfiguration.setFormatsToRepoConfigs(repoConfigs, cliArguments.getFormats());"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        RepoConfiguration.setDatesToRepoConfigs("},{"lineNumber":150,"author":{"gitId":"-"},"content":"                repoConfigs, cliArguments.getSinceDate(), cliArguments.getUntilDate());"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        RepoConfiguration.setZoneIdToRepoConfigs(repoConfigs, cliArguments.getZoneId().toString());"},{"lineNumber":152,"author":{"gitId":"jamessspanggg"},"content":"        RepoConfiguration.setIsLastModifiedDateIncludedToRepoConfigs(repoConfigs, shouldIncludeModifiedDateInLines);"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"        ReportGenerator.generateReposReport(repoConfigs, FT_TEMP_DIR, DUMMY_ASSETS_DIR, reportConfig,"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                TEST_REPORT_GENERATED_TIME, cliArguments.getSinceDate(), cliArguments.getUntilDate(),"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                cliArguments.isSinceDateProvided(), cliArguments.isUntilDateProvided(),"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                cliArguments.getNumCloningThreads(), cliArguments.getNumAnalysisThreads(), () -\u003e"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                TEST_REPORT_GENERATION_TIME, cliArguments.getZoneId());"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Verifies all JSON files in {@code actualDirectory} with {@code expectedDirectory}"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    private void verifyAllJson(Path expectedDirectory, String actualRelative) {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        try (Stream\u003cPath\u003e pathStream \u003d Files.list(expectedDirectory)) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            for (Path filePath : pathStream.collect(Collectors.toList())) {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                if (Files.isDirectory(filePath)) {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                    verifyAllJson(filePath, actualRelative);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                if (filePath.toString().endsWith(\".json\")) {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                    String relativeDirectory \u003d filePath.toAbsolutePath().toString().split(EXPECTED_FOLDER)[1];"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                    assertJson(filePath, relativeDirectory, actualRelative);"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            ioe.printStackTrace();"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Asserts the correctness of given JSON file."},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private void assertJson(Path expectedJson, String expectedPosition, String actualRelative) {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Path actualJson \u003d Paths.get(actualRelative, expectedPosition);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.exists(actualJson));"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            Assert.assertTrue(TestUtil.compareFileContents(expectedJson, actualJson));"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            Assert.fail(e.getMessage());"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ccyccyccy":5,"anubh-v":8,"yash-chowdhary":2,"jamessspanggg":5,"-":172}},{"path":"src/test/java/reposense/authorship/AnnotatorAnalyzerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"anubh-v"},"content":"import static reposense.model.Author.UNKNOWN_AUTHOR;"},{"lineNumber":4,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":5,"author":{"gitId":"anubh-v"},"content":"import java.util.Arrays;"},{"lineNumber":6,"author":{"gitId":"anubh-v"},"content":"import java.util.Calendar;"},{"lineNumber":7,"author":{"gitId":"anubh-v"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitId":"anubh-v"},"content":"import java.util.Date;"},{"lineNumber":9,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":10,"author":{"gitId":"anubh-v"},"content":"import org.junit.Before;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"anubh-v"},"content":"import reposense.authorship.model.FileInfo;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileResult;"},{"lineNumber":15,"author":{"gitId":"anubh-v"},"content":"import reposense.model.Author;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;"},{"lineNumber":17,"author":{"gitId":"anubh-v"},"content":"import reposense.util.TestUtil;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AnnotatorAnalyzerTest extends GitTestTemplate {"},{"lineNumber":20,"author":{"gitId":"anubh-v"},"content":"    private static final Date SINCE_DATE \u003d TestUtil.getSinceDate(2018, Calendar.FEBRUARY, 8);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Date UNTIL_DATE \u003d TestUtil.getUntilDate(2021, Calendar.APRIL, 5);"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String TIME_ZONE_ID_STRING \u003d \"Asia/Singapore\";"},{"lineNumber":23,"author":{"gitId":"anubh-v"},"content":"    private static final Author[] EXPECTED_LINE_AUTHORS_OVERRIDE_AUTHORSHIP_TEST \u003d {"},{"lineNumber":24,"author":{"gitId":"anubh-v"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR, FAKE_AUTHOR, FAKE_AUTHOR,"},{"lineNumber":25,"author":{"gitId":"anubh-v"},"content":"            MAIN_AUTHOR, MAIN_AUTHOR, MAIN_AUTHOR, MAIN_AUTHOR, MAIN_AUTHOR,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR, FAKE_AUTHOR,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR"},{"lineNumber":30,"author":{"gitId":"anubh-v"},"content":"    };"},{"lineNumber":31,"author":{"gitId":"anubh-v"},"content":"    private static final Author[] EXPECTED_LINE_AUTHORS_DISOWN_CODE_TEST \u003d {"},{"lineNumber":32,"author":{"gitId":"anubh-v"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR, FAKE_AUTHOR, FAKE_AUTHOR,"},{"lineNumber":33,"author":{"gitId":"anubh-v"},"content":"            UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR, FAKE_AUTHOR,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR"},{"lineNumber":38,"author":{"gitId":"anubh-v"},"content":"    };"},{"lineNumber":39,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":40,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":41,"author":{"gitId":"anubh-v"},"content":"    @Before"},{"lineNumber":42,"author":{"gitId":"yash-chowdhary"},"content":"    public void before() throws Exception {"},{"lineNumber":43,"author":{"gitId":"anubh-v"},"content":"        super.before();"},{"lineNumber":44,"author":{"gitId":"anubh-v"},"content":"        config.setSinceDate(SINCE_DATE);"},{"lineNumber":45,"author":{"gitId":"anubh-v"},"content":"        config.setUntilDate(UNTIL_DATE);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        config.setZoneId(TIME_ZONE_ID_STRING);"},{"lineNumber":47,"author":{"gitId":"anubh-v"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":50,"author":{"gitId":"anubh-v"},"content":"    public void analyzeAnnotation_authorNamePresentInConfig_overrideAuthorship() {"},{"lineNumber":51,"author":{"gitId":"anubh-v"},"content":"        config.setAuthorList(Arrays.asList(FAKE_AUTHOR, MAIN_AUTHOR));"},{"lineNumber":52,"author":{"gitId":"anubh-v"},"content":"        FileResult fileResult \u003d getFileResult(\"annotationTest.java\");"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_OVERRIDE_AUTHORSHIP_TEST));"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":57,"author":{"gitId":"anubh-v"},"content":"    public void analyzeAnnotation_authorNameNotInConfig_disownCode() {"},{"lineNumber":58,"author":{"gitId":"anubh-v"},"content":"        config.setAuthorList(Collections.singletonList(FAKE_AUTHOR));"},{"lineNumber":59,"author":{"gitId":"anubh-v"},"content":"        FileResult fileResult \u003d getFileResult(\"annotationTest.java\");"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_DISOWN_CODE_TEST));"},{"lineNumber":61,"author":{"gitId":"anubh-v"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":63,"author":{"gitId":"anubh-v"},"content":"    public FileResult getFileResult(String relativePath) {"},{"lineNumber":64,"author":{"gitId":"anubh-v"},"content":"        FileInfo fileInfo \u003d FileInfoExtractor.generateFileInfo(config.getRepoRoot(), relativePath);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return FileInfoAnalyzer.analyzeTextFile(config, fileInfo);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"anubh-v":38,"yash-chowdhary":1,"-":28}},{"path":"src/test/java/reposense/authorship/FileAnalyzerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Calendar;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Date;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.Assert;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.Before;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.Test;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileInfo;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileResult;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.git.GitCheckout;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class FileAnalyzerTest extends GitTestTemplate {"},{"lineNumber":24,"author":{"gitId":"jamessspanggg"},"content":"    private static final Date BLAME_TEST_SINCE_DATE \u003d TestUtil.getSinceDate(2018, Calendar.FEBRUARY, 6);"},{"lineNumber":25,"author":{"gitId":"jamessspanggg"},"content":"    private static final Date BLAME_TEST_UNTIL_DATE \u003d TestUtil.getUntilDate(2018, Calendar.FEBRUARY, 8);"},{"lineNumber":26,"author":{"gitId":"jamessspanggg"},"content":"    private static final Date EMAIL_WITH_ADDITION_TEST_SINCE_DATE \u003d"},{"lineNumber":27,"author":{"gitId":"jamessspanggg"},"content":"            TestUtil.getSinceDate(2019, Calendar.MARCH, 28);"},{"lineNumber":28,"author":{"gitId":"jamessspanggg"},"content":"    private static final Date EMAIL_WITH_ADDITION_TEST_UNTIL_DATE \u003d"},{"lineNumber":29,"author":{"gitId":"jamessspanggg"},"content":"            TestUtil.getUntilDate(2019, Calendar.MARCH, 28);"},{"lineNumber":30,"author":{"gitId":"jamessspanggg"},"content":"    private static final Date MOVED_FILE_SINCE_DATE \u003d TestUtil.getSinceDate(2018, Calendar.FEBRUARY, 7);"},{"lineNumber":31,"author":{"gitId":"jamessspanggg"},"content":"    private static final Date MOVED_FILE_UNTIL_DATE \u003d TestUtil.getUntilDate(2018, Calendar.FEBRUARY, 9);"},{"lineNumber":32,"author":{"gitId":"jamessspanggg"},"content":"    private static final Date SHOULD_INCLUDE_LAST_MODIFIED_IN_LINES_SINCE_DATE \u003d"},{"lineNumber":33,"author":{"gitId":"jamessspanggg"},"content":"            TestUtil.getSinceDate(2018, Calendar.FEBRUARY, 7);"},{"lineNumber":34,"author":{"gitId":"jamessspanggg"},"content":"    private static final Date LAST_MODIFIED_DATE \u003d new Calendar"},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"            .Builder()"},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"            .setDate(2020, 9, 27)"},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":"            .setTimeOfDay(18, 0, 7)"},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":"            .build()"},{"lineNumber":39,"author":{"gitId":"jamessspanggg"},"content":"            .getTime();"},{"lineNumber":40,"author":{"gitId":"jamessspanggg"},"content":"    private static final Date SHOULD_INCLUDE_LAST_MODIFIED_IN_LINES_UNTIL_DATE \u003d"},{"lineNumber":41,"author":{"gitId":"jamessspanggg"},"content":"            TestUtil.getUntilDate(2018, Calendar.FEBRUARY, 9);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Date ANALYZE_BINARY_FILES_SINCE_DATE \u003d"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            TestUtil.getSinceDate(2017, Calendar.JANUARY, 1);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Date ANALYZE_BINARY_FILES_UNTIL_DATE \u003d"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            TestUtil.getUntilDate(2020, Calendar.JANUARY, 1);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String TIME_ZONE_ID_STRING \u003d \"Asia/Singapore\";"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final Author[] EXPECTED_LINE_AUTHORS_BLAME_TEST \u003d {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            MAIN_AUTHOR, MAIN_AUTHOR, FAKE_AUTHOR, MAIN_AUTHOR"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final Author[] EXPECTED_LINE_AUTHORS_MOVED_FILE \u003d {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            MAIN_AUTHOR, MAIN_AUTHOR, MAIN_AUTHOR, MAIN_AUTHOR"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Before"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void before() throws Exception {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super.before();"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        config.setZoneId(TIME_ZONE_ID_STRING);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void blameTest() {"},{"lineNumber":63,"author":{"gitId":"jamessspanggg"},"content":"        config.setSinceDate(BLAME_TEST_SINCE_DATE);"},{"lineNumber":64,"author":{"gitId":"jamessspanggg"},"content":"        config.setUntilDate(BLAME_TEST_UNTIL_DATE);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        FileResult fileResult \u003d getFileResult(\"blameTest.java\");"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_BLAME_TEST));"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void movedFileBlameTest() {"},{"lineNumber":71,"author":{"gitId":"jamessspanggg"},"content":"        config.setSinceDate(MOVED_FILE_SINCE_DATE);"},{"lineNumber":72,"author":{"gitId":"jamessspanggg"},"content":"        config.setUntilDate(MOVED_FILE_UNTIL_DATE);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FileResult fileResult \u003d getFileResult(\"newPos/movedFile.java\");"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_MOVED_FILE));"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":79,"author":{"gitId":"yash-chowdhary"},"content":"    public void blameTestDateRange() throws Exception {"},{"lineNumber":80,"author":{"gitId":"jamessspanggg"},"content":"        GitCheckout.checkoutDate(config.getRepoRoot(), config.getBranch(), BLAME_TEST_UNTIL_DATE);"},{"lineNumber":81,"author":{"gitId":"jamessspanggg"},"content":"        config.setSinceDate(BLAME_TEST_SINCE_DATE);"},{"lineNumber":82,"author":{"gitId":"jamessspanggg"},"content":"        config.setUntilDate(BLAME_TEST_UNTIL_DATE);"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"        FileResult fileResult \u003d getFileResult(\"blameTest.java\");"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_BLAME_TEST));"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":89,"author":{"gitId":"yash-chowdhary"},"content":"    public void movedFileBlameTestDateRange() throws Exception {"},{"lineNumber":90,"author":{"gitId":"jamessspanggg"},"content":"        GitCheckout.checkoutDate(config.getRepoRoot(), config.getBranch(), MOVED_FILE_UNTIL_DATE);"},{"lineNumber":91,"author":{"gitId":"jamessspanggg"},"content":"        config.setSinceDate(MOVED_FILE_SINCE_DATE);"},{"lineNumber":92,"author":{"gitId":"jamessspanggg"},"content":"        config.setUntilDate(MOVED_FILE_UNTIL_DATE);"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"        FileResult fileResult \u003d getFileResult(\"newPos/movedFile.java\");"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_MOVED_FILE));"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void analyzeFile_blameTestFileIgnoreFakeAuthorCommitFullHash_success() {"},{"lineNumber":100,"author":{"gitId":"jamessspanggg"},"content":"        config.setSinceDate(BLAME_TEST_SINCE_DATE);"},{"lineNumber":101,"author":{"gitId":"jamessspanggg"},"content":"        config.setUntilDate(BLAME_TEST_UNTIL_DATE);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        FileInfo fileInfoFull \u003d generateTestFileInfo(\"blameTest.java\");"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(Collections.singletonList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018));"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        FileInfoAnalyzer.analyzeTextFile(config, fileInfoFull);"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"        FileInfo fileInfoShort \u003d generateTestFileInfo(\"blameTest.java\");"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList("},{"lineNumber":108,"author":{"gitId":"-"},"content":"                Collections.singletonList("},{"lineNumber":109,"author":{"gitId":"-"},"content":"                        new CommitHash(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING.substring(0, 8))));"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        FileInfoAnalyzer.analyzeTextFile(config, fileInfoShort);"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Assert.assertEquals(fileInfoFull, fileInfoShort);"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Assert.assertEquals(new Author(MAIN_AUTHOR_NAME), fileInfoFull.getLine(1).getAuthor());"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Assert.assertEquals(new Author(MAIN_AUTHOR_NAME), fileInfoFull.getLine(2).getAuthor());"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Assert.assertEquals(new Author(MAIN_AUTHOR_NAME), fileInfoFull.getLine(4).getAuthor());"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // line added in commit that was ignored"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Assert.assertEquals(Author.UNKNOWN_AUTHOR, fileInfoFull.getLine(3).getAuthor());"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void analyzeFile_blameTestFileIgnoreAllCommit_success() {"},{"lineNumber":124,"author":{"gitId":"jamessspanggg"},"content":"        config.setSinceDate(BLAME_TEST_SINCE_DATE);"},{"lineNumber":125,"author":{"gitId":"jamessspanggg"},"content":"        config.setUntilDate(BLAME_TEST_UNTIL_DATE);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        FileInfo fileInfoFull \u003d generateTestFileInfo(\"blameTest.java\");"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(Arrays.asList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018));"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        FileInfoAnalyzer.analyzeTextFile(config, fileInfoFull);"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"        FileInfo fileInfoShort \u003d generateTestFileInfo(\"blameTest.java\");"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(CommitHash.convertStringsToCommits("},{"lineNumber":133,"author":{"gitId":"-"},"content":"                Arrays.asList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING.substring(0, 8),"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                        MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018_STRING.substring(0, 8))));"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        FileInfoAnalyzer.analyzeTextFile(config, fileInfoShort);"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Assert.assertEquals(fileInfoFull, fileInfoShort);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        fileInfoFull.getLines().forEach(lineInfo -\u003e"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                Assert.assertEquals(Author.UNKNOWN_AUTHOR, lineInfo.getAuthor()));"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void analyzeFile_blameTestFileIgnoreRangedCommit_success() {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        config.setSinceDate(BLAME_TEST_SINCE_DATE);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        config.setUntilDate(BLAME_TEST_UNTIL_DATE);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        FileInfo fileInfoFull \u003d generateTestFileInfo(\"blameTest.java\");"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(FAKE_AUTHOR_BLAME_RANGED_COMMIT_LIST_09022018);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        FileInfoAnalyzer.analyzeTextFile(config, fileInfoFull);"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"        FileInfo fileInfoRanged \u003d generateTestFileInfo(\"blameTest.java\");"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        String rangedCommit \u003d FAKE_AUTHOR_BLAME_RANGED_COMMIT_ONE_06022018_STRING + \"..\""},{"lineNumber":152,"author":{"gitId":"-"},"content":"                + FAKE_AUTHOR_BLAME_RANGED_COMMIT_FOUR_08022018_STRING;"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(CommitHash.getHashes(config.getRepoRoot(), config.getBranch(),"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                new CommitHash(rangedCommit)).collect(Collectors.toList()));"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        FileInfoAnalyzer.analyzeTextFile(config, fileInfoRanged);"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Assert.assertEquals(fileInfoFull, fileInfoRanged);"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        fileInfoFull.getLines().forEach(lineInfo -\u003e"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                Assert.assertEquals(Author.UNKNOWN_AUTHOR, lineInfo.getAuthor()));"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void analyzeFile_blameTestFileIgnoreRangedCommitShort_success() {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        config.setSinceDate(BLAME_TEST_SINCE_DATE);"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        config.setUntilDate(BLAME_TEST_UNTIL_DATE);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        FileInfo fileInfoFull \u003d generateTestFileInfo(\"blameTest.java\");"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(FAKE_AUTHOR_BLAME_RANGED_COMMIT_LIST_09022018);"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        FileInfoAnalyzer.analyzeTextFile(config, fileInfoFull);"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"        FileInfo fileInfoRangedShort \u003d generateTestFileInfo(\"blameTest.java\");"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String rangedCommitShort \u003d FAKE_AUTHOR_BLAME_RANGED_COMMIT_ONE_06022018_STRING.substring(0, 8) + \"..\""},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + FAKE_AUTHOR_BLAME_RANGED_COMMIT_FOUR_08022018_STRING.substring(0, 8);"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(CommitHash.getHashes(config.getRepoRoot(), config.getBranch(),"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                new CommitHash(rangedCommitShort)).collect(Collectors.toList()));"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        FileInfoAnalyzer.analyzeTextFile(config, fileInfoRangedShort);"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Assert.assertEquals(fileInfoFull, fileInfoRangedShort);"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        fileInfoFull.getLines().forEach(lineInfo -\u003e"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                Assert.assertEquals(Author.UNKNOWN_AUTHOR, lineInfo.getAuthor()));"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void analyzeFile_emailWithAdditionOperator_success() {"},{"lineNumber":184,"author":{"gitId":"jamessspanggg"},"content":"        config.setSinceDate(EMAIL_WITH_ADDITION_TEST_SINCE_DATE);"},{"lineNumber":185,"author":{"gitId":"jamessspanggg"},"content":"        config.setUntilDate(EMAIL_WITH_ADDITION_TEST_UNTIL_DATE);"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        config.setBranch(\"617-FileAnalyzerTest-analyzeFile_emailWithAdditionOperator_success\");"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(MINGYI_AUTHOR_NAME);"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"        FileInfo fileInfo \u003d FileInfoExtractor.generateFileInfo(config.getRepoRoot(), \"pr_617.java\");"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        FileInfoAnalyzer.analyzeTextFile(config, fileInfo);"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, fileInfo.getLines().size());"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        fileInfo.getLines().forEach(lineInfo -\u003e Assert.assertEquals(author, lineInfo.getAuthor()));"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":198,"author":{"gitId":"jamessspanggg"},"content":"    @Test"},{"lineNumber":199,"author":{"gitId":"jamessspanggg"},"content":"    public void analyzeFile_shouldIncludeLastModifiedDateInLines_success() {"},{"lineNumber":200,"author":{"gitId":"jamessspanggg"},"content":"        config.setSinceDate(SHOULD_INCLUDE_LAST_MODIFIED_IN_LINES_SINCE_DATE);"},{"lineNumber":201,"author":{"gitId":"jamessspanggg"},"content":"        config.setUntilDate(SHOULD_INCLUDE_LAST_MODIFIED_IN_LINES_UNTIL_DATE);"},{"lineNumber":202,"author":{"gitId":"jamessspanggg"},"content":"        config.setIsLastModifiedDateIncluded(true);"},{"lineNumber":203,"author":{"gitId":"jamessspanggg"},"content":"        config.setBranch(\"1345-FileAnalyzerTest-analyzeFile_shouldIncludeLastModifiedDateInLines_success\");"},{"lineNumber":204,"author":{"gitId":"jamessspanggg"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());"},{"lineNumber":205,"author":{"gitId":"jamessspanggg"},"content":"        Author author \u003d new Author(JAMES_AUTHOR_NAME);"},{"lineNumber":206,"author":{"gitId":"jamessspanggg"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":207,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":208,"author":{"gitId":"jamessspanggg"},"content":"        FileInfo fileInfo \u003d FileInfoExtractor.generateFileInfo(config.getRepoRoot(),"},{"lineNumber":209,"author":{"gitId":"jamessspanggg"},"content":"                \"includeLastModifiedDateInLinesTest.java\");"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        FileInfoAnalyzer.analyzeTextFile(config, fileInfo);"},{"lineNumber":211,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":212,"author":{"gitId":"jamessspanggg"},"content":"        Assert.assertEquals(4, fileInfo.getLines().size());"},{"lineNumber":213,"author":{"gitId":"jamessspanggg"},"content":"        fileInfo.getLines().forEach(lineInfo -\u003e"},{"lineNumber":214,"author":{"gitId":"jamessspanggg"},"content":"                Assert.assertEquals(LAST_MODIFIED_DATE, lineInfo.getLastModifiedDate()));"},{"lineNumber":215,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void analyzeBinaryFile_shouldSetLinesToBeEmpty_success() {"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        config.setSinceDate(ANALYZE_BINARY_FILES_SINCE_DATE);"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        config.setUntilDate(ANALYZE_BINARY_FILES_UNTIL_DATE);"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        config.setBranch(\"728-FileInfoExtractorTest-getNonBinaryFilesList_directoryWithBinaryFiles_success\");"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e binaryFileInfos \u003d FileInfoExtractor.extractBinaryFileInfos(config);"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"        for (FileInfo binaryFileInfo: binaryFileInfos) {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            FileInfoAnalyzer.analyzeBinaryFile(config, binaryFileInfo);"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            Assert.assertEquals(0, binaryFileInfo.getLines().size());"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void analyzeBinaryFile_nonExistingFilePath_success() {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        config.setSinceDate(ANALYZE_BINARY_FILES_SINCE_DATE);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        config.setUntilDate(ANALYZE_BINARY_FILES_UNTIL_DATE);"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        config.setBranch(\"728-FileInfoExtractorTest-getNonBinaryFilesList_directoryWithBinaryFiles_success\");"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());"},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e binaryFileInfos \u003d Arrays.asList(new FileInfo(\"/nonExistingJpgPicture.jpg\"),"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                new FileInfo(\"/nonExistingPngPicture.png\"));"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"        for (FileInfo binaryFileInfo: binaryFileInfos) {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            Assert.assertNull(FileInfoAnalyzer.analyzeBinaryFile(config, binaryFileInfo));"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"yash-chowdhary":2,"jamessspanggg":52,"-":191}},{"path":"src/test/java/reposense/commits/CommitInfoAnalyzerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.commits;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Calendar;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Date;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.GregorianCalendar;"},{"lineNumber":9,"author":{"gitId":"jamessspanggg"},"content":"import java.util.HashMap;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"jamessspanggg"},"content":"import java.util.Map;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.Assert;"},{"lineNumber":14,"author":{"gitId":"jamessspanggg"},"content":"import org.junit.Assume;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.Before;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.Test;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitInfo;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitResult;"},{"lineNumber":20,"author":{"gitId":"jamessspanggg"},"content":"import reposense.commits.model.ContributionPair;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;"},{"lineNumber":23,"author":{"gitId":"jamessspanggg"},"content":"import reposense.model.FileType;"},{"lineNumber":24,"author":{"gitId":"jamessspanggg"},"content":"import reposense.model.FileTypeTest;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;"},{"lineNumber":26,"author":{"gitId":"jamessspanggg"},"content":"import reposense.util.SystemUtil;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommitInfoAnalyzerTest extends GitTestTemplate {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final int NUMBER_EUGENE_COMMIT \u003d 1;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final int NUMBER_MINGYI_COMMIT \u003d 1;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final int NUMBER_EMPTY_MESSAGE_COMMIT \u003d 1;"},{"lineNumber":32,"author":{"gitId":"jamessspanggg"},"content":"    private static final FileType FILETYPE_JAVA \u003d new FileType(\"java\", Collections.singletonList(\"**java\"));"},{"lineNumber":33,"author":{"gitId":"jamessspanggg"},"content":"    private static final FileType FILETYPE_MD \u003d new FileType(\"md\", Collections.singletonList(\"**md\"));"},{"lineNumber":34,"author":{"gitId":"jamessspanggg"},"content":"    private static final FileType FILETYPE_JSON \u003d new FileType(\"json\", Collections.singletonList(\"**json\"));"},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"    private static final FileType FILETYPE_TXT \u003d new FileType(\"txt\", Collections.singletonList(\"**txt\"));"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Before"},{"lineNumber":38,"author":{"gitId":"yash-chowdhary"},"content":"    public void before() throws Exception {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        super.before();"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().clear();"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void analyzeCommits_allAuthorNoIgnoredCommitsNoDateRange_success() {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(MAIN_AUTHOR_NAME, new Author(MAIN_AUTHOR_NAME));"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(FAKE_AUTHOR_NAME, new Author(FAKE_AUTHOR_NAME));"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(EUGENE_AUTHOR_NAME, new Author(EUGENE_AUTHOR_NAME));"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResults \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Assert.assertEquals(commitInfos.size(), commitResults.size());"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void analyzeCommits_fakeMainAuthorNoIgnoredCommitsNoDateRange_success() {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(MAIN_AUTHOR_NAME, new Author(MAIN_AUTHOR_NAME));"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(FAKE_AUTHOR_NAME, new Author(FAKE_AUTHOR_NAME));"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResults \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Assert.assertEquals(commitInfos.size() - NUMBER_EUGENE_COMMIT, commitResults.size());"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void analyzeCommits_eugeneAuthorNoIgnoredCommitsNoDateRange_success() {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(EUGENE_AUTHOR_NAME, new Author(EUGENE_AUTHOR_NAME));"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResults \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Assert.assertEquals(NUMBER_EUGENE_COMMIT, commitResults.size());"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void analyzeCommits_allAuthorSingleCommitIgnoredNoDateRange_success() {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(MAIN_AUTHOR_NAME, new Author(MAIN_AUTHOR_NAME));"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(FAKE_AUTHOR_NAME, new Author(FAKE_AUTHOR_NAME));"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(EUGENE_AUTHOR_NAME, new Author(EUGENE_AUTHOR_NAME));"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(Collections.singletonList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018));"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResultsFull \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList("},{"lineNumber":85,"author":{"gitId":"-"},"content":"                Collections.singletonList("},{"lineNumber":86,"author":{"gitId":"-"},"content":"                        new CommitHash(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING.substring(0, 8))));"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResultsShort \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Assert.assertEquals(commitResultsShort, commitResultsFull);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Assert.assertEquals(commitInfos.size() - 1, commitResultsFull.size());"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void analyzeCommits_allAuthorMultipleCommitIgnoredNoDateRange_success() {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(MAIN_AUTHOR_NAME, new Author(MAIN_AUTHOR_NAME));"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(FAKE_AUTHOR_NAME, new Author(FAKE_AUTHOR_NAME));"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(EUGENE_AUTHOR_NAME, new Author(EUGENE_AUTHOR_NAME));"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList("},{"lineNumber":100,"author":{"gitId":"-"},"content":"                Arrays.asList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018, EUGENE_AUTHOR_README_FILE_COMMIT_07052018));"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResultsFull \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(CommitHash.convertStringsToCommits(Arrays.asList("},{"lineNumber":103,"author":{"gitId":"-"},"content":"                FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING.substring(0, 8),"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                EUGENE_AUTHOR_README_FILE_COMMIT_07052018_STRING.substring(0, 8))));"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResultsShort \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Assert.assertEquals(commitResultsShort, commitResultsFull);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Assert.assertEquals(commitInfos.size() - 2, commitResultsFull.size());"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void analyzeCommits_noCommitMessage_success() {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        config.setBranch(\"empty-commit-message\");"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().clear();"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(YONG_AUTHOR_NAME, new Author(YONG_AUTHOR_NAME));"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResults \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        commitResults.removeIf(s -\u003e !s.getMessageTitle().isEmpty());"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Assert.assertEquals(NUMBER_EMPTY_MESSAGE_COMMIT, commitResults.size());"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void analyzeCommits_emailWithAdditionOperator_success() {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        config.setBranch(\"617-FileAnalyzerTest-analyzeFile_emailWithAdditionOperator_success\");"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(MINGYI_AUTHOR_NAME);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e commitResults \u003d CommitInfoAnalyzer.analyzeCommits(commitInfos, config);"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Assert.assertEquals(NUMBER_MINGYI_COMMIT, commitResults.size());"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":137,"author":{"gitId":"yash-chowdhary"},"content":"    public void analyzeCommits_duplicateAuthorsDuplicateCommits_success() throws Exception {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(FAKE_AUTHOR_NAME);"},{"lineNumber":139,"author":{"gitId":"ang-zeyu"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":140,"author":{"gitId":"jamessspanggg"},"content":"        Map\u003cFileType, ContributionPair\u003e fileTypeAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        fileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(11, 0));"},{"lineNumber":142,"author":{"gitId":"ang-zeyu"},"content":"        expectedCommitResults.add(new CommitResult(author, LATEST_COMMIT_HASH,"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2021-04-05T12:27:03+08:00\"),"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                \"Add test lines for disowned code\","},{"lineNumber":145,"author":{"gitId":"jamessspanggg"},"content":"                \"\", null, fileTypeAndContributionMap));"},{"lineNumber":146,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":147,"author":{"gitId":"ang-zeyu"},"content":"        config.setAuthorList(Arrays.asList(author, author));"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        config.setSinceDate(new GregorianCalendar(2021, Calendar.APRIL, 5).getTime());"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        config.setUntilDate(new GregorianCalendar(2021, Calendar.APRIL, 6).getTime());"},{"lineNumber":150,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":151,"author":{"gitId":"ang-zeyu"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":152,"author":{"gitId":"ang-zeyu"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d CommitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);"},{"lineNumber":153,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":154,"author":{"gitId":"ang-zeyu"},"content":"        Assert.assertEquals(actualCommitInfos.size(), 2);"},{"lineNumber":155,"author":{"gitId":"ang-zeyu"},"content":"        Assert.assertEquals(expectedCommitResults, actualCommitResults);"},{"lineNumber":156,"author":{"gitId":"ang-zeyu"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"ang-zeyu"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":159,"author":{"gitId":"yash-chowdhary"},"content":"    public void analyzeCommits_multipleCommitsWithCommitMessageBody_success() throws Exception {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(JINYAO_AUTHOR_NAME);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":162,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":163,"author":{"gitId":"jamessspanggg"},"content":"        Map\u003cFileType, ContributionPair\u003e firstFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":164,"author":{"gitId":"jamessspanggg"},"content":"        firstFileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(1, 0));"},{"lineNumber":165,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":166,"author":{"gitId":"jamessspanggg"},"content":"        Map\u003cFileType, ContributionPair\u003e secondFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":167,"author":{"gitId":"jamessspanggg"},"content":"        secondFileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(0, 1));"},{"lineNumber":168,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"2eccc111e813e8b2977719b5959e32b674c56afe\","},{"lineNumber":170,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-06-19T13:02:01+08:00\"), \"\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\","},{"lineNumber":171,"author":{"gitId":"jamessspanggg"},"content":"                \"Hi there!\\n\\n\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\\n\", null,"},{"lineNumber":172,"author":{"gitId":"jamessspanggg"},"content":"                firstFileTypeAndContributionMap));"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"8f8359649361f6736c31b87d499a4264f6cf7ed7\","},{"lineNumber":174,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-06-19T13:03:39+08:00\"), \"[#123] Reverted 1st commit\","},{"lineNumber":175,"author":{"gitId":"-"},"content":"                \"This is a test to see if the commit message body works. \""},{"lineNumber":176,"author":{"gitId":"jamessspanggg"},"content":"                + \"All should be same same.\\n\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\\n|The end.\", null,"},{"lineNumber":177,"author":{"gitId":"jamessspanggg"},"content":"                secondFileTypeAndContributionMap));"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"        config.setBranch(\"751-CommitInfoAnalyzerTest-analyzeCommits_multipleCommitsWithCommitMessageBody_success\");"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        config.setSinceDate(new GregorianCalendar(2019, Calendar.JUNE, 19).getTime());"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        config.setUntilDate(new GregorianCalendar(2019, Calendar.JUNE, 20).getTime());"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d CommitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedCommitResults, actualCommitResults);"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":191,"author":{"gitId":"yash-chowdhary"},"content":"    public void analyzeCommits_commitsWithEmptyCommitMessageTitleOrBody_success() throws Exception {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(JINYAO_AUTHOR_NAME);"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":194,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":195,"author":{"gitId":"jamessspanggg"},"content":"        Map\u003cFileType, ContributionPair\u003e firstFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":196,"author":{"gitId":"jamessspanggg"},"content":"        firstFileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(1, 0));"},{"lineNumber":197,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":198,"author":{"gitId":"jamessspanggg"},"content":"        Map\u003cFileType, ContributionPair\u003e secondFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":199,"author":{"gitId":"jamessspanggg"},"content":"        secondFileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(0, 1));"},{"lineNumber":200,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // 1st test: Contains commit message title but no commit message body."},{"lineNumber":202,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"e54ae8fdb77c6c7d2c39131b816bfc03e6a6dd44\","},{"lineNumber":203,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-07-02T12:35:46+08:00\"), \"Test 1: With message title but no body\","},{"lineNumber":204,"author":{"gitId":"jamessspanggg"},"content":"                \"\", null, firstFileTypeAndContributionMap));"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // 2nd test: Contains no commit message title and no commit message body."},{"lineNumber":206,"author":{"gitId":"-"},"content":"        expectedCommitResults.add(new CommitResult(author, \"57fa22fc2550210203c2941692f69ccb0cf18252\","},{"lineNumber":207,"author":{"gitId":"jamessspanggg"},"content":"                parseGitStrictIsoDate(\"2019-07-02T12:36:14+08:00\"), \"\", \"\", null,"},{"lineNumber":208,"author":{"gitId":"jamessspanggg"},"content":"                secondFileTypeAndContributionMap));"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"        config.setBranch(\"751-CommitInfoAnalyzerTest-analyzeCommits_commitsWithEmptyCommitMessageTitleOrBody_success\");"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        config.setSinceDate(new GregorianCalendar(2019, Calendar.JULY, 2).getTime());"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        config.setUntilDate(new GregorianCalendar(2019, Calendar.JULY, 3).getTime());"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d CommitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedCommitResults, actualCommitResults);"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"jamessspanggg"},"content":"    @Test"},{"lineNumber":222,"author":{"gitId":"yash-chowdhary"},"content":"    public void analyzeCommits_commitsWithMultipleTags_success() throws Exception {"},{"lineNumber":223,"author":{"gitId":"jamessspanggg"},"content":"        Author author \u003d new Author(JAMES_AUTHOR_NAME);"},{"lineNumber":224,"author":{"gitId":"jamessspanggg"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":225,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":226,"author":{"gitId":"jamessspanggg"},"content":"        Map\u003cFileType, ContributionPair\u003e firstFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":227,"author":{"gitId":"jamessspanggg"},"content":"        firstFileTypeAndContributionMap.put(FILETYPE_MD, new ContributionPair(2, 1));"},{"lineNumber":228,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":229,"author":{"gitId":"jamessspanggg"},"content":"        Map\u003cFileType, ContributionPair\u003e secondFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":230,"author":{"gitId":"jamessspanggg"},"content":"        secondFileTypeAndContributionMap.put(FILETYPE_MD, new ContributionPair(1, 0));"},{"lineNumber":231,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":232,"author":{"gitId":"jamessspanggg"},"content":"        expectedCommitResults.add(new CommitResult(author, \"62c3a50ef9b3580b2070deac1eed2b3e2d701e04\","},{"lineNumber":233,"author":{"gitId":"jamessspanggg"},"content":"                parseGitStrictIsoDate(\"2019-12-20T22:45:18+08:00\"), \"Single Tag Commit\","},{"lineNumber":234,"author":{"gitId":"jamessspanggg"},"content":"                \"\", new String[] {\"1st\"}, firstFileTypeAndContributionMap));"},{"lineNumber":235,"author":{"gitId":"jamessspanggg"},"content":"        expectedCommitResults.add(new CommitResult(author, \"c5e36ec059390233ac036db61a84fa6b55952506\","},{"lineNumber":236,"author":{"gitId":"jamessspanggg"},"content":"                parseGitStrictIsoDate(\"2019-12-20T22:47:21+08:00\"), \"Double Tag Commit\","},{"lineNumber":237,"author":{"gitId":"jamessspanggg"},"content":"                \"\", new String[] {\"2nd-tag\", \"1st-tag\"}, secondFileTypeAndContributionMap));"},{"lineNumber":238,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":239,"author":{"gitId":"jamessspanggg"},"content":"        config.setBranch(\"879-CommitInfoAnalyzerTest-analyzeCommits_commitsWithMultipleTags_success\");"},{"lineNumber":240,"author":{"gitId":"jamessspanggg"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":241,"author":{"gitId":"jamessspanggg"},"content":"        config.setSinceDate(new GregorianCalendar(2019, Calendar.DECEMBER, 20).getTime());"},{"lineNumber":242,"author":{"gitId":"jamessspanggg"},"content":"        config.setUntilDate(new GregorianCalendar(2019, Calendar.DECEMBER, 21).getTime());"},{"lineNumber":243,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":244,"author":{"gitId":"jamessspanggg"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":245,"author":{"gitId":"jamessspanggg"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d CommitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);"},{"lineNumber":246,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":247,"author":{"gitId":"jamessspanggg"},"content":"        Assert.assertEquals(expectedCommitResults, actualCommitResults);"},{"lineNumber":248,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":249,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":250,"author":{"gitId":"jamessspanggg"},"content":"    @Test"},{"lineNumber":251,"author":{"gitId":"yash-chowdhary"},"content":"    public void analyzeCommits_emptyCommits_success() throws Exception {"},{"lineNumber":252,"author":{"gitId":"jamessspanggg"},"content":"        Author author \u003d new Author(JAMES_AUTHOR_NAME);"},{"lineNumber":253,"author":{"gitId":"jamessspanggg"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":254,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":255,"author":{"gitId":"jamessspanggg"},"content":"        expectedCommitResults.add(new CommitResult(author, \"016ab87c4afe89a98225b96c98ff28dd4774410f\","},{"lineNumber":256,"author":{"gitId":"jamessspanggg"},"content":"                parseGitStrictIsoDate(\"2020-01-27T22:20:51+08:00\"), \"empty commit\", \"\", null));"},{"lineNumber":257,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":258,"author":{"gitId":"jamessspanggg"},"content":"        config.setBranch(\"1019-CommitInfoAnalyzerTest-emptyCommits\");"},{"lineNumber":259,"author":{"gitId":"jamessspanggg"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":260,"author":{"gitId":"jamessspanggg"},"content":"        config.setFormats(FileTypeTest.NO_SPECIFIED_FORMATS);"},{"lineNumber":261,"author":{"gitId":"jamessspanggg"},"content":"        config.setSinceDate(new GregorianCalendar(2020, Calendar.JANUARY, 27).getTime());"},{"lineNumber":262,"author":{"gitId":"jamessspanggg"},"content":"        config.setUntilDate(new GregorianCalendar(2020, Calendar.JANUARY, 28).getTime());"},{"lineNumber":263,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":264,"author":{"gitId":"jamessspanggg"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":265,"author":{"gitId":"jamessspanggg"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d CommitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);"},{"lineNumber":266,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":267,"author":{"gitId":"jamessspanggg"},"content":"        Assert.assertEquals(expectedCommitResults, actualCommitResults);"},{"lineNumber":268,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":269,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":270,"author":{"gitId":"jamessspanggg"},"content":"    @Test"},{"lineNumber":271,"author":{"gitId":"yash-chowdhary"},"content":"    public void analyzeCommits_commitsWithBinaryFileContribution_success() throws Exception {"},{"lineNumber":272,"author":{"gitId":"jamessspanggg"},"content":"        Author author \u003d new Author(JAMES_AUTHOR_NAME);"},{"lineNumber":273,"author":{"gitId":"jamessspanggg"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":274,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":275,"author":{"gitId":"jamessspanggg"},"content":"        // binary file contribution will have 0 contribution and won\u0027t be added to fileTypesAndContributionMap"},{"lineNumber":276,"author":{"gitId":"jamessspanggg"},"content":"        expectedCommitResults.add(new CommitResult(author, \"a00c51138cbf5ab7d14f52b52abb182c8a369169\","},{"lineNumber":277,"author":{"gitId":"jamessspanggg"},"content":"                parseGitStrictIsoDate(\"2020-04-06T16:41:10+08:00\"), \"Add binary file\", \"\", null));"},{"lineNumber":278,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":279,"author":{"gitId":"jamessspanggg"},"content":"        config.setBranch(\"1192-CommitInfoAnalyzerTest-analyzeCommits_commitsWithBinaryContribution_success\");"},{"lineNumber":280,"author":{"gitId":"jamessspanggg"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":281,"author":{"gitId":"jamessspanggg"},"content":"        config.setFormats(FileTypeTest.NO_SPECIFIED_FORMATS);"},{"lineNumber":282,"author":{"gitId":"jamessspanggg"},"content":"        config.setSinceDate(new GregorianCalendar(2020, Calendar.APRIL, 6).getTime());"},{"lineNumber":283,"author":{"gitId":"jamessspanggg"},"content":"        config.setUntilDate(new GregorianCalendar(2020, Calendar.APRIL, 7).getTime());"},{"lineNumber":284,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":285,"author":{"gitId":"jamessspanggg"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":286,"author":{"gitId":"jamessspanggg"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d CommitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);"},{"lineNumber":287,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":288,"author":{"gitId":"jamessspanggg"},"content":"        Assert.assertEquals(expectedCommitResults, actualCommitResults);"},{"lineNumber":289,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":290,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":291,"author":{"gitId":"jamessspanggg"},"content":"    @Test"},{"lineNumber":292,"author":{"gitId":"jamessspanggg"},"content":"    public void analyzeCommits_fileNameWithSpecialChars_success() throws Exception {"},{"lineNumber":293,"author":{"gitId":"jamessspanggg"},"content":"        // Runs test only on non Windows (Unix) operating systems as the file names are invalid in windows"},{"lineNumber":294,"author":{"gitId":"jamessspanggg"},"content":"        Assume.assumeTrue(!SystemUtil.isWindows());"},{"lineNumber":295,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":296,"author":{"gitId":"jamessspanggg"},"content":"        Author author \u003d new Author(JAMES_ALTERNATIVE_AUTHOR_NAME);"},{"lineNumber":297,"author":{"gitId":"jamessspanggg"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":298,"author":{"gitId":"jamessspanggg"},"content":"        Map\u003cFileType, ContributionPair\u003e firstFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":299,"author":{"gitId":"jamessspanggg"},"content":"        firstFileTypeAndContributionMap.put(FILETYPE_TXT, new ContributionPair(1, 0));"},{"lineNumber":300,"author":{"gitId":"jamessspanggg"},"content":"        expectedCommitResults.add(new CommitResult(author, \"cfb3c8dc477cb0af19fce8bead4d278f35afa396\","},{"lineNumber":301,"author":{"gitId":"jamessspanggg"},"content":"                parseGitStrictIsoDate(\"2020-04-20T12:09:39+08:00\"),"},{"lineNumber":302,"author":{"gitId":"jamessspanggg"},"content":"                \"Create file name without special chars\","},{"lineNumber":303,"author":{"gitId":"jamessspanggg"},"content":"                \"\", null, firstFileTypeAndContributionMap));"},{"lineNumber":304,"author":{"gitId":"jamessspanggg"},"content":"        Map\u003cFileType, ContributionPair\u003e secondFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":305,"author":{"gitId":"jamessspanggg"},"content":"        secondFileTypeAndContributionMap.put(FILETYPE_TXT, new ContributionPair(0, 0));"},{"lineNumber":306,"author":{"gitId":"jamessspanggg"},"content":"        expectedCommitResults.add(new CommitResult(author, \"17bde492e9a80d8699ad193cf87e677341f936cc\","},{"lineNumber":307,"author":{"gitId":"jamessspanggg"},"content":"                parseGitStrictIsoDate(\"2020-04-20T12:17:40+08:00\"),"},{"lineNumber":308,"author":{"gitId":"jamessspanggg"},"content":"                \"Rename to file name with special chars\","},{"lineNumber":309,"author":{"gitId":"jamessspanggg"},"content":"                \"\", null, secondFileTypeAndContributionMap));"},{"lineNumber":310,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":311,"author":{"gitId":"jamessspanggg"},"content":"        config.setBranch(\"1244-CommitInfoAnalyzerTest-analyzeCommits_fileNameWithSpecialChars_success\");"},{"lineNumber":312,"author":{"gitId":"jamessspanggg"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":313,"author":{"gitId":"jamessspanggg"},"content":"        config.setSinceDate(new GregorianCalendar(2020, Calendar.APRIL, 20).getTime());"},{"lineNumber":314,"author":{"gitId":"jamessspanggg"},"content":"        config.setUntilDate(new GregorianCalendar(2020, Calendar.APRIL, 21).getTime());"},{"lineNumber":315,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":316,"author":{"gitId":"jamessspanggg"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d CommitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":317,"author":{"gitId":"jamessspanggg"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d CommitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);"},{"lineNumber":318,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":319,"author":{"gitId":"jamessspanggg"},"content":"        Assert.assertEquals(2, actualCommitInfos.size());"},{"lineNumber":320,"author":{"gitId":"jamessspanggg"},"content":"        Assert.assertEquals(expectedCommitResults, actualCommitResults);"},{"lineNumber":321,"author":{"gitId":"jamessspanggg"},"content":"    }"},{"lineNumber":322,"author":{"gitId":"jamessspanggg"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":324,"author":{"gitId":"-"},"content":"     * Returns a {@code Date} from a string {@code gitStrictIsoDate}."},{"lineNumber":325,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":326,"author":{"gitId":"yash-chowdhary"},"content":"    private Date parseGitStrictIsoDate(String gitStrictIsoDate) throws Exception {"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        return CommitInfoAnalyzer.GIT_STRICT_ISO_DATE_FORMAT.parse(gitStrictIsoDate);"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"yash-chowdhary":8,"jamessspanggg":133,"-":176,"ang-zeyu":12}},{"path":"src/test/java/reposense/git/GitBranchTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.git;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.Assert;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.Test;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import reposense.model.FileTypeTest;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class GitBranchTest extends GitTestTemplate {"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    protected static final String TEST_REPO_UNCOMMON_DEFAULT_GIT_LOCATION \u003d"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"https://github.com/reposense/testrepo-UncommonDefaultBranch.git\";"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"yash-chowdhary"},"content":"    public void getCurrentBranch_masterBranch_success() throws Exception {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String currentBranch \u003d GitBranch.getCurrentBranch(config.getRepoRoot());"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Assert.assertEquals(\"master\", currentBranch);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"yash-chowdhary"},"content":"    public void getCurrentBranch_uncommonDefaultBranch_success() throws Exception {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        RepoConfiguration uncommonDefaultConfig \u003d new RepoConfiguration("},{"lineNumber":26,"author":{"gitId":"-"},"content":"                new RepoLocation(TEST_REPO_UNCOMMON_DEFAULT_GIT_LOCATION), RepoConfiguration.DEFAULT_BRANCH);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        uncommonDefaultConfig.setFormats(FileTypeTest.DEFAULT_TEST_FORMATS);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        GitClone.clone(uncommonDefaultConfig);"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String currentBranch \u003d GitBranch.getCurrentBranch(uncommonDefaultConfig.getRepoRoot());"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Assert.assertEquals(\"uncommon\", currentBranch);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"yash-chowdhary":2,"-":30}},{"path":"src/test/java/reposense/git/GitCheckoutTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.git;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Calendar;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Date;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.Assert;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.git.exception.CommitNotFoundException;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class GitCheckoutTest extends GitTestTemplate {"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void checkout_validBranch_success() {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), \"test\");"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Path branchFile \u003d Paths.get(config.getRepoRoot(), \"inTestBranch.java\");"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.exists(branchFile));"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkoutBranchTest() {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Path branchFile \u003d Paths.get(config.getRepoRoot(), \"inTestBranch.java\");"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Assert.assertFalse(Files.exists(branchFile));"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), \"test\");"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.exists(branchFile));"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void checkoutHashTest() {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Path newFile \u003d Paths.get(config.getRepoRoot(), \"newFile.java\");"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.exists(newFile));"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), FIRST_COMMIT_HASH);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Assert.assertFalse(Files.exists(newFile));"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"yash-chowdhary"},"content":"    public void checkoutToDate_validDate_success() throws Exception {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Path newFile \u003d Paths.get(config.getRepoRoot(), \"newFile.java\");"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.exists(newFile));"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Date untilDate \u003d TestUtil.getUntilDate(2018, Calendar.FEBRUARY, 6);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutDate(config.getRepoRoot(), config.getBranch(), untilDate);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Assert.assertFalse(Files.exists(newFile));"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test(expected \u003d CommitNotFoundException.class)"},{"lineNumber":55,"author":{"gitId":"yash-chowdhary"},"content":"    public void checkoutToDate_invalidDate_throwsEmptyCommitException() throws Exception {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Date untilDate \u003d TestUtil.getUntilDate(2015, Calendar.FEBRUARY, 6);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutDate(config.getRepoRoot(), config.getBranch(), untilDate);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"yash-chowdhary":2,"-":57}},{"path":"src/test/java/reposense/git/GitCloneTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.git;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.Assert;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class GitCloneTest extends GitTestTemplate {"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"yash-chowdhary"},"content":"    public void cloneTest_validRepo_success() throws Exception {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // As the clone has been performed in the {@code GitTestTemplate},"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // this checks whether the clone has been executed successfully by performing a file system check."},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Path dir \u003d Paths.get(config.getRepoRoot());"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.exists(dir));"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"yash-chowdhary":1,"-":20}},{"path":"src/test/java/reposense/git/GitDiffTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.git;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.Assert;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.Test;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class GitDiffTest extends GitTestTemplate {"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void diffCommit_validCommitHash_success() {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String diffResult \u003d GitDiff.diffCommit(config.getRepoRoot(),"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018.toString());"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        Assert.assertFalse(diffResult.isEmpty());"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void diffCommit_emptyCommitHash_emptyResult() {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String diffResult \u003d GitDiff.diffCommit(config.getRepoRoot(), LATEST_COMMIT_HASH);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Assert.assertTrue(diffResult.isEmpty());"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void diffCommit_latestCommitHash_emptyResult() {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        String diffResult \u003d GitDiff.diffCommit(config.getRepoRoot(), \"\");"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Assert.assertTrue(diffResult.isEmpty());"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test(expected \u003d RuntimeException.class)"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void diffCommit_nonexistentCommitHash_throwsRunTimeException() {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        GitDiff.diffCommit(config.getRepoRoot(), NONEXISTENT_COMMIT_HASH);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"ccyccyccy"},"content":""},{"lineNumber":35,"author":{"gitId":"ccyccyccy"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"ccyccyccy"},"content":"    public void diffCommit_commitContainingSubmodule_ignoresSubmodule() {"},{"lineNumber":37,"author":{"gitId":"ccyccyccy"},"content":"        GitCheckout.checkout(config.getRepoRoot(),"},{"lineNumber":38,"author":{"gitId":"ccyccyccy"},"content":"                \"850-GitDiffTest-diffCommit_commitContainingSubmodule_ignoresSubmodule\");"},{"lineNumber":39,"author":{"gitId":"ccyccyccy"},"content":"        String diffResult \u003d GitDiff.diffCommit(config.getRepoRoot(), EMPTY_TREE_HASH);"},{"lineNumber":40,"author":{"gitId":"ccyccyccy"},"content":"        Assert.assertFalse(diffResult.contains(\"Subproject commit\"));"},{"lineNumber":41,"author":{"gitId":"ccyccyccy"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ccyccyccy":8,"-":34}},{"path":"src/test/java/reposense/git/GitLsTreeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.git;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.lang.reflect.Method;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.After;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.Assert;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.Assume;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.BeforeClass;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.Test;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.git.exception.InvalidFilePathException;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.util.SystemUtil;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class GitLsTreeTest extends GitTestTemplate {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static Method isValidWindowsFilenameMethod;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeClass"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void beforeClass() throws Exception {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        GitTestTemplate.beforeClass();"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        isValidWindowsFilenameMethod \u003d GitLsTree.class.getDeclaredMethod(\"isValidWindowsFilename\", String.class);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        isValidWindowsFilenameMethod.setAccessible(true);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @After"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void after() {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"       // Overrides checkout master behaviour in GitTestTemplate as it throws error when run on a bare clone."},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void isValidWindowsFilename_validFilenames_success() throws Exception {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // Runs test only on Windows operating systems"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Assume.assumeTrue(SystemUtil.isWindows());"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        List\u003cString\u003e validDirectoryNames \u003d Arrays.asList(\"com10.txt\", \"folder name/file name.txt\", \".txt\");"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        for (String fileName : validDirectoryNames) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            Assert.assertTrue((boolean) isValidWindowsFilenameMethod.invoke(null, fileName));"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void isValidWindowsFilename_illegalFileNames_fail() throws Exception {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Runs test only on Windows operating systems"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Assume.assumeTrue(SystemUtil.isWindows());"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cString\u003e windowsReservedFilenames \u003d Arrays.asList(\"com1.txt\", \"folder/com1.txt\", \"folder/com1/file.txt\","},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \"nul\", \"fi\\\\le.txt\", \"\\\"file\\\".txt\", \"file.txt.\", \"folder./file.txt\", \"file.txt \", \"folder /file.txt\");"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        for (String fileName : windowsReservedFilenames) {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Assert.assertFalse((boolean) isValidWindowsFilenameMethod.invoke(null, fileName));"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":59,"author":{"gitId":"yash-chowdhary"},"content":"    public void repo_validFilePaths_success() throws Exception {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        validateFilePaths(config);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test(expected \u003d InvalidFilePathException.class)"},{"lineNumber":64,"author":{"gitId":"yash-chowdhary"},"content":"    public void windows_cloneInvalidWindowsFilePaths_throwsInvalidFilePathException() throws Exception {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Runs test only on Windows operating systems"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Assume.assumeTrue(SystemUtil.isWindows());"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"        config.setBranch(\"391-invalid-filepaths\");"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        validateFilePaths(config);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":73,"author":{"gitId":"anubh-v"},"content":"    public void unix_cloneInvalidWindowsFilePaths_success() throws Exception {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Runs test only on non Windows (Unix) operating systems"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Assume.assumeTrue(!SystemUtil.isWindows());"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"        config.setBranch(\"391-invalid-filepaths\");"},{"lineNumber":78,"author":{"gitId":"anubh-v"},"content":"        validateFilePaths(config);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Clones a bare repo in {@code config} and verifies that the repo contains only file paths that are"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * compatible in Windows."},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if it fails to create/delete the folders."},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws InvalidFilePathException if the repository contains invalid file paths that are not compatible with"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Windows."},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void validateFilePaths(RepoConfiguration config) throws IOException, InvalidFilePathException {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        GitClone.cloneBare(config, FileUtil.getBareRepoFolderName(config));"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        GitLsTree.validateFilePaths(config, FileUtil.getBareRepoPath(config));"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"yash-chowdhary":2,"anubh-v":2,"-":88}},{"path":"src/test/java/reposense/git/GitRevParseTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.git;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.Test;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import reposense.git.exception.GitBranchException;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class GitRevParseTest extends GitTestTemplate {"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"yash-chowdhary"},"content":"    public void assertBranchExists_withExistingBranch_success() throws Exception {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        config.setBranch(\"master\");"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        GitRevParse.assertBranchExists(config, Paths.get(config.getRepoRoot()));"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test (expected \u003d GitBranchException.class)"},{"lineNumber":19,"author":{"gitId":"yash-chowdhary"},"content":"    public void assertBranchExists_withNonExistentBranch_throwsGitBranchException() throws Exception {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        config.setBranch(\"nonExistentBranch\");"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        GitRevParse.assertBranchExists(config, Paths.get(config.getRepoRoot()));"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"yash-chowdhary":2,"-":21}},{"path":"src/test/java/reposense/model/AuthorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.Assert;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.util.AssertUtil;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class AuthorTest {"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void setEmail_validEmails_success() {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(\"Tester\");"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String[] emails \u003d new String[] {\"tester@test.net\", \"developer@example.com\"};"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"        author.setEmails(Arrays.asList(emails));"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // The additional 1 email comes from the Standard GitHub Email."},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Assert.assertEquals(emails.length + 1, author.getEmails().size());"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Assert.assertTrue(author.getEmails().containsAll(Arrays.asList(emails)));"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void setEmail_invalidEmails_throwIllegalArgumentException() {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(\"Tester\");"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String[] emails \u003d new String[] {\"this.”is\\\\ invalid”@example.com\", \"developer@example.com\"};"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AssertUtil.assertThrows(IllegalArgumentException.class, () -\u003e author.setEmails(Arrays.asList(emails)));"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        AssertUtil.assertThrows(IllegalArgumentException.class, () -\u003e author.setEmails(Collections.singletonList(\"\")));"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setIgnoreGlobList_validGlobRegex_success() {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(\"Tester\");"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String[] ignoreGlobs \u003d new String[] {\"**.adoc\", \"collated/**\"};"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String[] testPaths \u003d new String[] {\"docs/UserGuide.adoc\", \"collated/codeeong.md\"};"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Arrays.asList(ignoreGlobs));"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Assert.assertEquals(2, author.getIgnoreGlobList().size());"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Assert.assertTrue(author.getIgnoreGlobList().containsAll(Arrays.asList(ignoreGlobs)));"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Arrays.stream(testPaths).forEach(value -\u003e"},{"lineNumber":48,"author":{"gitId":"anubh-v"},"content":"                Assert.assertTrue(author.isIgnoringFile(Paths.get(value))));"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test(expected \u003d IllegalArgumentException.class)"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setIgnoreGlobList_quoteInGlobPattern_throwIllegalArgumentException() {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(\"Tester\");"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String[] ignoreGlobs \u003d new String[] {\"**.adoc\", \"collated/**\\\"\"};"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Arrays.asList(ignoreGlobs));"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test(expected \u003d IllegalArgumentException.class)"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setIgnoreGlobList_semicolonInGlobPattern_throwIllegalArgumentException() {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(\"Tester\");"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String[] ignoreGlobs \u003d new String[] {\"**.adoc; echo hi\", \"collated/**\"};"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Arrays.asList(ignoreGlobs));"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void appendIgnoreGlobList_validGlobRegex_success() {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(\"Tester\");"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String[] ignoreGlobs \u003d new String[] {\"**.adoc\", \"collated/**\"};"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String[] moreIgnoreGlobs \u003d new String[] {\"**[!(.md)]\", \"C:\\\\\\\\Program Files\\\\\\\\**\"};"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String[] testPaths \u003d new String[] {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            \"docs/UserGuide.adoc\","},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \"collated/codeeong.md\","},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \"C:\\\\Program Files\\\\RepoSense\\\\README.md\","},{"lineNumber":76,"author":{"gitId":"-"},"content":"            \"/this/is/not/a/md/file.txt\""},{"lineNumber":77,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        List\u003cString\u003e ignoreGlobList \u003d new ArrayList\u003c\u003e(Arrays.asList(ignoreGlobs));"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ignoreGlobList.addAll(Arrays.asList(moreIgnoreGlobs));"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Arrays.asList(ignoreGlobs));"},{"lineNumber":82,"author":{"gitId":"0blivious"},"content":"        author.importIgnoreGlobList(Arrays.asList(moreIgnoreGlobs));"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Assert.assertEquals(4, author.getIgnoreGlobList().size());"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Assert.assertTrue(author.getIgnoreGlobList().containsAll(ignoreGlobList));"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Arrays.stream(testPaths).forEach(value -\u003e"},{"lineNumber":87,"author":{"gitId":"anubh-v"},"content":"                Assert.assertTrue(author.isIgnoringFile(Paths.get(value))));"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test(expected \u003d IllegalArgumentException.class)"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void appendIgnoreGlobList_appendOrOperator_throwIllegalArgumentException() {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(\"Tester\");"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String[] ignoreGlobs \u003d new String[] {\"**[!(.md)] | rm -rf /\", \"C:\\\\Program Files\\\\**\"};"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"0blivious"},"content":"        author.importIgnoreGlobList(Arrays.asList(ignoreGlobs));"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"anubh-v":2,"-":93,"0blivious":2}},{"path":"src/test/java/reposense/model/RepoConfigurationTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.apache.tools.ant.types.Commandline.translateCommandline;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"anubh-v"},"content":"import static reposense.util.TestUtil.loadResource;"},{"lineNumber":6,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.lang.reflect.Method;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.Assert;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.Before;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.BeforeClass;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.Test;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.RepoSense;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.git.GitClone;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.parser.ArgsParser;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.parser.AuthorConfigCsvParser;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.parser.GroupConfigCsvParser;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.parser.RepoConfigCsvParser;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.report.ReportGenerator;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.util.InputBuilder;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class RepoConfigurationTest {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Path IGNORE_STANDALONE_TEST_CONFIG_FILES \u003d"},{"lineNumber":32,"author":{"gitId":"anubh-v"},"content":"            loadResource(RepoConfigurationTest.class, \"RepoConfigurationTest/repoconfig_ignoreStandAlone_test\");"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Path IGNORE_STANDALONE_KEYWORD_TEST_CONFIG_FILES \u003d"},{"lineNumber":34,"author":{"gitId":"anubh-v"},"content":"            loadResource(RepoConfigurationTest.class, \"RepoConfigurationTest/repoconfig_ignoreStandAloneKeyword_test\");"},{"lineNumber":35,"author":{"gitId":"anubh-v"},"content":"    private static final Path FORMATS_TEST_CONFIG_FILES \u003d loadResource(RepoConfigurationTest.class,"},{"lineNumber":36,"author":{"gitId":"anubh-v"},"content":"            \"RepoConfigurationTest/repoconfig_formats_test\");"},{"lineNumber":37,"author":{"gitId":"anubh-v"},"content":"    private static final Path WITHOUT_FORMATS_TEST_CONFIG_FILES \u003d loadResource(RepoConfigurationTest.class,"},{"lineNumber":38,"author":{"gitId":"anubh-v"},"content":"            \"RepoConfigurationTest/repoconfig_withoutformats_test\");"},{"lineNumber":39,"author":{"gitId":"anubh-v"},"content":"    private static final Path GROUPS_TEST_CONFIG_FILES \u003d loadResource(RepoConfigurationTest.class,"},{"lineNumber":40,"author":{"gitId":"anubh-v"},"content":"            \"RepoConfigurationTest/repoconfig_groups_test\");"},{"lineNumber":41,"author":{"gitId":"anubh-v"},"content":"    private static final Path OVERRIDE_STANDALONE_TEST_CONFIG_FILE \u003d loadResource(RepoConfigurationTest.class,"},{"lineNumber":42,"author":{"gitId":"anubh-v"},"content":"            \"RepoConfigurationTest/repoconfig_overrideStandAlone_test\");"},{"lineNumber":43,"author":{"gitId":"anubh-v"},"content":"    private static final Path IGNORE_AUTHORS_TEST_CONFIG_FILE \u003d loadResource(RepoConfigurationTest.class,"},{"lineNumber":44,"author":{"gitId":"anubh-v"},"content":"            \"RepoConfigurationTest/repoconfig_ignoreAuthors_test\");"},{"lineNumber":45,"author":{"gitId":"anubh-v"},"content":"    private static final Path IGNORE_STANDALONE_FLAG_OVERRIDE_CSV_TEST \u003d loadResource(RepoConfigurationTest.class,"},{"lineNumber":46,"author":{"gitId":"anubh-v"},"content":"            \"RepoConfigurationTest/repoconfig_ignoreStandaloneOverrideCsv_test\");"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final Path SHALLOW_CLONING_TEST_CONFIG_FILES \u003d"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            loadResource(RepoConfigurationTest.class, \"RepoConfigurationTest/repoconfig_shallowCloning_test\");"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final Path SHALLOW_CLONING_FLAG_OVERRIDE_TEST_CONFIG_FILES \u003d"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            loadResource(RepoConfigurationTest.class,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \"RepoConfigurationTest/repoconfig_shallowCloningOverrideCsv_test\");"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"anubh-v"},"content":"    private static final String TEST_REPO_BETA \u003d \"https://github.com/reposense/testrepo-Beta.git\";"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_DELTA \u003d \"https://github.com/reposense/testrepo-Delta.git\";"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_MINIMAL_STANDALONE_CONFIG \u003d"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \"https://github.com/reposense/testrepo-minimalstandaloneconfig.git\";"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_INVALID_LOCATION \u003d \"ftp://github.com/reposense/testrepo-Delta.git\";"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final Author FIRST_AUTHOR \u003d new Author(\"lithiumlkid\");"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final Author SECOND_AUTHOR \u003d new Author(\"codeeong\");"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final Author THIRD_AUTHOR \u003d new Author(\"jordancjq\");"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static final Author FOURTH_AUTHOR \u003d new Author(\"lohtianwei\");"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e FIRST_AUTHOR_ALIASES \u003d Collections.singletonList(\"Ahmad Syafiq\");"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e SECOND_AUTHOR_ALIASES \u003d Collections.emptyList();"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e THIRD_AUTHOR_ALIASES \u003d Collections.singletonList(\"Jordan Chong\");"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e FOURTH_AUTHOR_ALIASES \u003d Collections.singletonList(\"Tianwei\");"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e REPO_LEVEL_GLOB_LIST \u003d Collections.singletonList(\"collated**\");"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e FIRST_AUTHOR_GLOB_LIST \u003d"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            Arrays.asList(\"*.aa1\", \"**.aa2\", \"**.java\", \"collated**\");"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e SECOND_AUTHOR_GLOB_LIST \u003d Arrays.asList(\"\", \"collated**\");"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e THIRD_AUTHOR_GLOB_LIST \u003d Arrays.asList(\"**[!(.md)]\", \"collated**\");"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e FOURTH_AUTHOR_GLOB_LIST \u003d Collections.singletonList(\"collated**\");"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static final List\u003cFileType\u003e CONFIG_FORMATS \u003d FileType.convertFormatStringsToFileTypes(Arrays.asList("},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"java\", \"adoc\", \"md\"));"},{"lineNumber":78,"author":{"gitId":"0blivious"},"content":"    private static final List\u003cFileType\u003e FIRST_CONFIG_GROUPS \u003d Arrays.asList("},{"lineNumber":79,"author":{"gitId":"-"},"content":"            new FileType(\"test\", Collections.singletonList(\"src/test**\")),"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            new FileType(\"code\", Collections.singletonList(\"**.java\")),"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            new FileType(\"docs\", Collections.singletonList(\"docs**\")));"},{"lineNumber":82,"author":{"gitId":"0blivious"},"content":"    private static final List\u003cFileType\u003e SECOND_CONFIG_GROUPS \u003d Arrays.asList("},{"lineNumber":83,"author":{"gitId":"0blivious"},"content":"            new FileType(\"docs\", Collections.singletonList(\"docs**\")));"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e CLI_FORMATS \u003d Arrays.asList(\"css\", \"html\");"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static RepoConfiguration repoDeltaStandaloneConfig;"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @BeforeClass"},{"lineNumber":89,"author":{"gitId":"yash-chowdhary"},"content":"    public static void setUp() throws Exception {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        FIRST_AUTHOR.setAuthorAliases(FIRST_AUTHOR_ALIASES);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        SECOND_AUTHOR.setAuthorAliases(SECOND_AUTHOR_ALIASES);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        THIRD_AUTHOR.setAuthorAliases(THIRD_AUTHOR_ALIASES);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        FOURTH_AUTHOR.setAuthorAliases(FOURTH_AUTHOR_ALIASES);"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"        FIRST_AUTHOR.setIgnoreGlobList(FIRST_AUTHOR_GLOB_LIST);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        SECOND_AUTHOR.setIgnoreGlobList(SECOND_AUTHOR_GLOB_LIST);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        THIRD_AUTHOR.setIgnoreGlobList(THIRD_AUTHOR_GLOB_LIST);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        FOURTH_AUTHOR.setIgnoreGlobList(FOURTH_AUTHOR_GLOB_LIST);"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedAuthors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedAuthors.add(FIRST_AUTHOR);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        expectedAuthors.add(SECOND_AUTHOR);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        expectedAuthors.add(THIRD_AUTHOR);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        expectedAuthors.add(FOURTH_AUTHOR);"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA), \"master\");"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.setAuthorList(expectedAuthors);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.addAuthorDetailsToAuthorMapEntry(FIRST_AUTHOR, FIRST_AUTHOR_ALIASES);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.addAuthorDetailsToAuthorMapEntry(FOURTH_AUTHOR, FOURTH_AUTHOR_ALIASES);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.setAuthorDisplayName(FIRST_AUTHOR, \"Ahm\");"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.setAuthorDisplayName(SECOND_AUTHOR, \"Cod\");"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.setAuthorDisplayName(THIRD_AUTHOR, \"Jor\");"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.setAuthorDisplayName(FOURTH_AUTHOR, \"Loh\");"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"        SECOND_AUTHOR.setEmails(Arrays.asList(\"codeeong@gmail.com\", \"33129797+codeeong@users.noreply.github.com\"));"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        for (Author author : expectedAuthors) {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            repoDeltaStandaloneConfig.addAuthorDetailsToAuthorMapEntry(author, author.getEmails());"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.setFormats(CONFIG_FORMATS);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Before"},{"lineNumber":125,"author":{"gitId":"yash-chowdhary"},"content":"    public void cleanRepoDirectory() throws Exception {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        FileUtil.deleteDirectory(FileUtil.REPOS_ADDRESS);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":130,"author":{"gitId":"yash-chowdhary"},"content":"    public void repoConfig_usesStandaloneConfig_success() throws Exception {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA), \"master\");"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        GitClone.clone(actualConfig);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        ReportGenerator.updateRepoConfig(actualConfig);"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaStandaloneConfig, actualConfig);"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":139,"author":{"gitId":"anubh-v"},"content":"    public void repoConfig_ignoresStandaloneConfig_success() throws Exception {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedAuthors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(FIRST_AUTHOR);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        expectedAuthors.add(author);"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA), \"master\");"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorList(expectedAuthors);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        expectedConfig.addAuthorDetailsToAuthorMapEntry(author, FIRST_AUTHOR_ALIASES);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorDisplayName(author, \"Ahm\");"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"        expectedConfig.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedConfig.setFormats(CONFIG_FORMATS);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(IGNORE_STANDALONE_TEST_CONFIG_FILES)"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                .addFormats(formats)"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(((ConfigCliArguments) cliArguments).getRepoConfigFilePath()).parse();"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e authorConfigs \u003d"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                new AuthorConfigCsvParser(((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()).parse();"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        RepoConfiguration.merge(actualConfigs, authorConfigs);"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        GitClone.clone(actualConfig);"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        ReportGenerator.updateRepoConfig(actualConfig);"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":174,"author":{"gitId":"yash-chowdhary"},"content":"    public void repoConfig_ignoresStandaloneConfigInCli_success() throws Exception {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA), \"master\");"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        expectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_DELTA)"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                .addFormats(formats)"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                .addIgnoreStandaloneConfig()"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d RepoSense.getRepoConfigurations((LocationsCliArguments) cliArguments);"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        RepoConfiguration.setFormatsToRepoConfigs(actualConfigs, cliArguments.getFormats());"},{"lineNumber":187,"author":{"gitId":"anubh-v"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs,"},{"lineNumber":188,"author":{"gitId":"anubh-v"},"content":"                cliArguments.isStandaloneConfigIgnored());"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        GitClone.clone(actualConfig);"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        ReportGenerator.updateRepoConfig(actualConfig);"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":197,"author":{"gitId":"anubh-v"},"content":"    public void repoConfig_ignoreStandaloneConfigInCli_overrideCsv() throws Exception {"},{"lineNumber":198,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":199,"author":{"gitId":"anubh-v"},"content":"        RepoConfiguration repoBetaExpectedConfig \u003d new RepoConfiguration("},{"lineNumber":200,"author":{"gitId":"anubh-v"},"content":"                new RepoLocation(TEST_REPO_BETA), \"master\");"},{"lineNumber":201,"author":{"gitId":"anubh-v"},"content":"        repoBetaExpectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));"},{"lineNumber":202,"author":{"gitId":"anubh-v"},"content":"        repoBetaExpectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":203,"author":{"gitId":"anubh-v"},"content":"        RepoConfiguration repoDeltaExpectedConfig \u003d new RepoConfiguration("},{"lineNumber":204,"author":{"gitId":"anubh-v"},"content":"                new RepoLocation(TEST_REPO_DELTA), \"master\");"},{"lineNumber":205,"author":{"gitId":"anubh-v"},"content":"        repoDeltaExpectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":206,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":207,"author":{"gitId":"anubh-v"},"content":"        String input \u003d new InputBuilder().addConfig(IGNORE_STANDALONE_FLAG_OVERRIDE_CSV_TEST)"},{"lineNumber":208,"author":{"gitId":"anubh-v"},"content":"                .addIgnoreStandaloneConfig()"},{"lineNumber":209,"author":{"gitId":"anubh-v"},"content":"                .build();"},{"lineNumber":210,"author":{"gitId":"anubh-v"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":211,"author":{"gitId":"anubh-v"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":212,"author":{"gitId":"anubh-v"},"content":"                new RepoConfigCsvParser(((ConfigCliArguments) cliArguments).getRepoConfigFilePath()).parse();"},{"lineNumber":213,"author":{"gitId":"anubh-v"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs,"},{"lineNumber":214,"author":{"gitId":"anubh-v"},"content":"                cliArguments.isStandaloneConfigIgnored());"},{"lineNumber":215,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":216,"author":{"gitId":"anubh-v"},"content":"        RepoConfiguration repoBetaActualConfig \u003d actualConfigs.get(0);"},{"lineNumber":217,"author":{"gitId":"anubh-v"},"content":"        RepoConfiguration repoDeltaActualConfig \u003d actualConfigs.get(1);"},{"lineNumber":218,"author":{"gitId":"anubh-v"},"content":"        GitClone.clone(repoBetaActualConfig);"},{"lineNumber":219,"author":{"gitId":"anubh-v"},"content":"        GitClone.clone(repoDeltaActualConfig);"},{"lineNumber":220,"author":{"gitId":"anubh-v"},"content":"        ReportGenerator.updateRepoConfig(repoBetaActualConfig);"},{"lineNumber":221,"author":{"gitId":"anubh-v"},"content":"        ReportGenerator.updateRepoConfig(repoDeltaActualConfig);"},{"lineNumber":222,"author":{"gitId":"anubh-v"},"content":"        TestUtil.compareRepoConfig(repoBetaExpectedConfig, repoBetaActualConfig);"},{"lineNumber":223,"author":{"gitId":"anubh-v"},"content":"        TestUtil.compareRepoConfig(repoDeltaExpectedConfig, repoDeltaActualConfig);"},{"lineNumber":224,"author":{"gitId":"anubh-v"},"content":"    }"},{"lineNumber":225,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":226,"author":{"gitId":"anubh-v"},"content":"    @Test"},{"lineNumber":227,"author":{"gitId":"anubh-v"},"content":"    public void repoConfig_withoutIgnoreStandaloneConfigInCli_useCsv() throws Exception {"},{"lineNumber":228,"author":{"gitId":"anubh-v"},"content":"        RepoConfiguration repoBetaExpectedConfig \u003d new RepoConfiguration("},{"lineNumber":229,"author":{"gitId":"anubh-v"},"content":"                new RepoLocation(TEST_REPO_BETA), \"master\");"},{"lineNumber":230,"author":{"gitId":"anubh-v"},"content":"        repoBetaExpectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));"},{"lineNumber":231,"author":{"gitId":"anubh-v"},"content":"        repoBetaExpectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":232,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":233,"author":{"gitId":"anubh-v"},"content":"        String input \u003d new InputBuilder().addConfig(IGNORE_STANDALONE_FLAG_OVERRIDE_CSV_TEST).build();"},{"lineNumber":234,"author":{"gitId":"anubh-v"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":235,"author":{"gitId":"anubh-v"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":236,"author":{"gitId":"anubh-v"},"content":"                new RepoConfigCsvParser(((ConfigCliArguments) cliArguments).getRepoConfigFilePath()).parse();"},{"lineNumber":237,"author":{"gitId":"anubh-v"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs,"},{"lineNumber":238,"author":{"gitId":"anubh-v"},"content":"                cliArguments.isStandaloneConfigIgnored());"},{"lineNumber":239,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":240,"author":{"gitId":"anubh-v"},"content":"        RepoConfiguration repoBetaActualConfig \u003d actualConfigs.get(0);"},{"lineNumber":241,"author":{"gitId":"anubh-v"},"content":"        RepoConfiguration repoDeltaActualConfig \u003d actualConfigs.get(1);"},{"lineNumber":242,"author":{"gitId":"anubh-v"},"content":"        GitClone.clone(repoBetaActualConfig);"},{"lineNumber":243,"author":{"gitId":"anubh-v"},"content":"        GitClone.clone(repoDeltaActualConfig);"},{"lineNumber":244,"author":{"gitId":"anubh-v"},"content":"        ReportGenerator.updateRepoConfig(repoBetaActualConfig);"},{"lineNumber":245,"author":{"gitId":"anubh-v"},"content":"        ReportGenerator.updateRepoConfig(repoDeltaActualConfig);"},{"lineNumber":246,"author":{"gitId":"anubh-v"},"content":"        TestUtil.compareRepoConfig(repoBetaExpectedConfig, repoBetaActualConfig);"},{"lineNumber":247,"author":{"gitId":"anubh-v"},"content":"        TestUtil.compareRepoConfig(repoDeltaStandaloneConfig, repoDeltaActualConfig);"},{"lineNumber":248,"author":{"gitId":"anubh-v"},"content":"    }"},{"lineNumber":249,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":251,"author":{"gitId":"anubh-v"},"content":"    public void repoConfig_wrongKeywordUseStandaloneConfig_success() throws Exception {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(IGNORE_STANDALONE_KEYWORD_TEST_CONFIG_FILES)"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                .addFormats(formats)"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(((ConfigCliArguments) cliArguments).getRepoConfigFilePath()).parse();"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        GitClone.clone(actualConfig);"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        ReportGenerator.updateRepoConfig(actualConfig);"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaStandaloneConfig, actualConfig);"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":267,"author":{"gitId":"-"},"content":""},{"lineNumber":268,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    public void repoConfig_shallowCloning_success() throws Exception {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA), \"master\");"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        expectedConfig.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        expectedConfig.setFormats(CONFIG_FORMATS);"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        expectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        expectedConfig.setIsShallowCloningPerformed(true);"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(SHALLOW_CLONING_TEST_CONFIG_FILES)"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                .addFormats(formats)"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":281,"author":{"gitId":"-"},"content":""},{"lineNumber":282,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(((ConfigCliArguments) cliArguments).getRepoConfigFilePath()).parse();"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);"},{"lineNumber":285,"author":{"gitId":"-"},"content":""},{"lineNumber":286,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        GitClone.clone(actualConfig);"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        ReportGenerator.updateRepoConfig(actualConfig);"},{"lineNumber":289,"author":{"gitId":"-"},"content":""},{"lineNumber":290,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    public void repoConfig_shallowCloningInCli_success() throws Exception {"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA), \"master\");"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        expectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        expectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        expectedConfig.setIsShallowCloningPerformed(true);"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_DELTA)"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                .addFormats(formats)"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                .addShallowCloning()"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d RepoSense.getRepoConfigurations((LocationsCliArguments) cliArguments);"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        RepoConfiguration.setFormatsToRepoConfigs(actualConfigs, cliArguments.getFormats());"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        RepoConfiguration.setIsShallowCloningPerformedToRepoConfigs(actualConfigs,"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                cliArguments.isShallowCloningPerformed());"},{"lineNumber":311,"author":{"gitId":"-"},"content":""},{"lineNumber":312,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        GitClone.clone(actualConfig);"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        ReportGenerator.updateRepoConfig(actualConfig);"},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":318,"author":{"gitId":"-"},"content":""},{"lineNumber":319,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    public void repoConfig_shallowCloningInCli_overrideCsv() throws Exception {"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaExpectedConfig \u003d new RepoConfiguration("},{"lineNumber":322,"author":{"gitId":"-"},"content":"                new RepoLocation(TEST_REPO_BETA), \"master\");"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setIsShallowCloningPerformed(true);"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaExpectedConfig \u003d new RepoConfiguration("},{"lineNumber":327,"author":{"gitId":"-"},"content":"                new RepoLocation(TEST_REPO_DELTA), \"master\");"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        repoDeltaExpectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        repoDeltaExpectedConfig.setIsShallowCloningPerformed(true);"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(SHALLOW_CLONING_FLAG_OVERRIDE_TEST_CONFIG_FILES)"},{"lineNumber":332,"author":{"gitId":"-"},"content":"                .addShallowCloning()"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":336,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(((ConfigCliArguments) cliArguments).getRepoConfigFilePath()).parse();"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        RepoConfiguration.setIsShallowCloningPerformedToRepoConfigs(actualConfigs,"},{"lineNumber":339,"author":{"gitId":"-"},"content":"                cliArguments.isShallowCloningPerformed());"},{"lineNumber":340,"author":{"gitId":"-"},"content":""},{"lineNumber":341,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaActualConfig \u003d actualConfigs.get(0);"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaActualConfig \u003d actualConfigs.get(1);"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        GitClone.clone(repoBetaActualConfig);"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        GitClone.clone(repoDeltaActualConfig);"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        ReportGenerator.updateRepoConfig(repoBetaActualConfig);"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        ReportGenerator.updateRepoConfig(repoDeltaActualConfig);"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoBetaExpectedConfig, repoBetaActualConfig);"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaExpectedConfig, repoDeltaActualConfig);"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":350,"author":{"gitId":"-"},"content":""},{"lineNumber":351,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    public void repoConfig_withoutShallowCloningInInCli_useCsv() throws Exception {"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaExpectedConfig \u003d new RepoConfiguration("},{"lineNumber":354,"author":{"gitId":"-"},"content":"                new RepoLocation(TEST_REPO_BETA), \"master\");"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setIsShallowCloningPerformed(true);"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaExpectedConfig \u003d new RepoConfiguration("},{"lineNumber":359,"author":{"gitId":"-"},"content":"                new RepoLocation(TEST_REPO_DELTA), \"master\");"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        repoDeltaExpectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":361,"author":{"gitId":"-"},"content":""},{"lineNumber":362,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(SHALLOW_CLONING_FLAG_OVERRIDE_TEST_CONFIG_FILES).build();"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":365,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(((ConfigCliArguments) cliArguments).getRepoConfigFilePath()).parse();"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        RepoConfiguration.setIsShallowCloningPerformedToRepoConfigs(actualConfigs,"},{"lineNumber":368,"author":{"gitId":"-"},"content":"                cliArguments.isShallowCloningPerformed());"},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaActualConfig \u003d actualConfigs.get(0);"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaActualConfig \u003d actualConfigs.get(1);"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        GitClone.clone(repoBetaActualConfig);"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        GitClone.clone(repoDeltaActualConfig);"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        ReportGenerator.updateRepoConfig(repoBetaActualConfig);"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        ReportGenerator.updateRepoConfig(repoDeltaActualConfig);"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoBetaExpectedConfig, repoBetaActualConfig);"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaExpectedConfig, repoDeltaActualConfig);"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":379,"author":{"gitId":"-"},"content":""},{"lineNumber":380,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":381,"author":{"gitId":"anubh-v"},"content":"    public void repoConfig_withFormats_ignoreCliFormats() throws Exception {"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(FORMATS_TEST_CONFIG_FILES)"},{"lineNumber":384,"author":{"gitId":"-"},"content":"                .addFormats(formats)"},{"lineNumber":385,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":387,"author":{"gitId":"-"},"content":""},{"lineNumber":388,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":389,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(((ConfigCliArguments) cliArguments).getRepoConfigFilePath()).parse();"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        RepoConfiguration.setFormatsToRepoConfigs(actualConfigs, cliArguments.getFormats());"},{"lineNumber":391,"author":{"gitId":"-"},"content":""},{"lineNumber":392,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, actualConfigs.size());"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        Assert.assertEquals(CONFIG_FORMATS, actualConfigs.get(0).getFileTypeManager().getFormats());"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":397,"author":{"gitId":"anubh-v"},"content":"    public void repoConfig_withoutFormats_useCliFormats() throws Exception {"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(WITHOUT_FORMATS_TEST_CONFIG_FILES)"},{"lineNumber":400,"author":{"gitId":"-"},"content":"                .addFormats(formats)"},{"lineNumber":401,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":403,"author":{"gitId":"-"},"content":""},{"lineNumber":404,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":405,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(((ConfigCliArguments) cliArguments).getRepoConfigFilePath()).parse();"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        RepoConfiguration.setFormatsToRepoConfigs(actualConfigs, cliArguments.getFormats());"},{"lineNumber":407,"author":{"gitId":"-"},"content":""},{"lineNumber":408,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, actualConfigs.size());"},{"lineNumber":409,"author":{"gitId":"-"},"content":""},{"lineNumber":410,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e actualFormats \u003d actualConfigs.get(0).getFileTypeManager().getFormats();"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        Assert.assertEquals(FileType.convertFormatStringsToFileTypes(CLI_FORMATS), actualFormats);"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":413,"author":{"gitId":"-"},"content":""},{"lineNumber":414,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":415,"author":{"gitId":"anubh-v"},"content":"    public void repoConfig_withCustomGroups_useCustomGroups() throws Exception {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(GROUPS_TEST_CONFIG_FILES).build();"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":418,"author":{"gitId":"-"},"content":""},{"lineNumber":419,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":420,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(((ConfigCliArguments) cliArguments).getRepoConfigFilePath()).parse();"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        List\u003cGroupConfiguration\u003e groupConfigs \u003d"},{"lineNumber":422,"author":{"gitId":"-"},"content":"                new GroupConfigCsvParser(((ConfigCliArguments) cliArguments).getGroupConfigFilePath()).parse();"},{"lineNumber":423,"author":{"gitId":"-"},"content":""},{"lineNumber":424,"author":{"gitId":"-"},"content":"        RepoConfiguration.setGroupConfigsToRepos(actualConfigs, groupConfigs);"},{"lineNumber":425,"author":{"gitId":"-"},"content":""},{"lineNumber":426,"author":{"gitId":"0blivious"},"content":"        Assert.assertEquals(2, actualConfigs.size());"},{"lineNumber":427,"author":{"gitId":"0blivious"},"content":"        Assert.assertEquals(FIRST_CONFIG_GROUPS, actualConfigs.get(0).getFileTypeManager().getGroups());"},{"lineNumber":428,"author":{"gitId":"0blivious"},"content":"        Assert.assertEquals(SECOND_CONFIG_GROUPS, actualConfigs.get(1).getFileTypeManager().getGroups());"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":430,"author":{"gitId":"-"},"content":""},{"lineNumber":431,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":432,"author":{"gitId":"anubh-v"},"content":"    public void repoConfig_withoutFormatsAndCliFormats_useAllFormats() throws Exception {"},{"lineNumber":433,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(WITHOUT_FORMATS_TEST_CONFIG_FILES).build();"},{"lineNumber":434,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":435,"author":{"gitId":"-"},"content":""},{"lineNumber":436,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":437,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(((ConfigCliArguments) cliArguments).getRepoConfigFilePath()).parse();"},{"lineNumber":438,"author":{"gitId":"-"},"content":"        RepoConfiguration.setFormatsToRepoConfigs(actualConfigs, cliArguments.getFormats());"},{"lineNumber":439,"author":{"gitId":"-"},"content":""},{"lineNumber":440,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, actualConfigs.size());"},{"lineNumber":441,"author":{"gitId":"-"},"content":"        Assert.assertEquals(FileTypeTest.NO_SPECIFIED_FORMATS, actualConfigs.get(0).getFileTypeManager().getFormats());"},{"lineNumber":442,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":443,"author":{"gitId":"-"},"content":""},{"lineNumber":444,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":445,"author":{"gitId":"yash-chowdhary"},"content":"    public void repoConfig_emptyLocationDifferentBranch_equal() throws Exception {"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        RepoConfiguration emptyLocationEmptyBranchRepoConfig \u003d new RepoConfiguration(new RepoLocation(\"\"), \"\");"},{"lineNumber":447,"author":{"gitId":"-"},"content":"        RepoConfiguration emptyLocationDefaultBranchRepoConfig \u003d new RepoConfiguration(new RepoLocation(\"\"));"},{"lineNumber":448,"author":{"gitId":"-"},"content":"        RepoConfiguration emptyLocationWithBranchRepoConfig \u003d new RepoConfiguration(new RepoLocation(\"\"), \"master\");"},{"lineNumber":449,"author":{"gitId":"-"},"content":""},{"lineNumber":450,"author":{"gitId":"-"},"content":"        Assert.assertEquals(emptyLocationDefaultBranchRepoConfig, emptyLocationEmptyBranchRepoConfig);"},{"lineNumber":451,"author":{"gitId":"-"},"content":"        Assert.assertEquals(emptyLocationWithBranchRepoConfig, emptyLocationEmptyBranchRepoConfig);"},{"lineNumber":452,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":453,"author":{"gitId":"-"},"content":""},{"lineNumber":454,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":455,"author":{"gitId":"yash-chowdhary"},"content":"    public void repoConfig_sameLocationDifferentBranch_notEqual() throws Exception {"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        RepoConfiguration validLocationValidBranchRepoConfig \u003d"},{"lineNumber":457,"author":{"gitId":"-"},"content":"                new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA), \"master\");"},{"lineNumber":458,"author":{"gitId":"-"},"content":"        RepoConfiguration validLocationDefaultBranchRepoConfig \u003d"},{"lineNumber":459,"author":{"gitId":"-"},"content":"                new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA));"},{"lineNumber":460,"author":{"gitId":"-"},"content":""},{"lineNumber":461,"author":{"gitId":"-"},"content":"        Assert.assertNotEquals(validLocationDefaultBranchRepoConfig, validLocationValidBranchRepoConfig);"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":463,"author":{"gitId":"-"},"content":""},{"lineNumber":464,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":465,"author":{"gitId":"anubh-v"},"content":"    public void repoConfig_overrideStandaloneConfig_success() throws Exception {"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA), \"master\","},{"lineNumber":467,"author":{"gitId":"-"},"content":"                Collections.emptyList(), Collections.emptyList(), false, Collections.emptyList(),"},{"lineNumber":468,"author":{"gitId":"-"},"content":"                true, true, true, false);"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        expectedConfig.setIsIgnoredAuthorsListOverriding(true);"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        expectedConfig.setIgnoredAuthorsList(Arrays.asList(\"lithiumlkid\"));"},{"lineNumber":471,"author":{"gitId":"-"},"content":""},{"lineNumber":472,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedAuthorList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":473,"author":{"gitId":"-"},"content":"        Author[] authors \u003d new Author[]{FIRST_AUTHOR, SECOND_AUTHOR, THIRD_AUTHOR, FOURTH_AUTHOR};"},{"lineNumber":474,"author":{"gitId":"-"},"content":"        for (Author author : authors) {"},{"lineNumber":475,"author":{"gitId":"-"},"content":"            Author expectedAuthor \u003d new Author(author);"},{"lineNumber":476,"author":{"gitId":"-"},"content":"            List\u003cString\u003e expectedAuthorIgnoreGlobList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":477,"author":{"gitId":"-"},"content":"            expectedAuthorIgnoreGlobList.addAll(author.getIgnoreGlobList());"},{"lineNumber":478,"author":{"gitId":"-"},"content":""},{"lineNumber":479,"author":{"gitId":"-"},"content":"            // Authors\u0027 original ignoreGlobList contains values from StandaloneConfig repo level, thus need to remove"},{"lineNumber":480,"author":{"gitId":"-"},"content":"            expectedAuthorIgnoreGlobList.removeAll(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":481,"author":{"gitId":"-"},"content":"            expectedAuthor.setIgnoreGlobList(expectedAuthorIgnoreGlobList);"},{"lineNumber":482,"author":{"gitId":"-"},"content":"            expectedAuthorList.add(expectedAuthor);"},{"lineNumber":483,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":484,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorList(expectedAuthorList);"},{"lineNumber":485,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorDisplayNameMap(repoDeltaStandaloneConfig.getAuthorDisplayNameMap());"},{"lineNumber":486,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorDetailsToAuthorMap(repoDeltaStandaloneConfig.getAuthorDetailsToAuthorMap());"},{"lineNumber":487,"author":{"gitId":"-"},"content":""},{"lineNumber":488,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(OVERRIDE_STANDALONE_TEST_CONFIG_FILE)"},{"lineNumber":490,"author":{"gitId":"-"},"content":"                .addFormats(formats)"},{"lineNumber":491,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":493,"author":{"gitId":"-"},"content":""},{"lineNumber":494,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":495,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(((ConfigCliArguments) cliArguments).getRepoConfigFilePath()).parse();"},{"lineNumber":496,"author":{"gitId":"-"},"content":""},{"lineNumber":497,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);"},{"lineNumber":498,"author":{"gitId":"-"},"content":"        GitClone.clone(actualConfig);"},{"lineNumber":499,"author":{"gitId":"-"},"content":"        ReportGenerator.updateRepoConfig(actualConfig);"},{"lineNumber":500,"author":{"gitId":"-"},"content":""},{"lineNumber":501,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);"},{"lineNumber":502,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":503,"author":{"gitId":"-"},"content":""},{"lineNumber":504,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":505,"author":{"gitId":"yash-chowdhary"},"content":"    public void repoConfig_minimalStandaloneConfig_fieldsAssignedDefaultValues() throws Exception {"},{"lineNumber":506,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_MINIMAL_STANDALONE_CONFIG),"},{"lineNumber":507,"author":{"gitId":"-"},"content":"                \"master\");"},{"lineNumber":508,"author":{"gitId":"-"},"content":""},{"lineNumber":509,"author":{"gitId":"-"},"content":"        Author firstAuthor \u003d new Author(\"bluein-green\");"},{"lineNumber":510,"author":{"gitId":"-"},"content":"        Author secondAuthor \u003d new Author(\"jylee-git\");"},{"lineNumber":511,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedAuthors \u003d Arrays.asList(firstAuthor, secondAuthor);"},{"lineNumber":512,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorList(expectedAuthors);"},{"lineNumber":513,"author":{"gitId":"-"},"content":""},{"lineNumber":514,"author":{"gitId":"-"},"content":"        expectedConfig.setIgnoreGlobList(Collections.emptyList());"},{"lineNumber":515,"author":{"gitId":"-"},"content":"        expectedConfig.setFormats(Collections.emptyList());"},{"lineNumber":516,"author":{"gitId":"-"},"content":"        expectedConfig.setIgnoreCommitList(Collections.emptyList());"},{"lineNumber":517,"author":{"gitId":"-"},"content":""},{"lineNumber":518,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_MINIMAL_STANDALONE_CONFIG),"},{"lineNumber":519,"author":{"gitId":"-"},"content":"                \"master\");"},{"lineNumber":520,"author":{"gitId":"-"},"content":"        GitClone.clone(actualConfig);"},{"lineNumber":521,"author":{"gitId":"-"},"content":"        ReportGenerator.updateRepoConfig(actualConfig);"},{"lineNumber":522,"author":{"gitId":"-"},"content":""},{"lineNumber":523,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);"},{"lineNumber":524,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":525,"author":{"gitId":"-"},"content":""},{"lineNumber":526,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":527,"author":{"gitId":"anubh-v"},"content":"    public void repoConfig_removeIgnoredAuthors_success() throws Exception {"},{"lineNumber":528,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedAuthors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":529,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(FIRST_AUTHOR);"},{"lineNumber":530,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":531,"author":{"gitId":"-"},"content":"        expectedAuthors.add(author);"},{"lineNumber":532,"author":{"gitId":"-"},"content":""},{"lineNumber":533,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA), \"master\");"},{"lineNumber":534,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorList(expectedAuthors);"},{"lineNumber":535,"author":{"gitId":"-"},"content":"        expectedConfig.addAuthorDetailsToAuthorMapEntry(author, FIRST_AUTHOR_ALIASES);"},{"lineNumber":536,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorDisplayName(author, \"Ahm\");"},{"lineNumber":537,"author":{"gitId":"-"},"content":""},{"lineNumber":538,"author":{"gitId":"-"},"content":"        expectedConfig.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        expectedConfig.setFormats(CONFIG_FORMATS);"},{"lineNumber":540,"author":{"gitId":"-"},"content":"        expectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":541,"author":{"gitId":"-"},"content":"        expectedConfig.setIgnoredAuthorsList(Arrays.asList(\"jordancjq\", \"Eugene Peh\"));"},{"lineNumber":542,"author":{"gitId":"-"},"content":""},{"lineNumber":543,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);"},{"lineNumber":544,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(IGNORE_AUTHORS_TEST_CONFIG_FILE)"},{"lineNumber":545,"author":{"gitId":"-"},"content":"                .addFormats(formats)"},{"lineNumber":546,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":548,"author":{"gitId":"-"},"content":""},{"lineNumber":549,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":550,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(((ConfigCliArguments) cliArguments).getRepoConfigFilePath()).parse();"},{"lineNumber":551,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e authorConfigs \u003d"},{"lineNumber":552,"author":{"gitId":"-"},"content":"                new AuthorConfigCsvParser(((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()).parse();"},{"lineNumber":553,"author":{"gitId":"-"},"content":"        RepoConfiguration.merge(actualConfigs, authorConfigs);"},{"lineNumber":554,"author":{"gitId":"-"},"content":""},{"lineNumber":555,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);"},{"lineNumber":556,"author":{"gitId":"-"},"content":"        GitClone.clone(actualConfig);"},{"lineNumber":557,"author":{"gitId":"-"},"content":"        ReportGenerator.updateRepoConfig(actualConfig);"},{"lineNumber":558,"author":{"gitId":"-"},"content":"        Method updateAuthorList \u003d ReportGenerator.class.getDeclaredMethod(\"updateAuthorList\", RepoConfiguration.class);"},{"lineNumber":559,"author":{"gitId":"-"},"content":"        updateAuthorList.setAccessible(true);"},{"lineNumber":560,"author":{"gitId":"-"},"content":"        updateAuthorList.invoke(null, actualConfig);"},{"lineNumber":561,"author":{"gitId":"-"},"content":""},{"lineNumber":562,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);"},{"lineNumber":563,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":564,"author":{"gitId":"-"},"content":""},{"lineNumber":565,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":566,"author":{"gitId":"-"},"content":"    public void repoConfig_withInvalidLocation_success() throws Exception {"},{"lineNumber":567,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);"},{"lineNumber":568,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_BETA, TEST_REPO_DELTA, TEST_REPO_INVALID_LOCATION)"},{"lineNumber":569,"author":{"gitId":"-"},"content":"                .addFormats(formats)"},{"lineNumber":570,"author":{"gitId":"-"},"content":"                .addIgnoreStandaloneConfig()"},{"lineNumber":571,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":572,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":573,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d RepoSense.getRepoConfigurations((LocationsCliArguments) cliArguments);"},{"lineNumber":574,"author":{"gitId":"-"},"content":""},{"lineNumber":575,"author":{"gitId":"-"},"content":"        Assert.assertEquals(2, actualConfigs.size());"},{"lineNumber":576,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":577,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"anubh-v":80,"yash-chowdhary":7,"-":484,"0blivious":6}},{"path":"src/test/java/reposense/model/StandaloneConfigTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"anubh-v"},"content":"import static reposense.util.TestUtil.loadResource;"},{"lineNumber":4,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.Assert;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.BeforeClass;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.google.gson.JsonSyntaxException;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.parser.StandaloneConfigJsonParser;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StandaloneConfigTest extends GitTestTemplate {"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"anubh-v"},"content":"    private static final Path VALID_CONFIG \u003d loadResource(StandaloneConfigTest.class,"},{"lineNumber":21,"author":{"gitId":"anubh-v"},"content":"            \"StandaloneConfigTest/valid_config.json\");"},{"lineNumber":22,"author":{"gitId":"anubh-v"},"content":"    private static final Path INVALID_IGNOREGLOB_CONFIG \u003d loadResource(StandaloneConfigTest.class,"},{"lineNumber":23,"author":{"gitId":"anubh-v"},"content":"            \"StandaloneConfigTest/lithiumlkid_invalidIgnoreGlob_config.json\");"},{"lineNumber":24,"author":{"gitId":"anubh-v"},"content":"    private static final Path INVALID_FORMATS_CONFIG \u003d loadResource(StandaloneConfigTest.class,"},{"lineNumber":25,"author":{"gitId":"anubh-v"},"content":"            \"StandaloneConfigTest/invalidFormats_config.json\");"},{"lineNumber":26,"author":{"gitId":"anubh-v"},"content":"    private static final Path INVALID_IGNORECOMMIT_CONFIG \u003d loadResource(StandaloneConfigTest.class,"},{"lineNumber":27,"author":{"gitId":"anubh-v"},"content":"            \"StandaloneConfigTest/invalidIgnoreCommit_config.json\");"},{"lineNumber":28,"author":{"gitId":"anubh-v"},"content":"    private static final Path SPECIAL_CHARACTER_AUTHOR_CONFIG \u003d loadResource(StandaloneConfigTest.class,"},{"lineNumber":29,"author":{"gitId":"anubh-v"},"content":"            \"StandaloneConfigTest/specialCharacterAuthor_config.json\");"},{"lineNumber":30,"author":{"gitId":"anubh-v"},"content":"    private static final Path AUTHORS_TRAILING_COMMAS_CONFIG \u003d loadResource(StandaloneConfigTest.class,"},{"lineNumber":31,"author":{"gitId":"anubh-v"},"content":"            \"StandaloneConfigTest/authors_trailingCommas_config.json\");"},{"lineNumber":32,"author":{"gitId":"anubh-v"},"content":"    private static final Path LITHIUMLKID_TRAILING_COMMAS_CONFIG \u003d loadResource(StandaloneConfigTest.class,"},{"lineNumber":33,"author":{"gitId":"anubh-v"},"content":"            \"StandaloneConfigTest/lithiumlkid_trailingCommas_config.json\");"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Author FIRST_SPECIAL_CHARACTER_AUTHOR \u003d new Author(\"‘Processed�‘Cooked�\");"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Author SECOND_SPECIAL_CHARACTER_AUTHOR \u003d new Author(\"(codeeong)\");"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Author THIRD_SPECIAL_CHARACTER_AUTHOR \u003d new Author(\"^:jordancjq;$\");"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final List\u003cAuthor\u003e AUTHOR_CONFIG_SPECIAL_CHARACTER_AUTHORS \u003d Arrays.asList("},{"lineNumber":39,"author":{"gitId":"-"},"content":"            FIRST_SPECIAL_CHARACTER_AUTHOR, SECOND_SPECIAL_CHARACTER_AUTHOR, THIRD_SPECIAL_CHARACTER_AUTHOR);"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static StandaloneConfig validStandaloneConfig;"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @BeforeClass"},{"lineNumber":44,"author":{"gitId":"yash-chowdhary"},"content":"    public static void setUp() throws Exception {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        validStandaloneConfig \u003d new StandaloneConfigJsonParser().parse(VALID_CONFIG);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":49,"author":{"gitId":"yash-chowdhary"},"content":"    public void standaloneConfig_validJson_success() throws Exception {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StandaloneConfig standaloneConfig \u003d new StandaloneConfigJsonParser().parse(VALID_CONFIG);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        config.update(standaloneConfig);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":55,"author":{"gitId":"yash-chowdhary"},"content":"    public void standaloneConfig_specialCharacterAuthor_success() throws Exception {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        StandaloneConfig standaloneConfig \u003d new StandaloneConfigJsonParser().parse(SPECIAL_CHARACTER_AUTHOR_CONFIG);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        config.update(standaloneConfig);"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Assert.assertEquals(AUTHOR_CONFIG_SPECIAL_CHARACTER_AUTHORS, config.getAuthorList());"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":63,"author":{"gitId":"yash-chowdhary"},"content":"    public void standaloneConfig_trailingCommasInList_success() throws Exception {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        StandaloneConfig standaloneConfig \u003d new StandaloneConfigJsonParser().parse(AUTHORS_TRAILING_COMMAS_CONFIG);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        config.update(standaloneConfig);"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Assert.assertEquals(validStandaloneConfig, standaloneConfig);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test(expected \u003d JsonSyntaxException.class)"},{"lineNumber":71,"author":{"gitId":"yash-chowdhary"},"content":"    public void standaloneConfig_trailingCommasInMaps_throwsJsonSyntaxException() throws Exception {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        new StandaloneConfigJsonParser().parse(LITHIUMLKID_TRAILING_COMMAS_CONFIG);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test(expected \u003d IllegalArgumentException.class)"},{"lineNumber":76,"author":{"gitId":"yash-chowdhary"},"content":"    public void standaloneConfig_invalidIgnoreGlob_throwIllegalArgumentException() throws Exception {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        StandaloneConfig standaloneConfig \u003d new StandaloneConfigJsonParser().parse(INVALID_IGNOREGLOB_CONFIG);"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        config.update(standaloneConfig);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test(expected \u003d IllegalArgumentException.class)"},{"lineNumber":82,"author":{"gitId":"yash-chowdhary"},"content":"    public void standaloneConfig_invalidFormats_throwIllegalArgumentException() throws Exception {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        StandaloneConfig standaloneConfig \u003d new StandaloneConfigJsonParser().parse(INVALID_FORMATS_CONFIG);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        config.update(standaloneConfig);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test(expected \u003d IllegalArgumentException.class)"},{"lineNumber":88,"author":{"gitId":"yash-chowdhary"},"content":"    public void standaloneConfig_invalidIgnoreCommit_throwIllegalArgumentException() throws Exception {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        StandaloneConfig standaloneConfig \u003d new StandaloneConfigJsonParser().parse(INVALID_IGNORECOMMIT_CONFIG);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        config.update(standaloneConfig);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"anubh-v":16,"yash-chowdhary":8,"-":68}},{"path":"src/test/java/reposense/parser/ArgsParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.parser;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.apache.tools.ant.types.Commandline.translateCommandline;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"anubh-v"},"content":"import static reposense.util.TestUtil.loadResource;"},{"lineNumber":6,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.File;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Calendar;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Date;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.After;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.Assert;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.Before;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.Test;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.helper.HelpScreenException;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.RepoSense;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.model.CliArguments;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.model.ConfigCliArguments;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.model.FileType;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import reposense.model.FileTypeTest;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import reposense.model.LocationsCliArguments;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import reposense.model.ViewCliArguments;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import reposense.util.InputBuilder;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;"},{"lineNumber":35,"author":{"gitId":"jamessspanggg"},"content":"import reposense.util.TimeUtil;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class ArgsParserTest {"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Path PROJECT_DIRECTORY \u003d Paths.get(System.getProperty(\"user.dir\"));"},{"lineNumber":40,"author":{"gitId":"Tejas2805"},"content":"    private static final Path CONFIG_DIRECTORY \u003d Paths.get(System.getProperty(\"user.dir\")"},{"lineNumber":41,"author":{"gitId":"Tejas2805"},"content":"            + File.separator + \"config\" + File.separator);"},{"lineNumber":42,"author":{"gitId":"anubh-v"},"content":"    private static final Path CONFIG_FOLDER_ABSOLUTE \u003d loadResource(ArgsParserTest.class, \"cli_location_test\");"},{"lineNumber":43,"author":{"gitId":"anubh-v"},"content":"    private static final Path OUTPUT_DIRECTORY_ABSOLUTE \u003d loadResource(ArgsParserTest.class, \"output\");"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Path CONFIG_FOLDER_RELATIVE \u003d PROJECT_DIRECTORY.relativize(CONFIG_FOLDER_ABSOLUTE);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Path OUTPUT_DIRECTORY_RELATIVE \u003d PROJECT_DIRECTORY.relativize(OUTPUT_DIRECTORY_ABSOLUTE);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Path REPO_CONFIG_CSV_FILE \u003d"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            CONFIG_FOLDER_ABSOLUTE.resolve(RepoConfigCsvParser.REPO_CONFIG_FILENAME);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_CSV_FILE \u003d"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            CONFIG_FOLDER_ABSOLUTE.resolve(AuthorConfigCsvParser.AUTHOR_CONFIG_FILENAME);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String NONEXISTENT_DIRECTORY \u003d \"some_non_existent_dir/\";"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final InputBuilder DEFAULT_INPUT_BUILDER \u003d new InputBuilder();"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_REPOSENSE \u003d \"https://github.com/reposense/RepoSense.git\";"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_BETA \u003d \"https://github.com/reposense/testrepo-Beta.git\";"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_CHARLIE \u003d \"https://github.com/reposense/testrepo-Charlie.git\";"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_DELTA \u003d \"https://github.com/reposense/testrepo-Delta.git\";"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final String DEFAULT_TIMEZONE \u003d \"Asia/Singapore\";"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final ZoneId TIME_ZONE_ID \u003d TestUtil.getZoneId(DEFAULT_TIMEZONE);"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Before"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void before() {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        DEFAULT_INPUT_BUILDER.reset().addConfig(CONFIG_FOLDER_ABSOLUTE);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @After"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void after() {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            FileUtil.deleteDirectory(PROJECT_DIRECTORY.resolve(NONEXISTENT_DIRECTORY).toString());"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            System.err.println(e.getMessage());"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":77,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_allCorrectInputs_success() throws Exception {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE)"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\")"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .addFormats(\"java adoc html css js\")"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .addIgnoreStandaloneConfig()"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .addView()"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE)"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":90,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":92,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":94,"author":{"gitId":"-"},"content":"                OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME), cliArguments.getOutputFilePath()));"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Date expectedSinceDate \u003d TestUtil.getSinceDate(2017, Calendar.JULY, 1);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Date expectedUntilDate \u003d TestUtil.getUntilDate(2017, Calendar.NOVEMBER, 30);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes("},{"lineNumber":102,"author":{"gitId":"-"},"content":"                Arrays.asList(\"java\", \"adoc\", \"html\", \"css\", \"js\"));"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedFormats, cliArguments.getFormats());"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ZoneId.of(DEFAULT_TIMEZONE), cliArguments.getZoneId());"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test(expected \u003d HelpScreenException.class)"},{"lineNumber":111,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_help_throwsHelpScreenException() throws Exception {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String input \u003d \"--help\";"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":117,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_allCorrectInputsAlias_success() throws Exception {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String input \u003d String.format(\"-c %s -o %s -s 01/07/2017 -u 30/11/2017 -f java adoc html css js -i -v -t %s\","},{"lineNumber":119,"author":{"gitId":"-"},"content":"                CONFIG_FOLDER_ABSOLUTE, OUTPUT_DIRECTORY_ABSOLUTE, DEFAULT_TIMEZONE);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":123,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":125,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":127,"author":{"gitId":"-"},"content":"                OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME), cliArguments.getOutputFilePath()));"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Date expectedSinceDate \u003d TestUtil.getSinceDate(2017, Calendar.JULY, 1);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Date expectedUntilDate \u003d TestUtil.getUntilDate(2017, Calendar.NOVEMBER, 30);"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes("},{"lineNumber":135,"author":{"gitId":"-"},"content":"                Arrays.asList(\"java\", \"adoc\", \"html\", \"css\", \"js\"));"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedFormats, cliArguments.getFormats());"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ZoneId.of(DEFAULT_TIMEZONE), cliArguments.getZoneId());"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":144,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_withExtraWhitespaces_success() throws Exception {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE).addWhiteSpace(5)"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE).addWhiteSpace(4)"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\").addWhiteSpace(3)"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\").addWhiteSpace(6)"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .addFormats(\"java   adoc  html      css js   \")"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .addIgnoreStandaloneConfig().addWhiteSpace(1)"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .addView().addWhiteSpace(4)"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE).addWhiteSpace(5)"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":157,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":159,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":161,"author":{"gitId":"-"},"content":"                OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME), cliArguments.getOutputFilePath()));"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Date expectedSinceDate \u003d TestUtil.getSinceDate(2017, Calendar.JULY, 1);"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Date expectedUntilDate \u003d TestUtil.getUntilDate(2017, Calendar.NOVEMBER, 30);"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes(Arrays.asList("},{"lineNumber":169,"author":{"gitId":"-"},"content":"                \"java\", \"adoc\", \"html\", \"css\", \"js\"));"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedFormats, cliArguments.getFormats());"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ZoneId.of(DEFAULT_TIMEZONE), cliArguments.getZoneId());"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":178,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_configFolderOnly_success() throws Exception {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE).build();"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":183,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":185,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // Optional arguments have default values"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertDateDiffOneMonth(cliArguments.getSinceDate(), cliArguments.getUntilDate(), cliArguments.getZoneId());"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertDateDiffEndOfDay(cliArguments.getUntilDate(), cliArguments.getZoneId());"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ArgsParser.DEFAULT_REPORT_NAME, cliArguments.getOutputFilePath().getFileName().toString());"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        Assert.assertEquals(FileTypeTest.NO_SPECIFIED_FORMATS, cliArguments.getFormats());"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Assert.assertFalse(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_RELATIVE).build();"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":197,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":199,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // Optional arguments have default values"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertDateDiffOneMonth(cliArguments.getSinceDate(), cliArguments.getUntilDate(), cliArguments.getZoneId());"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertDateDiffEndOfDay(cliArguments.getUntilDate(), cliArguments.getZoneId());"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ArgsParser.DEFAULT_REPORT_NAME, cliArguments.getOutputFilePath().getFileName().toString());"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Assert.assertEquals(FileTypeTest.NO_SPECIFIED_FORMATS, cliArguments.getFormats());"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Assert.assertFalse(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ZoneId.systemDefault(), cliArguments.getZoneId());"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":210,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_viewOnly_success() throws Exception {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addView(OUTPUT_DIRECTORY_ABSOLUTE).build();"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ViewCliArguments);"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":215,"author":{"gitId":"-"},"content":"                OUTPUT_DIRECTORY_ABSOLUTE, ((ViewCliArguments) cliArguments).getReportDirectoryPath()));"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":219,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_withIgnore_success() throws Exception {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                .addIgnoreStandaloneConfig()"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"        String inputWithAlias \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                .add(\"-i\")"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        CliArguments cliArgumentsWithAlias \u003d ArgsParser.parse(translateCommandline(inputWithAlias));"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArgumentsWithAlias instanceof LocationsCliArguments);"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"        Assert.assertTrue(((LocationsCliArguments) cliArguments).isStandaloneConfigIgnored());"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        Assert.assertTrue(((LocationsCliArguments) cliArgumentsWithAlias).isStandaloneConfigIgnored());"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"        Assert.assertEquals(cliArguments, cliArgumentsWithAlias);"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":240,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_withoutIgnore_success() throws Exception {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA).build();"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":243,"author":{"gitId":"-"},"content":""},{"lineNumber":244,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        Assert.assertFalse(((LocationsCliArguments) cliArguments).isStandaloneConfigIgnored());"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":249,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_viewOnlyWithoutArgs_returnsConfigCliArguments() throws Exception {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addView().build();"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":254,"author":{"gitId":"Tejas2805"},"content":"        Assert.assertEquals(CONFIG_DIRECTORY.toString(), ("},{"lineNumber":255,"author":{"gitId":"-"},"content":"                (ConfigCliArguments) cliArguments).getConfigFolderPath().toString());"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":260,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_configFolderAndOutputDirectory_success() throws Exception {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        Path expectedRelativeOutputDirectoryPath \u003d OUTPUT_DIRECTORY_RELATIVE.resolve(ArgsParser.DEFAULT_REPORT_NAME);"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        Path expectedAbsoluteOutputDirectoryPath \u003d OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME);"},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_RELATIVE)"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":270,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":272,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(expectedRelativeOutputDirectoryPath, cliArguments.getOutputFilePath()));"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_RELATIVE)"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE)"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":281,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":283,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile(expectedAbsoluteOutputDirectoryPath, cliArguments.getOutputFilePath()));"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":288,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_configFolderAndViewWithouthArgs_returnsConfigCliArguments() throws Exception {"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)"},{"lineNumber":290,"author":{"gitId":"-"},"content":"                .addView()"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":293,"author":{"gitId":"-"},"content":""},{"lineNumber":294,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":296,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":298,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":300,"author":{"gitId":"-"},"content":""},{"lineNumber":301,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_RELATIVE)"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                .addView()"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":308,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":310,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":315,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_configFolderAndViewWithArgs_returnsConfigCliArguments() throws Exception {"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                .addView(OUTPUT_DIRECTORY_ABSOLUTE)"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":320,"author":{"gitId":"-"},"content":""},{"lineNumber":321,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":323,"author":{"gitId":"-"},"content":"                REPO_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getRepoConfigFilePath()));"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":325,"author":{"gitId":"-"},"content":"                AUTHOR_CONFIG_CSV_FILE, ((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()));"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":328,"author":{"gitId":"-"},"content":""},{"lineNumber":329,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":330,"author":{"gitId":"yash-chowdhary"},"content":"    public void sinceDate_correctFormat_success() throws Exception {"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER"},{"lineNumber":332,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\")"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE)"},{"lineNumber":334,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        Date expectedSinceDate \u003d TestUtil.getSinceDate(2017, Calendar.JULY, 1);"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":340,"author":{"gitId":"-"},"content":""},{"lineNumber":341,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":342,"author":{"gitId":"yash-chowdhary"},"content":"    public void untilDate_correctFormat_success() throws Exception {"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER"},{"lineNumber":344,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE)"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        Date expectedUntilDate \u003d TestUtil.getUntilDate(2017, Calendar.NOVEMBER, 30);"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":354,"author":{"gitId":"yash-chowdhary"},"content":"    public void sinceDate_withExtraDate_success() throws Exception {"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER"},{"lineNumber":356,"author":{"gitId":"-"},"content":"                .addSinceDate(\"\\\"01/07/2017 01/07/2018\\\"\")"},{"lineNumber":357,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE)"},{"lineNumber":358,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        Date expectedSinceDate \u003d TestUtil.getSinceDate(2017, Calendar.JULY, 1);"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":364,"author":{"gitId":"-"},"content":""},{"lineNumber":365,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":366,"author":{"gitId":"yash-chowdhary"},"content":"    public void untilDate_withExtraTime_success() throws Exception {"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER"},{"lineNumber":368,"author":{"gitId":"-"},"content":"                .addUntilDate(\"\\\"30/11/2017 10:10:10\\\"\")"},{"lineNumber":369,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE)"},{"lineNumber":370,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        Date expectedUntilDate \u003d TestUtil.getUntilDate(2017, Calendar.NOVEMBER, 30);"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":376,"author":{"gitId":"-"},"content":""},{"lineNumber":377,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":378,"author":{"gitId":"niqiukun"},"content":"    public void period_inDaysWithSinceDate_success() throws Exception {"},{"lineNumber":379,"author":{"gitId":"niqiukun"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER"},{"lineNumber":380,"author":{"gitId":"niqiukun"},"content":"                .addSinceDate(\"01/07/2017\")"},{"lineNumber":381,"author":{"gitId":"niqiukun"},"content":"                .addPeriod(\"2d\")"},{"lineNumber":382,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE)"},{"lineNumber":383,"author":{"gitId":"niqiukun"},"content":"                .build();"},{"lineNumber":384,"author":{"gitId":"niqiukun"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":385,"author":{"gitId":"niqiukun"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":386,"author":{"gitId":"niqiukun"},"content":"        Date expectedUntilDate \u003d TestUtil.getUntilDate(2017, Calendar.JULY, 2);"},{"lineNumber":387,"author":{"gitId":"niqiukun"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());"},{"lineNumber":388,"author":{"gitId":"niqiukun"},"content":"    }"},{"lineNumber":389,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":390,"author":{"gitId":"niqiukun"},"content":"    @Test"},{"lineNumber":391,"author":{"gitId":"niqiukun"},"content":"    public void period_inWeeksWithUntilDate_success() throws Exception {"},{"lineNumber":392,"author":{"gitId":"niqiukun"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER"},{"lineNumber":393,"author":{"gitId":"niqiukun"},"content":"                .addUntilDate(\"14/07/2017\")"},{"lineNumber":394,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIMEZONE)"},{"lineNumber":395,"author":{"gitId":"niqiukun"},"content":"                .addPeriod(\"2w\")"},{"lineNumber":396,"author":{"gitId":"niqiukun"},"content":"                .build();"},{"lineNumber":397,"author":{"gitId":"niqiukun"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":398,"author":{"gitId":"niqiukun"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":399,"author":{"gitId":"niqiukun"},"content":"        Date expectedSinceDate \u003d TestUtil.getSinceDate(2017, Calendar.JULY, 1);"},{"lineNumber":400,"author":{"gitId":"niqiukun"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());"},{"lineNumber":401,"author":{"gitId":"niqiukun"},"content":"    }"},{"lineNumber":402,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":403,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":404,"author":{"gitId":"yash-chowdhary"},"content":"    public void formats_inAlphanumeric_success() throws Exception {"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addFormats(\"java js css 7z\").build();"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":408,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes("},{"lineNumber":409,"author":{"gitId":"-"},"content":"                Arrays.asList(\"java\", \"js\", \"css\", \"7z\"));"},{"lineNumber":410,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedFormats, cliArguments.getFormats());"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":412,"author":{"gitId":"-"},"content":""},{"lineNumber":413,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    public void numCloningThreads_default_success() throws Exception {"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.build();"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":418,"author":{"gitId":"-"},"content":"        int expectedNumThreads \u003d ArgsParser.DEFAULT_NUM_CLONING_THREADS;"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedNumThreads, cliArguments.getNumCloningThreads());"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":421,"author":{"gitId":"-"},"content":""},{"lineNumber":422,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    public void numCloningThreads_isNumeric_success() throws Exception {"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER"},{"lineNumber":425,"author":{"gitId":"-"},"content":"                .addNumCloningThreads(2)"},{"lineNumber":426,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":427,"author":{"gitId":"-"},"content":"        System.out.println(input);"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":429,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        int expectedNumThreads \u003d 2;"},{"lineNumber":431,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedNumThreads, cliArguments.getNumCloningThreads());"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":433,"author":{"gitId":"-"},"content":""},{"lineNumber":434,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    public void numAnalysisThreads_default_success() throws Exception {"},{"lineNumber":436,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.build();"},{"lineNumber":437,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":438,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":439,"author":{"gitId":"-"},"content":"        int expectedNumThreads \u003d ArgsParser.DEFAULT_NUM_ANALYSIS_THREADS;"},{"lineNumber":440,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedNumThreads, cliArguments.getNumAnalysisThreads());"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":442,"author":{"gitId":"-"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    public void numAnalysisThreads_isNumeric_success() throws Exception {"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER"},{"lineNumber":446,"author":{"gitId":"-"},"content":"                .addNumAnalysisThreads(2)"},{"lineNumber":447,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":448,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":449,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":450,"author":{"gitId":"-"},"content":"        int expectedNumThreads \u003d 2;"},{"lineNumber":451,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedNumThreads, cliArguments.getNumAnalysisThreads());"},{"lineNumber":452,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":453,"author":{"gitId":"-"},"content":""},{"lineNumber":454,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":455,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_validGitRepoLocations_repoConfigurationListCorrectSize() throws Exception {"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA).build();"},{"lineNumber":457,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":458,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);"},{"lineNumber":459,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e repoConfigs \u003d RepoSense.getRepoConfigurations((LocationsCliArguments) cliArguments);"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        Assert.assertEquals(2, repoConfigs.size());"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":462,"author":{"gitId":"-"},"content":""},{"lineNumber":463,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":464,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_repoLocationsAndView_returnsLocationCliArguments() throws Exception {"},{"lineNumber":465,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)"},{"lineNumber":466,"author":{"gitId":"-"},"content":"                .addView()"},{"lineNumber":467,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":468,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":469,"author":{"gitId":"-"},"content":""},{"lineNumber":470,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":472,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedLocations \u003d Arrays.asList(TEST_REPO_REPOSENSE, TEST_REPO_DELTA);"},{"lineNumber":473,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedLocations, ((LocationsCliArguments) cliArguments).getLocations());"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":475,"author":{"gitId":"-"},"content":""},{"lineNumber":476,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":477,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_repoLocationsOnly_success() throws Exception {"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA).build();"},{"lineNumber":479,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":480,"author":{"gitId":"-"},"content":""},{"lineNumber":481,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);"},{"lineNumber":482,"author":{"gitId":"-"},"content":"        Assert.assertFalse(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":483,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedLocations \u003d Arrays.asList(TEST_REPO_REPOSENSE, TEST_REPO_DELTA);"},{"lineNumber":484,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedLocations, ((LocationsCliArguments) cliArguments).getLocations());"},{"lineNumber":485,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":486,"author":{"gitId":"-"},"content":""},{"lineNumber":487,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":488,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_repoLocationsAndViewWithArgs_returnsLocationsCliArguments() throws Exception {"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)"},{"lineNumber":490,"author":{"gitId":"-"},"content":"                .addView(OUTPUT_DIRECTORY_ABSOLUTE)"},{"lineNumber":491,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":493,"author":{"gitId":"-"},"content":""},{"lineNumber":494,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedLocations \u003d Arrays.asList(TEST_REPO_REPOSENSE, TEST_REPO_DELTA);"},{"lineNumber":497,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedLocations, ((LocationsCliArguments) cliArguments).getLocations());"},{"lineNumber":498,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":499,"author":{"gitId":"-"},"content":""},{"lineNumber":500,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":501,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_viewWithArgCwd_returnsViewCliArguments() throws Exception {"},{"lineNumber":502,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addView(new File(\".\").toPath()).build();"},{"lineNumber":503,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":504,"author":{"gitId":"-"},"content":""},{"lineNumber":505,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ViewCliArguments);"},{"lineNumber":506,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":507,"author":{"gitId":"-"},"content":""},{"lineNumber":508,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":509,"author":{"gitId":"anubh-v"},"content":"    public void parse_configOrLocationsSimilar_success() throws Exception {"},{"lineNumber":510,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE).build();"},{"lineNumber":511,"author":{"gitId":"-"},"content":"        CliArguments configCliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":512,"author":{"gitId":"-"},"content":"        Assert.assertTrue(configCliArguments instanceof ConfigCliArguments);"},{"lineNumber":513,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualRepoConfigs \u003d"},{"lineNumber":514,"author":{"gitId":"-"},"content":"                RepoSense.getRepoConfigurations((ConfigCliArguments) configCliArguments);"},{"lineNumber":515,"author":{"gitId":"-"},"content":""},{"lineNumber":516,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().addRepos(TEST_REPO_BETA, TEST_REPO_CHARLIE, TEST_REPO_DELTA).build();"},{"lineNumber":517,"author":{"gitId":"-"},"content":"        CliArguments locationCliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":518,"author":{"gitId":"-"},"content":"        Assert.assertTrue(locationCliArguments instanceof LocationsCliArguments);"},{"lineNumber":519,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e expectedRepoConfigs \u003d"},{"lineNumber":520,"author":{"gitId":"-"},"content":"                RepoSense.getRepoConfigurations((LocationsCliArguments) locationCliArguments);"},{"lineNumber":521,"author":{"gitId":"-"},"content":""},{"lineNumber":522,"author":{"gitId":"-"},"content":"        Assert.assertEquals(actualRepoConfigs, expectedRepoConfigs);"},{"lineNumber":523,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":524,"author":{"gitId":"-"},"content":""},{"lineNumber":525,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":526,"author":{"gitId":"yash-chowdhary"},"content":"    public void emptyArgs_defaultConfigFolderPath() throws Exception {"},{"lineNumber":527,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(new String[]{});"},{"lineNumber":528,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":529,"author":{"gitId":"Tejas2805"},"content":"        Assert.assertEquals(CONFIG_DIRECTORY.toString(), ("},{"lineNumber":530,"author":{"gitId":"-"},"content":"                (ConfigCliArguments) cliArguments).getConfigFolderPath().toString());"},{"lineNumber":531,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":532,"author":{"gitId":"-"},"content":""},{"lineNumber":533,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":534,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_repoAliases_sameResult() throws Exception {"},{"lineNumber":535,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_BETA).build();"},{"lineNumber":536,"author":{"gitId":"-"},"content":"        CliArguments repoAliasCliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":537,"author":{"gitId":"-"},"content":""},{"lineNumber":538,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().add(String.format(\"--repos %s\", TEST_REPO_BETA)).build();"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        CliArguments reposAliasCliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":540,"author":{"gitId":"-"},"content":""},{"lineNumber":541,"author":{"gitId":"-"},"content":"        Assert.assertEquals(repoAliasCliArguments, reposAliasCliArguments);"},{"lineNumber":542,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":543,"author":{"gitId":"-"},"content":""},{"lineNumber":544,"author":{"gitId":"-"},"content":"    @Test (expected \u003d ParseException.class)"},{"lineNumber":545,"author":{"gitId":"-"},"content":"    public void parse_noValidRepoLocation_throwsParseException()"},{"lineNumber":546,"author":{"gitId":"-"},"content":"            throws ParseException, HelpScreenException {"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(\"https://githubaaaa.com/asdasdasdasd/RepoSense\").build();"},{"lineNumber":548,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":549,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof LocationsCliArguments);"},{"lineNumber":550,"author":{"gitId":"-"},"content":"        RepoSense.getRepoConfigurations((LocationsCliArguments) cliArguments);"},{"lineNumber":551,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":552,"author":{"gitId":"-"},"content":""},{"lineNumber":553,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)"},{"lineNumber":554,"author":{"gitId":"yash-chowdhary"},"content":"    public void absoluteConfigFolder_withoutRequiredConfigFiles_throwsParseException() throws Exception {"},{"lineNumber":555,"author":{"gitId":"-"},"content":"        Path absDirectory \u003d PROJECT_DIRECTORY.getParent().toAbsolutePath();"},{"lineNumber":556,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(absDirectory).build();"},{"lineNumber":557,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));"},{"lineNumber":558,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":559,"author":{"gitId":"-"},"content":""},{"lineNumber":560,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)"},{"lineNumber":561,"author":{"gitId":"yash-chowdhary"},"content":"    public void relativeConfigFolder_withoutRequiredConfigFiles_throwsParseException() throws Exception {"},{"lineNumber":562,"author":{"gitId":"-"},"content":"        Path relDirectory \u003d PROJECT_DIRECTORY.getParent();"},{"lineNumber":563,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(relDirectory).build();"},{"lineNumber":564,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));"},{"lineNumber":565,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":566,"author":{"gitId":"-"},"content":""},{"lineNumber":567,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)"},{"lineNumber":568,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_notExistsConfigFolder_throwsParseException() throws Exception {"},{"lineNumber":569,"author":{"gitId":"-"},"content":"        Path absConfigFolder \u003d PROJECT_DIRECTORY.resolve(\"non_existing_random_folder\");"},{"lineNumber":570,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(absConfigFolder).build();"},{"lineNumber":571,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));"},{"lineNumber":572,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":573,"author":{"gitId":"-"},"content":""},{"lineNumber":574,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)"},{"lineNumber":575,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_configCsvFileAsConfigFolder_throwsParseException() throws Exception {"},{"lineNumber":576,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(REPO_CONFIG_CSV_FILE).build();"},{"lineNumber":577,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));"},{"lineNumber":578,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":579,"author":{"gitId":"-"},"content":""},{"lineNumber":580,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)"},{"lineNumber":581,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_missingConfigValue_throwsParseException() throws Exception {"},{"lineNumber":582,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(new File(\"\").toPath()).build();"},{"lineNumber":583,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));"},{"lineNumber":584,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":585,"author":{"gitId":"-"},"content":""},{"lineNumber":586,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":587,"author":{"gitId":"yash-chowdhary"},"content":"    public void outputPath_nonExistentDirectory_success() throws Exception {"},{"lineNumber":588,"author":{"gitId":"-"},"content":"        Path nonExistentDirectory \u003d PROJECT_DIRECTORY.resolve(NONEXISTENT_DIRECTORY);"},{"lineNumber":589,"author":{"gitId":"-"},"content":"        Path expectedRelativeOutputDirectoryPath \u003d nonExistentDirectory.resolve(ArgsParser.DEFAULT_REPORT_NAME);"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addOutput(nonExistentDirectory).build();"},{"lineNumber":591,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":592,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":593,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.isSameFile("},{"lineNumber":594,"author":{"gitId":"-"},"content":"                expectedRelativeOutputDirectoryPath, cliArguments.getOutputFilePath()));"},{"lineNumber":595,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":596,"author":{"gitId":"-"},"content":""},{"lineNumber":597,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)"},{"lineNumber":598,"author":{"gitId":"yash-chowdhary"},"content":"    public void sinceDate_unsupportedFormats_throwsParseException() throws Exception {"},{"lineNumber":599,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addSinceDate(\"01 July 17\").build();"},{"lineNumber":600,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));"},{"lineNumber":601,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":602,"author":{"gitId":"-"},"content":""},{"lineNumber":603,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)"},{"lineNumber":604,"author":{"gitId":"yash-chowdhary"},"content":"    public void untilDate_unsupportedFormats_throwsParseException() throws Exception {"},{"lineNumber":605,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addUntilDate(\"11/31/2017\").build();"},{"lineNumber":606,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));"},{"lineNumber":607,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":608,"author":{"gitId":"-"},"content":""},{"lineNumber":609,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)"},{"lineNumber":610,"author":{"gitId":"yash-chowdhary"},"content":"    public void sinceDate_laterThanUntilDate_throwsParseException() throws Exception {"},{"lineNumber":611,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addSinceDate(\"01/12/2017\")"},{"lineNumber":612,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")"},{"lineNumber":613,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":614,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));"},{"lineNumber":615,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":616,"author":{"gitId":"-"},"content":""},{"lineNumber":617,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)"},{"lineNumber":618,"author":{"gitId":"niqiukun"},"content":"    public void period_withBothSinceDateAndUntilDate_throwsParseException() throws Exception {"},{"lineNumber":619,"author":{"gitId":"niqiukun"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addPeriod(\"18d\")"},{"lineNumber":620,"author":{"gitId":"niqiukun"},"content":"                .addSinceDate(\"30/11/2017\")"},{"lineNumber":621,"author":{"gitId":"niqiukun"},"content":"                .addUntilDate(\"01/12/2017\")"},{"lineNumber":622,"author":{"gitId":"niqiukun"},"content":"                .build();"},{"lineNumber":623,"author":{"gitId":"niqiukun"},"content":"        ArgsParser.parse(translateCommandline(input));"},{"lineNumber":624,"author":{"gitId":"niqiukun"},"content":"    }"},{"lineNumber":625,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":626,"author":{"gitId":"niqiukun"},"content":"    @Test(expected \u003d ParseException.class)"},{"lineNumber":627,"author":{"gitId":"niqiukun"},"content":"    public void period_notNumeric_throwsParseExcpetion() throws Exception {"},{"lineNumber":628,"author":{"gitId":"niqiukun"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addPeriod(\"abcd\").build();"},{"lineNumber":629,"author":{"gitId":"niqiukun"},"content":"        ArgsParser.parse(translateCommandline(input));"},{"lineNumber":630,"author":{"gitId":"niqiukun"},"content":"    }"},{"lineNumber":631,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":632,"author":{"gitId":"niqiukun"},"content":"    @Test(expected \u003d ParseException.class)"},{"lineNumber":633,"author":{"gitId":"niqiukun"},"content":"    public void period_isZero_throwsParseExcpetion() throws Exception {"},{"lineNumber":634,"author":{"gitId":"niqiukun"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addPeriod(\"0w\").build();"},{"lineNumber":635,"author":{"gitId":"niqiukun"},"content":"        ArgsParser.parse(translateCommandline(input));"},{"lineNumber":636,"author":{"gitId":"niqiukun"},"content":"    }"},{"lineNumber":637,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":638,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)"},{"lineNumber":639,"author":{"gitId":"yash-chowdhary"},"content":"    public void formats_notInAlphanumeric_throwsParseException() throws Exception {"},{"lineNumber":640,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addFormats(\".java\").build();"},{"lineNumber":641,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));"},{"lineNumber":642,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":643,"author":{"gitId":"-"},"content":""},{"lineNumber":644,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)"},{"lineNumber":645,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_mutuallyExclusiveArgumentsConfigAndReposTogether_throwsParseException() throws Exception {"},{"lineNumber":646,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)"},{"lineNumber":647,"author":{"gitId":"-"},"content":"                .addRepos(TEST_REPO_REPOSENSE)"},{"lineNumber":648,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":649,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));"},{"lineNumber":650,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":651,"author":{"gitId":"-"},"content":""},{"lineNumber":652,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)"},{"lineNumber":653,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_extraArgumentForIgnore_throwsParseException() throws Exception {"},{"lineNumber":654,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addIgnoreStandaloneConfig().add(\"true\").build();"},{"lineNumber":655,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));"},{"lineNumber":656,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":657,"author":{"gitId":"-"},"content":""},{"lineNumber":658,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":659,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_withTimezone_success() throws Exception {"},{"lineNumber":660,"author":{"gitId":"-"},"content":"        String zoneId \u003d \"UTC+11\";"},{"lineNumber":661,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addTimezone(zoneId).build();"},{"lineNumber":662,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":663,"author":{"gitId":"-"},"content":""},{"lineNumber":664,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":665,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ZoneId.of(zoneId), cliArguments.getZoneId());"},{"lineNumber":666,"author":{"gitId":"-"},"content":""},{"lineNumber":667,"author":{"gitId":"-"},"content":"        zoneId \u003d \"UTC-1030\";"},{"lineNumber":668,"author":{"gitId":"-"},"content":"        input \u003d DEFAULT_INPUT_BUILDER.addTimezone(zoneId).build();"},{"lineNumber":669,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":670,"author":{"gitId":"-"},"content":""},{"lineNumber":671,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":672,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ZoneId.of(zoneId), cliArguments.getZoneId());"},{"lineNumber":673,"author":{"gitId":"-"},"content":""},{"lineNumber":674,"author":{"gitId":"-"},"content":"        zoneId \u003d \"UTC\";"},{"lineNumber":675,"author":{"gitId":"-"},"content":"        input \u003d DEFAULT_INPUT_BUILDER.addTimezone(zoneId).build();"},{"lineNumber":676,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":677,"author":{"gitId":"-"},"content":""},{"lineNumber":678,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":679,"author":{"gitId":"-"},"content":"        Assert.assertEquals(ZoneId.of(zoneId), cliArguments.getZoneId());"},{"lineNumber":680,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":681,"author":{"gitId":"-"},"content":""},{"lineNumber":682,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)"},{"lineNumber":683,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_incorrectTimezone_throwsParseException() throws Exception {"},{"lineNumber":684,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addTimezone(\"UTC+\").build();"},{"lineNumber":685,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));"},{"lineNumber":686,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":687,"author":{"gitId":"-"},"content":""},{"lineNumber":688,"author":{"gitId":"-"},"content":"    @Test(expected \u003d ParseException.class)"},{"lineNumber":689,"author":{"gitId":"yash-chowdhary"},"content":"    public void parse_timezoneWithoutArgument_throwsParseException() throws Exception {"},{"lineNumber":690,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addTimezone(\"\").build();"},{"lineNumber":691,"author":{"gitId":"-"},"content":"        ArgsParser.parse(translateCommandline(input));"},{"lineNumber":692,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":693,"author":{"gitId":"-"},"content":""},{"lineNumber":694,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":695,"author":{"gitId":"-"},"content":"    public void parse_withDatesAndTimezone_success() throws Exception {"},{"lineNumber":696,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER"},{"lineNumber":697,"author":{"gitId":"-"},"content":"                .addTimezone(\"UTC+11\")"},{"lineNumber":698,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\")"},{"lineNumber":699,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")"},{"lineNumber":700,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":701,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":702,"author":{"gitId":"-"},"content":"        int[] expectedSinceTime \u003d {21, 0, 0};"},{"lineNumber":703,"author":{"gitId":"-"},"content":"        Date expectedSinceDate \u003d TestUtil.getDate(2017, Calendar.JUNE, 30, expectedSinceTime);"},{"lineNumber":704,"author":{"gitId":"-"},"content":"        int[] expectedUntilTime \u003d {20, 59, 59};"},{"lineNumber":705,"author":{"gitId":"-"},"content":"        Date expectedUntilDate \u003d TestUtil.getDate(2017, Calendar.NOVEMBER, 30, expectedUntilTime);"},{"lineNumber":706,"author":{"gitId":"-"},"content":""},{"lineNumber":707,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":708,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());"},{"lineNumber":709,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());"},{"lineNumber":710,"author":{"gitId":"-"},"content":""},{"lineNumber":711,"author":{"gitId":"-"},"content":"        input \u003d DEFAULT_INPUT_BUILDER"},{"lineNumber":712,"author":{"gitId":"-"},"content":"                .addTimezone(\"UTC-0930\")"},{"lineNumber":713,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\")"},{"lineNumber":714,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")"},{"lineNumber":715,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":716,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":717,"author":{"gitId":"-"},"content":"        expectedSinceTime \u003d new int[]{17, 30, 0};"},{"lineNumber":718,"author":{"gitId":"-"},"content":"        expectedSinceDate \u003d TestUtil.getDate(2017, Calendar.JULY, 1, expectedSinceTime);"},{"lineNumber":719,"author":{"gitId":"-"},"content":"        expectedUntilTime \u003d new int[]{17, 29, 59};"},{"lineNumber":720,"author":{"gitId":"-"},"content":"        expectedUntilDate \u003d TestUtil.getDate(2017, Calendar.DECEMBER, 1, expectedUntilTime);"},{"lineNumber":721,"author":{"gitId":"-"},"content":""},{"lineNumber":722,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":723,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());"},{"lineNumber":724,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());"},{"lineNumber":725,"author":{"gitId":"-"},"content":""},{"lineNumber":726,"author":{"gitId":"-"},"content":"        input \u003d DEFAULT_INPUT_BUILDER"},{"lineNumber":727,"author":{"gitId":"-"},"content":"                .addTimezone(\"UTC\")"},{"lineNumber":728,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\")"},{"lineNumber":729,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")"},{"lineNumber":730,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":731,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":732,"author":{"gitId":"-"},"content":"        expectedSinceTime \u003d new int[]{8, 0, 0};"},{"lineNumber":733,"author":{"gitId":"-"},"content":"        expectedSinceDate \u003d TestUtil.getDate(2017, Calendar.JULY, 1, expectedSinceTime);"},{"lineNumber":734,"author":{"gitId":"-"},"content":"        expectedUntilTime \u003d new int[]{7, 59, 59};"},{"lineNumber":735,"author":{"gitId":"-"},"content":"        expectedUntilDate \u003d TestUtil.getDate(2017, Calendar.DECEMBER, 1, expectedUntilTime);"},{"lineNumber":736,"author":{"gitId":"-"},"content":""},{"lineNumber":737,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":738,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedSinceDate, cliArguments.getSinceDate());"},{"lineNumber":739,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedUntilDate, cliArguments.getUntilDate());"},{"lineNumber":740,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":741,"author":{"gitId":"-"},"content":""},{"lineNumber":742,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":743,"author":{"gitId":"-"},"content":"    public void parse_shallowCloning_success() throws Exception {"},{"lineNumber":744,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)"},{"lineNumber":745,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE)"},{"lineNumber":746,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":747,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":748,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArguments instanceof ConfigCliArguments);"},{"lineNumber":749,"author":{"gitId":"-"},"content":"        Assert.assertEquals(false, cliArguments.isShallowCloningPerformed());"},{"lineNumber":750,"author":{"gitId":"-"},"content":""},{"lineNumber":751,"author":{"gitId":"-"},"content":"        String inputShallow \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)"},{"lineNumber":752,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE)"},{"lineNumber":753,"author":{"gitId":"-"},"content":"                .addShallowCloning()"},{"lineNumber":754,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":755,"author":{"gitId":"-"},"content":"        CliArguments cliArgumentsShallow \u003d ArgsParser.parse(translateCommandline(inputShallow));"},{"lineNumber":756,"author":{"gitId":"-"},"content":"        Assert.assertTrue(cliArgumentsShallow instanceof ConfigCliArguments);"},{"lineNumber":757,"author":{"gitId":"-"},"content":"        Assert.assertEquals(true, cliArgumentsShallow.isShallowCloningPerformed());"},{"lineNumber":758,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":759,"author":{"gitId":"-"},"content":""},{"lineNumber":760,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":761,"author":{"gitId":"-"},"content":"     * Ensures that {@code actualSinceDate} is exactly one month before {@code untilDate}."},{"lineNumber":762,"author":{"gitId":"-"},"content":"     * @throws AssertionError if {@code actualSinceDate} is not one month before {@code untilDate}."},{"lineNumber":763,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":764,"author":{"gitId":"-"},"content":"    private void assertDateDiffOneMonth(Date actualSinceDate, Date untilDate, ZoneId zoneId) {"},{"lineNumber":765,"author":{"gitId":"jamessspanggg"},"content":"        int zoneRawOffset \u003d TimeUtil.getZoneRawOffset(zoneId);"},{"lineNumber":766,"author":{"gitId":"jamessspanggg"},"content":"        int systemRawOffset \u003d TimeUtil.getZoneRawOffset(ZoneId.systemDefault());"},{"lineNumber":767,"author":{"gitId":"-"},"content":""},{"lineNumber":768,"author":{"gitId":"-"},"content":"        Calendar cal \u003d new Calendar"},{"lineNumber":769,"author":{"gitId":"-"},"content":"                .Builder()"},{"lineNumber":770,"author":{"gitId":"-"},"content":"                .setInstant(untilDate.getTime())"},{"lineNumber":771,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":772,"author":{"gitId":"-"},"content":"        cal.set(Calendar.HOUR_OF_DAY, 0);"},{"lineNumber":773,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MINUTE, 0);"},{"lineNumber":774,"author":{"gitId":"-"},"content":"        cal.set(Calendar.SECOND, 0);"},{"lineNumber":775,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MILLISECOND, 0);"},{"lineNumber":776,"author":{"gitId":"-"},"content":"        cal.add(Calendar.MILLISECOND, systemRawOffset - zoneRawOffset);"},{"lineNumber":777,"author":{"gitId":"-"},"content":"        cal.add(Calendar.MONTH, -1);"},{"lineNumber":778,"author":{"gitId":"-"},"content":"        Assert.assertTrue(actualSinceDate.equals(cal.getTime()));"},{"lineNumber":779,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":780,"author":{"gitId":"-"},"content":""},{"lineNumber":781,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":782,"author":{"gitId":"-"},"content":"     * Ensures that {@code actualUntilDate} falls on the date of report generation with time at 23:59:59 for the given"},{"lineNumber":783,"author":{"gitId":"-"},"content":"     * {@code zoneId} time zone."},{"lineNumber":784,"author":{"gitId":"-"},"content":"     * @throws AssertionError if {@code actualUntilDate} does not fall on the date of report generation"},{"lineNumber":785,"author":{"gitId":"-"},"content":"     * with time at 23:59:59."},{"lineNumber":786,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":787,"author":{"gitId":"-"},"content":"    private void assertDateDiffEndOfDay(Date actualUntilDate, ZoneId zoneId) {"},{"lineNumber":788,"author":{"gitId":"jamessspanggg"},"content":"        int zoneRawOffset \u003d TimeUtil.getZoneRawOffset(zoneId);"},{"lineNumber":789,"author":{"gitId":"jamessspanggg"},"content":"        int systemRawOffset \u003d TimeUtil.getZoneRawOffset(ZoneId.systemDefault());"},{"lineNumber":790,"author":{"gitId":"-"},"content":""},{"lineNumber":791,"author":{"gitId":"-"},"content":"        Calendar cal \u003d Calendar.getInstance();"},{"lineNumber":792,"author":{"gitId":"-"},"content":"        cal.set(Calendar.HOUR_OF_DAY, 23);"},{"lineNumber":793,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MINUTE, 59);"},{"lineNumber":794,"author":{"gitId":"-"},"content":"        cal.set(Calendar.SECOND, 59);"},{"lineNumber":795,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MILLISECOND, 0);"},{"lineNumber":796,"author":{"gitId":"-"},"content":"        cal.add(Calendar.MILLISECOND, systemRawOffset - zoneRawOffset);"},{"lineNumber":797,"author":{"gitId":"-"},"content":"        Assert.assertTrue(actualUntilDate.equals(cal.getTime()));"},{"lineNumber":798,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":799,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"niqiukun":43,"anubh-v":5,"yash-chowdhary":39,"Tejas2805":4,"jamessspanggg":5,"-":703}},{"path":"src/test/java/reposense/parser/AuthorConfigParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.parser;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"anubh-v"},"content":"import static reposense.util.TestUtil.loadResource;"},{"lineNumber":4,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.Assert;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.Test;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.model.AuthorConfiguration;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AuthorConfigParserTest {"},{"lineNumber":21,"author":{"gitId":"anubh-v"},"content":"    private static final Path AUTHOR_CONFIG_EMPTY_LOCATION_FILE \u003d loadResource(AuthorConfigParserTest.class,"},{"lineNumber":22,"author":{"gitId":"anubh-v"},"content":"            \"AuthorConfigParserTest/authorconfig_emptyLocation_test.csv\");"},{"lineNumber":23,"author":{"gitId":"anubh-v"},"content":"    private static final Path AUTHOR_CONFIG_EMPTY_CONFIG_FILE \u003d loadResource(AuthorConfigParserTest.class,"},{"lineNumber":24,"author":{"gitId":"anubh-v"},"content":"            \"AuthorConfigParserTest/require_trailing_whitespaces/authorconfig_emptyConfig_test.csv\");"},{"lineNumber":25,"author":{"gitId":"anubh-v"},"content":"    private static final Path AUTHOR_CONFIG_NO_SPECIAL_CHARACTER_FILE \u003d loadResource(AuthorConfigParserTest.class,"},{"lineNumber":26,"author":{"gitId":"anubh-v"},"content":"            \"AuthorConfigParserTest/authorconfig_noSpecialCharacter_test.csv\");"},{"lineNumber":27,"author":{"gitId":"anubh-v"},"content":"    private static final Path AUTHOR_CONFIG_SPECIAL_CHARACTER_FILE \u003d loadResource(AuthorConfigParserTest.class,"},{"lineNumber":28,"author":{"gitId":"anubh-v"},"content":"            \"AuthorConfigParserTest/authorconfig_specialCharacter_test.csv\");"},{"lineNumber":29,"author":{"gitId":"anubh-v"},"content":"    private static final Path AUTHOR_CONFIG_COMMAS_AND_DOUBLEQUOTES_FILE \u003d loadResource(AuthorConfigParserTest.class,"},{"lineNumber":30,"author":{"gitId":"anubh-v"},"content":"            \"AuthorConfigParserTest/authorconfig_commasAndDoubleQuotes_test.csv\");"},{"lineNumber":31,"author":{"gitId":"anubh-v"},"content":"    private static final Path AUTHOR_CONFIG_MULTIPLE_EMAILS_FILE \u003d loadResource(AuthorConfigParserTest.class,"},{"lineNumber":32,"author":{"gitId":"anubh-v"},"content":"            \"AuthorConfigParserTest/authorconfig_multipleEmails_test.csv\");"},{"lineNumber":33,"author":{"gitId":"anubh-v"},"content":"    private static final Path AUTHOR_CONFIG_INVALID_LOCATION \u003d loadResource(AuthorConfigParserTest.class,"},{"lineNumber":34,"author":{"gitId":"anubh-v"},"content":"            \"AuthorConfigParserTest/authorconfig_invalidLocation_test.csv\");"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_DIFFERENT_COLUMN_ORDER \u003d loadResource(AuthorConfigParserTest.class,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/authorconfig_differentColumnOrder_test.csv\");"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_MISSING_OPTIONAL_HEADER \u003d loadResource(AuthorConfigParserTest.class,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/authorconfig_missingOptionalHeader_test.csv\");"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_MISSING_MANDATORY_HEADER \u003d loadResource(AuthorConfigParserTest.class,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/authorconfig_missingMandatoryHeader_test.csv\");"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_BETA_LOCATION \u003d \"https://github.com/reposense/testrepo-Beta.git\";"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_BETA_MASTER_BRANCH \u003d \"master\";"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Author FIRST_AUTHOR \u003d new Author(\"nbriannl\");"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Author SECOND_AUTHOR \u003d new Author(\"zacharytang\");"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final List\u003cAuthor\u003e AUTHOR_CONFIG_NO_SPECIAL_CHARACTER_AUTHORS \u003d"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            Arrays.asList(FIRST_AUTHOR, SECOND_AUTHOR);"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final Author FIRST_SPECIAL_CHARACTER_AUTHOR \u003d new Author(\"‘Processed�‘Cooked�\");"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final Author SECOND_SPECIAL_CHARACTER_AUTHOR \u003d new Author(\"(codeeong)\");"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final Author THIRD_SPECIAL_CHARACTER_AUTHOR \u003d new Author(\"^:jordancjq;$\");"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final List\u003cAuthor\u003e AUTHOR_CONFIG_SPECIAL_CHARACTER_AUTHORS \u003d Arrays.asList("},{"lineNumber":54,"author":{"gitId":"-"},"content":"            FIRST_SPECIAL_CHARACTER_AUTHOR, SECOND_SPECIAL_CHARACTER_AUTHOR, THIRD_SPECIAL_CHARACTER_AUTHOR);"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final Author FIRST_COMMAS_AND_DOUBLEQUOTES_AUTHOR \u003d new Author(\"ProcessedCooked\");"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final Author SECOND_COMMAS_AND_DOUBLEQUOTES_AUTHOR \u003d new Author(\"codeeong\");"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final Author THIRD_COMMAS_AND_DOUBLEQUOTES_AUTHOR \u003d new Author(\"jordancjq\");"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final String FIRST_COMMAS_AND_DOUBLEQUOTES_DISPLAY_NAME \u003d \"Tay Fan Gao, Douya\";"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final String SECOND_COMMAS_AND_DOUBLEQUOTES_DISPLAY_NAME \u003d \"\\\"\\\"Tora, S/O,\\\" Doyua, T.\\\"\";"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final String THIRD_COMMAS_AND_DOUBLEQUOTES_DISPLAY_NAME \u003d \"jordancjq\";"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e FIRST_COMMAS_AND_DOUBLEQUOTES_ALIAS \u003d"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            Collections.singletonList(\"Tay Fan Gao, Douya \\\"SOC, Y2S1\\\"\");"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e SECOND_COMMAS_AND_DOUBLEQUOTES_ALIAS \u003d Collections.emptyList();"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e THIRD_COMMAS_AND_DOUBLEQUOTES_ALIAS \u003d"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Arrays.asList(\"Borex T\\\"ony Tong\");"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static final Map\u003cAuthor, List\u003cString\u003e\u003e AUTHOR_ALIAS_COMMAS_AND_DOUBLE_QUOTES_MAP \u003d"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            Stream.of(new Object[][]{"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                    {FIRST_COMMAS_AND_DOUBLEQUOTES_AUTHOR, FIRST_COMMAS_AND_DOUBLEQUOTES_ALIAS},"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                    {SECOND_COMMAS_AND_DOUBLEQUOTES_AUTHOR, SECOND_COMMAS_AND_DOUBLEQUOTES_ALIAS},"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                    {THIRD_COMMAS_AND_DOUBLEQUOTES_AUTHOR, THIRD_COMMAS_AND_DOUBLEQUOTES_ALIAS}"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            }).collect(Collectors.toMap(data -\u003e (Author) data[0], data -\u003e (List\u003cString\u003e) data[1]));"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static final Map\u003cAuthor, String\u003e AUTHOR_DISPLAY_NAME_COMMAS_AND_DOUBLE_QUOTES_MAP \u003d"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            Stream.of(new Object[][]{"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                    {FIRST_COMMAS_AND_DOUBLEQUOTES_AUTHOR, FIRST_COMMAS_AND_DOUBLEQUOTES_DISPLAY_NAME},"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                    {SECOND_COMMAS_AND_DOUBLEQUOTES_AUTHOR, SECOND_COMMAS_AND_DOUBLEQUOTES_DISPLAY_NAME},"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                    {THIRD_COMMAS_AND_DOUBLEQUOTES_AUTHOR, THIRD_COMMAS_AND_DOUBLEQUOTES_DISPLAY_NAME}"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            }).collect(Collectors.toMap(data -\u003e (Author) data[0], data -\u003e (String) data[1]));"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e FIRST_AUTHOR_EMAIL_LIST \u003d"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            Arrays.asList(\"nbr@example.com\", \"nbriannl@test.net\", \"nbriannl@users.noreply.github.com\");"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":84,"author":{"gitId":"anubh-v"},"content":"    public void authorConfig_noSpecialCharacter_success() throws Exception {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                new AuthorConfigCsvParser(AUTHOR_CONFIG_NO_SPECIAL_CHARACTER_FILE);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e configs \u003d authorConfigCsvParser.parse();"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, configs.size());"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d configs.get(0);"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Assert.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, config.getBranch());"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Assert.assertEquals(AUTHOR_CONFIG_NO_SPECIAL_CHARACTER_AUTHORS, config.getAuthorList());"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":100,"author":{"gitId":"anubh-v"},"content":"    public void authorConfig_emptyLocation_success() throws Exception {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AuthorConfiguration expectedConfig \u003d new AuthorConfiguration(new RepoLocation(\"\"));"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser(AUTHOR_CONFIG_EMPTY_LOCATION_FILE);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e authorConfigs \u003d authorConfigCsvParser.parse();"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        AuthorConfiguration authorConfig \u003d authorConfigs.get(0);"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, authorConfigs.size());"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedConfig.getLocation(), authorConfig.getLocation());"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedConfig.getBranch(), authorConfig.getBranch());"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Assert.assertEquals(AUTHOR_CONFIG_NO_SPECIAL_CHARACTER_AUTHORS, authorConfig.getAuthorList());"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"anubh-v"},"content":"    @Test (expected \u003d InvalidCsvException.class)"},{"lineNumber":114,"author":{"gitId":"anubh-v"},"content":"    public void authorConfig_emptyConfig_throwsInvalidCsvException() throws Exception {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser(AUTHOR_CONFIG_EMPTY_CONFIG_FILE);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        authorConfigCsvParser.parse();"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":120,"author":{"gitId":"anubh-v"},"content":"    public void authorConfig_specialCharacter_success() throws Exception {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser(AUTHOR_CONFIG_SPECIAL_CHARACTER_FILE);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e configs \u003d authorConfigCsvParser.parse();"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, configs.size());"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d configs.get(0);"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Assert.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, config.getBranch());"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Assert.assertEquals(AUTHOR_CONFIG_SPECIAL_CHARACTER_AUTHORS, config.getAuthorList());"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":135,"author":{"gitId":"anubh-v"},"content":"    public void authorConfig_multipleEmails_success() throws Exception {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser(AUTHOR_CONFIG_MULTIPLE_EMAILS_FILE);"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e configs \u003d authorConfigCsvParser.parse();"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, configs.size());"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d configs.get(0);"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Author actualAuthor \u003d config.getAuthorList().get(0);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Assert.assertEquals(FIRST_AUTHOR_EMAIL_LIST.size(), actualAuthor.getEmails().size());"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Assert.assertTrue(actualAuthor.getEmails().containsAll(FIRST_AUTHOR_EMAIL_LIST));"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":149,"author":{"gitId":"anubh-v"},"content":"    public void authorConfig_invalidLocation_success() throws Exception {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser(AUTHOR_CONFIG_INVALID_LOCATION);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e configs \u003d authorConfigCsvParser.parse();"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, configs.size());"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d configs.get(0);"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Assert.assertEquals(3, config.getAuthorList().size());"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void authorConfig_differentColumnOrder_success() throws Exception {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                new AuthorConfigCsvParser(AUTHOR_CONFIG_DIFFERENT_COLUMN_ORDER);"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e configs \u003d authorConfigCsvParser.parse();"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, configs.size());"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d configs.get(0);"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Assert.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, config.getBranch());"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Assert.assertEquals(AUTHOR_CONFIG_NO_SPECIAL_CHARACTER_AUTHORS, config.getAuthorList());"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void authorConfig_missingOptionalHeader_success() throws Exception {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser(AUTHOR_CONFIG_MISSING_OPTIONAL_HEADER);"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e configs \u003d authorConfigCsvParser.parse();"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, configs.size());"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d configs.get(0);"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"        Assert.assertEquals(4, config.getAuthorList().size());"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"anubh-v"},"content":"    @Test (expected \u003d InvalidCsvException.class)"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void authorConfig_missingMandatoryHeader_throwsInvalidCsvException() throws Exception {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser(AUTHOR_CONFIG_MISSING_MANDATORY_HEADER);"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        authorConfigCsvParser.parse();"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":195,"author":{"gitId":"anubh-v"},"content":"    public void parse_multipleColumnsWithCommasAndDoubleQuotes_success() throws Exception {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                new AuthorConfigCsvParser(AUTHOR_CONFIG_COMMAS_AND_DOUBLEQUOTES_FILE);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e configs \u003d authorConfigCsvParser.parse();"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, configs.size());"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d configs.get(0);"},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Assert.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, config.getBranch());"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        Assert.assertEquals(AUTHOR_DISPLAY_NAME_COMMAS_AND_DOUBLE_QUOTES_MAP, config.getAuthorDisplayNameMap());"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Assert.assertEquals(AUTHOR_ALIAS_COMMAS_AND_DOUBLE_QUOTES_MAP.size(), config.getAuthorList().size());"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        config.getAuthorList().forEach(author -\u003e {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            Assert.assertEquals(AUTHOR_ALIAS_COMMAS_AND_DOUBLE_QUOTES_MAP.get(author), author.getAuthorAliases());"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"anubh-v":25,"-":188}},{"path":"src/test/java/reposense/parser/GroupConfigParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.parser;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"anubh-v"},"content":"import static reposense.util.TestUtil.loadResource;"},{"lineNumber":4,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.Assert;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.model.FileType;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.model.GroupConfiguration;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class GroupConfigParserTest {"},{"lineNumber":17,"author":{"gitId":"anubh-v"},"content":"    private static final Path GROUP_CONFIG_MULTI_LOCATION_FILE \u003d loadResource(GroupConfigParserTest.class,"},{"lineNumber":18,"author":{"gitId":"anubh-v"},"content":"            \"GroupConfigParserTest/groupconfig_multipleLocation_test.csv\");"},{"lineNumber":19,"author":{"gitId":"anubh-v"},"content":"    private static final Path GROUP_CONFIG_EMPTY_LOCATION_FILE \u003d loadResource(GroupConfigParserTest.class,"},{"lineNumber":20,"author":{"gitId":"anubh-v"},"content":"            \"GroupConfigParserTest/groupconfig_emptyLocation_test.csv\");"},{"lineNumber":21,"author":{"gitId":"anubh-v"},"content":"    private static final Path GROUP_CONFIG_INVALID_LOCATION_FILE \u003d loadResource(GroupConfigParserTest.class,"},{"lineNumber":22,"author":{"gitId":"anubh-v"},"content":"            \"GroupConfigParserTest/groupconfig_invalidLocation_test.csv\");"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path GROUP_CONFIG_DIFFERENT_COLUMN_ORDER_FILE \u003d loadResource(GroupConfigParserTest.class,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \"GroupConfigParserTest/groupconfig_differentColumnOrder_test.csv\");"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Path GROUP_CONFIG_MISSING_OPTIONAL_HEADER_FILE \u003d loadResource(GroupConfigParserTest.class,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \"GroupConfigParserTest/groupconfig_missingOptionalHeader_test.csv\");"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Path GROUP_CONFIG_MISSING_MANDATORY_HEADER_FILE \u003d loadResource(GroupConfigParserTest.class,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"GroupConfigParserTest/groupconfig_missingMandatoryHeader_test.csv\");"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_BETA_LOCATION \u003d \"https://github.com/reposense/testrepo-Beta.git\";"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cFileType\u003e TEST_REPO_BETA_GROUPS \u003d Arrays.asList("},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new FileType(\"Code\", Arrays.asList(\"**/*.java\", \"**/*.py\")),"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new FileType(\"Docs\", Collections.singletonList(\"docs/**\")));"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_DELTA_LOCATION \u003d \"https://github.com/reposense/testrepo-Delta.git\";"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final List\u003cFileType\u003e TEST_REPO_DELTA_GROUPS \u003d Arrays.asList("},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new FileType(\"Main\", Collections.singletonList(\"src/main/**\")),"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new FileType(\"Test\", Arrays.asList(\"src/test/**\", \"src/systest/**\")));"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"anubh-v"},"content":"    public void groupConfig_invalidLocation_success() throws Exception {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        GroupConfigCsvParser groupConfigCsvParser \u003d new GroupConfigCsvParser(GROUP_CONFIG_INVALID_LOCATION_FILE);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cGroupConfiguration\u003e groupConfigs \u003d groupConfigCsvParser.parse();"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, groupConfigs.size());"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"        GroupConfiguration actualConfig \u003d groupConfigs.get(0);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Assert.assertEquals(2, actualConfig.getGroupsList().size());"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":52,"author":{"gitId":"anubh-v"},"content":"    public void groupConfig_emptyLocation_success() throws Exception {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        GroupConfigCsvParser groupConfigCsvParser \u003d new GroupConfigCsvParser(GROUP_CONFIG_EMPTY_LOCATION_FILE);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        List\u003cGroupConfiguration\u003e groupConfigs \u003d groupConfigCsvParser.parse();"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Assert.assertEquals(2, groupConfigs.size());"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GroupConfiguration actualReposenseConfig \u003d groupConfigs.get(0);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Assert.assertEquals(2, actualReposenseConfig.getGroupsList().size());"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"        GroupConfiguration actualEmptyLocationConfig \u003d groupConfigs.get(1);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, actualEmptyLocationConfig.getGroupsList().size());"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":66,"author":{"gitId":"anubh-v"},"content":"    public void groupConfig_multipleLocations_success() throws Exception {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        GroupConfigCsvParser groupConfigCsvParser \u003d new GroupConfigCsvParser(GROUP_CONFIG_MULTI_LOCATION_FILE);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        List\u003cGroupConfiguration\u003e groupConfigs \u003d groupConfigCsvParser.parse();"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Assert.assertEquals(2, groupConfigs.size());"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        GroupConfiguration actualBetaConfig \u003d groupConfigs.get(0);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_BETA_LOCATION, actualBetaConfig.getLocation().toString());"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_BETA_GROUPS, actualBetaConfig.getGroupsList());"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"        GroupConfiguration actualDeltaConfig \u003d groupConfigs.get(1);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_DELTA_LOCATION, actualDeltaConfig.getLocation().toString());"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_DELTA_GROUPS, actualDeltaConfig.getGroupsList());"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void groupConfig_differentColumnOrder_success() throws Exception {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        GroupConfigCsvParser groupConfigCsvParser \u003d new GroupConfigCsvParser(GROUP_CONFIG_DIFFERENT_COLUMN_ORDER_FILE);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        List\u003cGroupConfiguration\u003e groupConfigs \u003d groupConfigCsvParser.parse();"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Assert.assertEquals(2, groupConfigs.size());"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        GroupConfiguration actualBetaConfig \u003d groupConfigs.get(0);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_BETA_LOCATION, actualBetaConfig.getLocation().toString());"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_BETA_GROUPS, actualBetaConfig.getGroupsList());"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"        GroupConfiguration actualDeltaConfig \u003d groupConfigs.get(1);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_DELTA_LOCATION, actualDeltaConfig.getLocation().toString());"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_DELTA_GROUPS, actualDeltaConfig.getGroupsList());"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void groupConfig_missingOptionalHeader_success() throws Exception {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        GroupConfigCsvParser groupConfigCsvParser \u003d new GroupConfigCsvParser(GROUP_CONFIG_MISSING_OPTIONAL_HEADER_FILE);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        List\u003cGroupConfiguration\u003e groupConfigs \u003d groupConfigCsvParser.parse();"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, groupConfigs.size());"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Assert.assertEquals(3, groupConfigs.get(0).getGroupsList().size());"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"anubh-v"},"content":"    @Test (expected \u003d InvalidCsvException.class)"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void groupConfig_missingMandatoryHeader_throwsInvalidCsvException() throws Exception {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        GroupConfigCsvParser groupConfigCsvParser \u003d new GroupConfigCsvParser("},{"lineNumber":110,"author":{"gitId":"-"},"content":"                GROUP_CONFIG_MISSING_MANDATORY_HEADER_FILE);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        groupConfigCsvParser.parse();"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"anubh-v":12,"-":101}},{"path":"src/test/java/reposense/parser/RepoConfigParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.parser;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.apache.tools.ant.types.Commandline.translateCommandline;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"anubh-v"},"content":"import static reposense.util.TestUtil.loadResource;"},{"lineNumber":6,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.Assert;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.Test;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.model.AuthorConfiguration;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.model.CliArguments;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.model.ConfigCliArguments;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.model.FileType;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.util.InputBuilder;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class RepoConfigParserTest {"},{"lineNumber":27,"author":{"gitId":"anubh-v"},"content":"    private static final Path TEST_CONFIG_FOLDER \u003d loadResource(RepoConfigParserTest.class, \"repoconfig_merge_test\");"},{"lineNumber":28,"author":{"gitId":"anubh-v"},"content":"    private static final Path TEST_EMPTY_BRANCH_CONFIG_FOLDER \u003d loadResource(RepoConfigParserTest.class,"},{"lineNumber":29,"author":{"gitId":"anubh-v"},"content":"            \"repoconfig_empty_branch_test\");"},{"lineNumber":30,"author":{"gitId":"anubh-v"},"content":"    private static final Path REPO_CONFIG_NO_SPECIAL_CHARACTER_FILE \u003d loadResource(RepoConfigParserTest.class,"},{"lineNumber":31,"author":{"gitId":"anubh-v"},"content":"            \"RepoConfigParserTest/repoconfig_noSpecialCharacter_test.csv\");"},{"lineNumber":32,"author":{"gitId":"anubh-v"},"content":"    private static final Path REPO_CONFIG_OVERRIDE_KEYWORD_FILE \u003d loadResource(RepoConfigParserTest.class,"},{"lineNumber":33,"author":{"gitId":"anubh-v"},"content":"            \"RepoConfigParserTest/repoconfig_overrideKeyword_test.csv\");"},{"lineNumber":34,"author":{"gitId":"anubh-v"},"content":"    private static final Path REPO_CONFIG_REDUNDANT_LINES_FILE \u003d loadResource(RepoConfigParserTest.class,"},{"lineNumber":35,"author":{"gitId":"anubh-v"},"content":"            \"RepoConfigParserTest/require_trailing_whitespaces/repoconfig_redundantLines_test.csv\");"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Path REPO_CONFIG_INVALID_LOCATION_FILE \u003d loadResource(RepoConfigParserTest.class,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \"RepoConfigParserTest/repoconfig_invalidLocation_test.csv\");"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Path REPO_CONFIG_DUPLICATE_HEADERS_CASE_SENSITIVE_FILE \u003d"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            loadResource(RepoConfigParserTest.class,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \"RepoConfigParserTest/repoconfig_duplicateHeadersCaseSensitive_test.csv\");"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Path REPO_CONFIG_DUPLICATE_HEADERS_CASE_INSENSITIVE_FILE \u003d"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            loadResource(RepoConfigParserTest.class,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \"RepoConfigParserTest/repoconfig_duplicateHeadersCaseInsensitive_test.csv\");"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Path REPO_CONFIG_DIFFERENT_COLUMN_ORDER_FILE \u003d loadResource(RepoConfigParserTest.class,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \"RepoConfigParserTest/repoconfig_differentColumnOrder_test.csv\");"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Path REPO_CONFIG_OPTIONAL_HEADER_MISSING_FILE \u003d loadResource(RepoConfigParserTest.class,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \"RepoConfigParserTest/repoconfig_missingOptionalHeader_test.csv\");"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final Path REPO_CONFIG_MANDATORY_HEADER_MISSING_FILE \u003d loadResource(RepoConfigParserTest.class,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \"RepoConfigParserTest/repoconfig_missingMandatoryHeader_test.csv\");"},{"lineNumber":50,"author":{"gitId":"anubh-v"},"content":"    private static final Path MERGE_EMPTY_LOCATION_FOLDER \u003d loadResource(RepoConfigParserTest.class,"},{"lineNumber":51,"author":{"gitId":"anubh-v"},"content":"            \"RepoConfigParserTest/repoconfig_merge_empty_location_test\");"},{"lineNumber":52,"author":{"gitId":"anubh-v"},"content":"    private static final Path REPO_CONFIG_ZERO_VALID_RECORDS \u003d loadResource(RepoConfigParserTest.class,"},{"lineNumber":53,"author":{"gitId":"anubh-v"},"content":"            \"CsvParserTest/repoconfig_zeroValidRecords_test.csv\");"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_BETA_LOCATION \u003d \"https://github.com/reposense/testrepo-Beta.git\";"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_BETA_MASTER_BRANCH \u003d \"master\";"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_BETA_ADD_CONFIG_JSON_BRANCH \u003d \"add-config-json\";"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_DELTA_LOCATION \u003d \"https://github.com/reposense/testrepo-Delta.git\";"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_DELTA_BRANCH \u003d \"HEAD\";"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final List\u003cFileType\u003e TEST_REPO_DELTA_FORMATS \u003d"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            FileType.convertFormatStringsToFileTypes(Arrays.asList(\"java\", \"fxml\"));"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static final List\u003cFileType\u003e TEST_REPO_BETA_CONFIG_FORMATS \u003d"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            FileType.convertFormatStringsToFileTypes(Arrays.asList(\"java\", \"adoc\", \"md\"));"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e TEST_REPO_BETA_CONFIG_IGNORED_COMMITS \u003d"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            Arrays.asList(\"abcde12345\", \"67890fdecba\");"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_CHARLIE_LOCATION \u003d \"https://github.com/reposense/testrepo-Charlie.git\";"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_CHARLIE_BRANCH \u003d \"HEAD\";"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static final Author FIRST_AUTHOR \u003d new Author(\"nbriannl\");"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static final Author SECOND_AUTHOR \u003d new Author(\"zacharytang\");"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e SECOND_AUTHOR_ALIASES \u003d Arrays.asList(\"Zachary Tang\");"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e REPO_LEVEL_GLOB_LIST \u003d Arrays.asList(\"collated**\");"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e FIRST_AUTHOR_GLOB_LIST \u003d Arrays.asList(\"**.java\", \"collated**\");"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e SECOND_AUTHOR_GLOB_LIST \u003d Arrays.asList(\"**.doc\", \"collated**\");"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":81,"author":{"gitId":"anubh-v"},"content":"    public void repoConfig_noSpecialCharacter_success() throws Exception {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        RepoConfigCsvParser repoConfigCsvParser \u003d new RepoConfigCsvParser(REPO_CONFIG_NO_SPECIAL_CHARACTER_FILE);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e configs \u003d repoConfigCsvParser.parse();"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, configs.size());"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"        RepoConfiguration config \u003d configs.get(0);"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Assert.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, config.getBranch());"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_BETA_CONFIG_FORMATS, config.getFileTypeManager().getFormats());"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Assert.assertTrue(config.isStandaloneConfigIgnored());"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Assert.assertEquals(config.getIgnoreCommitList(),"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                CommitHash.convertStringsToCommits(TEST_REPO_BETA_CONFIG_IGNORED_COMMITS));"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Assert.assertTrue(config.isShallowCloningPerformed());"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Assert.assertFalse(config.isFormatsOverriding());"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Assert.assertFalse(config.isIgnoreGlobListOverriding());"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Assert.assertFalse(config.isIgnoreCommitListOverriding());"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":107,"author":{"gitId":"anubh-v"},"content":"    public void merge_twoRepoConfigs_success() throws Exception {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        FIRST_AUTHOR.setIgnoreGlobList(FIRST_AUTHOR_GLOB_LIST);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        SECOND_AUTHOR.setIgnoreGlobList(SECOND_AUTHOR_GLOB_LIST);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        SECOND_AUTHOR.setAuthorAliases(SECOND_AUTHOR_ALIASES);"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedAuthors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        expectedAuthors.add(FIRST_AUTHOR);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        expectedAuthors.add(SECOND_AUTHOR);"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"        RepoConfiguration firstRepo \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_BETA_LOCATION),"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                TEST_REPO_BETA_MASTER_BRANCH);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        firstRepo.setAuthorList(expectedAuthors);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        firstRepo.setAuthorDisplayName(FIRST_AUTHOR, \"Nbr\");"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        firstRepo.setAuthorDisplayName(SECOND_AUTHOR, \"Zac\");"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        firstRepo.addAuthorDetailsToAuthorMapEntry(SECOND_AUTHOR,  Arrays.asList(\"Zachary Tang\"));"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        firstRepo.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        RepoConfiguration secondRepo \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_BETA_LOCATION),"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                TEST_REPO_BETA_ADD_CONFIG_JSON_BRANCH);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        secondRepo.setAuthorList(Arrays.asList(SECOND_AUTHOR));"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        secondRepo.setAuthorDisplayName(SECOND_AUTHOR, \"Zac\");"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        secondRepo.addAuthorDetailsToAuthorMapEntry(SECOND_AUTHOR,  Arrays.asList(\"Zachary Tang\"));"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        secondRepo.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(TEST_CONFIG_FOLDER).build();"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(((ConfigCliArguments) cliArguments).getRepoConfigFilePath()).parse();"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e authorConfigs \u003d"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                new AuthorConfigCsvParser(((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()).parse();"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        RepoConfiguration.merge(actualConfigs, authorConfigs);"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Assert.assertEquals(2, actualConfigs.size());"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(firstRepo, actualConfigs.get(0));"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(secondRepo, actualConfigs.get(1));"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":146,"author":{"gitId":"anubh-v"},"content":"    public void merge_emptyLocation_success() throws Exception {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        FIRST_AUTHOR.setIgnoreGlobList(FIRST_AUTHOR_GLOB_LIST);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        SECOND_AUTHOR.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        SECOND_AUTHOR.setAuthorAliases(SECOND_AUTHOR_ALIASES);"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedBetaAuthors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedBetaAuthors.add(FIRST_AUTHOR);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedBetaAuthors.add(SECOND_AUTHOR);"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedDeltaAuthors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedDeltaAuthors.add(FIRST_AUTHOR);"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedBetaConfig \u003d"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                new RepoConfiguration(new RepoLocation(TEST_REPO_BETA_LOCATION), TEST_REPO_BETA_MASTER_BRANCH);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        expectedBetaConfig.setAuthorList(expectedBetaAuthors);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        expectedBetaConfig.setAuthorDisplayName(FIRST_AUTHOR, \"Nbr\");"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        expectedBetaConfig.setAuthorDisplayName(SECOND_AUTHOR, \"Zac\");"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        expectedBetaConfig.addAuthorDetailsToAuthorMapEntry(SECOND_AUTHOR,  Arrays.asList(\"Zachary Tang\"));"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedBetaConfig.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        expectedBetaConfig.setIsShallowCloningPerformed(true);"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedDeltaConfig \u003d"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                new RepoConfiguration(new RepoLocation(TEST_REPO_DELTA_LOCATION), TEST_REPO_DELTA_BRANCH);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        expectedDeltaConfig.setAuthorList(expectedDeltaAuthors);"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        expectedDeltaConfig.setAuthorDisplayName(FIRST_AUTHOR, \"Nbr\");"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        expectedDeltaConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        expectedDeltaConfig.setFormats(TEST_REPO_DELTA_FORMATS);"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e expectedConfigs \u003d new ArrayList\u003c\u003e();"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        expectedConfigs.add(expectedBetaConfig);"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        expectedConfigs.add(expectedDeltaConfig);"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(MERGE_EMPTY_LOCATION_FOLDER).build();"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(((ConfigCliArguments) cliArguments).getRepoConfigFilePath()).parse();"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e authorConfigs \u003d"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                new AuthorConfigCsvParser(((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()).parse();"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        RepoConfiguration.merge(actualConfigs, authorConfigs);"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Assert.assertEquals(2, actualConfigs.size());"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedConfigs, actualConfigs);"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfigs.get(0), actualConfigs.get(0));"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfigs.get(1), actualConfigs.get(1));"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":195,"author":{"gitId":"anubh-v"},"content":"    public void repoConfig_defaultBranch_success() throws Exception {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_BETA_LOCATION),"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                RepoConfiguration.DEFAULT_BRANCH);"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(TEST_EMPTY_BRANCH_CONFIG_FOLDER).build();"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(((ConfigCliArguments) cliArguments).getRepoConfigFilePath()).parse();"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e authorConfigs \u003d"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                new AuthorConfigCsvParser(((ConfigCliArguments) cliArguments).getAuthorConfigFilePath()).parse();"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        RepoConfiguration.merge(actualConfigs, authorConfigs);"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, actualConfigs.size());"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedConfig.getBranch(), actualConfigs.get(0).getBranch());"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedConfig.getBranch(), authorConfigs.get(0).getBranch());"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":214,"author":{"gitId":"anubh-v"},"content":"    public void repoConfig_overrideKeyword_success() throws Exception {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        RepoConfigCsvParser repoConfigCsvParser \u003d new RepoConfigCsvParser(REPO_CONFIG_OVERRIDE_KEYWORD_FILE);"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e configs \u003d repoConfigCsvParser.parse();"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        RepoConfiguration config \u003d configs.get(0);"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, configs.size());"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        Assert.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, config.getBranch());"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_BETA_CONFIG_FORMATS, config.getFileTypeManager().getFormats());"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        Assert.assertFalse(config.isStandaloneConfigIgnored());"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        Assert.assertEquals(CommitHash.convertStringsToCommits(TEST_REPO_BETA_CONFIG_IGNORED_COMMITS),"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                config.getIgnoreCommitList());"},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":"        Assert.assertTrue(config.isFormatsOverriding());"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        Assert.assertTrue(config.isIgnoreGlobListOverriding());"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        Assert.assertTrue(config.isIgnoreCommitListOverriding());"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":233,"author":{"gitId":"anubh-v"},"content":"    public void repoConfig_redundantLines_success() throws Exception {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        RepoConfigCsvParser repoConfigCsvParser \u003d new RepoConfigCsvParser(REPO_CONFIG_REDUNDANT_LINES_FILE);"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e configs \u003d repoConfigCsvParser.parse();"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"        Assert.assertEquals(3, configs.size());"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        RepoConfiguration betaConfig \u003d configs.get(0);"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        RepoConfiguration charlieConfig \u003d configs.get(1);"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        RepoConfiguration deltaConfig \u003d configs.get(2);"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"        Assert.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), betaConfig.getLocation());"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, betaConfig.getBranch());"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        Assert.assertEquals(new RepoLocation(TEST_REPO_CHARLIE_LOCATION), charlieConfig.getLocation());"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_CHARLIE_BRANCH, charlieConfig.getBranch());"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        Assert.assertEquals(new RepoLocation(TEST_REPO_DELTA_LOCATION), deltaConfig.getLocation());"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_DELTA_BRANCH, deltaConfig.getBranch());"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        Assert.assertTrue(deltaConfig.isStandaloneConfigIgnored());"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    public void repoConfig_differentColumnOrder_success() throws Exception {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        RepoConfigCsvParser repoConfigCsvParser \u003d new RepoConfigCsvParser(REPO_CONFIG_DIFFERENT_COLUMN_ORDER_FILE);"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e configs \u003d repoConfigCsvParser.parse();"},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, configs.size());"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"        RepoConfiguration config \u003d configs.get(0);"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"-"},"content":"        Assert.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, config.getBranch());"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_BETA_CONFIG_FORMATS, config.getFileTypeManager().getFormats());"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"        Assert.assertTrue(config.isStandaloneConfigIgnored());"},{"lineNumber":266,"author":{"gitId":"-"},"content":""},{"lineNumber":267,"author":{"gitId":"-"},"content":"        Assert.assertEquals(config.getIgnoreCommitList(),"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                CommitHash.convertStringsToCommits(TEST_REPO_BETA_CONFIG_IGNORED_COMMITS));"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"        Assert.assertFalse(config.isFormatsOverriding());"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        Assert.assertFalse(config.isIgnoreGlobListOverriding());"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        Assert.assertFalse(config.isIgnoreCommitListOverriding());"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    public void repoConfig_missingOptionalHeader_success() throws Exception {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        RepoConfigCsvParser repoConfigCsvParser \u003d new RepoConfigCsvParser(REPO_CONFIG_OPTIONAL_HEADER_MISSING_FILE);"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e configs \u003d repoConfigCsvParser.parse();"},{"lineNumber":279,"author":{"gitId":"-"},"content":""},{"lineNumber":280,"author":{"gitId":"-"},"content":"        Assert.assertEquals(1, configs.size());"},{"lineNumber":281,"author":{"gitId":"-"},"content":""},{"lineNumber":282,"author":{"gitId":"-"},"content":"        RepoConfiguration config \u003d configs.get(0);"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"        Assert.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, config.getBranch());"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":"        Assert.assertEquals(TEST_REPO_BETA_CONFIG_FORMATS, config.getFileTypeManager().getFormats());"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"        Assert.assertTrue(config.isStandaloneConfigIgnored());"},{"lineNumber":290,"author":{"gitId":"-"},"content":""},{"lineNumber":291,"author":{"gitId":"-"},"content":"        Assert.assertFalse(config.isFormatsOverriding());"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        Assert.assertFalse(config.isIgnoreGlobListOverriding());"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        Assert.assertFalse(config.isIgnoreCommitListOverriding());"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    public void repoConfig_withInvalidLocation_success() throws Exception {"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        RepoConfigCsvParser repoConfigCsvParser \u003d new RepoConfigCsvParser(REPO_CONFIG_INVALID_LOCATION_FILE);"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e configs \u003d repoConfigCsvParser.parse();"},{"lineNumber":300,"author":{"gitId":"-"},"content":""},{"lineNumber":301,"author":{"gitId":"-"},"content":"        Assert.assertEquals(2, configs.size());"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"anubh-v"},"content":"    @Test (expected \u003d InvalidCsvException.class)"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    public void repoConfig_mandatoryHeaderMissing_throwsInvalidCsvException() throws Exception {"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        RepoConfigCsvParser repoConfigCsvParser \u003d new RepoConfigCsvParser(REPO_CONFIG_MANDATORY_HEADER_MISSING_FILE);"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        repoConfigCsvParser.parse();"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":309,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":310,"author":{"gitId":"anubh-v"},"content":"    @Test (expected \u003d InvalidCsvException.class)"},{"lineNumber":311,"author":{"gitId":"anubh-v"},"content":"    public void repoConfig_zeroValidRecords_throwsInvalidCsvException() throws Exception {"},{"lineNumber":312,"author":{"gitId":"anubh-v"},"content":"        RepoConfigCsvParser repoConfigCsvParser \u003d new RepoConfigCsvParser(REPO_CONFIG_ZERO_VALID_RECORDS);"},{"lineNumber":313,"author":{"gitId":"anubh-v"},"content":"        repoConfigCsvParser.parse();"},{"lineNumber":314,"author":{"gitId":"anubh-v"},"content":"    }"},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"    @Test (expected \u003d InvalidCsvException.class)"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    public void repoConfig_duplicateHeadersCaseSensitive_throwsInvalidCsvException() throws Exception {"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        RepoConfigCsvParser repoConfigCsvParser \u003d"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(REPO_CONFIG_DUPLICATE_HEADERS_CASE_SENSITIVE_FILE);"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        repoConfigCsvParser.parse();"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":322,"author":{"gitId":"-"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"    @Test (expected \u003d InvalidCsvException.class)"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    public void repoConfig_duplicateHeadersCaseInsensitive_throwsInvalidCsvException() throws Exception {"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        RepoConfigCsvParser repoConfigCsvParser \u003d"},{"lineNumber":326,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(REPO_CONFIG_DUPLICATE_HEADERS_CASE_INSENSITIVE_FILE);"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        repoConfigCsvParser.parse();"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"anubh-v":28,"-":301}},{"path":"src/test/java/reposense/parser/StandaloneConfigJsonParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.parser;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"anubh-v"},"content":"import static reposense.util.TestUtil.loadResource;"},{"lineNumber":4,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.BeforeClass;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.Test;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.google.gson.JsonSyntaxException;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.model.FileType;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.model.FileTypeTest;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.model.StandaloneConfig;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class StandaloneConfigJsonParserTest {"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"anubh-v"},"content":"    private static final Path STANDALONE_MALFORMED_CONFIG \u003d loadResource("},{"lineNumber":25,"author":{"gitId":"anubh-v"},"content":"            StandaloneConfigJsonParserTest.class, \"StandaloneConfigJsonParserTest/standaloneConfig_malformedJson.json\");"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"anubh-v"},"content":"    private static final Path STANDALONE_UNKNOWN_PROPERTY_CONFIG \u003d loadResource("},{"lineNumber":28,"author":{"gitId":"anubh-v"},"content":"            StandaloneConfigJsonParserTest.class,"},{"lineNumber":29,"author":{"gitId":"anubh-v"},"content":"            \"StandaloneConfigJsonParserTest/standaloneConfig_unknownPropertyInJson.json\");"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"anubh-v"},"content":"    private static final Path STANDALONE_CONFIG_FULL \u003d loadResource("},{"lineNumber":32,"author":{"gitId":"anubh-v"},"content":"            StandaloneConfigJsonParserTest.class,"},{"lineNumber":33,"author":{"gitId":"anubh-v"},"content":"            \"StandaloneConfigJsonParserTest/standaloneConfig_full.json\");"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"anubh-v"},"content":"    private static final Path STANDALONE_CONFIG_EMPTY_TEXT_FILE \u003d loadResource("},{"lineNumber":36,"author":{"gitId":"anubh-v"},"content":"            StandaloneConfigJsonParserTest.class,"},{"lineNumber":37,"author":{"gitId":"anubh-v"},"content":"            \"StandaloneConfigJsonParserTest/standaloneConfig_emptyText.json\");"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"anubh-v"},"content":"    private static final Path STANDALONE_CONFIG_EMPTY_JSON_FILE \u003d loadResource("},{"lineNumber":40,"author":{"gitId":"anubh-v"},"content":"            StandaloneConfigJsonParserTest.class,"},{"lineNumber":41,"author":{"gitId":"anubh-v"},"content":"            \"StandaloneConfigJsonParserTest/standaloneConfig_emptyJson.json\");"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"anubh-v"},"content":"    private static final Path STANDALONE_CONFIG_GITHUBID_ONLY \u003d loadResource("},{"lineNumber":44,"author":{"gitId":"anubh-v"},"content":"            StandaloneConfigJsonParserTest.class,"},{"lineNumber":45,"author":{"gitId":"anubh-v"},"content":"            \"StandaloneConfigJsonParserTest/standaloneConfig_githubId_only.json\");"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String TEST_DUMMY_LOCATION \u003d \"https://github.com/reposense/RepoSense.git\";"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static RepoConfiguration expectedGithubIdOnlyRepoconfig;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static RepoConfiguration expectedFullRepoConfig;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @BeforeClass"},{"lineNumber":53,"author":{"gitId":"yash-chowdhary"},"content":"    public static void setUp() throws Exception {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(\"yong24s\");"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        author.setAuthorAliases(Arrays.asList(\"Yong Hao TENG\"));"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Arrays.asList(\"**.css\", \"**.html\", \"**.jade\", \"**.js\"));"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"        expectedGithubIdOnlyRepoconfig \u003d new RepoConfiguration(new RepoLocation(TEST_DUMMY_LOCATION));"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        expectedGithubIdOnlyRepoconfig.setFormats(FileTypeTest.NO_SPECIFIED_FORMATS);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedGithubIdOnlyRepoconfig.setAuthorList(Arrays.asList(new Author(\"yong24s\")));"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedGithubIdOnlyRepoconfig.addAuthorDetailsToAuthorMapEntry(author, author.getEmails());"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedFullRepoConfig \u003d new RepoConfiguration(new RepoLocation(TEST_DUMMY_LOCATION));"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedFullRepoConfig.setFormats(FileType.convertFormatStringsToFileTypes("},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Arrays.asList(\"gradle\", \"jade\", \"java\", \"js\", \"md\", \"scss\", \"yml\")));"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        expectedFullRepoConfig.setIgnoreCommitList(Arrays.asList(new CommitHash("},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \"7b96c563eb2d3612aa5275364333664a18f01491\")));"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedFullRepoConfig.setIgnoreGlobList(Arrays.asList(\"**.adoc\", \"collate**\"));"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        expectedFullRepoConfig.setIgnoredAuthorsList(Arrays.asList(\"yong24s\"));"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        expectedFullRepoConfig.setAuthorList(Arrays.asList(author));"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        expectedFullRepoConfig.setAuthorDisplayName(author, \"Yong Hao\");"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedFullRepoConfig.addAuthorDetailsToAuthorMapEntry(author, Arrays.asList(author.getGitId()));"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedFullRepoConfig.addAuthorDetailsToAuthorMapEntry(author, author.getAuthorAliases());"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        expectedFullRepoConfig.addAuthorDetailsToAuthorMapEntry(author, author.getEmails());"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":78,"author":{"gitId":"yash-chowdhary"},"content":"    public void standaloneConfig_parseEmptyTextFile_success() throws Exception {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        new StandaloneConfigJsonParser().parse(STANDALONE_CONFIG_EMPTY_TEXT_FILE);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":83,"author":{"gitId":"yash-chowdhary"},"content":"    public void standaloneConfig_parseEmptyJsonFile_success() throws Exception {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        new StandaloneConfigJsonParser().parse(STANDALONE_CONFIG_EMPTY_JSON_FILE);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":88,"author":{"gitId":"yash-chowdhary"},"content":"    public void standaloneConfig_ignoresUnknownProperty_success() throws Exception {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        new StandaloneConfigJsonParser().parse(STANDALONE_UNKNOWN_PROPERTY_CONFIG);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":93,"author":{"gitId":"yash-chowdhary"},"content":"    public void standaloneConfig_correctConfig_success() throws Exception {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        StandaloneConfig config \u003d new StandaloneConfigJsonParser().parse(STANDALONE_CONFIG_FULL);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertSameConfig(expectedFullRepoConfig, config);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":99,"author":{"gitId":"yash-chowdhary"},"content":"    public void standaloneConfig_githubIdOnlyConfig_success() throws Exception {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        StandaloneConfig config \u003d new StandaloneConfigJsonParser().parse(STANDALONE_CONFIG_GITHUBID_ONLY);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertSameConfig(expectedGithubIdOnlyRepoconfig, config);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test(expected \u003d JsonSyntaxException.class)"},{"lineNumber":105,"author":{"gitId":"yash-chowdhary"},"content":"    public void standaloneConfig_malformedJsonFile_throwsJsonSyntaxException() throws Exception {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        new StandaloneConfigJsonParser().parse(STANDALONE_MALFORMED_CONFIG);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertSameConfig(RepoConfiguration expectedRepoConfig, StandaloneConfig actualStandaloneConfig)"},{"lineNumber":110,"author":{"gitId":"yash-chowdhary"},"content":"            throws Exception {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        RepoConfiguration actualRepoConfig \u003d new RepoConfiguration(new RepoLocation(TEST_DUMMY_LOCATION));"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        actualRepoConfig.update(actualStandaloneConfig);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedRepoConfig, actualRepoConfig);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"anubh-v":19,"yash-chowdhary":8,"-":88}},{"path":"src/test/java/reposense/report/RepoClonerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.report;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.After;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.Assert;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.Test;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class RepoClonerTest {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_EMPTY_GIT_LOCATION \u003d \"https://github.com/reposense/testrepo-Empty.git\";"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String OUTPUT_PATH \u003d \"repocloner_test\";"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @After"},{"lineNumber":17,"author":{"gitId":"yash-chowdhary"},"content":"    public void after() throws Exception {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        FileUtil.deleteDirectory(FileUtil.REPOS_ADDRESS);"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        FileUtil.deleteDirectory(OUTPUT_PATH);"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"yash-chowdhary"},"content":"    public void repoCloner_emptyRepo_failsGracefully() throws Exception {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        RepoConfiguration emptyRepositoryRepoConfig \u003d"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                new RepoConfiguration(new RepoLocation(TEST_REPO_EMPTY_GIT_LOCATION));"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"        RepoCloner repoCloner \u003d new RepoCloner();"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        repoCloner.cloneBare(emptyRepositoryRepoConfig);"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        RepoLocation clonedRepoLocation \u003d repoCloner.getClonedRepoLocation();"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Assert.assertNull(clonedRepoLocation);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"yash-chowdhary":2,"-":31}},{"path":"src/test/java/reposense/template/GitTestTemplate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.template;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Iterator;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.After;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.AfterClass;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.Before;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.BeforeClass;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.authorship.FileInfoAnalyzer;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.authorship.FileInfoExtractor;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileInfo;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileResult;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.authorship.model.LineInfo;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.git.GitCheckout;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.git.GitClone;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.model.FileTypeTest;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains templates for git testing."},{"lineNumber":32,"author":{"gitId":"-"},"content":" */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class GitTestTemplate {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    protected static final String TEST_REPO_GIT_LOCATION \u003d \"https://github.com/reposense/testrepo-Alpha.git\";"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    protected static final String DISK_REPO_DISPLAY_NAME \u003d \"testrepo-Alpha_master\";"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    protected static final String FIRST_COMMIT_HASH \u003d \"7d7584f\";"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    protected static final String ROOT_COMMIT_HASH \u003d \"fd425072e12004b71d733a58d819d845509f8db3\";"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    protected static final String TEST_COMMIT_HASH \u003d \"2fb6b9b\";"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    protected static final String TEST_COMMIT_HASH_PARENT \u003d \"c5a6dc774e22099cd9ddeb0faff1e75f9cf4f151\";"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    protected static final String MAIN_AUTHOR_NAME \u003d \"harryggg\";"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_NAME \u003d \"fakeAuthor\";"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    protected static final String EUGENE_AUTHOR_NAME \u003d \"eugenepeh\";"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected static final String YONG_AUTHOR_NAME \u003d \"Yong Hao TENG\";"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected static final String MINGYI_AUTHOR_NAME \u003d \"myteo\";"},{"lineNumber":45,"author":{"gitId":"jamessspanggg"},"content":"    protected static final String JAMES_AUTHOR_NAME \u003d \"jamessspanggg\";"},{"lineNumber":46,"author":{"gitId":"jamessspanggg"},"content":"    protected static final String JAMES_ALTERNATIVE_AUTHOR_NAME \u003d \"James Pang\";"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected static final String JINYAO_AUTHOR_NAME \u003d \"jylee-git\";"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected static final String LATEST_COMMIT_HASH \u003d \"c08107145269d5d5bb42ad78833774b7e5532977\";"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected static final String LATEST_COMMIT_HASH_PARENT \u003d \"136c6713fc00cfe79a1598e8ce83c6ef3b878660\";"},{"lineNumber":50,"author":{"gitId":"ccyccyccy"},"content":"    protected static final String EMPTY_TREE_HASH \u003d \"4b825dc642cb6eb9a060e54bf8d69288fbee4904\";"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected static final String EUGENE_AUTHOR_README_FILE_COMMIT_07052018_STRING \u003d"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \"2d87a431fcbb8f73a731b6df0fcbee962c85c250\";"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected static final CommitHash EUGENE_AUTHOR_README_FILE_COMMIT_07052018 \u003d"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            new CommitHash(EUGENE_AUTHOR_README_FILE_COMMIT_07052018_STRING);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING \u003d"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \"768015345e70f06add2a8b7d1f901dc07bf70582\";"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    protected static final CommitHash FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018 \u003d"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    protected static final String MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018_STRING \u003d"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            \"8d0ac2ee20f04dce8df0591caed460bffacb65a4\";"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    protected static final CommitHash MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018 \u003d"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            new CommitHash(MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018_STRING);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_RANGED_COMMIT_ONE_06022018_STRING \u003d"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            \"7d7584fc204922cc5ff3bd5ca073cad6bed2c46a\";"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_RANGED_COMMIT_TWO_06022018_STRING \u003d"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            \"8d0ac2ee20f04dce8df0591caed460bffacb65a4\";"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_RANGED_COMMIT_THREE_07022018_STRING \u003d"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            \"8e4ca1da5d413e9ab84a1e8d1474918afa97f7a1\";"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_RANGED_COMMIT_FOUR_08022018_STRING \u003d"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            \"768015345e70f06add2a8b7d1f901dc07bf70582\";"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    protected static final List\u003cCommitHash\u003e FAKE_AUTHOR_BLAME_RANGED_COMMIT_LIST_09022018 \u003d Arrays.asList("},{"lineNumber":72,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_RANGED_COMMIT_ONE_06022018_STRING),"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_RANGED_COMMIT_TWO_06022018_STRING),"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_RANGED_COMMIT_THREE_07022018_STRING),"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_RANGED_COMMIT_FOUR_08022018_STRING));"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    protected static final String NONEXISTENT_COMMIT_HASH \u003d \"nonExistentCommitHash\";"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    protected static final String TIME_ZONE_ID_STRING \u003d \"Asia/Singapore\";"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    protected static final Author MAIN_AUTHOR \u003d new Author(MAIN_AUTHOR_NAME);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    protected static final Author FAKE_AUTHOR \u003d new Author(FAKE_AUTHOR_NAME);"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"    protected static RepoConfiguration config;"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Before"},{"lineNumber":86,"author":{"gitId":"yash-chowdhary"},"content":"    public void before() throws Exception {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        config \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_GIT_LOCATION), \"master\");"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(getAlphaAllAliasAuthor()));"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        config.setFormats(FileTypeTest.DEFAULT_TEST_FORMATS);"},{"lineNumber":90,"author":{"gitId":"jamessspanggg"},"content":"        config.setIsLastModifiedDateIncluded(false);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @BeforeClass"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static void beforeClass() throws Exception {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        deleteRepos();"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        config \u003d new RepoConfiguration(new RepoLocation(TEST_REPO_GIT_LOCATION), \"master\");"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        config.setZoneId(TIME_ZONE_ID_STRING);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        GitClone.clone(config);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @AfterClass"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static void afterClass() throws IOException {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        deleteRepos();"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @After"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void after() {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), \"master\");"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private static void deleteRepos() throws IOException {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        FileUtil.deleteDirectory(FileUtil.REPOS_ADDRESS);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Generates the information for test file."},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public FileInfo generateTestFileInfo(String relativePath) {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        FileInfo fileInfo \u003d FileInfoExtractor.generateFileInfo(config.getRepoRoot(), relativePath);"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(MAIN_AUTHOR_NAME, new Author(MAIN_AUTHOR_NAME));"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        config.getAuthorDetailsToAuthorMap().put(FAKE_AUTHOR_NAME, new Author(FAKE_AUTHOR_NAME));"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return fileInfo;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public FileResult getFileResult(String relativePath) {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        FileInfo fileinfo \u003d generateTestFileInfo(relativePath);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return FileInfoAnalyzer.analyzeTextFile(config, fileinfo);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * For each line in {@code FileResult}, assert that it is attributed to the expected author provided by"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * {@code expectedLineAuthors}."},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void assertFileAnalysisCorrectness(FileResult fileResult, List\u003cAuthor\u003e expectedLineAuthors) {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        List\u003cLineInfo\u003e lines \u003d fileResult.getLines();"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedLineAuthors.size(), lines.size());"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Iterator\u003cAuthor\u003e lineAuthorsItr \u003d expectedLineAuthors.iterator();"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Iterator\u003cLineInfo\u003e linesItr \u003d lines.iterator();"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"        while (linesItr.hasNext() \u0026\u0026 lineAuthorsItr.hasNext()) {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            assertEquals(lineAuthorsItr.next(), linesItr.next().getAuthor());"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Returns a {@code Author} that has git id and aliases of all authors in testrepo-Alpha, so that no commits"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * will be filtered out in the `git log` command."},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    protected Author getAlphaAllAliasAuthor() {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(MAIN_AUTHOR_NAME);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        author.setAuthorAliases(Arrays.asList(FAKE_AUTHOR_NAME, EUGENE_AUTHOR_NAME, YONG_AUTHOR_NAME));"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return author;"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ccyccyccy":1,"yash-chowdhary":1,"jamessspanggg":3,"-":152}},{"path":"src/test/java/reposense/util/FileUtilTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"anubh-v"},"content":"import static reposense.util.TestUtil.loadResource;"},{"lineNumber":4,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.After;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.Assert;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.Test;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.report.SummaryJson;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class FileUtilTest {"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"anubh-v"},"content":"    private static final Path FILE_UTIL_TEST_DIRECTORY \u003d loadResource(FileUtilTest.class, \"FileUtilTest\");"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path REPO_REPORT_DIRECTORY_PATH \u003d Paths.get(FILE_UTIL_TEST_DIRECTORY.toString(),"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \"reposense-report-test\");"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path ARCHIVE_ZIP_PATH \u003d Paths.get(FILE_UTIL_TEST_DIRECTORY.toString(), FileUtil.ZIP_FILE);"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Path EXPECTED_UNZIPPED_DIRECTORY_PATH \u003d Paths.get(FILE_UTIL_TEST_DIRECTORY.toString(),"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \"expectedUnzip\");"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Path TEST_ZIP_PATH \u003d Paths.get(FILE_UTIL_TEST_DIRECTORY.toString(), \"testZip.zip\");"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Path UNZIPPED_DIRECTORY_PATH \u003d Paths.get(FILE_UTIL_TEST_DIRECTORY.toString(),"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"UnzippedFolder\");"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final List\u003cPath\u003e REPORT_FOLDER_FILE_PATHS \u003d Arrays.asList("},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Paths.get(REPO_REPORT_DIRECTORY_PATH.toString(), \"reposense_testrepo-Beta\").toAbsolutePath(),"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            Paths.get(REPO_REPORT_DIRECTORY_PATH.toString(), \"reposense_testrepo-Charlie\").toAbsolutePath(),"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            Paths.get(REPO_REPORT_DIRECTORY_PATH.toString(),"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            SummaryJson.SUMMARY_JSON_FILE_NAME).toAbsolutePath()"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Path EXPECTED_RELEVANT_FOLDER_PATH \u003d Paths.get(FILE_UTIL_TEST_DIRECTORY.toString(),"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \"expectedRelevantUnzippedFiles\");"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Ensures that only the specified files and folders with the corresponding file types get zipped."},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"yash-chowdhary"},"content":"    public void zipFoldersAndFiles_onlyRelevantFiles_success() throws Exception {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.zipFoldersAndFiles(REPORT_FOLDER_FILE_PATHS, REPO_REPORT_DIRECTORY_PATH, FILE_UTIL_TEST_DIRECTORY,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                \".json\");"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FileUtil.unzip(ARCHIVE_ZIP_PATH, UNZIPPED_DIRECTORY_PATH);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Assert.assertTrue(TestUtil.compareDirectories(EXPECTED_RELEVANT_FOLDER_PATH, UNZIPPED_DIRECTORY_PATH));"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":50,"author":{"gitId":"yash-chowdhary"},"content":"    public void zipFoldersAndFiles_validLocation_success() throws Exception {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        FileUtil.zipFoldersAndFiles(REPORT_FOLDER_FILE_PATHS, REPO_REPORT_DIRECTORY_PATH, FILE_UTIL_TEST_DIRECTORY,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \".json\");"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.exists(ARCHIVE_ZIP_PATH));"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.size(ARCHIVE_ZIP_PATH) \u003e 0);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":58,"author":{"gitId":"yash-chowdhary"},"content":"    public void zipFoldersAndFiles_validFileType_success() throws Exception {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e paths \u003d Collections.singletonList(Paths.get(FILE_UTIL_TEST_DIRECTORY.toString(), \"test.csv\"));"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        FileUtil.zipFoldersAndFiles(paths, FILE_UTIL_TEST_DIRECTORY, \".csv\");"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.exists(ARCHIVE_ZIP_PATH));"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.size(ARCHIVE_ZIP_PATH) \u003e 0);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":66,"author":{"gitId":"yash-chowdhary"},"content":"    public void unzip_validZipFile_success() throws Exception {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        FileUtil.unzip(TEST_ZIP_PATH, UNZIPPED_DIRECTORY_PATH);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Assert.assertTrue(Files.exists(UNZIPPED_DIRECTORY_PATH));"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Assert.assertTrue(TestUtil.compareDirectories(EXPECTED_UNZIPPED_DIRECTORY_PATH, UNZIPPED_DIRECTORY_PATH));"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":73,"author":{"gitId":"yash-chowdhary"},"content":"    public void unzip_invalidZipFile_fail() throws Exception {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Path invalidZipFile \u003d Paths.get(FILE_UTIL_TEST_DIRECTORY.toString(), \"test.csv\");"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FileUtil.unzip(invalidZipFile, FILE_UTIL_TEST_DIRECTORY);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Assert.assertFalse(Files.exists(Paths.get(FILE_UTIL_TEST_DIRECTORY.toString(), \"test\")));"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @After"},{"lineNumber":80,"author":{"gitId":"yash-chowdhary"},"content":"    public void after() throws Exception {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Files.deleteIfExists(ARCHIVE_ZIP_PATH);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (Files.exists(UNZIPPED_DIRECTORY_PATH)) {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            FileUtil.deleteDirectory(UNZIPPED_DIRECTORY_PATH.toString());"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"anubh-v":3,"yash-chowdhary":6,"-":77}},{"path":"src/test/java/reposense/util/InputBuilder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import reposense.parser.ArgsParser;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building command line input."},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     {@code String input \u003d new InputBuilder().addSinceDate(\"27/01/2017\").build();}"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class InputBuilder {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \";"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private StringBuilder input;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public InputBuilder() {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.input \u003d new StringBuilder();"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns the {@code input} generated from this {@code InputBuilder}"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public String build() {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return input.toString();"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Add a help flag to the input."},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build."},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public InputBuilder addHelp() {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.HELP_FLAGS[0] + WHITESPACE);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return this;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Adds the config flag with the {@code path} as argument to the input."},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build."},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param path The config folder path."},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public InputBuilder addConfig(Path path) {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.CONFIG_FLAGS[0] + WHITESPACE + path + WHITESPACE);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return this;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Adds the repo flag with the {@code paths} as arguments to the input."},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build."},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param paths The repo paths."},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public InputBuilder addRepos(String... paths) {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.REPO_FLAGS[0] + WHITESPACE);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (String path : paths) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            input.append(path + WHITESPACE);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the view flag with the {@code path} as argument to the input."},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build."},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param path The view folder path."},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public InputBuilder addView(Path path) {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.VIEW_FLAGS[0] + WHITESPACE + path + WHITESPACE);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Adds the view flag only to the input."},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build."},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public InputBuilder addView() {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.VIEW_FLAGS[0] + WHITESPACE);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Adds the output flag with the {@code path} as argument to the input."},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build."},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param path The output folder path."},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public InputBuilder addOutput(Path path) {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.OUTPUT_FLAGS[0] + WHITESPACE + path + WHITESPACE);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Adds the since flag with the {@code date} as argument to the input."},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build."},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param date The since date."},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public InputBuilder addSinceDate(String date) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.SINCE_FLAGS[0] + WHITESPACE + date + WHITESPACE);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Adds the until flag with the {@code date} as argument to the input."},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build."},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param date The until date."},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public InputBuilder addUntilDate(String date) {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.UNTIL_FLAGS[0] + WHITESPACE + date + WHITESPACE);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return this;"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"niqiukun"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"niqiukun"},"content":"     * Adds the period flag with the {@code period} as argument to the input."},{"lineNumber":117,"author":{"gitId":"niqiukun"},"content":"     * This method should only be called once in one build."},{"lineNumber":118,"author":{"gitId":"niqiukun"},"content":"     *"},{"lineNumber":119,"author":{"gitId":"niqiukun"},"content":"     * @param period The period."},{"lineNumber":120,"author":{"gitId":"niqiukun"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"niqiukun"},"content":"    public InputBuilder addPeriod(String period) {"},{"lineNumber":122,"author":{"gitId":"niqiukun"},"content":"        input.append(ArgsParser.PERIOD_FLAGS[0] + WHITESPACE + period + WHITESPACE);"},{"lineNumber":123,"author":{"gitId":"niqiukun"},"content":"        return this;"},{"lineNumber":124,"author":{"gitId":"niqiukun"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"niqiukun"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Adds the format flag with the {@code formats} as argument to the input."},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build."},{"lineNumber":129,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @param formats The formats that need to be evaluated."},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public InputBuilder addFormats(String formats) {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.FORMAT_FLAGS[0] + WHITESPACE + formats + WHITESPACE);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return this;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Adds the ignoreStandaloneConfig flag to the input."},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build."},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public InputBuilder addIgnoreStandaloneConfig() {"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.IGNORE_FLAGS[0] + WHITESPACE);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return this;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Adds the timezone flag with the {@code zoneId} as argument to the input."},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build."},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public InputBuilder addTimezone(String zoneId) {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.TIMEZONE_FLAGS[0] + WHITESPACE + zoneId + WHITESPACE);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return this;"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Adds the cloning threads flag with the {@code threads} as argument to the input."},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build."},{"lineNumber":158,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @param threads The number of threads for cloning."},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public InputBuilder addNumCloningThreads(int threads) {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.CLONING_THREADS_FLAG[0] + WHITESPACE + threads + WHITESPACE);"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return this;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Adds the analysis threads flag with the {@code threads} as argument to the input."},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build."},{"lineNumber":169,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * @param threads The number of threads for analysis."},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public InputBuilder addNumAnalysisThreads(int threads) {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.ANALYSIS_THREADS_FLAG[0] + WHITESPACE + threads + WHITESPACE);"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return this;"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Adds the flag to enable shallow cloning."},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * This method should only be called once in one build."},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public InputBuilder addShallowCloning() {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        input.append(ArgsParser.SHALLOW_CLONING_FLAGS[0] + WHITESPACE);"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return this;"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Adds {@code content} to the input."},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public InputBuilder add(String content) {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        input.append(content + WHITESPACE);"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        return this;"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Adds {@code num} of white spaces to the input."},{"lineNumber":196,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * @param num The number of white spaces to add."},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public InputBuilder addWhiteSpace(int num) {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c num; i++) {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            input.append(WHITESPACE);"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        return this;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Clears all input and flags given."},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public InputBuilder reset() {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        input \u003d new StringBuilder();"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return this;"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"niqiukun":11,"-":202}},{"path":"src/test/java/reposense/util/StringsUtilTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"anubh-v"},"content":"import static reposense.util.TestUtil.loadResource;"},{"lineNumber":4,"author":{"gitId":"anubh-v"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.Assert;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringsUtilTest {"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"anubh-v"},"content":"    private static final Path STRINGS_UTIL_TEST_DIRECTORY \u003d loadResource(FileUtilTest.class, \"StringsUtilTest\");"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"yash-chowdhary"},"content":"    public void filterText_standardInput_success() throws Exception {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Path gitBlameStandardOutputFile \u003d"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                Paths.get(STRINGS_UTIL_TEST_DIRECTORY.toString(), \"standardBlameOutput.txt\");"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(gitBlameStandardOutputFile);"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String text \u003d String.join(\"\\n\", lines);"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"        String expected \u003d \"a79711ed676fd3a27af2f466be6d5b48177580e0 4 4\\n\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"                + \"author example\\n\";"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String filteredText \u003d StringsUtil.filterText(text, \"(^author .*)|(^[0-9a-f]{40} .*)\");"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expected, filteredText);"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void replaceSpecialSymbols_noSpecialSymbols_noChange() {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String noSpecialSymbolString \u003d \"Just A Normal String\";"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String convertedString \u003d StringsUtil.replaceSpecialSymbols(noSpecialSymbolString, \".\");"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Assert.assertEquals(noSpecialSymbolString, convertedString);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void replaceSpecialSymbols_stringWithSpecialSymbolsToPeriod_success() {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String noSpecialSymbolString \u003d \"($t^!ng W!th $pec!@l Symbols)\";"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String convertedString \u003d StringsUtil.replaceSpecialSymbols(noSpecialSymbolString, \".\");"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedConvertedString \u003d \"..t..ng W.th .pec..l Symbols.\";"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedConvertedString, convertedString);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"anubh-v":3,"yash-chowdhary":1,"-":44}},{"path":"src/test/java/reposense/util/TestUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"anubh-v"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Calendar;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Date;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.TimeZone;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.Assert;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.git.GitLog;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains testing related functionalities."},{"lineNumber":24,"author":{"gitId":"-"},"content":" */"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TestUtil {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final int[] END_OF_DAY_TIME \u003d {23, 59, 59};"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final int[] START_OF_DAY_TIME \u003d {0, 0, 0};"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final ZoneId TIME_ZONE_ID \u003d getZoneId(\"Asia/Singapore\");"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_COMPARING_FILES \u003d \"Comparing files %s \u0026 %s\\n\";"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_LINE_CONTENT_DIFFERENT \u003d \"Content different at line number %d:\\n\""},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"\u003c\u003c %s\\n\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"\u003e\u003e %s\\n\";"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_LINES_LENGTH_DIFFERENT \u003d \"The files\u0027 lines count do not match.\";"},{"lineNumber":36,"author":{"gitId":"jamessspanggg"},"content":"    private static final String TAB_SPLITTER \u003d \"\\t\";"},{"lineNumber":37,"author":{"gitId":"jamessspanggg"},"content":"    private static final String MOVED_FILE_INDICATION \u003d \"\u003d\u003e \";"},{"lineNumber":38,"author":{"gitId":"jamessspanggg"},"content":"    private static final int STAT_FILE_PATH_INDEX \u003d 2;"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns true if the files\u0027 contents are the same."},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Also prints out error message if the lines count are different,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * else prints out the first line of content difference (if any)."},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static boolean compareFileContents(Path expected, Path actual) throws IOException {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return compareFileContents(expected, actual, 1);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns true if the files\u0027 contents are the same."},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Also prints out error message if the lines count are different,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * else prints out maximum {@code maxTraceCounts} lines of content difference (if any)."},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static boolean compareFileContents(Path expected, Path actual, int maxTraceCounts) throws IOException {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        int traceCounts \u003d 0;"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"        System.out.println(String.format(MESSAGE_COMPARING_FILES, expected, actual));"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String[] expectedContent \u003d new String(Files.readAllBytes(expected))"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .replace(\"\\r\", \"\").split(\"\\n\");"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String[] actualContent \u003d new String(Files.readAllBytes(actual))"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .replace(\"\\r\", \"\").split(\"\\n\");"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c Math.min(expectedContent.length, actualContent.length); i++) {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            if (!expectedContent[i].equals(actualContent[i])) {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                System.out.println("},{"lineNumber":67,"author":{"gitId":"-"},"content":"                        String.format(MESSAGE_LINE_CONTENT_DIFFERENT, i + 1, expectedContent[i], actualContent[i]));"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                if (++traceCounts \u003e\u003d maxTraceCounts) {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (expectedContent.length !\u003d actualContent.length) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            System.out.println(MESSAGE_LINES_LENGTH_DIFFERENT);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        } else if (traceCounts \u003e\u003d maxTraceCounts) {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns true if {@code expected} directory has all files with same content as {@code actual} directory."},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static boolean compareDirectories(Path expected, Path actual) throws IOException {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e expectedPaths \u003d Files.walk(expected)"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .sorted()"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e actualPaths \u003d Files.walk(actual)"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .sorted()"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (expectedPaths.size() !\u003d actualPaths.size()) {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedPaths.size(); i++) {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            if (!(Files.isDirectory(expectedPaths.get(i)) || Files.isDirectory(actualPaths.get(i)))"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                    \u0026\u0026 !TestUtil.compareFileContents(expectedPaths.get(i), actualPaths.get(i))) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Date} object with the specified {@code year}, {@code month}, {@code day}."},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static Date getDate(int year, int month, int date, int[] time) {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Calendar cal \u003d Calendar.getInstance();"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        cal.setTimeZone(TimeZone.getTimeZone(TIME_ZONE_ID));"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        cal.set(Calendar.YEAR, year);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MONTH, month);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        cal.set(Calendar.DAY_OF_MONTH, date);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        cal.set(Calendar.HOUR_OF_DAY, time[0]);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MINUTE, time[1]);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        cal.set(Calendar.SECOND, time[2]);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MILLISECOND, 0);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return cal.getTime();"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Wrapper for {@code getDate} method to get since date with time 00:00:00"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static Date getSinceDate(int year, int month, int date) {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return getDate(year, month, date, START_OF_DAY_TIME);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Wrapper for {@code getDate} method to get until date with time 23:59:59"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static Date getUntilDate(int year, int month, int date) {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return getDate(year, month, date, END_OF_DAY_TIME);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Date} object with the specified {@code year}, {@code month}, {@code day} that is not"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * dependent on the time zone of the current system, in cases where adjusting for the time zone is not necessary."},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static Date getLocalDate(int year, int month, int date, int[] time) {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Calendar cal \u003d Calendar.getInstance();"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        cal.set(Calendar.YEAR, year);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MONTH, month);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        cal.set(Calendar.DAY_OF_MONTH, date);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        cal.set(Calendar.HOUR_OF_DAY, time[0]);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MINUTE, time[1]);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        cal.set(Calendar.SECOND, time[2]);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        cal.set(Calendar.MILLISECOND, 0);"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return cal.getTime();"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Wrapper for {@code getLocalDate} method to get since date with time 00:00:00"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public static Date getLocalSinceDate(int year, int month, int date) {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return getLocalDate(year, month, date, START_OF_DAY_TIME);"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Wrapper for {@code getLocalDate} method to get until date with time 23:59:59"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public static Date getLocalUntilDate(int year, int month, int date) {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return getLocalDate(year, month, date, END_OF_DAY_TIME);"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Returns a {@code ZoneId} object for the specified {@code timezone}."},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public static ZoneId getZoneId(String timezone) {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return ZoneId.of(timezone);"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Compares attributes of {@code expectedRepoConfig} and {@code actualRepoConfig}."},{"lineNumber":175,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * @throws AssertionError if any attributes fail equality check."},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public static void compareRepoConfig(RepoConfiguration expectedRepoConfig, RepoConfiguration actualRepoConfig) {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedRepoConfig, actualRepoConfig);"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedRepoConfig.getAuthorList().size(); i++) {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            compareAuthor(expectedRepoConfig.getAuthorList().get(i), actualRepoConfig.getAuthorList().get(i));"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Compares attributes of {@code expectedAuthor} and {@code actualAuthor}, with exception of it\u0027s display name."},{"lineNumber":188,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * The display name is not compared as it varies with object construction."},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * It is a transient value and it is not needed for object matching."},{"lineNumber":191,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * @throws AssertionError if any attributes fail equality check."},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public static void compareAuthor(Author expectedAuthor, Author actualAuthor) {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedAuthor.getGitId(), actualAuthor.getGitId());"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedAuthor.getIgnoreGlobList(), actualAuthor.getIgnoreGlobList());"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Assert.assertEquals(expectedAuthor.getAuthorAliases(), actualAuthor.getAuthorAliases());"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Returns true if the {@code expectedNumberCommits} is equal to the expected number of commits captured in"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * {@code gitLogResult}."},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public static boolean compareNumberExpectedCommitsToGitLogLines(int expectedNumberCommits, String gitLogResult) {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // if git log result is empty, then there are no commits"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        if (gitLogResult.isEmpty()) {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return expectedNumberCommits \u003d\u003d 0;"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // (actualSplitGitLogResilt - 1) as the 1st token is always empty."},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return expectedNumberCommits \u003d\u003d (gitLogResult.split(GitLog.COMMIT_INFO_DELIMITER).length - 1);"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * Returns true if the {@code expectedNumberFilesChanged} is equal to the actual number of files changed in"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * {@code gitLogResult}."},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public static boolean compareNumberFilesChanged(int expectedNumberFilesChanged, String gitLogResult) {"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // if git log result is empty, then there are no files changed"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        if (gitLogResult.isEmpty()) {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return expectedNumberFilesChanged \u003d\u003d 0;"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        String[] changesLogged \u003d gitLogResult.split(GitLog.COMMIT_INFO_DELIMITER);"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        HashSet\u003cString\u003e filesChanged \u003d new HashSet\u003c\u003e();"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"        // start from index 1 as index 0 is always empty."},{"lineNumber":227,"author":{"gitId":"-"},"content":"        for (int i \u003d 1; i \u003c changesLogged.length; i++) {"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            filesChanged.addAll(getFilesChangedInCommit(changesLogged[i]));"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        return filesChanged.size() \u003d\u003d expectedNumberFilesChanged;"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * Returns the {@code set} of files changed in the commit {@code rawCommitInfo}."},{"lineNumber":235,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    private static Set\u003cString\u003e getFilesChangedInCommit(String rawCommitInfo) {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e filesChanged \u003d new HashSet\u003c\u003e();"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        String[] commitInfo \u003d rawCommitInfo.replaceAll(\"\\n+$\", \"\").split(\"\\n\");"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        int fileChangedNum \u003d Integer.parseInt(commitInfo[commitInfo.length - 1].trim().split(\" \")[0]);"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        for (int fileNum \u003d 0; fileNum \u003c fileChangedNum; fileNum++) {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            filesChanged.add(getFileChanged(commitInfo[commitInfo.length - 2 - fileNum]));"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        return filesChanged;"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * Returns the file changed given a {@code rawFileChangedString}."},{"lineNumber":248,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    private static String getFileChanged(String rawFileChangedString) {"},{"lineNumber":250,"author":{"gitId":"jamessspanggg"},"content":"        String fileChanged \u003d rawFileChangedString.split(TAB_SPLITTER)[STAT_FILE_PATH_INDEX].trim();"},{"lineNumber":251,"author":{"gitId":"jamessspanggg"},"content":"        if (fileChanged.contains(MOVED_FILE_INDICATION)) {"},{"lineNumber":252,"author":{"gitId":"jamessspanggg"},"content":"            fileChanged \u003d fileChanged.substring(fileChanged.indexOf(MOVED_FILE_INDICATION)"},{"lineNumber":253,"author":{"gitId":"jamessspanggg"},"content":"                    + MOVED_FILE_INDICATION.length());"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        return fileChanged;"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":259,"author":{"gitId":"-"},"content":"     * Returns true if the test environment is on Windows OS."},{"lineNumber":260,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public static boolean isWindows() {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        return System.getProperty(\"os.name\").toLowerCase().contains(\"win\");"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"anubh-v"},"content":"    /**"},{"lineNumber":266,"author":{"gitId":"anubh-v"},"content":"     * Returns the path to a resource"},{"lineNumber":267,"author":{"gitId":"anubh-v"},"content":"     */"},{"lineNumber":268,"author":{"gitId":"anubh-v"},"content":"    public static Path loadResource(Class classForLoading, String pathToResource) {"},{"lineNumber":269,"author":{"gitId":"anubh-v"},"content":"        return new File(classForLoading.getClassLoader().getResource(pathToResource).getFile()).toPath();"},{"lineNumber":270,"author":{"gitId":"anubh-v"},"content":"    }"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"anubh-v":7,"jamessspanggg":7,"-":257}}]

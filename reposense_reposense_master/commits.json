{
  "authorDailyContributionsMap": {
    "ccyccyccy": [
      {
        "insertions": 6,
        "deletions": 0,
        "date": "2020-01-07",
        "commitResults": [
          {
            "hash": "6476b251fea6d28942cb769bf5100f5894ef7d4c",
            "messageTitle": "[#747] SystemTest: Delete ft_temp folder after test (#973)",
            "messageBody": "ft_temp folder is generated after running system test.\r\n\r\nThis folder is unnecessary to stay in our repo directory and may \r\nconfuse code navigation.\r\n\r\nLet\u0027s add a cleanup method to delete the folder after the system \r\ntest.",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 6,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 2,
        "date": "2020-01-21",
        "commitResults": [
          {
            "hash": "8054c6a8fd32a797ca443cd9052cd41a5e8e09da",
            "messageTitle": "[#940] ReportGenerator#generateReposReport: SLAP copying of template file (#977)",
            "messageBody": "The operation to copy template file before cloning and analyzing the\r\nrepositories in ReportGenerator#generateReposReport is specified at \r\na granular level.\r\n\r\nIt clashes with the higher level of abstraction used for the other\r\noperations in ReportGenerator#generateReposReport.\r\n\r\nLet\u0027s abstract out the copying of template files into a separate \r\nmethod and then call this method from \r\nReportGenerator#generateReposReport.",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 10,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 0,
        "date": "2020-03-02",
        "commitResults": [
          {
            "hash": "43c189865df7ace5cb2e17792b65b4227a6f0b16",
            "messageTitle": "[#1044] Update date hashes on reset date range (#1068)",
            "messageBody": "Resetting the date range would occasionally not change the date \r\nhashes in the URL, causing a refresh of the page to load the \r\noutdated filter date range. \r\n\r\nThis bug occurs when until or since date is not specified on\r\ngenerating the report.\r\n\r\nLet\u0027s make sure that the date hashes gets updated all the time.",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 4,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 2,
        "date": "2020-03-16",
        "commitResults": [
          {
            "hash": "f166e23b07d76eb870c88147a838047f093450fc",
            "messageTitle": "[#850] Ignore git submodules when analyzing repos (#1127)",
            "messageBody": "Repos that contains git submodules are not handled properly and cannot\r\nbe analyzed.\r\n\r\nThis is due to the diff result including the submodule information.\r\n\r\nLet set `--ignore-submodules\u003dall` in the git diff command to ignore all\r\nsubmodule information.",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 12,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "insertions": 53,
        "deletions": 38,
        "date": "2020-04-21",
        "commitResults": [
          {
            "hash": "238596bb01304259436912927656b0400ee449c4",
            "messageTitle": "[#1178] Make github profile and repo hyperlinks more consistent (#1186)",
            "messageBody": "When grouped by repo, the same icon to link to the repo is duplicated\r\nmultiple times for no reason. Also, the icon to link to the author\u0027s\r\nprofile is hard to find.\r\n\r\nWe can make the links more intuitive and consistent by putting links to\r\nthe author\u0027s profile beside author names, and links to repo beside repo\r\nnames.\r\n\r\nLet\u0027s reorder the icon group such that the hyperlinks are closer to the\r\nrespective names, as well as always showing the icons beside their\r\nrespective names. As this change heavily relies on the icons being\r\nresponsive, let\u0027s resolve issue #1191 as well to make use of\r\nvue-fontawesome to make the icons responsive.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 46,
                "deletions": 37
              },
              "js": {
                "insertions": 2,
                "deletions": 0
              }
            }
          },
          {
            "hash": "057aa14a6892b595c39daf6c24c7c874be83af86",
            "messageTitle": "[#1249] Disable view code icon when merge group and group by authors (#1250)",
            "messageBody": "View code icon shows when group by authors and merge group is\r\nselected.\r\n\r\nHowever, the functionality is not implemented yet. Clicking on the\r\nicon shows garbage results.\r\n\r\nLet\u0027s remove the icon when group by authors and merge group is selected.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 1,
                "deletions": 0
              }
            }
          },
          {
            "hash": "a35e00429b9053d2724b2f46d149b97a024891ab",
            "messageTitle": "[#1146] Add caret icon to indicate collapsible authorship file panel (#1169)",
            "messageBody": "It is not apparent that the authorship file details can be collapsed by\r\nclicking on the title.\r\n\r\nLet\u0027s add caret icons to show that the title is clickable to collapse the\r\nfile details view.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 4,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 11,
        "deletions": 11,
        "date": "2020-05-19",
        "commitResults": [
          {
            "hash": "5d8cf3e57c941c7545aafa13d409dde7895f9e34",
            "messageTitle": "Change totalLineCount and totalBlankLineCount to computed values (#1088)",
            "messageBody": "The variables `totalLineCount` and `totalBlankLineCount` are \r\ncalculated in `processFiles()`, a method that executes a big chunk\r\nof logic.\r\n\r\nTheir values are calculated in a loop through every files, which is\r\ninefficient when we can instead calculate it from\r\n`getFileTypeExistingLinesObj` and `fileTypeBlankLinesObj` which already\r\nhave most of the the information available.\r\n\r\nLet\u0027s extract out the calculations into computed values from\r\n`getFileTypeExistingLinesObj` and `fileTypeBlankLinesObj` which is\r\nclearer and more efficient.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 2,
                "deletions": 2
              },
              "js": {
                "insertions": 9,
                "deletions": 9
              }
            }
          }
        ]
      }
    ],
    "Parcly-Taxel": [],
    "niqiukun": [
      {
        "insertions": 1,
        "deletions": 12,
        "date": "2020-03-25",
        "commitResults": [
          {
            "hash": "333a4733436b5ed55759b3ac594332445f808937",
            "messageTitle": "[#1083] RepoConfiguration: remove `annotationOverwrite` flag  (#1117)",
            "messageBody": "There is an `annotationOverwrite` flag in the `RepoConfiguration`. \r\nThe flag is redundant because it defaults to `true` and is never \r\nutilized in the main code.\r\n\r\nSince there is currently no planned use case, for better code \r\nquality, we should remove the unnecessary code.\r\n\r\nLet\u0027s remove this flag from the `RepoConfiguration`.",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 1,
                "deletions": 12
              }
            }
          }
        ]
      },
      {
        "insertions": 58,
        "deletions": 36,
        "date": "2020-03-30",
        "commitResults": [
          {
            "hash": "e963b68a890175fbba4c57910008de9599ea4591",
            "messageTitle": "[#1058] PublishingGuide: Provide a way to use GitHub actions to auto-generate the dashboard (#1078)",
            "messageBody": "The only way to leverage on CI and auto-generate the dashboard\r\nis by using Travis CI, a third-party service.\r\n\r\nWe can provide a way to use GitHub Actions to auto-generate the \r\ndashboard so that users have an alternative option now and do not \r\nhave to rely on third-party services for deployment.\r\n\r\nLet\u0027s add the documentation which shows users how to auto-generate \r\nthe dashboard using GitHub Actions.",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 58,
                "deletions": 36
              }
            }
          }
        ]
      },
      {
        "insertions": 20,
        "deletions": 12,
        "date": "2020-05-12",
        "commitResults": [
          {
            "hash": "9b835ac0b7a03b6290e2c0030df28f5e3de0b281",
            "messageTitle": "[#1230] v_zoom: hide `show all commit messages` when no message is available (#1231)",
            "messageBody": "The `show all commit messages`  button on the zoom view displays \r\neven when there is no message available to show. \r\n\r\nThis may cause confusion to the user because clicking on the button \r\ngives no effect.\r\n\r\nLet\u0027s hide the link when there is no available message to show.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 10,
                "deletions": 4
              },
              "scss": {
                "insertions": 10,
                "deletions": 8
              }
            }
          }
        ]
      },
      {
        "insertions": 184,
        "deletions": 69,
        "date": "2020-05-26",
        "commitResults": [
          {
            "hash": "6aed081457bc7073aafbdab85cdbc2e81799b0d8",
            "messageTitle": "[#1221] Allow merging of individual groups (#1223)",
            "messageBody": "Currently the `merge group` checkbox only supports merging/expanding all \r\ngroups. \r\n\r\nIt is inconvenient for users who want to have an overview across all \r\nrepos first, then take a detailed look within a particular group, because\r\nthere is a need to relocate the group on the page after expanding all \r\ngroups. This is especially the case when there are many authors and repos\r\non the dashboard.\r\n\r\nLet\u0027s add the feature to allow merging/expanding individual groups \r\ninstead.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 28,
                "deletions": 17
              },
              "js": {
                "insertions": 156,
                "deletions": 52
              }
            }
          }
        ]
      }
    ],
    "openorclose": [],
    "yash-chowdhary": [
      {
        "insertions": 7,
        "deletions": 6,
        "date": "2020-02-12",
        "commitResults": [
          {
            "hash": "cc28942504f513fc7c277c6eda0ac01b353ae962",
            "messageTitle": "[#1021]: Use BASE_URL constant instead of string  (#1033)",
            "messageBody": "There are multiple occurrences of the same string \r\n\u0027https://github.com\u0027 in the frontend.\r\n\r\nLet\u0027s replace the string with a constant \u0027BASE_URL\u0027 in the files.",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 7,
                "deletions": 6
              }
            }
          }
        ]
      },
      {
        "insertions": 22,
        "deletions": 15,
        "date": "2020-03-25",
        "commitResults": [
          {
            "hash": "ac0909a177c043183807bb4cea027eab111ba931",
            "messageTitle": "[#1046] v_summary: refactor duplicate code (#1056)",
            "messageBody": "There is an instance of code duplication in \u0027v_summary.js\u0027. \r\nSpecifically, the definition of a function that is passed to the \r\ncomparator has been duplicated in the case of grouping by repos and \r\nby authors.\r\n\r\nLet\u0027s extract this duplicated portion of code into a helper function \r\nso that it may be referenced by the comparator.",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 22,
                "deletions": 15
              }
            }
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 33,
        "date": "2020-04-03",
        "commitResults": [
          {
            "hash": "2303c464ee682e2e9f0d71ada008a1d04a27a14a",
            "messageTitle": "[#929, #1002, #1097]: Remove unused code (#1177)",
            "messageBody": "There are instances of unused code across the files\r\n`RepoLocation.java`, `LogsManager.java` and `FileUtil.java`.\r\n\r\nLet\u0027s remove them for better code quality.",
            "tags": [
              "v1.11"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 0,
                "deletions": 33
              }
            }
          }
        ]
      },
      {
        "insertions": 194,
        "deletions": 140,
        "date": "2020-04-18",
        "commitResults": [
          {
            "hash": "dabdf0e889595ebc0f3fd093238b8f1f77bb6300",
            "messageTitle": "[#937] Use generic \u0027throw Exception\u0027 in all tests (#1072)",
            "messageBody": "It is alright to use a generic \"throws Exception\" in test cases,\r\nas all exceptions result in failure.\r\n\r\nLet\u0027s use a generic \"throws Exception\" clause in all tests.",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 96,
                "deletions": 140
              }
            }
          },
          {
            "hash": "e1a10e69576f8f16b93e805c0700623dd845553b",
            "messageTitle": "[#1052] Add issue templates (#1063)",
            "messageBody": "Issue templates help guide the user to provide the required information\r\nneeded for a developer to understand what is required. Templates for \r\nbug reports, feature requests and documentation changes help clarify \r\nthe motivation as well as summarize the expectations and requirements.\r\n\r\nLet\u0027s add issue templates for these issue types.",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 98,
                "deletions": 0
              }
            }
          }
        ]
      }
    ],
    "anubh-v": [
      {
        "insertions": 52,
        "deletions": 23,
        "date": "2019-12-01",
        "commitResults": [
          {
            "hash": "175bed2ea6ad27c54c91c14b9ef7edb229df67c1",
            "messageTitle": "[#806, #951] ReportGenerator: return paths of generated files (#939)",
            "messageBody": "The method `ReportGenerator#generateReposReport` returns a list of\r\npaths to the JSON files that need to be zipped. \r\n\r\nHowever, the list is made up by the file paths of expected output and\r\nnot the file paths of actual generated files. As a good practice, and\r\nalso to ensure that only the correct files are zipped, the latter is\r\npreferred. \r\n\r\nLet\u0027s return a Optional\u003cPath\u003e from `FileUtil#writeJsonFile` so that\r\ncallers of this method can determine whether a JSON file was\r\nsuccessfully generated.\r\n\r\nThis allows `generateReposReport` to only return paths to JSON files\r\nthat were successfully generated.\r\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 52,
                "deletions": 23
              }
            }
          }
        ]
      },
      {
        "insertions": 77,
        "deletions": 5,
        "date": "2019-12-03",
        "commitResults": [
          {
            "hash": "c6ffecd214e73fc8ecf97a742108af5ac6d2ceab",
            "messageTitle": "[#871, #952] CSV files: ignore blank lines before the header (#903)",
            "messageBody": "CsvParser treats the first non-empty line as the header row.\r\n\r\nWhen a CSV file contains blank line(s) above the header, the blank line\r\nwould be taken as the header, causing the subsequent rows in the CSV\r\nfile to be flagged as malformed. Hence, any CSV file with blank lines\r\nbefore the header will be parsed incorrectly. \r\n\r\nLet\u0027s modify CsvParser such that it skips all the blank lines preceding\r\nthe header, and picks the first non blank line as the header.\r\n\r\nThe Apache Commons CSV library currently does not provide any methods\r\nto skip blank lines preceding the header. This limitation is documented\r\nin:\r\nhttps://issues.apache.org/jira/browse/CSV-127 \r\n\r\nHence, let\u0027s implement a custom line-skipping behavior using a\r\nBufferedReader.",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 76,
                "deletions": 4
              },
              "sh": {
                "insertions": 1,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 4,
        "date": "2019-12-08",
        "commitResults": [
          {
            "hash": "a2adb592431b2ee59fb3d22a3f6c8ab703870de9",
            "messageTitle": "[#934] CsvParser: Remove extra comma in warning logs (#935)",
            "messageBody": "When a line in a CSV config is found to be malformed, the logger prints \r\nthe contents of the line in a warning message. The current method causes\r\nan extra comma to be printed.\r\n\r\nThis extra comma may make debugging more confusing.\r\n\r\nLet\u0027s modify the method used to extract the contents of a line, such \r\nthat there are no extra commas.",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 10,
                "deletions": 4
              }
            }
          }
        ]
      },
      {
        "insertions": 81,
        "deletions": 15,
        "date": "2019-12-20",
        "commitResults": [
          {
            "hash": "b9c5665aeca76200e3ea11ba9b6936768e5d6f2c",
            "messageTitle": "[#736] CLI: allow \"--ignore-standalone-config\" flag to override CSV values (#928)",
            "messageBody": "RepoSense ignores the --ignore-standalone-config command line flag when\r\nparsing a repo-config csv file.\r\n\r\nWe can allow the --ignore-standalone-config command line flag to\r\noverride all entries in the \"Ignore Standalone Config\" column of\r\nrepo-config.csv. This provides users with an easy method of setting\r\nthis flag for all repos, without having to edit each line of the csv.\r\n\r\nTo achieve this, let\u0027s move the isStandaloneConfigIgnored attribute\r\nfrom the LocationsCliArguments class, to its superclass: CliArguments.\r\nThis will allow us to access the --ignore-standalone-config flag\u0027s\r\nvalue when parsing RepoConfigurations from both LocationsCliArguments\r\nand ConfigCliArguments.",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 80,
                "deletions": 14
              },
              "md": {
                "insertions": 1,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 65,
        "deletions": 10,
        "date": "2020-01-02",
        "commitResults": [
          {
            "hash": "1fa50ce7250a470a8bd13efb807b8a8e8de16bc5",
            "messageTitle": "[#872] CsvParser: improve exception handling when a csv file has incorrect number of columns in header (#955)",
            "messageBody": "RepoSense crashes abruptly when any of the CSV config files do not \r\nhave the expected number of columns in their headers.\r\n\r\nWe should catch this error early and provide the user with a clearer\r\nerror message.\r\n\r\nLet\u0027s add a header validation step to the CSV parsing process. This \r\nstep will verify if the CSV file\u0027s header has the right number of \r\ncolumns.\r\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 65,
                "deletions": 10
              }
            }
          }
        ]
      },
      {
        "insertions": 34,
        "deletions": 8,
        "date": "2020-01-29",
        "commitResults": [
          {
            "hash": "2ab7f7bf3549276c695361761d97e1246d3f0f4e",
            "messageTitle": "[#1001] CSS: Increase z-index for center divider div (#1011)",
            "messageBody": "When we scroll horizontally in the Code Panel, the code snippets and \r\ncode toggle buttons overlap with the center divider.\r\n\r\nLet\u0027s fix this bug by increasing the z-index of the #tab-resize div, and \r\nthe div that closes the right tab. We can use a value of 100, since the \r\nz-index of #tab-resize-guide div is already set to 100. For better \r\nscalability, let\u0027s also use a SASS map to store these z-index values.\r\n",
            "fileTypesAndContributionMap": {
              "scss": {
                "insertions": 34,
                "deletions": 8
              }
            }
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2020-02-04",
        "commitResults": [
          {
            "hash": "7669ae7df6806e2d423f09b93fee41d560bf0643",
            "messageTitle": "[#1032] Author: fix error in copy constructor (#1036)",
            "messageBody": "The Author class has a constructor that accepts an existing Author\r\nobject and creates a copy. \r\n\r\nHowever, the constructor assigns the list of author aliases of the \r\ncopied instance to the `ignoreGlobList` attribute of the new \r\ninstance.\r\n\r\nLet\u0027s fix this error so methods that use this constructor will not\r\nface erroneous behavior.",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 1,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 71,
        "deletions": 66,
        "date": "2020-02-10",
        "commitResults": [
          {
            "hash": "bc8baa4141177952c4387859e5e15a55c35d1691",
            "messageTitle": "[#942] CsvParser: Improve exception handling when csv config has no valid recods (#916)",
            "messageBody": "RepoSense crashes with an unhelpful error message if the repo-config\r\ncsv has zero valid records.\r\n\r\nIf the repo-config csv has no valid records, we should provide a\r\nclear warning to the user and then terminate execution. In the case \r\nof optional csv files, we should provide a warning and then continue \r\nexecution.\r\n\r\nLet\u0027s \r\n- implement this behaviour by explicity checking the number of valid\r\n  records found by CsvParser. \r\n- throw an InvalidCsvException if there are no valid records in a \r\n  csv file. ",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 71,
                "deletions": 66
              }
            }
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 25,
        "date": "2020-02-20",
        "commitResults": [
          {
            "hash": "8753203b42d19dd4abd6cb337ec349d4087c4f29",
            "messageTitle": "[#1022] FileInfoAnalyzer: Deprecate \"//@reused\" tag (#1039)",
            "messageBody": "RepoSense will not include a file in the authorship analysis if the \r\nfirst line of the file contains the `//@reused` string.\r\n\r\nThis feature is not being used.\r\n\r\nLet\u0027s remove this feature to simplify the codebase.\r\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 10,
                "deletions": 25
              }
            }
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 17,
        "date": "2020-03-06",
        "commitResults": [
          {
            "hash": "33e24b8d009acfe69932b8b8ceb4427778c5195c",
            "messageTitle": "[#1076] Author: add a `isIgnoringFile` method (#1085)",
            "messageBody": "There are a few instances where we obtain the `ignoreGlobMatcher` \r\nfrom an Author instance first to manually check if this matches with \r\na given file path.\r\n\r\nLet\u0027s allow the Author instance to tell clients if it is ignoring a \r\nparticular file (given a filepath) - instead of giving clients the\r\nignoreGlobMatcher and letting clients figure out the answer on their \r\nown.",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 12,
                "deletions": 17
              }
            }
          }
        ]
      },
      {
        "insertions": 29,
        "deletions": 12,
        "date": "2020-03-15",
        "commitResults": [
          {
            "hash": "e4d1094828d1dcd714b5f8dd0792ef834abd7ff5",
            "messageTitle": "[#1060] Report: record time taken for report generation in hidden element (#1066)",
            "messageBody": "It is sometimes not possible / inconvenient to retrieve the \r\nRepoSense log output, if we want to view the time taken for \r\ngenerating a report.\r\n\r\nLet\u0027s record the time taken for report generation, as a hidden\r\nelement in the report as well as a field in the summary.json file.\r\nThis will allow developers to find out the amount of time taken\r\nin generating the report.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 2,
                "deletions": 0
              },
              "java": {
                "insertions": 26,
                "deletions": 12
              },
              "js": {
                "insertions": 1,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 103,
        "deletions": 17,
        "date": "2020-03-21",
        "commitResults": [
          {
            "hash": "eb72f295cec2b1504641b8b4f4b8f31478eb0bde",
            "messageTitle": "[#823, #981] AnnotatorAnalyzer: Fix code disowning mechanism (#1067)",
            "messageBody": "Suppose that `random-user` is not the git author name of any author\r\nin a git repository(i.e. it is just a placeholder name). RepoSense \r\ndoes not correctly mark code as disowned when a user marks a code \r\nblock with the `@@author random-user` tag. Only the line containing \r\nthe `@@author random-user` tag is treated as disowned, while the \r\nremaining code block is still attributed to the author deduced from \r\nthe git blame analysis.\r\n\r\nThis bug occurs because the code in AnnotatorAnalyzer uses a \r\nconstant UNKNOWN_AUTHOR to represent both the case where there is no \r\ncurrently active annotation override AND the case where the user has \r\nused a \"@@author random-user\" tag.\r\n\r\nLet\u0027s use Optionals to store the author names obtained from the\r\n`@@author` tags, so we can identify the case where the user has used\r\na `@@author random-user` tag.",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 103,
                "deletions": 17
              }
            }
          }
        ]
      },
      {
        "insertions": 56,
        "deletions": 19,
        "date": "2020-04-18",
        "commitResults": [
          {
            "hash": "53167059d1c940e469d8a6861b156b6ecc06724e",
            "messageTitle": "Docs: Update current members\u0027 list (#1208)",
            "messageBody": "Let\u0027s update the list of current members to include\r\nthe new contributors.",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 56,
                "deletions": 19
              }
            }
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 1,
        "date": "2020-04-21",
        "commitResults": [
          {
            "hash": "0c9e261b17e54731e6eb2f204c93c3fd3ebab8d3",
            "messageTitle": "Call validateFilePaths in unix_cloneInvalidWindowsFilePaths_success (#1210)",
            "messageBody": "When RepoSense is run on Windows OS, it uses the \u0027validateFilePaths\u0027 \r\nmethod of the GitLsTree class to verify  if all the file paths in \r\nthe repo are valid file paths on Windows OS.\r\n\r\nWithin unix_cloneInvalidWindowsFilePaths_success test case, it \r\nchecks whether \u0027validateFilePaths\u0027 method runs correctly on \r\nnon Windows OS. However, this test does not actually call\r\nthe `validateFilePaths` method.\r\n\r\nLet\u0027s call \u0027validateFilePaths\u0027 in the test case, so we can \r\nconfirm that the method works correctly on non Windows OS.",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 2,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 27,
        "deletions": 4,
        "date": "2020-05-08",
        "commitResults": [
          {
            "hash": "2249c11832fd450fb806e0d8423460df0383048f",
            "messageTitle": "[#997] README / Home Page: Describe RepoSense features from users\u0027 perspective (#1018)",
            "messageBody": "While the README / Home Page have a list of RepoSense\u0027s capabilities,\r\nthis might not sufficiently convey the value of using RepoSense.\r\n\r\nLet\u0027s frame RepoSense\u0027s features from the users\u0027 perspective. \r\nThis will help readers appreciate the product. At the same time, \r\nlet\u0027s also make some minor grammar fixes.",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 27,
                "deletions": 4
              }
            }
          }
        ]
      }
    ],
    "Tejas2805": [
      {
        "insertions": 8,
        "deletions": 9,
        "date": "2019-12-20",
        "commitResults": [
          {
            "hash": "efa7969f68907fc07ae3b17a5027f6aa5e876f07",
            "messageTitle": "[#931] Code view: Default sorting in descending order (#932)",
            "messageBody": "In Code view, the default order for LoC is ascending.\r\n\r\nLet\u0027s make the default order descending as it is more meaningful to\r\nhave bigger changes on top as they should be more interesting.\r\n",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 5,
                "deletions": 3
              },
              "scss": {
                "insertions": 1,
                "deletions": 4
              },
              "js": {
                "insertions": 2,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "insertions": 56,
        "deletions": 1,
        "date": "2019-12-21",
        "commitResults": [
          {
            "hash": "4e4ffa26b9d07cc0ef963c688737a45345e78f0d",
            "messageTitle": "[#352] User Guide: add quick start guide to use RepoSense with Netlify (#924)",
            "messageBody": "Users would need to download .jar file to run RepoSense.\r\n\r\nLet\u0027s add a quick start section to User Guide to instruct users to \r\nuse RepoSense through Netlify so they can get started without \r\ndownloading any files. This should ease users into using RepoSense.\r\n",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 56,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 8,
        "date": "2020-01-16",
        "commitResults": [
          {
            "hash": "74ac22a3848f1009bab31d3ecb865c00f227e71e",
            "messageTitle": "[#947] Synchronising different tab views (#948)",
            "messageBody": "It\u0027s difficult to distinguish between the authorship and zoom views as \r\nthere are no obvious symbols to identify which is which. \r\n\r\nLet\u0027s add a header to both the views for easy identification and a link \r\nto the zoom title to make it more consistent with authorship.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 10,
                "deletions": 3
              },
              "js": {
                "insertions": 4,
                "deletions": 5
              }
            }
          }
        ]
      },
      {
        "insertions": 256,
        "deletions": 254,
        "date": "2020-01-22",
        "commitResults": [
          {
            "hash": "b3aaf1c56e3e81eda3c99e7eb66e19fe3c89a7d9",
            "messageTitle": "[#960]Refactor Authorship Css (#986)",
            "messageBody": "The JS/HTML code of each component has already rested in its own \r\nfile, but all the CSS are still in one file. \r\n\r\nLet\u0027s refactor the Authorship CSS into a new file for better \r\nscalability and readability.\r\n",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 1,
                "deletions": 0
              },
              "scss": {
                "insertions": 255,
                "deletions": 254
              }
            }
          }
        ]
      },
      {
        "insertions": 178,
        "deletions": 176,
        "date": "2020-01-30",
        "commitResults": [
          {
            "hash": "5b1fb323dc18c52e930158a4cdd184232dd8a826",
            "messageTitle": "[#960] Refactor Summary CSS (#1003)",
            "messageBody": "The JS/HTML code of each component has already rested in its own \r\nfile, but all the CSS are still in one file. \r\n\r\nLet\u0027s refactor the Summary CSS into a new file for better scalability \r\nand readability.\r\n\r\n",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 1,
                "deletions": 0
              },
              "scss": {
                "insertions": 177,
                "deletions": 176
              }
            }
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 8,
        "date": "2020-02-03",
        "commitResults": [
          {
            "hash": "b98f31eaa04839fa7d3883b684f933bd51241a93",
            "messageTitle": "[#964] Add UG link to report page (#983)",
            "messageBody": "The link to the UG in the documents points to the released version of \r\nthe UG. As a result, there may be some discrepancies between the master \r\nand the release branch.\r\n\r\nLet\u0027s add a link to the UG on the report page corresponding to the \r\nversion that RepoSense was ran on.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 2,
                "deletions": 2
              },
              "md": {
                "insertions": 1,
                "deletions": 1
              },
              "js": {
                "insertions": 2,
                "deletions": 5
              }
            }
          }
        ]
      },
      {
        "insertions": 33,
        "deletions": 13,
        "date": "2020-02-05",
        "commitResults": [
          {
            "hash": "0b151faf17df809193000461713a2b4b1329a50b",
            "messageTitle": "[#873, #1016, #1049]Enable octocat icon for merge group (#1017)",
            "messageBody": "There are not a lot of features that the user can use when merge \r\ngroup is active. \r\n\r\nLet\u0027s \r\n  - add the octocat icon to enhance the usage of merge group. \r\n  - fix the thickness of contribution bars by changing rem to pix.\r\n\r\nWhen it\u0027s `group by Repo`, the octocat icon will link to the group\u0027s\r\nrepository. When it\u0027s `group by Author`, the octocat icon will link \r\nto the author\u0027s github profile. \r\n",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 15,
                "deletions": 3
              },
              "scss": {
                "insertions": 13,
                "deletions": 9
              },
              "js": {
                "insertions": 5,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 41,
        "deletions": 39,
        "date": "2020-02-14",
        "commitResults": [
          {
            "hash": "5cd4123966a51b1916858b08bc45d12014ad8157",
            "messageTitle": "[#960] Refactor Ramp CSS (#1055)",
            "messageBody": "The JS/HTML code of each component has already rested in its own \r\nfile, but all the CSS are still in one file. \r\n\r\nLet\u0027s refactor the Ramp CSS into a new file for better scalability \r\nand readability.\r\n",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 2,
                "deletions": 1
              },
              "scss": {
                "insertions": 39,
                "deletions": 38
              }
            }
          }
        ]
      },
      {
        "insertions": 152,
        "deletions": 116,
        "date": "2020-02-22",
        "commitResults": [
          {
            "hash": "1a08d0561a7c29283c532f0d064b6b88ba6dedee",
            "messageTitle": "[#522] Implement style checker on .pug files (#987)",
            "messageBody": "RepoSense has CheckStyle, ESLint and Stylelint to check our java, \r\njavascript and css code styles automatically. However, `.pug` files \r\nare not covered by any of these tools.\r\n\r\nLet\u0027s implement pug-lint to check the code styles of .pug files.\r\n\r\nTODO: Add a line wrap rule in the future\r\n",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 115,
                "deletions": 101
              },
              "json": {
                "insertions": 26,
                "deletions": 1
              }
            }
          },
          {
            "hash": "7d16236189d17e4a12926337863b81d3708fe53f",
            "messageTitle": "[#906, #994, #1006] UserGuide: update doc and remove errors (#907)",
            "messageBody": "With the recently added group-config.csv file, the new changes \r\npossible in the local configuration are not reflected in the\r\ndocumentation.\r\n\r\nUsers can configure their csv files to analyse multiple repos in \r\ntheir own custom way, but they may be confused about how to do so as \r\nthe user guide is outdated. \r\n\r\nLet\u0027s update the user guide to reflect the changes possible through\r\ngroup-config.csv in the local configuration to analyse multiple \r\nrepos. Let\u0027s also fix the errors in the Tool Bar section and fix the \r\nformatting of repo-config.csv example.\r\n",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 11,
                "deletions": 14
              }
            }
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 12,
        "date": "2020-02-26",
        "commitResults": [
          {
            "hash": "8675a0b190ffdac5898a698fea69f41448084658",
            "messageTitle": "[#947] Authorship view: update sort controls (#1074)",
            "messageBody": "The sort controls in the Authorship view are a value updated by\r\nwatched property. \r\n\r\nThis is not as efficient as a computed property. \r\n\r\nLet\u0027s make the sort controls in Authorship view a computed property. \r\nThis will also help in making the code across different views \r\nconsistent.\r\n",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 8,
                "deletions": 12
              }
            }
          }
        ]
      },
      {
        "insertions": 95,
        "deletions": 93,
        "date": "2020-02-27",
        "commitResults": [
          {
            "hash": "893436fbf6dacf5eca051b42f3327bbdef942727",
            "messageTitle": "[#960] Refactor Zoom CSS (#1079)",
            "messageBody": "The JS/HTML code of each component has already rested in its own \r\nfile, but all the CSS are still in one file. \r\n\r\nLet\u0027s refactor the Zoom CSS into a new file for better scalability \r\nand readability.\r\n",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 1,
                "deletions": 0
              },
              "scss": {
                "insertions": 94,
                "deletions": 93
              }
            }
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 1,
        "date": "2020-03-04",
        "commitResults": [
          {
            "hash": "bd70e840bb4e15c1b41ac9bed24e19aae8fb8144",
            "messageTitle": "[#1061] build.gradle: remove unused dependency (#1095)",
            "messageBody": "There is an unused dependency in the Gradle config.\r\n\r\nLet\u0027s remove the unused dependencies to reduce the build time.\r\n",
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 0,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 27,
        "deletions": 5,
        "date": "2020-03-12",
        "commitResults": [
          {
            "hash": "8eec52d480aaa69f68915d194460c35daaf84fb9",
            "messageTitle": "[#1004] Make Code Panel consistent with Chart Panel (#1080)",
            "messageBody": "The Code Panel and Chart Panel look very different from each other.\r\n\r\nMaking them be more similar can enhance the user experience.\r\n\r\nLet\u0027s\r\n- make file title similar to Github\u0027s way of displaying\r\n- change background for Code and Commit Panel to white\r\n- change sidebar color to grey",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 2,
                "deletions": 2
              },
              "scss": {
                "insertions": 25,
                "deletions": 3
              }
            }
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 29,
        "date": "2020-03-30",
        "commitResults": [
          {
            "hash": "dfedca6da869d7f8eae19aba6fd76d19ae56ba03",
            "messageTitle": "[#1144, #1135] Docs: update outdated info (#1149)",
            "messageBody": "There is a lot of outdated info in the User Guide and Developer \r\nGuide.\r\n\r\nLet\u0027s \r\n- update the UG and DG to show the current state of RepoSense as \r\n  this will help people better in using/developing RepoSense.\r\n- remove the warnings reported by Travis by removing the trailing\r\n  whitespaces. ",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 12,
                "deletions": 7
              },
              "md": {
                "insertions": 24,
                "deletions": 22
              }
            }
          }
        ]
      },
      {
        "insertions": 129,
        "deletions": 121,
        "date": "2020-04-08",
        "commitResults": [
          {
            "hash": "5f16362e6ea9e70848f379ce5fbcd82e40a6fbce",
            "messageTitle": "[#960] panels.scss: refactor common panel style (#1104)",
            "messageBody": "The JS/HTML code of each component has already rested in its \r\nown file, but all the CSS are in one file. \r\n\r\nLet\u0027s refactor the common components shared across panels to \r\na common file for scalability and readability.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 11,
                "deletions": 8
              },
              "scss": {
                "insertions": 118,
                "deletions": 113
              }
            }
          }
        ]
      },
      {
        "insertions": 19,
        "deletions": 2,
        "date": "2020-04-17",
        "commitResults": [
          {
            "hash": "0f4e982f59738ecda180b1741a552625b27acaf3",
            "messageTitle": "[#1188] Improve implementation of ignoring authors  (#1189)",
            "messageBody": "The ignored authors are removed from the list by calling \r\nresetAuthorInformation, which clears the authorDisplayNameMap \r\nand authorEmailsAndAliasesMap and sets the authorList all again.\r\n\r\nLet\u0027s improve this implementation by just removing the authors to\r\nbe ignored.",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 19,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "insertions": 18,
        "deletions": 2,
        "date": "2020-04-20",
        "commitResults": [
          {
            "hash": "cf2c9f76b4fe32be5df82abc9d5e76cc80022b9a",
            "messageTitle": "Deploy MarkBind site (#1222)",
            "messageBody": "Our documentation has migrated to MarkBind, but users have no link \r\navailable to view the latest MarkBind documentation site from our \r\nmaster branch.\r\n\r\nLet\u0027s deploy the MarkBind site to gh pages, subsequently we can provide\r\nthe gh pages link in our README to provide the link to the users.",
            "fileTypesAndContributionMap": {
              "yml": {
                "insertions": 18,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "insertions": 67,
        "deletions": 42,
        "date": "2020-05-26",
        "commitResults": [
          {
            "hash": "0c50470e5c671e2911b5f0778ec4151f73d26a3f",
            "messageTitle": "[#1198] Replace custom font class names with @mixin (#1211)",
            "messageBody": "We are using class names such as `mini-font`, `medium-font` etc to \r\ninject font size css to those components. This results in nesting a \r\nlot of unnecessary class names for those components that want to \r\ninherit such font sizes.\r\n\r\nWe can utilise css mixins and include instead, which eliminates the\r\nneed to nest/append class names, resulting to a more cleaner html \r\nstructure.\r\n\r\nLet\u0027s create css mixins for font sizes to allow a more cleaner html\r\nstructure.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 23,
                "deletions": 21
              },
              "scss": {
                "insertions": 44,
                "deletions": 21
              }
            }
          }
        ]
      }
    ],
    "dvrylc": [],
    "jamessspanggg": [
      {
        "insertions": 43,
        "deletions": 0,
        "date": "2019-12-20",
        "commitResults": [
          {
            "hash": "008f48fc20af630d857cd65bf11e96d05e19559a",
            "messageTitle": "[#46] Show total time after batch processing (#758)",
            "messageBody": "After running the CLI command, the total time taken to process and \r\ngenerate the report is not shown in the console output.\r\n\r\nUsers might find it useful to keep track of the time taken to \r\ngenerate the report.\r\n\r\nLet\u0027s use the logger to output the total time taken from running the \r\nCLI command until the report is generated.\r\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 43,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 49,
        "deletions": 42,
        "date": "2019-12-31",
        "commitResults": [
          {
            "hash": "2b2a9f3666d7c14d0c0ebe05b26660d0bf7827ba",
            "messageTitle": "[#785] ChartView: fix authors with unaccounted lines (#789)",
            "messageBody": "The git blame command used in RepoSense contains the option -w, which\r\nignores whitespace when comparing the parent’s version and the child’s\r\nto find where the lines came from.\r\n\r\nWhen an author did not change the content but only the position of\r\nspecific lines of code, the previous author will be recognised as the \r\nauthor that changed these lines. If the previous author did not\r\ncontribute during the analysis period, his/her ramp chart will be\r\nempty while the contribution bar will be present.\r\n\r\nLet\u0027s add an extra check in aggregateBlameInfo for lines of code with\r\nthe author committed date that is not within the duration of \r\nspecified since date and until date. Those lines of code\u0027s author will\r\nbe set to unknown, which will resolve the issue above.",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 49,
                "deletions": 42
              }
            }
          }
        ]
      },
      {
        "insertions": 107,
        "deletions": 10,
        "date": "2020-01-22",
        "commitResults": [
          {
            "hash": "e2f1ec8fffe7ed8140bc9af968f7d26582a67fdd",
            "messageTitle": "[#879] Display commit tags in commits panel (#969)",
            "messageBody": "The tags of each commit are not shown in the commits panel.\r\n\r\nWith the active use of git tags in CS21x3 repositories, it is useful to \r\nprovide tutors on the usage and information of tags in each commit.\r\n\r\nLet\u0027s display the tags of each commit (if there\u0027s any) in the commits \r\npanel.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 13,
                "deletions": 1
              },
              "java": {
                "insertions": 62,
                "deletions": 8
              },
              "scss": {
                "insertions": 25,
                "deletions": 1
              },
              "js": {
                "insertions": 7,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 4,
        "date": "2020-01-29",
        "commitResults": [
          {
            "hash": "8ed76d0dfebad2e509d87879661501239c35acb9",
            "messageTitle": "[#984] Fix miscalculation of expanded commit message count (#998)",
            "messageBody": "We get the number of expanded commit message count in zoom tab based on\r\nthe number of divs with class name \u0027commit-message active\u0027.\r\n\r\nCommit messages without commit message bodies also have default class\r\nname of \u0027commit-message active\u0027, which leads to the expanded commit\r\nmessage count to not reflect on the true number of commit messages that\r\nare expanded.\r\n\r\nLet\u0027s append the class name \u0027message-body\u0027 to commit messages that have\r\ncommit message bodies, to distinguish between messages that can be\r\nexpanded and vice versa.\r\n",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 1,
                "deletions": 1
              },
              "js": {
                "insertions": 3,
                "deletions": 3
              }
            }
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 0,
        "date": "2020-02-02",
        "commitResults": [
          {
            "hash": "644af05f28207975cb22771cb5f44a25a0ff90e4",
            "messageTitle": "[#1029] Contribution Bar: restore the float left property (#1030)",
            "messageBody": "Due to the regression of #1003, the css property \u0027float: left\u0027 was left\r\nout in the contribution bar. When break down by file type is checked,\r\nthe contribution bar for each file type occupies separate lines\r\ninstead of continuous lines.\r\n\r\nLet\u0027s restore the css property \u0027float: left\u0027 back to the contribution\r\nbar.",
            "fileTypesAndContributionMap": {
              "scss": {
                "insertions": 1,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 29,
        "deletions": 5,
        "date": "2020-02-05",
        "commitResults": [
          {
            "hash": "ebdd0140fe77d238eab878b42d58afe18fd03e02",
            "messageTitle": "[#1019] Handle commit info extraction for empty commits (#1020)",
            "messageBody": "Analyzing repo with empty commits causes CommitInfoAnalyzer to throw \r\nArrayIndexOutOfBoundsException. This occurs in \r\nCommitInfoExtractor#parseGitLogResults, where info lines and stat \r\nlines are split based on the last index of the newline character \r\n`\\n`.\r\n\r\nAs empty commits have no stat lines, it leads to \r\nArrayIndexOutOfBoundsException due to the use of new line separator.\r\n\r\nLet\u0027s:\r\n- use \u0027|\u0027 character as the splitting point of info lines and stat \r\n  lines, instead of the new line \u0027\\n\u0027 character. This will ensure \r\n  that the ref name details will always be within info lines instead\r\n  of stat lines.\r\n- add a check for the availability of the ref name before accessing \r\n  it to prevent the exception. \r\n\r\nNo stat lines occurs for commits that are empty (done by git commit \r\n--allow-empty), since no files are changed. The last index of the \r\nnewline character will situate before the ref name details, and info\r\nline will contain all characters before that index while stat line \r\ncontains the ref name details. Since the ref name is no longer in \r\nthe info lines, accessing the REF_NAME_INDEX within the info lines \r\nwill incur an ArrayOutOfBoundsException.\r\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 27,
                "deletions": 3
              }
            }
          },
          {
            "hash": "4611767400fc829913997f335afa5aed22917cd8",
            "messageTitle": "[#1027] Modify UI for tags (#1028)",
            "messageBody": "Some tags split to the next line when the list of tags are too long. \r\nTags also appear vertically close together when the list occupies \r\nmore than one line.\r\n\r\nLet\u0027s change the css property `display` to be `inline-block` and add \r\nsome top and bottom margins to each tag.\r\n",
            "fileTypesAndContributionMap": {
              "scss": {
                "insertions": 2,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "insertions": 27,
        "deletions": 26,
        "date": "2020-02-22",
        "commitResults": [
          {
            "hash": "636f4d98583c49c18dc25fe66b0c4d196ad05271",
            "messageTitle": "[#999] Remove empty zoom__day divs (#1000)",
            "messageBody": "When granularity is set to week, the \u0027pushCommitsWeek\u0027 method gets \r\nall possible weeks (week 1, 2, 3, etc...) from start date until the \r\nend date and pushes it to \u0027user.commits\u0027, no matter the week has any \r\ncommits at all. Additionally, commits with zero insertions but with \r\ndeletions are also not taken into consideration in the commits \r\npanel.\r\n\r\nWeeks that have no commits is not useful and redundant. Commits with\r\nonly deletions are maybe useful as it may represent \r\nrefactoring/removing redundant code.\r\n\r\nLet\u0027s add a check to add a week only if it has commits. And remove \r\nthe check for commits with zero insertions, so that commits with \r\nonly deletions are also included.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 23,
                "deletions": 24
              },
              "js": {
                "insertions": 4,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2020-02-26",
        "commitResults": [
          {
            "hash": "a9f88fd727d8127f36ef6e33eaef81fb10338220",
            "messageTitle": "[#1043] Fix bug of incorrect commit dates when merge group (#1045)",
            "messageBody": "When merge group is checked, some commits are seen with committed\r\ndates that are incompatible to the real committed dates.\r\n\r\nCommits with the same date are appended together in \u0027mergedCommits\u0027.\r\nSince \u0027mergedCommits\u0027 is being sorted before all the merged commits \r\nfor a particular group is gathered, the order of the \u0027mergedCommits\u0027 \r\nis changed, and some commits with the same date are appended \r\nwrongly.\r\n\r\nLet\u0027s move the sorting of \u0027mergedCommits\u0027 after the all merged \r\ncommits are gathered, this will ensure commits with the same date \r\nare appended correctly.\r\n\r\nThe order of the \u0027mergedCommits\u0027 matters, as we use an additional js \r\nobject \u0027dateToIndexMap\u0027 maps dates to the corresponding index in \r\n\u0027mergedCommits\u0027. Once the order has changed, the \u0027dateToIndexMap\u0027 no \r\nlonger contains the accurate mappings and hence, commits are \r\nappended wrongly.\r\n",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 1,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 39,
        "deletions": 2,
        "date": "2020-03-04",
        "commitResults": [
          {
            "hash": "9725a25d4e34164cefbb51f7f6e39964cb0a521a",
            "messageTitle": "Add commit message length configuration border (#1048)",
            "messageBody": "GitHub\u0027s maximum length of commit message\u0027s subject line and body is \r\ndefaulted at 50 and 72 characters respectively.\r\n\r\nCommits panel does not show the indication of the maximum lengths.\r\n\r\nLet\u0027s add a dotted lines for commit message bodies at 72 characters \r\nand subject lines at 50 characters, these lines indicate whether a \r\ncommit message\u0027s subject line or body exceed GitHub\u0027s maximum \r\nlength.\r\n",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 4,
                "deletions": 1
              },
              "scss": {
                "insertions": 32,
                "deletions": 1
              },
              "md": {
                "insertions": 3,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 2,
        "date": "2020-03-09",
        "commitResults": [
          {
            "hash": "145a1b4dda02ac9fdc42554835e7be98a534b0a0",
            "messageTitle": "[#1005, #1010] Code Panel: match font with GitHub and break lines when overflow (#1008)",
            "messageBody": "When the file path or lines of code overflows, it takes up a large \r\namount of empty space in order to accomodate to it\u0027s length. The \r\nfont size of the code and file path is also rather big and takes up \r\nmuch space.\r\n\r\nLet\u0027s set the file path and lines of code to break into next lines \r\nwhen it overflows. Also, let\u0027s set the font-family and font-size of \r\nthe code to match with GitHub.",
            "fileTypesAndContributionMap": {
              "scss": {
                "insertions": 7,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 6,
        "date": "2020-03-12",
        "commitResults": [
          {
            "hash": "8334eb6a66254d228ad59b1f5de617f3202d6041",
            "messageTitle": "[#1109] Config.json: include active author and pug file format (#1123)",
            "messageBody": "The default configuration consists of authors that are no longer\r\nactive in committing code to RepoSense. The jade file format is\r\nno longer used in RepoSense as it is replaced by pug file format.\r\n\r\nLet\u0027s \r\n- add a recent active author, as it may reveal potential bugs\r\n- replace jade to pug file format",
            "fileTypesAndContributionMap": {
              "json": {
                "insertions": 6,
                "deletions": 6
              }
            }
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 0,
        "date": "2020-03-16",
        "commitResults": [
          {
            "hash": "e42884b81029c9a2c221448bdc86d570d8774511",
            "messageTitle": "[#1140] Update date hashes when updating date range (#1141)",
            "messageBody": "Clicking on the `show ramp chart in this period` button does not update \r\nthe `since` and `until` date hashes, which leads to a different summary \r\nperiod after reloading the page.\r\n\r\nThis is due to the `hasModifedSinceDate` and `hasModifiedUntilDate` not\r\nset to true when calling `updateDateRange`, which prevents the since and \r\nuntil date hashes to be updated.\r\n\r\nLet\u0027s set `hasModifedSinceDate` and `hasModifiedUntilDate` to be true \r\nwhen updateDateRange is called.",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 2,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 15,
        "date": "2020-03-17",
        "commitResults": [
          {
            "hash": "53fe9f408e25a058f9f2d7c3f38e416df98022c8",
            "messageTitle": "v_summary: refactor the structure of summary-charts__title (#1106)",
            "messageBody": "The `summary-charts__title` div is separated in two, each for when\r\n`filterGroupSelection` is `groupByRepos` and `groupByAuthors` \r\nrespectively.\r\n\r\nThere is overlapping in code among the two, and adding a new \r\ncommon component in `summary-charts__title` needs to be done twice, \r\nwhich is redundant.\r\n\r\nLet\u0027s refactor the structure `summary-charts__title` div to share \r\nthe common divs/components.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 9,
                "deletions": 14
              },
              "scss": {
                "insertions": 1,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 64,
        "deletions": 3,
        "date": "2020-03-23",
        "commitResults": [
          {
            "hash": "07c16f1e7970b3d2585f168fa7cf663e97968bd6",
            "messageTitle": "[#950] Use Surge as alternative for Netlify (#1165)",
            "messageBody": "Netlify\u0027s build quota is not enough for RepoSense\u0027s build usage.\r\n\r\nLet\u0027s deploy on Surge instead, using Travis to run the build and \r\nprovide a Github Status on each PR that links users to the deployed \r\nSurge site.",
            "fileTypesAndContributionMap": {
              "sh": {
                "insertions": 57,
                "deletions": 0
              },
              "yml": {
                "insertions": 7,
                "deletions": 3
              }
            }
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 38,
        "date": "2020-03-24",
        "commitResults": [
          {
            "hash": "af93ed1758c3a8f66149bd99f194248a90aec76b",
            "messageTitle": "[#1167] Revert PR #967 while keeping zoom tab independent of summary (#1172)",
            "messageBody": "PR #967 causes multiple bugs in zoom tab and authorship tab, due to\r\nsome data value inside the side panels are not re-rendered when prop \r\n`info` changes.\r\n\r\nFixing these bugs may delay our upcoming release, so reverting the \r\nchanges that lead to these bugs may be the best option.\r\n\r\nLet\u0027s revert that PR while only keeping the changes to make the zoom \r\ntab to be independent of summary.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 2,
                "deletions": 0
              },
              "js": {
                "insertions": 14,
                "deletions": 38
              }
            }
          }
        ]
      },
      {
        "insertions": 261,
        "deletions": 82,
        "date": "2020-03-29",
        "commitResults": [
          {
            "hash": "eac21ab589ebcdf79f596a94d7ff3f9c7a09e3e9",
            "messageTitle": "[#779] Restore zoom tab (#830)",
            "messageBody": "The zoom tab hashes are not encoded in the URL when zoom tab is \r\nopened.\r\n\r\nZoom tab will not be restorable with the URL after reloading the \r\npage.\r\n\r\nLet\u0027s add the encoding of zoom tab hashes to the URL make the zoom \r\ntab restorable after reloading the page.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 14,
                "deletions": 14
              },
              "js": {
                "insertions": 231,
                "deletions": 65
              }
            }
          },
          {
            "hash": "f39df542959252e9d3b88c247f11fa0c2574afe3",
            "messageTitle": "[#873] Enable view commits option when merge group (#1100)",
            "messageBody": "The view commits option is not available when merge group option is \r\nchecked.\r\n\r\nLet\u0027s enable the view option when merge group, as the zoom in \r\nfunction is already working with merged ramps. Let\u0027s also fix the \r\nregression from #1106 that removes the github icon when merge group \r\nand `filterGroupSelection` is \u0027groupByRepos\u0027.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 7,
                "deletions": 0
              },
              "scss": {
                "insertions": 4,
                "deletions": 1
              }
            }
          },
          {
            "hash": "0e39bb7ffa5094e13fb120a36e3c2666f2566572",
            "messageTitle": "[#1087] Update badges in README (#1194)",
            "messageBody": "RepoSense\u0027s Netlify badge icon is a custom icon. We are missing \r\nacknowledgment to Surge as well.\r\n\r\nLet\u0027s update the badge to Netlify\u0027s official badge that reflects our\r\nNetlify deployment status. Let\u0027s also acknowledge Surge in helping \r\nwith our web previews.",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 5,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2020-04-09",
        "commitResults": [
          {
            "hash": "5e1997d97b75735fc6579a015dc7f713c257d383",
            "messageTitle": "[#1201] Fix regressions of PR #779 (#1203)",
            "messageBody": "There are regressions caused by PR #779, where the `zIsMerge` and \r\n`zFilterGroup` properties are not used properly within zoom tab. \r\nThey are using `isMergeGroup` and `filterGroupSelection` instead.\r\n\r\nLet\u0027s modify them to use `zIsMerge` and `zFilterGroup` instead, in \r\nthis way the zoom tab will be using the correct property values.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 1,
                "deletions": 1
              },
              "js": {
                "insertions": 1,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 355,
        "deletions": 178,
        "date": "2020-04-11",
        "commitResults": [
          {
            "hash": "0f57aab1deb97699e3b8d59ddca0ef492bbdc89d",
            "messageTitle": "[#956] Convert documentation to MarkBind and deploy using Surge (#1225)",
            "messageBody": "Our User Guide and Development Guide is using markdown.\r\n\r\nLet\u0027s include the deployment of MarkBind docs to Surge, while adding\r\nthe Github status that redirects to the link of the deployed site.",
            "fileTypesAndContributionMap": {
              "sh": {
                "insertions": 16,
                "deletions": 6
              },
              "md": {
                "insertions": 301,
                "deletions": 172
              },
              "yml": {
                "insertions": 2,
                "deletions": 0
              },
              "json": {
                "insertions": 36,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 362,
        "deletions": 49,
        "date": "2020-04-17",
        "commitResults": [
          {
            "hash": "7b06e7f404b0e7a84fd91d533f184cbdc3bccd3c",
            "messageTitle": "[#1147] Generate random filetype colour when predefined colours are used up (#1148)",
            "messageBody": "The filetype colours are chosen through a rotation of the predefined \r\ncolour values. So if the number of filetypes exceeds the number of \r\npredefined colours, there will be repetitions of the same colour.\r\n\r\nThe repeated filetypes may be hard to distinguish among one\r\nanother, in terms of their colours.\r\n\r\nLet\u0027s generate a random colour for the filetypes after the standard\r\nselection of predefined colours have been exhausted.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 2,
                "deletions": 1
              },
              "js": {
                "insertions": 82,
                "deletions": 7
              }
            }
          },
          {
            "hash": "ad79bbad71bfbe4a2ca4461d9330acde09aad1db",
            "messageTitle": "[#1181] Allow filtering of ramps by file type (#1192)",
            "messageBody": "All ramps are shown even when some file types are filtered out, the\r\nsizes of ramps are also not adjusted when their filetypes are \r\nfiltered out.\r\n\r\nThis may cause confusion in users as they would think that the ramps \r\nwill be filtered out accordingly.\r\n\r\nLet\u0027s add the filtering of ramps by the file types that are selected, \r\nthe size of the ramp will also be adjusted based on that.\r\n\r\nAdditional Info:\r\n1. The current git log results does not include filetypes that are\r\nmodified, so I decided to get from the backend by changing the\r\ngit log format. The filetype details of each commit are also added\r\nto the commit.json\r\n\r\n2. \u0027git log --numstat --shortstat\u0027 is used instead of \u0027git log --stat\u0027\r\nto retrieve the log with files changed. This is because --stat only \r\nshows the sum of lines changed in file whereas --numstat displays \r\naddition and deletion separately. Addition and deletion of binary\r\nfiles will be \u0027-\u0027 and \u0027-\u0027.\r\n\r\n3. When removing a filetype from a ramp, the corresponding addition\r\nand deletion will be removed from the ramp. A ramp will only be \r\nremoved when all of it\u0027s filetypes are removed.",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 224,
                "deletions": 40
              },
              "js": {
                "insertions": 54,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 79,
        "deletions": 16,
        "date": "2020-04-18",
        "commitResults": [
          {
            "hash": "bc9cf8a01f1c3a08b7254521b7656222fb77cba9",
            "messageTitle": "[#996] Add functionality to view code for entire repository (#1175)",
            "messageBody": "There\u0027s no way of viewing the code authored for the entire repository.\r\nThis is particularly useful when users want to see the code contribution\r\nof the repository as a whole.\r\n\r\nWe can allow this functionality by enabling the code icon when merge\r\ngroup.\r\n\r\nLet\u0027s add the functionality to view code for the entire repository, when\r\nmerge group is checked.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 13,
                "deletions": 7
              },
              "md": {
                "insertions": 1,
                "deletions": 0
              },
              "js": {
                "insertions": 65,
                "deletions": 9
              }
            }
          }
        ]
      },
      {
        "insertions": 25,
        "deletions": 15,
        "date": "2020-04-21",
        "commitResults": [
          {
            "hash": "f31051249067ef181c004d360c25cc9b1a8150e4",
            "messageTitle": "[#1170] Update total contribution to reflect based on checked file types (#1171)",
            "messageBody": "When some filetypes are unchecked, the contribution bar length adjusts \r\nto the correct length, while the total line contribution of each group \r\ndoes not. Additionally, when toggling sorting controls to decreasing \r\norder of contribution, groups with higher total contribution are seen \r\nto be in lower position than groups with lower contribution. This may \r\ncause confusion among users.\r\n\r\nLet\u0027s update the total contribution to reflect the total contribution \r\namong those file types that are checked.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 2,
                "deletions": 2
              },
              "md": {
                "insertions": 3,
                "deletions": 2
              },
              "js": {
                "insertions": 20,
                "deletions": 11
              }
            }
          }
        ]
      },
      {
        "insertions": 65,
        "deletions": 21,
        "date": "2020-05-08",
        "commitResults": [
          {
            "hash": "a1e70a75ab2b4d1266028aeb61bfd779d2b062eb",
            "messageTitle": "[#1242] Move removal of zoom hashes to be within v_zoom component (#1243)",
            "messageBody": "The removal of zoom hashes are done in main.js, while the removal\r\nof authorship hashes is done within the v_authorship component\r\nitself.\r\n\r\nWe can move the responsibility to remove zoom hashes to be within \r\nthe v_zoom component itself, in the \u0027beforeDestroy\u0027 hook. This \r\nwill result in a cleaner implementation and separation of concern.\r\n\r\nLet\u0027s move the removal of zoom hashes to be within v_zoom\r\ncomponent itself.",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 16,
                "deletions": 14
              }
            }
          },
          {
            "hash": "ecd5594aef7f5cd2492e644d0411eb73321ba8e6",
            "messageTitle": "[#1244] Add handling of filenames wrapped in double quotes (#1247)",
            "messageBody": "When a filename contains special characters such as double quotes\r\nor the backslash character \\, git log will escape those characters and\r\nsurround the entire file name with double quotes.\r\n\r\nCommitInfoAnalyzer is not handling these cases, which will lead to an\r\nassertion error that fails the entire analysis.\r\n\r\nLet\u0027s add the handling of such cases, removing the surrounded quotes\r\nfrom the filenames, if available.",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 49,
                "deletions": 7
              }
            }
          }
        ]
      },
      {
        "insertions": 254,
        "deletions": 7,
        "date": "2020-05-12",
        "commitResults": [
          {
            "hash": "838ef11f5e41638a07f26338e2e47ac0b789bf4b",
            "messageTitle": "[#1220] Add front end tests for summary chart functionalities (#1228)",
            "messageBody": "Our coverage for front end tests is rather low. UI regressions will be\r\nharder to discover due to this.\r\n\r\nLet\u0027s add front end tests for summary chart\u0027s functionalities such as \r\nmerge group, zoom, filter breakdown features and the restoring of \r\nsummary controls after page reloads.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 7,
                "deletions": 7
              },
              "js": {
                "insertions": 247,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 24,
        "deletions": 16,
        "date": "2020-05-19",
        "commitResults": [
          {
            "hash": "d5eec7cdc96194d73cb6c4df4a3c08a85bc88c3c",
            "messageTitle": "Fix bug when restoring zoom tab (#1261)",
            "messageBody": "When group by authors and groups are merged, the commits are \r\nnot shown correctly in the zoom tab after reloading the page.\r\n\r\nThis occurs especially for an author with contribution in several \r\nrepositories, as the repositories of the author are treated as \r\nseparate groups (should be pushed into same group) within the\r\n\u0027restoreZoomFiltered\u0027 method. This leads to the merging of group \r\nnot being able to merge all the repositories of the author, as \r\nthey are treated as separate groups. \r\n\r\nThe searched field is also not handled by zoom tab as well, \r\nleading to the reloaded zoom tab containing commits that are\r\nnot by users that match the searched field.\r\n\r\nLet\u0027s modify the \u0027restoreZoomFiltered\u0027 method to treat the\r\nrepositories of an author to be in the same group, instead of \r\nbeing separate groups. Let\u0027s also add the handling of the\r\nsearch field when reloading the zoom tab.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 1,
                "deletions": 0
              },
              "js": {
                "insertions": 23,
                "deletions": 16
              }
            }
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 4,
        "date": "2020-05-23",
        "commitResults": [
          {
            "hash": "383ee786785245474c0eb49cdfc28dd20da05b71",
            "messageTitle": "[#1259] Add index number and files changed count (#1262)",
            "messageBody": "The authorship tab does not show the total number of files changed \r\nas well as the index of the files changed.\r\n\r\nLet\u0027s add the index of the files changed together with the files \r\nchanged count. The numbers will be reactive based on the checked \r\nfile types.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 3,
                "deletions": 3
              }
            }
          },
          {
            "hash": "61dbe2cb7d041ac2c093038148ae120581aa35fc",
            "messageTitle": "[#1241] Restore checked file types (#1256)",
            "messageBody": "The checked file types in summary panel is not restorable after\r\nreloading the page.\r\n\r\nThis is due to the checked file types not being saved in the hash.\r\n\r\nLet\u0027s add the checked file types hash to allow the checked file types\r\nto be restored after reloading the page.",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 14,
                "deletions": 1
              }
            }
          }
        ]
      }
    ],
    "j-lum": [],
    "iskandarzulkarnaien": [],
    "xantho09": [],
    "0blivious": [
      {
        "insertions": 69,
        "deletions": 42,
        "date": "2019-12-17",
        "commitResults": [
          {
            "hash": "d6710418070622ecb723793f75ca810ad667e326",
            "messageTitle": "[#865] AuthorConfig: further improve the branch field (#878)",
            "messageBody": "In the author-config.csv, branch is an optional field that will\r\nautomatically uses the default branch in the repo field.\r\n\r\nHowever, this can be improved such that if the branch field is not\r\nfilled, we can bind that AuthorConfig to all the RepoConfig that has the\r\nsame repo\u0027s location irregardless of branch. This can help users to\r\neasily setup config files to analyse multiple branches of a repo.\r\n\r\nLet\u0027s bind the AuthorConfig to all the RepoConfig that has the same\r\nrepo\u0027s location irregardless of branch if the branch field is not\r\nfilled.",
            "tags": [
              "v1.10.1"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 68,
                "deletions": 41
              },
              "md": {
                "insertions": 1,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 35,
        "deletions": 13,
        "date": "2019-12-25",
        "commitResults": [
          {
            "hash": "57e70cf06674352e18c8a396e4fb7bf7dc8f517e",
            "messageTitle": "[#900] group-config.csv: make location optional (#914)",
            "messageBody": "In the group-config.csv, location is a compulsory field that only has one\r\nvalue.  Specifying groups for all repos requires the user to manually key\r\nin groups for each repo.\r\n\r\nHowever, this can be improved such that if the location field is not\r\nfilled, we can bind that GroupConfig to all the RepoConfig. This can\r\nhelp the user save the time listing all the possible combinations of\r\nrepos and groups when they want to specify groups for all repos.\r\n\r\nLet\u0027s bind the GroupConfig to all the RepoConfig if the location\r\nfield is not filled.",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 34,
                "deletions": 12
              },
              "md": {
                "insertions": 1,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2020-01-17",
        "commitResults": [
          {
            "hash": "3fd1f5fa8c531e5274fcb0dd90e83ddaf76d1d1f",
            "messageTitle": "[#980] URL: date adapted without validation (#990)",
            "messageBody": "Date in authorship can be modified using URL. However, a date range will \r\nstill be adapted even if it is invalid.\r\n\r\nThis can be fixed by adding extra validation function for window hash.\r\n\r\nLet\u0027s put a validation for the date parameters in the URL.",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 2,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 29,
        "date": "2020-01-21",
        "commitResults": [
          {
            "hash": "b40b3e6788c444b6ca46cd59b8e70e9afa29e86e",
            "messageTitle": "[#1009] AppVeyor Failing: remove outdated tests (#1015)",
            "messageBody": "AppVeyor CI is failing in all PRs as it has updated its worker \r\nimage, which uses Git 2.25 instead of Git 2.23.\r\n\r\nFrom Git v2.24, Git for windows would print error for an illegal\r\nfile name and prevent it from adding into the index. As in our test \r\ncases we run the command `git checkout someInvalidName`, an \r\nexception is expected to be thrown, and since we do not catch it, \r\nthe tests fail. \r\n\r\nLet\u0027s remove the 2 outdated test as the git command now handles\r\ndetection of invalid filename and will throw exception at the very\r\nbeginning.",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 0,
                "deletions": 29
              }
            }
          }
        ]
      },
      {
        "insertions": 28,
        "deletions": 2,
        "date": "2020-01-23",
        "commitResults": [
          {
            "hash": "6fe782466dc827ab5c37c095000dfaba6e2ee3db",
            "messageTitle": "[#885] Allow reset search filter (#895)",
            "messageBody": "The user has to manually delete the keywords and press another enter \r\nto go back to the full view.\r\n\r\nHowever, this can be improved by providing a reset button to clear \r\nthe search bar, which can help the user save time for deleting. \r\n\r\nLet\u0027s provide a button to reset the search bar.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 2,
                "deletions": 1
              },
              "scss": {
                "insertions": 22,
                "deletions": 1
              },
              "js": {
                "insertions": 4,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 0,
        "date": "2020-01-29",
        "commitResults": [
          {
            "hash": "c6f711cf2fe0015d204e953d3dfb6f252a9104d6",
            "messageTitle": " [#988] Ramp chart: inconsistency in the length of contribution line (#991)",
            "messageBody": "Toggling the `breakdown by filetype` checkbox changes the length of the\r\ncontribution bar even though the LoC remains constant.\r\n\r\nThis occurs due to the inaccurate data in json file. The\r\nauthorFileTypeContributionMap in commit.json have multiple entries of the \r\nsame key. In the frontend, the last entry would be taken instead of all \r\nof the entries provided. This results in the wrong calculation of the total \r\ncontribution of each file type.\r\n\r\nLet\u0027s override FileType#hashCode to correctly update the LoC number \r\ninstead of creating a new entry.\r\n\r\nIn the backend, we use AuthorshipSummary#addAuthorContributionCount\r\nto increment line number and we consider FileType (the key) and\r\nLoC (the value) as an entry in the HashMap. The HashMap is then output\r\nto the commit.json file as authorFileTypeContributionMap. However, the \r\ndefault HashCode will digest all data stored in FileType, other data \r\nlike path and pathsGlob is also taken into consideration when comparing \r\nthe key to update the entry. So, instead of updating, a new entry will \r\nbe created. Thus in AuthorshipSummary#authorFileTypeContributionMap, \r\neach author can have multiple entry with same FileType#label. And the \r\nresulted authorFileTypeContributionMap in json file will have multiple \r\nentry of the same key.\r\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 5,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 28,
        "deletions": 8,
        "date": "2020-02-05",
        "commitResults": [
          {
            "hash": "a9fedc6689c5bea63706bde2c01101b42b058cb2",
            "messageTitle": "[#920] Ramp chart: show percentile for each item (#922)",
            "messageBody": "We have index number for each group in the ramp chart but not its\r\npercentile. It is hard to tell the ranking position of the group.\r\n\r\nThis can be improved to show the percentile of each item so that it\r\nis easy to see whether an item is in the 20%th percentile and so on.\r\n\r\nLet\u0027s add a percentile number at the right side of each group.\r\n",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 4,
                "deletions": 0
              },
              "scss": {
                "insertions": 11,
                "deletions": 4
              },
              "md": {
                "insertions": 6,
                "deletions": 4
              },
              "js": {
                "insertions": 7,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 68,
        "deletions": 39,
        "date": "2020-02-10",
        "commitResults": [
          {
            "hash": "61f1fc4f4f854a176ab1f6672f6759c42712c9c3",
            "messageTitle": "[#838] ZoomTab: add sort controls  (#943)",
            "messageBody": "We have Zoom tab shows the list of commits in the order from\r\nearliest to latest commits (without an option to reverse the sorting\r\norder or change the sorting type).\r\n\r\nThis can be improved by allowing the user to view the commits in\r\nreverse chronological order and add other sorting options such as\r\nLOC.\r\n\r\nLet\u0027s add a sorting field to allow the user to sort the commits\r\naccording to Loc or time, and also allow the commits to be\r\ndisplayed in reverse order.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 23,
                "deletions": 8
              },
              "scss": {
                "insertions": 30,
                "deletions": 29
              },
              "md": {
                "insertions": 2,
                "deletions": 1
              },
              "js": {
                "insertions": 13,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 0,
        "date": "2020-02-19",
        "commitResults": [
          {
            "hash": "3a5e0219948b34c78786e2e91d70a301fc3c7bc1",
            "messageTitle": "[#1031] Commits panel: ramp appears outside row (#1034)",
            "messageBody": "The ramp slice in Commits panel may appear outside of the blue \r\nrectangle.\r\n\r\nWe should crop the ramp slice if it appears outside of the row, like\r\nwhat we did for the Chart panel.\r\n\r\nLet\u0027s set the overflow property to be hidden for the ramp div.",
            "fileTypesAndContributionMap": {
              "scss": {
                "insertions": 1,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 51,
        "deletions": 73,
        "date": "2020-02-22",
        "commitResults": [
          {
            "hash": "cd9e636fec6c7919fc50ed040da195e699760fa3",
            "messageTitle": "[#1023] Authorship Panel: expand all button always appear when first open the page (#1040)",
            "messageBody": "The `expand all` button will always appear on the authorship panel \r\nwhen we first open the page or when refresh the page, until the\r\nloading is complete. The button to display is supposed to be\r\n`collapse all` as we are to display all the file details initially.\r\n\r\nLet\u0027s display the `collapse all` button at the very beginning, and \r\nupdate all relevant checkboxes, radio buttons using proper Vue \r\nmodel.\r\n",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 7,
                "deletions": 9
              },
              "js": {
                "insertions": 44,
                "deletions": 64
              }
            }
          }
        ]
      },
      {
        "insertions": 234,
        "deletions": 211,
        "date": "2020-02-25",
        "commitResults": [
          {
            "hash": "bb4316ce679041b27f2b5e8a4b95799c8383159f",
            "messageTitle": "[#1071] Zoom view: provide a way to highlight the commit (#1075)",
            "messageBody": "Clicking a tag jumps to a list of commits full of tags. Users may\r\nnot be able to find the commit with that tag easily.\r\n\r\nWe can highlight the resulting commit with that particular tag by \r\nproviding a light blue border around the message div.\r\n\r\nLet\u0027s add a focus property to the commit message body.\r\n",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 9,
                "deletions": 4
              },
              "scss": {
                "insertions": 16,
                "deletions": 1
              },
              "md": {
                "insertions": 2,
                "deletions": 0
              },
              "js": {
                "insertions": 3,
                "deletions": 3
              }
            }
          },
          {
            "hash": "be80abbd06b7c3f6bee2e06025f9925f930e9349",
            "messageTitle": "[#576] Refactor summary from index (#1062)",
            "messageBody": "The entire v_summary template resides in the index pug file.\r\n\r\nLet\u0027s refactor v_summary to move it into its own component so that \r\nRepoSense\u0027s dashboard is much more extendable in the future.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 204,
                "deletions": 203
              }
            }
          }
        ]
      },
      {
        "insertions": 317,
        "deletions": 180,
        "date": "2020-03-16",
        "commitResults": [
          {
            "hash": "26ad1f7d71238a78ede45843dc05e4aa2867f6c1",
            "messageTitle": "[#892] Ramp chart: allow filtering by file type/group (#1025)",
            "messageBody": "We have code view can be filtered by file type/group but ramp chart in \r\nChart Panel cannot be filtered and sorted like that.\r\n\r\nThis can be improved by only display selected portion of contribution\r\nbar corresponding to selected file type. Also, if the user choose to \r\nsort by contribution, only the file types in selected ones will be \r\nconsidered.\r\n\r\nLet\u0027s add a set of file type check boxes in Chart panel and only display\r\nand sort according to selected file types.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 26,
                "deletions": 11
              },
              "scss": {
                "insertions": 157,
                "deletions": 137
              },
              "md": {
                "insertions": 2,
                "deletions": 2
              },
              "js": {
                "insertions": 132,
                "deletions": 30
              }
            }
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2020-03-20",
        "commitResults": [
          {
            "hash": "e0afe5593ef3062fe6625e11784be91261af1545",
            "messageTitle": "[#1124] Authorship: file name starting with period not displayed (#1125)",
            "messageBody": "File with name starting with period will not have its detail \r\ndisplayed on authorship panel.\r\n\r\nThis is due to the minimatch library used which by default will not\r\nmatch name `a/**/b` with `a/.d/b`, unless dot is set. So the file is\r\nfiltered out from selected files.\r\n\r\nLet\u0027s set the dot property to true to allow the file details to be\r\ndisplayed properly.",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 1,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 442,
        "deletions": 378,
        "date": "2020-04-01",
        "commitResults": [
          {
            "hash": "1a34084e5379a86bd685c1f35847c1038a1c37de",
            "messageTitle": "[#576] Refactor summary charts from summary (#1059)",
            "messageBody": "* Refactor summary and charts out\r\n\r\n* remove wrapper class\r\n\r\n* Perform filter in summary\r\n\r\n* folder structure\r\n\r\n* update\r\n\r\n* update\r\n\r\n* remove extra blank line\r\n\r\n* remove empty data\r\n\r\n* reset updatefilter\r\n\r\n* change name to vSummaryCharts\r\n\r\n* use filteredrepo\r\n\r\n* fix\r\n\r\n* change naming\r\n\r\n* fix\r\n\r\n* codacy\r\n\r\n* ci\r\n\r\nCo-authored-by: 0blivious \u003clyw@415309@gmail.com\u003e\r\nCo-authored-by: WANG CHAO \u003c1229983126@qq.com\u003e",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 134,
                "deletions": 116
              },
              "js": {
                "insertions": 308,
                "deletions": 262
              }
            }
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 32,
        "date": "2020-04-19",
        "commitResults": [
          {
            "hash": "831c36581718d873342d813421b4da9b2e4f0297",
            "messageTitle": "[#1213] Regressions from #1059 (#1218)",
            "messageBody": "With the recent merged PR #1059, the data related to sorting were not\r\npassed from v_summary to v_summary_charts, even though\r\nv_summary_charts uses those data within openTabZoom method.\r\n\r\nThis results in zoom tab to not be restorable at some situations, as it \r\nis unable to utilise the sorting options. However, the sorting options\r\nand the call for sortFiltered is actually not needed\r\nwithin the restoreZoomFiltered method. This is because the\r\nmatchZoomUser within restoreZoomFiltered will already filter out\r\nother groups/repos. Thus, there is no need to pass those props into\r\nv_summary_charts.\r\n\r\nLet\u0027s remove the unnecessary parameters and methods.",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 5,
                "deletions": 32
              }
            }
          }
        ]
      },
      {
        "insertions": 96,
        "deletions": 99,
        "date": "2020-04-20",
        "commitResults": [
          {
            "hash": "f040ad94dcf9b4e2b18ae6ea808b03286c8ba224",
            "messageTitle": "[#1084] Authorship: append file type label (#1093)",
            "messageBody": "The user has no means to see the file belong to which file group.\r\n\r\nThis can be improved by appending a label at the end of the file\r\ntitle to allow user get an easy view of which file type the file\r\nbelongs to.\r\n\r\nLet\u0027s append a coloured label at the end of the file title to indicate\r\nwhich file type the tile belongs to.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 35,
                "deletions": 25
              },
              "scss": {
                "insertions": 31,
                "deletions": 54
              },
              "js": {
                "insertions": 30,
                "deletions": 20
              }
            }
          }
        ]
      },
      {
        "insertions": 64,
        "deletions": 35,
        "date": "2020-05-09",
        "commitResults": [
          {
            "hash": "454eda1b61564c068accb394084fa5ca6ee99548",
            "messageTitle": "[#961] Add Vuex for event management (#1162)",
            "messageBody": "The open of zoom and authorship tap is done through event\r\nemit calls now and the code will become messy after #1101 \r\nand #1059 get merged.\r\n\r\nWe can try to use Vuex to manage the event and call it in a\r\nmore elegant way.\r\n\r\nLet\u0027s try to explore the use of Vuex for event management.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 8,
                "deletions": 6
              },
              "js": {
                "insertions": 56,
                "deletions": 29
              }
            }
          }
        ]
      },
      {
        "insertions": 225,
        "deletions": 239,
        "date": "2020-05-12",
        "commitResults": [
          {
            "hash": "989a86c3857eed116bbfd3b33f924674d11b5d45",
            "messageTitle": "[#1164] Move to api.js for all global functions (#1176)",
            "messageBody": "Global functions and constants are registered in multiple js files\r\nwhich makes them hard to trace.\r\n\r\nWe can move all the global functions to api.js to make the code more \r\nreadable and easier to refactor in the future.\r\n\r\nLet\u0027s use api.js to store all the global functions and constants.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 2,
                "deletions": 3
              },
              "js": {
                "insertions": 223,
                "deletions": 236
              }
            }
          }
        ]
      }
    ],
    "hcwong": [],
    "ang-zeyu": [
      {
        "insertions": 4,
        "deletions": 1,
        "date": "2019-12-24",
        "commitResults": [
          {
            "hash": "e207c43b84143dcd81a2581c1501f51cb54ef937",
            "messageTitle": "Fix additional upward movement on expanding code (#966)",
            "messageBody": "Clicking the expand button may cause the code to move up a bit \r\nbefore expanding. This occurs more frequently when the number of \r\ncode lines to load is large, or the client is slow. \r\n\r\nThis is due to asynchronous data loading by Vue, causing observable \r\nCSS updates to the code block before the code has been loaded into \r\nthe DOM.\r\n\r\nLet\u0027s execute the CSS change for the code block only after the \r\nsegment\u0027s code lines have been loaded.",
            "fileTypesAndContributionMap": {
              "js": {
                "insertions": 4,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "insertions": 59,
        "deletions": 48,
        "date": "2020-04-09",
        "commitResults": [
          {
            "hash": "45f92335673213a1c262490585cefdc51e70c5d2",
            "messageTitle": "[#1137, #1138] Expand pug-lint glob and remove fix option in lint (#1136)",
            "messageBody": "The pug-lint command does not expand globs provided as arguments,\r\nrelying instead on bash wildcard expansion. This causes the pug-lint\r\ncommand to fail on windows. The main linting script was also written \r\nwith the --fix option, which can increase the build time for CI.\r\n\r\nThis may also cause auto-fixable errors to go undetected, although \r\nthe lint script has an extra `--` that causes `--fix` to be \r\nrecognised as a file.\r\n\r\nLet’s \r\n- manually expand the globs for the `pug-lint` command, moving it to\r\na separate script for brevity.\r\n- remove the `--fix` option used by the main linting script.\r\n- introduce `--fix` for `stylelint`.",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 1,
                "deletions": 1
              },
              "json": {
                "insertions": 3,
                "deletions": 1
              }
            }
          },
          {
            "hash": "110787b0fa125b877f37c24c694cf283c230184d",
            "messageTitle": " [#202, #1081] Authorship: improve file collapsing mechanism (#1065)",
            "messageBody": "The authorship tab relies on several dom querying methods to toggle\r\nwhether a file is collapsed from view. This hurts the performance of \r\nfile collapsing and detracts from the use of Vue as RepoSense’s \r\nfront-end framework, decreasing code readability.\r\n\r\nOccasionally, a small number of files have a large number of line \r\ncontributions. This slows the initial loading time at best and \r\ncauses the application to crash at worst.\r\n\r\nLet\u0027s\r\n- add a new variable \u0027active\u0027 in the `file` object, allowing Vue \r\n  reactivity to take over this toggle behavior, which also fixes \r\n  the bug with files not staying collapsed after changing the file \r\n  filter.\r\n- display both the expand and collapse all buttons according to that\r\n  new property.\r\n- collapse files with more than 2000 lines of code by default.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 5,
                "deletions": 5
              },
              "scss": {
                "insertions": 15,
                "deletions": 13
              },
              "js": {
                "insertions": 20,
                "deletions": 14
              }
            }
          },
          {
            "hash": "24ea93657fca8d176606e2eae8f2906208a8fa6e",
            "messageTitle": "Refactor Ramp and Zoom globals (#1114)",
            "messageBody": "The ramp and zoom components have some component specific methods\r\nand variables that can be moved inside the component definition.\r\n\r\nLet\u0027s do so, encapsulating component logic within the component \r\nitself.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 2,
                "deletions": 2
              },
              "js": {
                "insertions": 13,
                "deletions": 12
              }
            }
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 2,
        "date": "2020-04-17",
        "commitResults": [
          {
            "hash": "41e7c27e635b13abdc077977ca80fd2be3182b02",
            "messageTitle": "Remove duplicate commits in daily contributions (#1050)",
            "messageBody": "Two or more authors under with the same extracted commit may result in\r\nthe commit being added multiple times to an author’s daily contribution.\r\n\r\nThis occurs when these authors use some identical aliases, which causes\r\nthe same author to be retrieved from the commit result for adding to\r\nthe daily contribution.\r\nThis can be reproduced by configuring said authors, or using no author\r\nconfig under the above conditions.\r\n\r\nLet\u0027s add a duplicate commit check to the commit analyzing process to\r\nprevent this.\r\n\r\nCo-authored-by: Peh Xian Bin, Eugene \u003ceugenepeh@users.noreply.github.com\u003e",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 26,
                "deletions": 0
              }
            }
          },
          {
            "hash": "b08c954a086d88416bdd78c25dd1a03317bea3d3",
            "messageTitle": "Add auto scrolling when a segment is collapsed (#1090)",
            "messageBody": "When a segment is collapsed, the scroll position of the authorship view\r\nremains at the same position.\r\nThis can the user to feel lost after collapsing the segment.\r\n\r\nLet\u0027s implement auto scrolling for the segment collapse button.\r\nIf the top button is out of the user’s view, the authorship view will be\r\nscrolled to the segment’s top.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 2,
                "deletions": 2
              },
              "js": {
                "insertions": 8,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "insertions": 117,
        "deletions": 48,
        "date": "2020-04-20",
        "commitResults": [
          {
            "hash": "84c133fa7dfd2ac5b9d65f75ba1c4da504490720",
            "messageTitle": "[#910] Save authorship tab controls as hash parameters (#1057)",
            "messageBody": "The filter and sorting options for the authorship tab are not persisted\r\nacross page reloads.\r\n\r\nThis results having to re-select the options whenever the page is\r\nreloaded, leading to a less pleasant user experience.\r\n\r\nLet\u0027s save the options for these controls as hash parameters, and use\r\nthem across page reloads when available.",
            "fileTypesAndContributionMap": {
              "pug": {
                "insertions": 26,
                "deletions": 7
              },
              "scss": {
                "insertions": 4,
                "deletions": 0
              },
              "js": {
                "insertions": 87,
                "deletions": 41
              }
            }
          }
        ]
      }
    ],
    "geshuming": [],
    "alyip98": [],
    "nbriannl": [],
    "madanalogy": [],
    "daekoon": []
  },
  "authorFinalContributionMap": {
    "ccyccyccy": 83,
    "Parcly-Taxel": 0,
    "niqiukun": 226,
    "openorclose": 0,
    "yash-chowdhary": 203,
    "anubh-v": 523,
    "Tejas2805": 841,
    "dvrylc": 0,
    "jamessspanggg": 1559,
    "j-lum": 0,
    "iskandarzulkarnaien": 0,
    "xantho09": 0,
    "0blivious": 931,
    "hcwong": 0,
    "ang-zeyu": 180,
    "geshuming": 0,
    "alyip98": 0,
    "nbriannl": 0,
    "madanalogy": 0,
    "daekoon": 0
  },
  "authorFileTypeContributionMap": {
    "ccyccyccy": {
      "java": 27,
      "js": 15,
      "scss": 0,
      "json": 0,
      "md": 0,
      "py": 0,
      "pug": 41,
      "gradle": 0,
      "sh": 0,
      "yml": 0
    },
    "Parcly-Taxel": {
      "java": 0,
      "js": 0,
      "scss": 0,
      "json": 0,
      "md": 0,
      "py": 0,
      "pug": 0,
      "gradle": 0,
      "sh": 0,
      "yml": 0
    },
    "niqiukun": {
      "java": 0,
      "js": 134,
      "scss": 10,
      "json": 0,
      "md": 44,
      "py": 0,
      "pug": 38,
      "gradle": 0,
      "sh": 0,
      "yml": 0
    },
    "openorclose": {
      "java": 0,
      "js": 0,
      "scss": 0,
      "json": 0,
      "md": 0,
      "py": 0,
      "pug": 0,
      "gradle": 0,
      "sh": 0,
      "yml": 0
    },
    "yash-chowdhary": {
      "java": 96,
      "js": 9,
      "scss": 0,
      "json": 0,
      "md": 98,
      "py": 0,
      "pug": 0,
      "gradle": 0,
      "sh": 0,
      "yml": 0
    },
    "anubh-v": {
      "java": 406,
      "js": 1,
      "scss": 30,
      "json": 0,
      "md": 83,
      "py": 0,
      "pug": 2,
      "gradle": 0,
      "sh": 1,
      "yml": 0
    },
    "Tejas2805": {
      "java": 31,
      "js": 10,
      "scss": 641,
      "json": 25,
      "md": 53,
      "py": 0,
      "pug": 63,
      "gradle": 0,
      "sh": 0,
      "yml": 18
    },
    "dvrylc": {
      "java": 0,
      "js": 0,
      "scss": 0,
      "json": 0,
      "md": 0,
      "py": 0,
      "pug": 0,
      "gradle": 0,
      "sh": 0,
      "yml": 0
    },
    "jamessspanggg": {
      "java": 418,
      "js": 643,
      "scss": 45,
      "json": 42,
      "md": 298,
      "py": 0,
      "pug": 37,
      "gradle": 0,
      "sh": 67,
      "yml": 9
    },
    "j-lum": {
      "java": 0,
      "js": 0,
      "scss": 0,
      "json": 0,
      "md": 0,
      "py": 0,
      "pug": 0,
      "gradle": 0,
      "sh": 0,
      "yml": 0
    },
    "iskandarzulkarnaien": {
      "java": 0,
      "js": 0,
      "scss": 0,
      "json": 0,
      "md": 0,
      "py": 0,
      "pug": 0,
      "gradle": 0,
      "sh": 0,
      "yml": 0
    },
    "xantho09": {
      "java": 0,
      "js": 0,
      "scss": 0,
      "json": 0,
      "md": 0,
      "py": 0,
      "pug": 0,
      "gradle": 0,
      "sh": 0,
      "yml": 0
    },
    "0blivious": {
      "java": 68,
      "js": 561,
      "scss": 47,
      "json": 0,
      "md": 8,
      "py": 0,
      "pug": 247,
      "gradle": 0,
      "sh": 0,
      "yml": 0
    },
    "hcwong": {
      "java": 0,
      "js": 0,
      "scss": 0,
      "json": 0,
      "md": 0,
      "py": 0,
      "pug": 0,
      "gradle": 0,
      "sh": 0,
      "yml": 0
    },
    "ang-zeyu": {
      "java": 22,
      "js": 117,
      "scss": 5,
      "json": 3,
      "md": 1,
      "py": 0,
      "pug": 32,
      "gradle": 0,
      "sh": 0,
      "yml": 0
    },
    "geshuming": {
      "java": 0,
      "js": 0,
      "scss": 0,
      "json": 0,
      "md": 0,
      "py": 0,
      "pug": 0,
      "gradle": 0,
      "sh": 0,
      "yml": 0
    },
    "alyip98": {
      "java": 0,
      "js": 0,
      "scss": 0,
      "json": 0,
      "md": 0,
      "py": 0,
      "pug": 0,
      "gradle": 0,
      "sh": 0,
      "yml": 0
    },
    "nbriannl": {
      "java": 0,
      "js": 0,
      "scss": 0,
      "json": 0,
      "md": 0,
      "py": 0,
      "pug": 0,
      "gradle": 0,
      "sh": 0,
      "yml": 0
    },
    "madanalogy": {
      "java": 0,
      "js": 0,
      "scss": 0,
      "json": 0,
      "md": 0,
      "py": 0,
      "pug": 0,
      "gradle": 0,
      "sh": 0,
      "yml": 0
    },
    "daekoon": {
      "java": 0,
      "js": 0,
      "scss": 0,
      "json": 0,
      "md": 0,
      "py": 0,
      "pug": 0,
      "gradle": 0,
      "sh": 0,
      "yml": 0
    }
  },
  "authorContributionVariance": {
    "ccyccyccy": 50.74321,
    "Parcly-Taxel": 0.0,
    "niqiukun": 411.09384,
    "openorclose": 0.0,
    "yash-chowdhary": 635.9885,
    "anubh-v": 385.0493,
    "Tejas2805": 3157.4165,
    "dvrylc": 0.0,
    "jamessspanggg": 3733.0361,
    "j-lum": 0.0,
    "iskandarzulkarnaien": 0.0,
    "xantho09": 0.0,
    "0blivious": 7719.437,
    "hcwong": 0.0,
    "ang-zeyu": 222.39099,
    "geshuming": 0.0,
    "alyip98": 0.0,
    "nbriannl": 0.0,
    "madanalogy": 0.0,
    "daekoon": 0.0
  },
  "authorDisplayNameMap": {
    "ccyccyccy": "CHON..YUAN",
    "Parcly-Taxel": "JERE..ERUI",
    "niqiukun": "NI T..ZHEN",
    "openorclose": "DARY.. TAN",
    "yash-chowdhary": "YASH..HARY",
    "anubh-v": "ANUB..BHAV",
    "Tejas2805": "TEJA..ANIA",
    "dvrylc": "CHAN..ARYL",
    "jamessspanggg": "JAME.. WAI",
    "j-lum": "LUM ..FFRY",
    "iskandarzulkarnaien": "ISKA..AINI",
    "xantho09": "MUHA..INAL",
    "0blivious": "LIU ..IWEN",
    "hcwong": "JOSH..HIEN",
    "ang-zeyu": "ANG ..E YU",
    "geshuming": "GE S..MING",
    "alyip98": "YIP ..YEUN",
    "nbriannl": "LABA..RIDO",
    "madanalogy": "MUHA..JJAJ",
    "daekoon": "LIM ..KOON"
  }
}

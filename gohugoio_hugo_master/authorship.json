[
  {
    "path": "langs/config.go",
    "fileType": "go",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// Copyright 2018 The Hugo Authors. All rights reserved."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "// Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "// you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "// You may obtain a copy of the License at"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "// http://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "// Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "// distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "// See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "// limitations under the License."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "package langs"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import ("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"fmt\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"path/filepath\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"sort\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"strings\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"github.com/gohugoio/hugo/common/maps\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"github.com/spf13/cast\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"github.com/pkg/errors\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"github.com/gohugoio/hugo/config\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "type LanguagesConfig struct {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\tLanguages                      Languages"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\tMultihost                      bool"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\tDefaultContentLanguageInSubdir bool"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "func LoadLanguageSettings(cfg config.Provider, oldLangs Languages) (c LanguagesConfig, err error) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\tdefaultLang :\u003d strings.ToLower(cfg.GetString(\"defaultContentLanguage\"))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\tif defaultLang \u003d\u003d \"\" {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tdefaultLang \u003d \"en\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tcfg.Set(\"defaultContentLanguage\", defaultLang)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\tvar languages map[string]interface{}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\tlanguagesFromConfig :\u003d cfg.GetStringMap(\"languages\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\tdisableLanguages :\u003d cfg.GetStringSlice(\"disableLanguages\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\tif len(disableLanguages) \u003d\u003d 0 {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tlanguages \u003d languagesFromConfig"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "\t} else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tlanguages \u003d make(map[string]interface{})"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tfor k, v :\u003d range languagesFromConfig {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tfor _, disabled :\u003d range disableLanguages {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tif disabled \u003d\u003d defaultLang {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\treturn c, fmt.Errorf(\"cannot disable default language %q\", defaultLang)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tif strings.EqualFold(k, disabled) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\tv.(map[string]interface{})[\"disabled\"] \u003d true"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\tbreak"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tlanguages[k] \u003d v"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\tvar languages2 Languages"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "\tif len(languages) \u003d\u003d 0 {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tlanguages2 \u003d append(languages2, NewDefaultLanguage(cfg))"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "\t} else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tlanguages2, err \u003d toSortedLanguages(cfg, languages)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif err !\u003d nil {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn c, errors.Wrap(err, \"Failed to parse multilingual config\")"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\tif oldLangs !\u003d nil {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t// When in multihost mode, the languages are mapped to a server, so"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t// some structural language changes will need a restart of the dev server."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t// The validation below isn\u0027t complete, but should cover the most"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t// important cases."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tvar invalid bool"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif languages2.IsMultihost() !\u003d oldLangs.IsMultihost() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tinvalid \u003d true"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tif languages2.IsMultihost() \u0026\u0026 len(languages2) !\u003d len(oldLangs) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tinvalid \u003d true"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif invalid {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn c, errors.New(\"language change needing a server restart detected\")"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif languages2.IsMultihost() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t// We need to transfer any server baseURL to the new language"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tfor i, ol :\u003d range oldLangs {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tnl :\u003d languages2[i]"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tnl.Set(\"baseURL\", ol.GetString(\"baseURL\"))"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "\t// The defaultContentLanguage is something the user has to decide, but it needs"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "\t// to match a language in the language definition list."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "\tlangExists :\u003d false"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "\tfor _, lang :\u003d range languages2 {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif lang.Lang \u003d\u003d defaultLang {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tlangExists \u003d true"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tbreak"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "\tif !langExists {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn c, fmt.Errorf(\"site config value %q for defaultContentLanguage does not match any language definition\", defaultLang)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "\tc.Languages \u003d languages2"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "\tc.Multihost \u003d languages2.IsMultihost()"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "\tc.DefaultContentLanguageInSubdir \u003d c.Multihost"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "\tsortedDefaultFirst :\u003d make(Languages, len(c.Languages))"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "\tfor i, v :\u003d range c.Languages {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tsortedDefaultFirst[i] \u003d v"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "\tsort.Slice(sortedDefaultFirst, func(i, j int) bool {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tli, lj :\u003d sortedDefaultFirst[i], sortedDefaultFirst[j]"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif li.Lang \u003d\u003d defaultLang {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn true"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif lj.Lang \u003d\u003d defaultLang {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn false"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn i \u003c j"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "\t})"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "\tcfg.Set(\"languagesSorted\", c.Languages)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "\tcfg.Set(\"languagesSortedDefaultFirst\", sortedDefaultFirst)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "\tcfg.Set(\"multilingual\", len(languages2) \u003e 1)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "\tmultihost :\u003d c.Multihost"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "\tif multihost {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tcfg.Set(\"defaultContentLanguageInSubdir\", true)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tcfg.Set(\"multihost\", true)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "\tif multihost {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t// The baseURL may be provided at the language level. If that is true,"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t// then every language must have a baseURL. In this case we always render"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t// to a language sub folder, which is then stripped from all the Permalink URLs etc."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tfor _, l :\u003d range languages2 {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tburl :\u003d l.GetLocal(\"baseURL\")"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tif burl \u003d\u003d nil {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\treturn c, errors.New(\"baseURL must be set on all or none of the languages\")"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn c, nil"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "func toSortedLanguages(cfg config.Provider, l map[string]interface{}) (Languages, error) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "\tlanguages :\u003d make(Languages, len(l))"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "\ti :\u003d 0"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "\tfor lang, langConf :\u003d range l {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tlangsMap, err :\u003d maps.ToStringMapE(langConf)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif err !\u003d nil {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn nil, fmt.Errorf(\"Language config is not a map: %T\", langConf)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tlanguage :\u003d NewLanguage(lang, cfg)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tfor loki, v :\u003d range langsMap {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tswitch loki {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tcase \"title\":"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tlanguage.Title \u003d cast.ToString(v)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tcase \"languagename\":"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tlanguage.LanguageName \u003d cast.ToString(v)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t\tcase \"languagedirection\":"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t\t\tlanguage.LanguageDirection \u003d cast.ToString(v)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tcase \"weight\":"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tlanguage.Weight \u003d cast.ToInt(v)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tcase \"contentdir\":"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tlanguage.ContentDir \u003d filepath.Clean(cast.ToString(v))"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tcase \"disabled\":"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tlanguage.Disabled \u003d cast.ToBool(v)"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tcase \"params\":"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tm :\u003d maps.ToStringMap(v)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t// Needed for case insensitive fetching of params values"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tmaps.ToLower(m)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tfor k, vv :\u003d range m {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t\tlanguage.SetParam(k, vv)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t// Put all into the Params map"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tlanguage.SetParam(loki, v)"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t// Also set it in the configuration map (for baseURL etc.)"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tlanguage.Set(loki, v)"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tlanguages[i] \u003d language"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "\t\ti++"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "\tsort.Sort(languages)"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn languages, nil"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "le0tan": 2,
      "-": 217
    }
  },
  {
    "path": "langs/language.go",
    "fileType": "go",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// Copyright 2018 The Hugo Authors. All rights reserved."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "// Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "// you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "// You may obtain a copy of the License at"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "// http://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "// Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "// distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "// See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "// limitations under the License."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "package langs"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import ("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"sort\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"strings\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"sync\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"github.com/gohugoio/hugo/common/maps\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"github.com/gohugoio/hugo/config\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"github.com/spf13/cast\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "// These are the settings that should only be looked up in the global Viper"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "// config and not per language."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "// This list may not be complete, but contains only settings that we know"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "// will be looked up in both."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "// This isn\u0027t perfect, but it is ultimately the user who shoots him/herself in"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "// the foot."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "// See the pathSpec."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "var globalOnlySettings \u003d map[string]bool{"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\tstrings.ToLower(\"defaultContentLanguageInSubdir\"): true,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\tstrings.ToLower(\"defaultContentLanguage\"):         true,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\tstrings.ToLower(\"multilingual\"):                   true,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\tstrings.ToLower(\"assetDir\"):                       true,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\tstrings.ToLower(\"resourceDir\"):                    true,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\tstrings.ToLower(\"build\"):                          true,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "// Language manages specific-language configuration."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "type Language struct {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\tLang              string"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\tLanguageName      string"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tLanguageDirection string"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\tTitle             string"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\tWeight            int"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\tDisabled bool"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "\t// If set per language, this tells Hugo that all content files without any"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\t// language indicator (e.g. my-page.en.md) is in this language."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "\t// This is usually a path relative to the working dir, but it can be an"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "\t// absolute directory reference. It is what we get."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\tContentDir string"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "\tCfg config.Provider"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\t// These are params declared in the [params] section of the language merged with the"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "\t// site\u0027s params, the most specific (language) wins on duplicate keys."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "\tparams    map[string]interface{}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "\tparamsMu  sync.Mutex"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "\tparamsSet bool"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "\t// These are config values, i.e. the settings declared outside of the [params] section of the language."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "\t// This is the map Hugo looks in when looking for configuration values (baseURL etc.)."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "\t// Values in this map can also be fetched from the params map above."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\tsettings map[string]interface{}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "func (l *Language) String() string {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn l.Lang"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "// NewLanguage creates a new language."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "func NewLanguage(lang string, cfg config.Provider) *Language {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "\t// Note that language specific params will be overridden later."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "\t// We should improve that, but we need to make a copy:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\tparams :\u003d make(map[string]interface{})"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "\tfor k, v :\u003d range cfg.GetStringMap(\"params\") {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tparams[k] \u003d v"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "\tmaps.ToLower(params)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "\tl :\u003d \u0026Language{Lang: lang, ContentDir: cfg.GetString(\"contentDir\"), Cfg: cfg, params: params, settings: make(map[string]interface{})}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn l"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "// NewDefaultLanguage creates the default language for a config.Provider."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "// If not otherwise specified the default is \"en\"."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "func NewDefaultLanguage(cfg config.Provider) *Language {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "\tdefaultLang :\u003d cfg.GetString(\"defaultContentLanguage\")"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "\tif defaultLang \u003d\u003d \"\" {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tdefaultLang \u003d \"en\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn NewLanguage(defaultLang, cfg)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "// Languages is a sortable list of languages."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "type Languages []*Language"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "// NewLanguages creates a sorted list of languages."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "// NOTE: function is currently unused."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "func NewLanguages(l ...*Language) Languages {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "\tlanguages :\u003d make(Languages, len(l))"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "\tfor i :\u003d 0; i \u003c len(l); i++ {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tlanguages[i] \u003d l[i]"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "\tsort.Sort(languages)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn languages"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "func (l Languages) Len() int { return len(l) }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "func (l Languages) Less(i, j int) bool {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "\twi, wj :\u003d l[i].Weight, l[j].Weight"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "\tif wi \u003d\u003d wj {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn l[i].Lang \u003c l[j].Lang"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn wj \u003d\u003d 0 || wi \u003c wj"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "func (l Languages) Swap(i, j int) { l[i], l[j] \u003d l[j], l[i] }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "// Params retunrs language-specific params merged with the global params."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "func (l *Language) Params() maps.Params {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "\t// TODO(bep) this construct should not be needed. Create the"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "\t// language params in one go."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "\tl.paramsMu.Lock()"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "\tdefer l.paramsMu.Unlock()"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "\tif !l.paramsSet {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tmaps.ToLower(l.params)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tl.paramsSet \u003d true"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn l.params"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "func (l Languages) AsSet() map[string]bool {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "\tm :\u003d make(map[string]bool)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "\tfor _, lang :\u003d range l {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tm[lang.Lang] \u003d true"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn m"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "func (l Languages) AsOrdinalSet() map[string]int {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "\tm :\u003d make(map[string]int)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "\tfor i, lang :\u003d range l {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tm[lang.Lang] \u003d i"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn m"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "// IsMultihost returns whether there are more than one language and at least one of"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "// the languages has baseURL specificed on the language level."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "func (l Languages) IsMultihost() bool {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "\tif len(l) \u003c\u003d 1 {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn false"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "\tfor _, lang :\u003d range l {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif lang.GetLocal(\"baseURL\") !\u003d nil {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn true"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn false"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "// SetParam sets a param with the given key and value."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "// SetParam is case-insensitive."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "func (l *Language) SetParam(k string, v interface{}) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "\tl.paramsMu.Lock()"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "\tdefer l.paramsMu.Unlock()"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "\tif l.paramsSet {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tpanic(\"params cannot be changed once set\")"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "\tl.params[k] \u003d v"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "// GetBool returns the value associated with the key as a boolean."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "func (l *Language) GetBool(key string) bool { return cast.ToBool(l.Get(key)) }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "// GetString returns the value associated with the key as a string."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "func (l *Language) GetString(key string) string { return cast.ToString(l.Get(key)) }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "// GetInt returns the value associated with the key as an int."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "func (l *Language) GetInt(key string) int { return cast.ToInt(l.Get(key)) }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "// GetStringMap returns the value associated with the key as a map of interfaces."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "func (l *Language) GetStringMap(key string) map[string]interface{} {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn maps.ToStringMap(l.Get(key))"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "// GetStringMapString returns the value associated with the key as a map of strings."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "func (l *Language) GetStringMapString(key string) map[string]string {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn cast.ToStringMapString(l.Get(key))"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "// GetStringSlice returns the value associated with the key as a slice of strings."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "func (l *Language) GetStringSlice(key string) []string {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn cast.ToStringSlice(l.Get(key))"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "// Get returns a value associated with the key relying on specified language."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "// Get is case-insensitive for a key."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "//"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "// Get returns an interface. For a specific value use one of the Get____ methods."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "func (l *Language) Get(key string) interface{} {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "\tlocal :\u003d l.GetLocal(key)"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "\tif local !\u003d nil {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn local"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn l.Cfg.Get(key)"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "// GetLocal gets a configuration value set on language level. It will"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "// not fall back to any global value."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "// It will return nil if a value with the given key cannot be found."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "func (l *Language) GetLocal(key string) interface{} {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "\tif l \u003d\u003d nil {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tpanic(\"language not set\")"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "\tkey \u003d strings.ToLower(key)"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "\tif !globalOnlySettings[key] {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif v, ok :\u003d l.settings[key]; ok {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn v"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn nil"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "// Set sets the value for the key in the language\u0027s params."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "func (l *Language) Set(key string, value interface{}) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "\tif l \u003d\u003d nil {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tpanic(\"language not set\")"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "\tkey \u003d strings.ToLower(key)"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "\tl.settings[key] \u003d value"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "// IsSet checks whether the key is set in the language or the related config store."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "func (l *Language) IsSet(key string) bool {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "\tkey \u003d strings.ToLower(key)"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "\tkey \u003d strings.ToLower(key)"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "\tif !globalOnlySettings[key] {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif _, ok :\u003d l.settings[key]; ok {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn true"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn l.Cfg.IsSet(key)"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "le0tan": 1,
      "-": 259
    }
  },
  {
    "path": "tpl/compare/compare.go",
    "fileType": "go",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// Copyright 2017 The Hugo Authors. All rights reserved."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "// Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "// you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "// You may obtain a copy of the License at"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "// http://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "// Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "// distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "// See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "// limitations under the License."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "// Package compare provides template functions for comparing values."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "package compare"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"fmt\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"reflect\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"strconv\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"time\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"github.com/gohugoio/hugo/compare\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"github.com/gohugoio/hugo/common/types\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "// New returns a new instance of the compare-namespaced template functions."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "func New(caseInsensitive bool) *Namespace {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn \u0026Namespace{caseInsensitive: caseInsensitive}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "// Namespace provides template functions for the \"compare\" namespace."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "type Namespace struct {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\t// Enable to do case insensitive string compares."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\tcaseInsensitive bool"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "// Default checks whether a given value is set and returns a default value if it"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "// is not.  \"Set\" in this context means non-zero for numeric types and times;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "// non-zero length for strings, arrays, slices, and maps;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "// any boolean or struct value; or non-nil for any other types."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "func (*Namespace) Default(dflt interface{}, given ...interface{}) (interface{}, error) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\t// given is variadic because the following construct will not pass a piped"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\t// argument when the key is missing:  {{ index . \"key\" | default \"foo\" }}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\t// The Go template will complain that we got 1 argument when we expectd 2."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\tif len(given) \u003d\u003d 0 {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn dflt, nil"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\tif len(given) !\u003d 1 {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn nil, fmt.Errorf(\"wrong number of args for default: want 2 got %d\", len(given)+1)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "\tg :\u003d reflect.ValueOf(given[0])"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\tif !g.IsValid() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn dflt, nil"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\tset :\u003d false"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "\tswitch g.Kind() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "\tcase reflect.Bool:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tset \u003d true"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\tcase reflect.String, reflect.Array, reflect.Slice, reflect.Map:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tset \u003d g.Len() !\u003d 0"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "\tcase reflect.Int, reflect.Int8, reflect.Int16, reflect.Int32, reflect.Int64:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tset \u003d g.Int() !\u003d 0"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\tcase reflect.Uint, reflect.Uint8, reflect.Uint16, reflect.Uint32, reflect.Uint64, reflect.Uintptr:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tset \u003d g.Uint() !\u003d 0"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "\tcase reflect.Float32, reflect.Float64:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tset \u003d g.Float() !\u003d 0"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "\tcase reflect.Complex64, reflect.Complex128:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tset \u003d g.Complex() !\u003d 0"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\tcase reflect.Struct:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tswitch actual :\u003d given[0].(type) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tcase time.Time:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tset \u003d !actual.IsZero()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tdefault:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tset \u003d true"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "\tdefault:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tset \u003d !g.IsNil()"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "\tif set {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn given[0], nil"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn dflt, nil"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "// Eq returns the boolean truth of arg1 \u003d\u003d arg2 || arg1 \u003d\u003d arg3 || arg1 \u003d\u003d arg4."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "func (n *Namespace) Eq(first interface{}, others ...interface{}) bool {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "\tif n.caseInsensitive {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tpanic(\"caseInsensitive not implemented for Eq\")"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "\tif len(others) \u003d\u003d 0 {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tpanic(\"missing arguments for comparison\")"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "\tnormalize :\u003d func(v interface{}) interface{} {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif types.IsNil(v) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn nil"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tvv :\u003d reflect.ValueOf(v)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tswitch vv.Kind() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tcase reflect.Int, reflect.Int8, reflect.Int16, reflect.Int32, reflect.Int64:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn vv.Int()"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tcase reflect.Float32, reflect.Float64:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn vv.Float()"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tcase reflect.Uint, reflect.Uint8, reflect.Uint16, reflect.Uint32, reflect.Uint64:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn vv.Uint()"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tcase reflect.String:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn vv.String()"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tdefault:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn v"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "\tnormFirst :\u003d normalize(first)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "\tfor _, other :\u003d range others {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif e, ok :\u003d first.(compare.Eqer); ok {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tif e.Eq(other) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\treturn true"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tcontinue"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif e, ok :\u003d other.(compare.Eqer); ok {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tif e.Eq(first) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\treturn true"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tcontinue"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tother \u003d normalize(other)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif reflect.DeepEqual(normFirst, other) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn true"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn false"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "le0tan"
        },
        "content": "// Ne returns the boolean truth of arg1 !\u003d arg2 \u0026\u0026 arg1 !\u003d arg3 \u0026\u0026 arg1 !\u003d arg4."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "le0tan"
        },
        "content": "func (n *Namespace) Ne(first interface{}, others ...interface{}) bool {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tfor _, other :\u003d range others {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tif n.Eq(first, other) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t\treturn false"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\treturn true"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "le0tan"
        },
        "content": "// Ge returns the boolean truth of arg1 \u003e\u003d arg2 \u0026\u0026 arg1 \u003e\u003d arg3 \u0026\u0026 arg1 \u003e\u003d arg4."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "le0tan"
        },
        "content": "func (n *Namespace) Ge(first interface{}, others ...interface{}) bool {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tfor _, other :\u003d range others {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tleft, right :\u003d n.compareGet(first, other)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tif !(left \u003e\u003d right) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t\treturn false"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\treturn true"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "le0tan"
        },
        "content": "// Gt returns the boolean truth of arg1 \u003e arg2 \u0026\u0026 arg1 \u003e arg3 \u0026\u0026 arg1 \u003e arg4."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "le0tan"
        },
        "content": "func (n *Namespace) Gt(first interface{}, others ...interface{}) bool {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tfor _, other :\u003d range others {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tleft, right :\u003d n.compareGet(first, other)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tif !(left \u003e right) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t\treturn false"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\treturn true"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "le0tan"
        },
        "content": "// Le returns the boolean truth of arg1 \u003c\u003d arg2 \u0026\u0026 arg1 \u003c\u003d arg3 \u0026\u0026 arg1 \u003c\u003d arg4."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "le0tan"
        },
        "content": "func (n *Namespace) Le(first interface{}, others ...interface{}) bool {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tfor _, other :\u003d range others {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tleft, right :\u003d n.compareGet(first, other)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tif !(left \u003c\u003d right) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t\treturn false"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\treturn true"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "le0tan"
        },
        "content": "// Lt returns the boolean truth of arg1 \u003c arg2 \u0026\u0026 arg1 \u003c arg3 \u0026\u0026 arg1 \u003c arg4."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "le0tan"
        },
        "content": "func (n *Namespace) Lt(first interface{}, others ...interface{}) bool {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tfor _, other :\u003d range others {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tleft, right :\u003d n.compareGet(first, other)"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tif !(left \u003c right) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t\treturn false"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\treturn true"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "// Conditional can be used as a ternary operator."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "// It returns a if condition, else b."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "func (n *Namespace) Conditional(condition bool, a, b interface{}) interface{} {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "\tif condition {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn a"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn b"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "func (ns *Namespace) compareGet(a interface{}, b interface{}) (float64, float64) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "\tif ac, ok :\u003d a.(compare.Comparer); ok {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tc :\u003d ac.Compare(b)"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif c \u003c 0 {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn 1, 0"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t} else if c \u003d\u003d 0 {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn 0, 0"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn 0, 1"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "\tif bc, ok :\u003d b.(compare.Comparer); ok {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tc :\u003d bc.Compare(a)"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif c \u003c 0 {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn 0, 1"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t} else if c \u003d\u003d 0 {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn 0, 0"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn 1, 0"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "\tvar left, right float64"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "\tvar leftStr, rightStr *string"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "\tav :\u003d reflect.ValueOf(a)"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "\tswitch av.Kind() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "\tcase reflect.Array, reflect.Chan, reflect.Map, reflect.Slice:"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tleft \u003d float64(av.Len())"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "\tcase reflect.Int, reflect.Int8, reflect.Int16, reflect.Int32, reflect.Int64:"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tleft \u003d float64(av.Int())"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "\tcase reflect.Float32, reflect.Float64:"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tleft \u003d av.Float()"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "\tcase reflect.String:"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tvar err error"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tleft, err \u003d strconv.ParseFloat(av.String(), 64)"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif err !\u003d nil {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tstr :\u003d av.String()"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tleftStr \u003d \u0026str"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "\tcase reflect.Struct:"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tswitch av.Type() {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tcase timeType:"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tleft \u003d float64(toTimeUnix(av))"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "\tcase reflect.Bool:"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tleft \u003d 0"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif av.Bool() {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tleft \u003d 1"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "\tbv :\u003d reflect.ValueOf(b)"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "\tswitch bv.Kind() {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "\tcase reflect.Array, reflect.Chan, reflect.Map, reflect.Slice:"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tright \u003d float64(bv.Len())"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "\tcase reflect.Int, reflect.Int8, reflect.Int16, reflect.Int32, reflect.Int64:"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tright \u003d float64(bv.Int())"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "\tcase reflect.Float32, reflect.Float64:"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tright \u003d bv.Float()"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "\tcase reflect.String:"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tvar err error"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tright, err \u003d strconv.ParseFloat(bv.String(), 64)"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif err !\u003d nil {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tstr :\u003d bv.String()"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\trightStr \u003d \u0026str"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "\tcase reflect.Struct:"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tswitch bv.Type() {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tcase timeType:"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tright \u003d float64(toTimeUnix(bv))"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "\tcase reflect.Bool:"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tright \u003d 0"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif bv.Bool() {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tright \u003d 1"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "\tif ns.caseInsensitive \u0026\u0026 leftStr !\u003d nil \u0026\u0026 rightStr !\u003d nil {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tc :\u003d compare.Strings(*leftStr, *rightStr)"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif c \u003c 0 {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn 0, 1"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t} else if c \u003e 0 {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn 1, 0"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn 0, 0"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "\tswitch {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "\tcase leftStr \u003d\u003d nil || rightStr \u003d\u003d nil:"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "\tcase *leftStr \u003c *rightStr:"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn 0, 1"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "\tcase *leftStr \u003e *rightStr:"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn 1, 0"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "\tdefault:"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn 0, 0"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn left, right"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "var timeType \u003d reflect.TypeOf((*time.Time)(nil)).Elem()"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "func toTimeUnix(v reflect.Value) int64 {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "\tif v.Kind() \u003d\u003d reflect.Interface {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn toTimeUnix(v.Elem())"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "\tif v.Type() !\u003d timeType {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tpanic(\"coding error: argument must be time.Time type reflect Value\")"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn v.MethodByName(\"Unix\").Call([]reflect.Value{})[0].Int()"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "le0tan": 44,
      "-": 280
    }
  },
  {
    "path": "tpl/compare/compare_test.go",
    "fileType": "go",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// Copyright 2017 The Hugo Authors. All rights reserved."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "// Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "// you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "// You may obtain a copy of the License at"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "// http://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "// Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "// distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "// See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "// limitations under the License."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "package compare"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import ("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"path\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"reflect\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"runtime\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"testing\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"time\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"github.com/gohugoio/hugo/htesting/hqt\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\tqt \"github.com/frankban/quicktest\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"github.com/gohugoio/hugo/common/hugo\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\t\"github.com/spf13/cast\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "type T struct {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\tNonEmptyInterfaceNil      I"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\tNonEmptyInterfaceTypedNil I"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "type I interface {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\tFoo() string"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "func (t *T) Foo() string {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn \"foo\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "var testT \u003d \u0026T{"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\tNonEmptyInterfaceTypedNil: (*T)(nil),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "type tstEqerType1 string"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "type tstEqerType2 string"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "func (t tstEqerType2) Eq(other interface{}) bool {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn cast.ToString(t) \u003d\u003d cast.ToString(other)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "func (t tstEqerType2) String() string {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn string(t)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "func (t tstEqerType1) Eq(other interface{}) bool {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn cast.ToString(t) \u003d\u003d cast.ToString(other)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "func (t tstEqerType1) String() string {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "\treturn string(t)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "type stringType string"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "type tstCompareType int"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "const ("
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "\ttstEq tstCompareType \u003d iota"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\ttstNe"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "\ttstGt"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "\ttstGe"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\ttstLt"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "\ttstLe"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "func tstIsEq(tp tstCompareType) bool { return tp \u003d\u003d tstEq || tp \u003d\u003d tstGe || tp \u003d\u003d tstLe }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "func tstIsGt(tp tstCompareType) bool { return tp \u003d\u003d tstGt || tp \u003d\u003d tstGe }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "func tstIsLt(tp tstCompareType) bool { return tp \u003d\u003d tstLt || tp \u003d\u003d tstLe }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "func TestDefaultFunc(t *testing.T) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "\tt.Parallel()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\tc :\u003d qt.New(t)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "\tthen :\u003d time.Now()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "\tnow :\u003d time.Now()"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "\tns :\u003d New(false)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "\tfor i, test :\u003d range []struct {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tdflt   interface{}"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tgiven  interface{}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "\t\texpect interface{}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "\t}{"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{true, false, false},"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{\"5\", 0, \"5\"},"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{\"test1\", \"set\", \"set\"},"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{\"test2\", \"\", \"test2\"},"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{\"test3\", nil, \"test3\"},"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{[2]int{10, 20}, [2]int{1, 2}, [2]int{1, 2}},"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{[2]int{10, 20}, [0]int{}, [2]int{10, 20}},"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{[2]int{100, 200}, nil, [2]int{100, 200}},"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{[]string{\"one\"}, []string{\"uno\"}, []string{\"uno\"}},"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{[]string{\"two\"}, []string{}, []string{\"two\"}},"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{[]string{\"three\"}, nil, []string{\"three\"}},"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{map[string]int{\"one\": 1}, map[string]int{\"uno\": 1}, map[string]int{\"uno\": 1}},"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{map[string]int{\"one\": 1}, map[string]int{}, map[string]int{\"one\": 1}},"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{map[string]int{\"two\": 2}, nil, map[string]int{\"two\": 2}},"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{10, 1, 1},"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{10, 0, 10},"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{20, nil, 20},"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{float32(10), float32(1), float32(1)},"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{float32(10), 0, float32(10)},"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{float32(20), nil, float32(20)},"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{complex(2, -2), complex(1, -1), complex(1, -1)},"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{complex(2, -2), complex(0, 0), complex(2, -2)},"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{complex(3, -3), nil, complex(3, -3)},"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{struct{ f string }{f: \"one\"}, struct{}{}, struct{}{}},"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{struct{ f string }{f: \"two\"}, nil, struct{ f string }{f: \"two\"}},"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{then, now, now},"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{then, time.Time{}, then},"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "\t} {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "\t\teq :\u003d qt.CmpEquals(hqt.DeepAllowUnexported(test.dflt))"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "\t\terrMsg :\u003d qt.Commentf(\"[%d] %v\", i, test)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tresult, err :\u003d ns.Default(test.dflt, test.given)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tc.Assert(err, qt.IsNil, errMsg)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tc.Assert(result, eq, test.expect, errMsg)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "func TestCompare(t *testing.T) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "\tt.Parallel()"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "\tn :\u003d New(false)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "\ttwoEq :\u003d func(a, b interface{}) bool {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn n.Eq(a, b)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\ttwoGt :\u003d func(a, b interface{}) bool {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\treturn n.Gt(a, b)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\ttwoLt :\u003d func(a, b interface{}) bool {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\treturn n.Lt(a, b)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\ttwoGe :\u003d func(a, b interface{}) bool {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\treturn n.Ge(a, b)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\ttwoLe :\u003d func(a, b interface{}) bool {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\treturn n.Le(a, b)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\ttwoNe :\u003d func(a, b interface{}) bool {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\treturn n.Ne(a, b)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "\tfor _, test :\u003d range []struct {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "\t\ttstCompareType"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tfuncUnderTest func(a, b interface{}) bool"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "\t}{"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t{tstGt, twoGt},"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t{tstLt, twoLt},"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t{tstGe, twoGe},"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t{tstLe, twoLe},"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{tstEq, twoEq},"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t{tstNe, twoNe},"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "\t} {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tdoTestCompare(t, test.tstCompareType, test.funcUnderTest)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "func doTestCompare(t *testing.T, tp tstCompareType, funcUnderTest func(a, b interface{}) bool) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "\tfor i, test :\u003d range []struct {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tleft            interface{}"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tright           interface{}"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "\t\texpectIndicator int"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "\t}{"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{5, 8, -1},"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{8, 5, 1},"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{5, 5, 0},"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{int(5), int64(5), 0},"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{int32(5), int(5), 0},"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{int16(4), int(5), -1},"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{uint(15), uint64(15), 0},"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{-2, 1, -1},"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{2, -5, 1},"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{0.0, 1.23, -1},"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{1.1, 1.1, 0},"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{float32(1.0), float64(1.0), 0},"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{1.23, 0.0, 1},"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{\"5\", \"5\", 0},"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{\"8\", \"5\", 1},"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{\"5\", \"0001\", 1},"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{[]int{100, 99}, []int{1, 2, 3, 4}, -1},"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{cast.ToTime(\"2015-11-20\"), cast.ToTime(\"2015-11-20\"), 0},"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{cast.ToTime(\"2015-11-19\"), cast.ToTime(\"2015-11-20\"), -1},"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{cast.ToTime(\"2015-11-20\"), cast.ToTime(\"2015-11-19\"), 1},"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{\"a\", \"a\", 0},"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{\"a\", \"b\", -1},"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{\"b\", \"a\", 1},"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{tstEqerType1(\"a\"), tstEqerType1(\"a\"), 0},"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{tstEqerType1(\"a\"), tstEqerType2(\"a\"), 0},"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{tstEqerType2(\"a\"), tstEqerType1(\"a\"), 0},"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{tstEqerType2(\"a\"), tstEqerType1(\"b\"), -1},"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{hugo.MustParseVersion(\"0.32.1\").Version(), hugo.MustParseVersion(\"0.32\").Version(), 1},"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{hugo.MustParseVersion(\"0.35\").Version(), hugo.MustParseVersion(\"0.32\").Version(), 1},"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{hugo.MustParseVersion(\"0.36\").Version(), hugo.MustParseVersion(\"0.36\").Version(), 0},"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{hugo.MustParseVersion(\"0.32\").Version(), hugo.MustParseVersion(\"0.36\").Version(), -1},"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{hugo.MustParseVersion(\"0.32\").Version(), \"0.36\", -1},"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{\"0.36\", hugo.MustParseVersion(\"0.32\").Version(), 1},"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{\"0.36\", hugo.MustParseVersion(\"0.36\").Version(), 0},"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{\"0.37\", hugo.MustParseVersion(\"0.37-DEV\").Version(), 1},"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{\"0.37-DEV\", hugo.MustParseVersion(\"0.37\").Version(), -1},"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{\"0.36\", hugo.MustParseVersion(\"0.37-DEV\").Version(), -1},"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{\"0.37-DEV\", hugo.MustParseVersion(\"0.37-DEV\").Version(), 0},"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t// https://github.com/gohugoio/hugo/issues/5905"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{nil, nil, 0},"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{testT.NonEmptyInterfaceNil, nil, 0},"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{testT.NonEmptyInterfaceTypedNil, nil, 0},"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "\t} {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tresult :\u003d funcUnderTest(test.left, test.right)"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tsuccess :\u003d false"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif test.expectIndicator \u003d\u003d 0 {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tif tstIsEq(tp) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tsuccess \u003d result"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tsuccess \u003d !result"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif test.expectIndicator \u003c 0 {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tsuccess \u003d result \u0026\u0026 (tstIsLt(tp) || tp \u003d\u003d tstNe)"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tsuccess \u003d success || (!result \u0026\u0026 !tstIsLt(tp))"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif test.expectIndicator \u003e 0 {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tsuccess \u003d result \u0026\u0026 (tstIsGt(tp) || tp \u003d\u003d tstNe)"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tsuccess \u003d success || (!result \u0026\u0026 (!tstIsGt(tp) || tp !\u003d tstNe))"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif !success {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tt.Fatalf(\"[%d][%s] %v compared to %v: %t\", i, path.Base(runtime.FuncForPC(reflect.ValueOf(funcUnderTest).Pointer()).Name()), test.left, test.right, result)"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "func TestEqualExtend(t *testing.T) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "\tt.Parallel()"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "\tc :\u003d qt.New(t)"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "\tns :\u003d New(false)"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "\tfor _, test :\u003d range []struct {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tfirst  interface{}"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tothers []interface{}"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "\t\texpect bool"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "\t}{"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{1, []interface{}{1, 2}, true},"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{1, []interface{}{2, 1}, true},"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{1, []interface{}{2, 3}, false},"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{tstEqerType1(\"a\"), []interface{}{tstEqerType1(\"a\"), tstEqerType1(\"b\")}, true},"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{tstEqerType1(\"a\"), []interface{}{tstEqerType1(\"b\"), tstEqerType1(\"a\")}, true},"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t{tstEqerType1(\"a\"), []interface{}{tstEqerType1(\"b\"), tstEqerType1(\"c\")}, false},"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "\t} {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tresult :\u003d ns.Eq(test.first, test.others...)"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tc.Assert(result, qt.Equals, test.expect)"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "le0tan"
        },
        "content": "func TestNotEqualExtend(t *testing.T) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tt.Parallel()"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tc :\u003d qt.New(t)"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tns :\u003d New(false)"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tfor _, test :\u003d range []struct {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tfirst  interface{}"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tothers []interface{}"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\texpect bool"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t}{"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t{1, []interface{}{2, 3}, true},"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t{1, []interface{}{2, 1}, false},"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t{1, []interface{}{1, 2}, false},"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t} {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tresult :\u003d ns.Ne(test.first, test.others...)"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tc.Assert(result, qt.Equals, test.expect)"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "le0tan"
        },
        "content": "func TestGreaterEqualExtend(t *testing.T) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tt.Parallel()"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tc :\u003d qt.New(t)"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tns :\u003d New(false)"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tfor _, test :\u003d range []struct {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tfirst  interface{}"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tothers []interface{}"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\texpect bool"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t}{"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t{5, []interface{}{2, 3}, true},"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t{5, []interface{}{5, 5}, true},"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t{3, []interface{}{4, 2}, false},"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t{3, []interface{}{2, 4}, false},"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t} {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tresult :\u003d ns.Ge(test.first, test.others...)"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tc.Assert(result, qt.Equals, test.expect)"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "le0tan"
        },
        "content": "func TestGreaterThanExtend(t *testing.T) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tt.Parallel()"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tc :\u003d qt.New(t)"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tns :\u003d New(false)"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tfor _, test :\u003d range []struct {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tfirst  interface{}"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tothers []interface{}"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\texpect bool"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t}{"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t{5, []interface{}{2, 3}, true},"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t{5, []interface{}{5, 4}, false},"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t{3, []interface{}{4, 2}, false},"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t} {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tresult :\u003d ns.Gt(test.first, test.others...)"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tc.Assert(result, qt.Equals, test.expect)"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "le0tan"
        },
        "content": "func TestLessEqualExtend(t *testing.T) {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tt.Parallel()"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tc :\u003d qt.New(t)"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tns :\u003d New(false)"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tfor _, test :\u003d range []struct {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tfirst  interface{}"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tothers []interface{}"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\texpect bool"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t}{"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t{1, []interface{}{2, 3}, true},"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t{1, []interface{}{1, 2}, true},"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t{2, []interface{}{1, 2}, false},"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t{3, []interface{}{2, 4}, false},"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t} {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tresult :\u003d ns.Le(test.first, test.others...)"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tc.Assert(result, qt.Equals, test.expect)"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "le0tan"
        },
        "content": "func TestLessThanExtend(t *testing.T) {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tt.Parallel()"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tc :\u003d qt.New(t)"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tns :\u003d New(false)"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\tfor _, test :\u003d range []struct {"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tfirst  interface{}"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tothers []interface{}"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\texpect bool"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t}{"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t{1, []interface{}{2, 3}, true},"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t{1, []interface{}{1, 2}, false},"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t{2, []interface{}{1, 2}, false},"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\t{3, []interface{}{2, 4}, false},"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t} {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tresult :\u003d ns.Lt(test.first, test.others...)"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t\tc.Assert(result, qt.Equals, test.expect)"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "le0tan"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "le0tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "func TestCase(t *testing.T) {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "\tc :\u003d qt.New(t)"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "\tn :\u003d New(false)"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "\tc.Assert(n.Eq(\"az\", \"az\"), qt.Equals, true)"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "\tc.Assert(n.Eq(\"az\", stringType(\"az\")), qt.Equals, true)"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "func TestStringType(t *testing.T) {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "\tc :\u003d qt.New(t)"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "\tn :\u003d New(true)"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "\tc.Assert(n.Lt(\"az\", \"Za\"), qt.Equals, true)"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "\tc.Assert(n.Gt(\"ab\", \"Ab\"), qt.Equals, true)"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "func TestTimeUnix(t *testing.T) {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "\tt.Parallel()"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "\tvar sec int64 \u003d 1234567890"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "\ttv :\u003d reflect.ValueOf(time.Unix(sec, 0))"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "\ti :\u003d 1"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "\tres :\u003d toTimeUnix(tv)"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "\tif sec !\u003d res {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tt.Errorf(\"[%d] timeUnix got %v but expected %v\", i, res, sec)"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "\ti++"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "\tfunc(t *testing.T) {"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tdefer func() {"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tif err :\u003d recover(); err \u003d\u003d nil {"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\tt.Errorf(\"[%d] timeUnix didn\u0027t return an expected error\", i)"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}()"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tiv :\u003d reflect.ValueOf(sec)"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "\t\ttoTimeUnix(iv)"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "\t}(t)"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "func TestConditional(t *testing.T) {"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "\tc :\u003d qt.New(t)"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "\tn :\u003d New(false)"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "\ta, b :\u003d \"a\", \"b\""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "\tc.Assert(n.Conditional(true, a, b), qt.Equals, a)"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "\tc.Assert(n.Conditional(false, a, b), qt.Equals, b)"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "le0tan": 128,
      "-": 313
    }
  }
]

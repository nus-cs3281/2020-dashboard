[
  {
    "path": "main.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { app, BrowserWindow, screen, Menu, nativeTheme, MenuItemConstructorOptions, ipcMain } from \u0027electron\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import * as path from \u0027path\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import * as url from \u0027url\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { getAccessToken } from \u0027./oauth\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "const ICON_PATH \u003d path.join(__dirname, \u0027dist/favicon.512x512.png\u0027);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "let win: BrowserWindow \u003d null;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "const args \u003d process.argv.slice(1),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  serve \u003d args.some(val \u003d\u003e val \u003d\u003d\u003d \u0027--serve\u0027);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "const isDevMode \u003d !!serve;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "ipcMain.on(\u0027synchronous-message\u0027, (event, arg) \u003d\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  event.returnValue \u003d process.platform \u003d\u003d\u003d \u0027win32\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    ? isDevMode"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        ? app.getAppPath()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        : process.env.PORTABLE_EXECUTABLE_FILE"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    : app.getAppPath();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " * Will start the OAuth Web Flow and obtain the access token from Github."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "ipcMain.on(\u0027github-oauth\u0027, (event, clearAuthState, repoPermissionLevel) \u003d\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  getAccessToken(win, clearAuthState, repoPermissionLevel).then((data) \u003d\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    event.sender.send(\u0027github-oauth-reply\u0027, {token: data.token});"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  }).catch(error \u003d\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    event.sender.send(\u0027github-oauth-reply\u0027, {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      error: error.message,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      isWindowClosed: error.message \u003d\u003d\u003d \u0027WINDOW_CLOSED\u0027});"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "function createWindow() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  const size \u003d screen.getPrimaryDisplay().workAreaSize;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  const windowOptions \u003d {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    x: 0,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    y: 0,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    width: size.width,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    height: size.height,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    webPreferences: {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      nodeIntegration: true,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      allowRunningInsecureContent: !isDevMode,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  };"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  if (process.platform \u003d\u003d\u003d \u0027linux\u0027) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    // app icon needs to be set manually on Linux platforms"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    windowOptions[\u0027icon\u0027] \u003d ICON_PATH;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  // Create the browser window."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  win \u003d new BrowserWindow(windowOptions);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  nativeTheme.themeSource \u003d \u0027light\u0027;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  win.setTitle(require(\u0027./package.json\u0027).name + \u0027 \u0027 + require(\u0027./package.json\u0027).version);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  if (serve) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    require(\u0027electron-reload\u0027)(__dirname, {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "      electron: require(`${__dirname}/node_modules/electron`)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    win.loadURL(\u0027http://localhost:4200\u0027);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    win.loadURL(url.format({"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      pathname: path.join(__dirname, \u0027dist/index.html\u0027),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      protocol: \u0027file:\u0027,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      slashes: true"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  if (isDevMode) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    win.webContents.openDevTools();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  // Emitted when the window is closed."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  win.on(\u0027closed\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    // Dereference the window object, usually you would store window"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    // in an array if your app supports multi windows, this is the time"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    // when you should delete the corresponding element."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    win \u003d null;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "// Edited version of a template menu-bar provided by the electron API,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "// refer to https://electronjs.org/docs/api/menu for more information."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "const mainMenuTemplate: Electron.MenuItemConstructorOptions[] \u003d ["
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    label: \u0027File\u0027,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    submenu: ["
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        label: \u0027Quit CATcher\u0027, accelerator: \u0027CmdOrCtrl+Q\u0027, click() { app.quit(); }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    label: \u0027Edit\u0027,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    submenu: ["
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "      { role: \u0027undo\u0027 },"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "      { role: \u0027redo\u0027 },"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "      { type: \u0027separator\u0027 },"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "      { role: \u0027selectAll\u0027 },"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "      { role: \u0027cut\u0027 },"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      { role: \u0027copy\u0027 },"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "      { role: \u0027paste\u0027 },"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      { role: \u0027delete\u0027 },"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    label: \u0027View\u0027,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    submenu: ["
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "      { role: \u0027resetZoom\u0027 },"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "      { role: \u0027zoomIn\u0027 },"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      { role: \u0027zoomOut\u0027 },"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "      { type: \u0027separator\u0027 },"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "      { role: \u0027togglefullscreen\u0027 }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "  // ,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  // {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "  //   role: \u0027help\u0027,"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  //   submenu: ["
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "  //     {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "  //       label: \u0027User Guide\u0027,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  //       click () { require(\u0027electron\u0027).shell.openExternal(\u0027https://catcher-org.github.io/\u0027); }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "  //     }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  //   ]"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "  // }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "];"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "if (isDevMode) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "  let viewSubMenu: MenuItemConstructorOptions[];"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "  viewSubMenu \u003d mainMenuTemplate[2].submenu as MenuItemConstructorOptions[];"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "  viewSubMenu.push("
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    { type: \u0027separator\u0027 },"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    { role: \u0027toggleDevTools\u0027}"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "  );"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "  // This method will be called when Electron has finished"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "  // initialization and is ready to create browser windows."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "  // Some APIs can only be used after this event occurs."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "  app.on(\u0027ready\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    // Build and Attach Menu-bar template to application."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    const mainMenu \u003d Menu.buildFromTemplate(mainMenuTemplate);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    Menu.setApplicationMenu(mainMenu);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    createWindow();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "  // Quit when all windows are closed."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "  app.on(\u0027window-all-closed\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    // On OS X it is common for applications and their menu bar"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    // to stay active until the user quits explicitly with Cmd + Q"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    if (process.platform !\u003d\u003d \u0027darwin\u0027) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "      app.quit();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "  app.on(\u0027activate\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    // On OS X it\u0027s common to re-create a window in the app when the"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    // dock icon is clicked and there are no other windows open."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    if (win \u003d\u003d\u003d null) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "      createWindow();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "} catch (e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "  // Catch Error"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "  // throw e;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 11,
      "-": 166
    }
  },
  {
    "path": "oauth.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "le0tan"
        },
        "content": "import { BrowserWindow, shell } from \u0027electron\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "const nodeUrl \u003d require(\u0027url\u0027);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "const fetch \u003d require(\u0027node-fetch\u0027);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "const CLIENT_ID \u003d \u00276750652c0c9001314434\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "const BASE_URL \u003d \u0027https://github.com\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "const ACCESS_TOKEN_URL \u003d \u0027https://catcher-proxy.herokuapp.com/authenticate\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "const CALLBACK_URL \u003d \u0027http://localhost:4200\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "let authWindow;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Will retrieve the access token from a proxy server which acts as a intermediary to retrieve the tokens from Github."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * @param window - The main window of CATcher."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * @param toClearAuthState - A boolean to define whether to clear any auth cookies so prevent auto login."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * @param repoPermissionLevel - The level of permission required to be granted by the user to use CATcher."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "export function getAccessToken(window: BrowserWindow, toClearAuthState: boolean, repoPermissionLevel: string): Promise\u003cany\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  return getAuthorizationCode(window, toClearAuthState, repoPermissionLevel).then((code) \u003d\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    const accessTokenUrl \u003d `${ACCESS_TOKEN_URL}/${code}`;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    return fetch(accessTokenUrl).then(res \u003d\u003e res.json()).then(data \u003d\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      if (data.error) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        throw(new Error(data.error));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      return data;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  }).catch(error \u003d\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    throw(error);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " * Get the authorization code from Github after success login."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " * @param parentWindow - The main window of CATcher"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " * @param toClearAuthState - A boolean to define whether to clear any auth cookies so prevent auto login."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": " * @param repoPermissionLevel - The level of permission required to be granted by the user to use CATcher."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "function getAuthorizationCode(parentWindow: BrowserWindow, toClearAuthState: boolean, repoPermissionLevel: string) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  const oauthUrl \u003d encodeURI(`${BASE_URL}/login/oauth/authorize?client_id\u003d${CLIENT_ID}\u0026scope\u003d${repoPermissionLevel},read:user`);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  return new Promise(function (resolve, reject) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    const windowParams \u003d {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      autoHideMenuBar: true,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "le0tan"
        },
        "content": "      alwaysOnTop: false,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      fullscreenable: false,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      parent: parentWindow,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      webPreferences: {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        nodeIntegration: true"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    authWindow \u003d new BrowserWindow(windowParams);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    if (toClearAuthState) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      parentWindow.webContents.session.clearStorageData();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      authWindow.webContents.session.clearStorageData();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    authWindow.loadURL(oauthUrl);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    authWindow.show();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    authWindow.on(\u0027closed\u0027, (event) \u003d\u003e {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      reject(new Error(\u0027WINDOW_CLOSED\u0027));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    authWindow.webContents.on(\u0027will-navigate\u0027, (event, newUrl) \u003d\u003e {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      if (newUrl.startsWith(CALLBACK_URL)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        onCallback(newUrl);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "le0tan"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        event.preventDefault();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "le0tan"
        },
        "content": "        shell.openExternal(newUrl).then(() \u003d\u003e console.log(\u0027External link is clicked on auth window, opening system browser...\u0027));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    authWindow.webContents.on(\u0027new-window\u0027, (event, url, frameName, disposition, options) \u003d\u003e {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "le0tan"
        },
        "content": "      event.preventDefault();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "le0tan"
        },
        "content": "      shell.openExternal(url).then(() \u003d\u003e console.log(\u0027External link is clicked on auth window, opening system browser...\u0027));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "le0tan"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    authWindow.webContents.on(\u0027will-redirect\u0027, (event, newUrl) \u003d\u003e {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      if (newUrl.startsWith(CALLBACK_URL)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        onCallback(newUrl);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    function onCallback(callbackUrl: string) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "      const url_parts \u003d nodeUrl.parse(callbackUrl, true);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "      const query \u003d url_parts.query;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      const code \u003d query.code;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "      const error \u003d query.error;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "      const state \u003d query.state;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "      if (error !\u003d\u003d undefined \u0026\u0026 state !\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        reject(error);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (code) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        resolve(code);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "      setImmediate(function () {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        authWindow.close();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        authWindow.on(\u0027closed\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "          authWindow \u003d null;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "le0tan": 11,
      "-": 94
    }
  },
  {
    "path": "src/app/auth/profiles/profiles.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, EventEmitter, OnInit, Output } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { MatDialog } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { JsonParseErrorDialogComponent } from \u0027./json-parse-error-dialog/json-parse-error-dialog.component\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "const { ipcRenderer } \u003d require(\u0027electron\u0027);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  trigger,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  state,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  style,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  animate,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  transition"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027@angular/animations\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Indicates all the elements that make up a Profile."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "export interface Profile {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  profileName: string;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  username: string;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  password: string;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  encodedText: string;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-profiles\u0027,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./profiles.component.html\u0027,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./profiles.component.css\u0027],"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  animations: ["
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    // animation triggers go here"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    trigger(\u0027triggerFileInput\u0027, ["
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      state(\u0027normal\u0027, style({})),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      state(\u0027pressed\u0027, style({"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        color: \u0027orange\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      })),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      transition(\u0027normal \u003d\u003e pressed\u0027, ["
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        animate(\u00270.25s ease\u0027)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      ]),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      transition(\u0027pressed \u003d\u003e normal\u0027, ["
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        animate(\u00270.25s ease\u0027)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      ])"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    ])"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "export class ProfilesComponent implements OnInit {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  private readonly ANIMATION_DURATION: number \u003d 250;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  profiles: Profile[] \u003d undefined; // List of profiles taken from profiles.json"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  blankProfile: Profile \u003d {profileName: \u0027\u0027, password: \u0027\u0027, username: \u0027\u0027, encodedText: \u0027\u0027}; // A blank profile to reset values"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  animationActivated \u003d false; // Assists color change animations."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  // To be set to undefined array if not used."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly defaultProfiles: Profile[] \u003d ["
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cProfile\u003e{"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      profileName: \u0027CS2103/T Alpha Test\u0027,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      encodedText: \u0027nus-cs2103-AY1920S2/alpha\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cProfile\u003e{"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      profileName: \u0027CS2103/T PE Dry run\u0027,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      encodedText: \u0027nus-cs2103-AY1920S2/PED\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cProfile\u003e{"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      profileName: \u0027CS2103/T PE\u0027,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "      encodedText: \u0027nus-cs2103-AY1920S2/PE\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cProfile\u003e{"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      profileName: \u0027CS2113/T Alpha Test\u0027,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      encodedText: \u0027nus-cs2113-AY1920S2/alpha\u0027"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cProfile\u003e{"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      profileName: \u0027CS2113/T PE Dry run\u0027,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      encodedText: \u0027nus-cs2113-AY1920S2/PED\u0027"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cProfile\u003e{"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      profileName: \u0027CS2113/T PE\u0027,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      encodedText: \u0027nus-cs2113-AY1920S2/PE\u0027"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  ];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  private readonly fs \u003d require(\u0027fs\u0027);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  private readonly APPLICATION_AND_SUBDIRECTORIES: RegExp \u003d /[\\/\\\\]+[^\\/\\\\]+\\.(exe|app|AppImage|asar).*/g;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  private readonly PROFILES_FILE_NAME \u003d \u0027profiles.json\u0027;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  private filePath: string;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  selectedProfile: Profile \u003d this.blankProfile;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output() selectedProfileEmitter: EventEmitter\u003cProfile\u003e \u003d new EventEmitter\u003cProfile\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output() profileDataEmitter: EventEmitter\u003c{}\u003e \u003d new EventEmitter\u003c{}\u003e();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  profilesData \u003d {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    isDirectoryMessageVisible: false,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    fileName: null,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    fileDirectory: null"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(public errorDialog: MatDialog) { }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    const path \u003d require(\u0027path\u0027);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    const temp \u003d ipcRenderer.sendSync(\u0027synchronous-message\u0027, \u0027getDirectory\u0027);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    this.filePath \u003d path.join("
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        temp.replace(this.APPLICATION_AND_SUBDIRECTORIES, \u0027\u0027),"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        this.PROFILES_FILE_NAME);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    this.readProfiles();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "   * Activates the button selection animation and opens the file selector."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param fileInput - OS default file selector."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  fileSelectorInitiation(fileInput: HTMLInputElement): void {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    this.animationActivated \u003d true;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    setTimeout(() \u003d\u003e {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "      this.animationActivated \u003d false;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "      fileInput.click();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }, this.ANIMATION_DURATION);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "   * Reads the user selected file"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param fileInput - OS default file selector."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "  fileSelected(fileInput: HTMLInputElement): void {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    this.filePath \u003d (fileInput.files[0].path);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    fileInput.value \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    this.readProfiles();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "   * Processes all available Profiles information."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "  readProfiles(): void {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    const isFileExists: boolean \u003d this.userProfileFileExists(this.filePath);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    // Informing Parent Component (Auth) of file selection"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    this.profilesData.fileName \u003d this.PROFILES_FILE_NAME;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    this.profilesData.fileDirectory \u003d this.filePath.split(this.PROFILES_FILE_NAME)[0];"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    this.profilesData.isDirectoryMessageVisible \u003d !isFileExists;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    this.profileDataEmitter.emit(this.profilesData);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    if (isFileExists) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "      try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        this.profiles \u003d JSON.parse(this.fs.readFileSync(this.filePath))[\u0027profiles\u0027];"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "      } catch (e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        // Do nothing if there is a parsing error because this.profiles will be set to undefined on error."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "      // Validity Check if custom profile.json file has values in it."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.profiles !\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "          this.assertProfilesValidity(this.profiles);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "          console.log(e);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "          setTimeout(() \u003d\u003e {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            this.profiles \u003d undefined;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            this.openErrorDialog();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    // Several Layers of True False Statements to decide which values to assign to this.profiles."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    this.profiles \u003d this.profiles \u003d\u003d\u003d undefined"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "      ? this.defaultProfiles \u003d\u003d\u003d undefined ? undefined : this.defaultProfiles"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "      : this.defaultProfiles \u003d\u003d\u003d undefined ? this.profiles : this.profiles.concat(this.defaultProfiles);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "   * Makes Error dialog visible to the user."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "  openErrorDialog(): void {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    this.errorDialog.open(JsonParseErrorDialogComponent);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "   * Verifies that every profile is correctly defined in the array of profiles."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param profiles - Array of profiles sourced from profiles.json"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "  assertProfilesValidity(profiles: Profile[]): void {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    if (profiles.filter(profile \u003d\u003e (profile.profileName \u003d\u003d\u003d undefined || profile.encodedText \u003d\u003d\u003d undefined)).length !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new Error();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns true if the file indicated by the filePath exists."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param filePath - Path of file to check."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "  userProfileFileExists(filePath: string): boolean {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.fs.existsSync(filePath);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sends the selected profile information to listening component."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param profile - Profile selected by user."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "  selectProfile(profile: Profile): void {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    this.selectedProfileEmitter.emit(profile);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 1,
      "-": 197
    }
  },
  {
    "path": "src/app/core/models/issue.model.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Team } from \u0027./team.model\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { TesterResponse } from \u0027./tester-response.model\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueComment } from \u0027./comment.model\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueDispute } from \u0027./issue-dispute.model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { GithubIssue } from \u0027./github/github-issue.model\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { GithubLabel } from \u0027./github/github-label.model\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { GithubComment } from \u0027./github/github-comment.model\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { TeamResponseTemplate } from \u0027./templates/team-response-template.model\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { TesterResponseTemplate } from \u0027./templates/tester-response-template.model\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { TutorModerationIssueTemplate } from \u0027./templates/tutor-moderation-issue-template.model\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { TutorModerationTodoTemplate } from \u0027./templates/tutor-moderation-todo-template.model\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { Phase } from \u0027../services/phase.service\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import * as moment from \u0027moment\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "export class Issue {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  /** Basic Fields */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly globalId: string;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly id: number;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly created_at: string;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly githubIssue: GithubIssue;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  githubComments: GithubComment[];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  title: string;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  description: string;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  /** Fields derived from Labels */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  severity: string;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  type: string;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  responseTag?: string;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  duplicated?: boolean;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  status?: string;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  pending?: string;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  unsure?: boolean;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  teamAssigned?: Team;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  /** Depending on the phase, assignees attribute can be derived from Github\u0027s assignee feature OR from the Github\u0027s issue description */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  assignees?: string[];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  /** Fields derived from parsing of Github\u0027s issue description */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  duplicateOf?: number;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  teamResponse?: string;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  testerResponses?: TesterResponse[];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  issueComment?: IssueComment; // Issue comment is used for Tutor Response and Tester Response"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  issueDisputes?: IssueDispute[];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "   * Processes and cleans a raw issue description obtained from user input."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "   */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  static updateDescription(description: string): string {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    const defaultString \u003d \u0027No details provided by bug reporter.\u0027;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    return Issue.orDefaultString(description, defaultString);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "   * Processes and cleans a raw team response obtained from user input."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "   */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  static updateTeamResponse(teamResponse: string): string {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    const defaultString \u003d \u0027No details provided by team.\u0027;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    return Issue.orDefaultString(teamResponse, defaultString);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "   * Given two strings, returns the first if it is not an empty string or a false value such as null/undefined."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "   * Returns the second string if the first is an empty string."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "   */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  private static orDefaultString(stringA: string, def: string): string {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!stringA) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      return def;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    return stringA.length !\u003d\u003d 0 ? stringA : def;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  protected constructor(githubIssue: GithubIssue) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Basic Fields */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    this.globalId \u003d githubIssue.id;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    this.id \u003d +githubIssue.number;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    this.created_at \u003d moment(githubIssue.created_at).format(\u0027lll\u0027);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    this.title \u003d githubIssue.title;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    this.description \u003d Issue.updateDescription(githubIssue.body);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    this.githubIssue \u003d githubIssue;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Fields derived from Labels */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    this.severity \u003d githubIssue.findLabel(GithubLabel.LABELS.severity);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    this.type \u003d githubIssue.findLabel(GithubLabel.LABELS.type);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    this.responseTag \u003d githubIssue.findLabel(GithubLabel.LABELS.response);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    this.duplicated \u003d !!githubIssue.findLabel(GithubLabel.LABELS.duplicated, false);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    this.status \u003d githubIssue.findLabel(GithubLabel.LABELS.status);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    this.pending \u003d githubIssue.findLabel(GithubLabel.LABELS.pending);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  public static createPhaseBugReportingIssue(githubIssue: GithubIssue): Issue {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    return new Issue(githubIssue);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  public static createPhaseTeamResponseIssue(githubIssue: GithubIssue, teamData: Team): Issue {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    const issue \u003d new Issue(githubIssue);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    const template \u003d new TeamResponseTemplate(githubIssue.comments);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    issue.githubComments \u003d githubIssue.comments;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    issue.teamAssigned \u003d teamData;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    issue.issueComment \u003d template.comment;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    issue.teamResponse \u003d template.teamResponse !\u003d\u003d undefined ? Issue.updateTeamResponse(template.teamResponse.content) : undefined;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    issue.duplicateOf \u003d template.duplicateOf !\u003d\u003d undefined ? template.duplicateOf.issueNumber : undefined;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    issue.duplicated \u003d issue.duplicateOf !\u003d\u003d undefined \u0026\u0026 issue.duplicateOf !\u003d\u003d null;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    issue.assignees \u003d githubIssue.assignees.map(assignee \u003d\u003e assignee.login);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    return issue;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "  public static createPhaseTesterResponseIssue(githubIssue: GithubIssue): Issue {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    const issue \u003d new Issue(githubIssue);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    const template \u003d new TesterResponseTemplate(githubIssue.comments);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    issue.githubComments \u003d githubIssue.comments;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    issue.issueComment \u003d template.comment;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    issue.teamResponse \u003d template.teamResponse !\u003d\u003d undefined ? Issue.updateTeamResponse(template.teamResponse.content) : undefined;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    issue.testerResponses \u003d template.testerResponse !\u003d\u003d undefined ? template.testerResponse.testerResponses : undefined;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    return issue;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  public static createPhaseModerationIssue(githubIssue: GithubIssue, teamData: Team): Issue {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    const issue \u003d new Issue(githubIssue);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    const issueTemplate \u003d new TutorModerationIssueTemplate(githubIssue);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    const todoTemplate \u003d new TutorModerationTodoTemplate(githubIssue.comments);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    issue.githubComments \u003d githubIssue.comments;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    issue.teamAssigned \u003d teamData;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    issue.description \u003d issueTemplate.description.content;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    issue.teamResponse \u003d issueTemplate.teamResponse !\u003d\u003d undefined"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "      ? Issue.updateTeamResponse(issueTemplate.teamResponse.content)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "      : undefined;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    issue.issueDisputes \u003d issueTemplate.dispute.disputes;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    if (todoTemplate.moderation \u0026\u0026 todoTemplate.comment) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "      issue.issueDisputes \u003d todoTemplate.moderation.disputesToResolve.map((dispute, i) \u003d\u003e {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        dispute.description \u003d issueTemplate.dispute.disputes[i].description;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        return dispute;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "      issue.issueComment \u003d todoTemplate.comment;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    return issue;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creates a new copy of an exact same issue."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "   * This would come useful in the event when you want to update the issue but not the actual"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "   * state of the application."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "  clone(phase: Phase): Issue {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (phase) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "      case Phase.phaseBugReporting:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        return Issue.createPhaseBugReportingIssue(this.githubIssue);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "      case Phase.phaseTeamResponse:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        return Issue.createPhaseTeamResponseIssue(this.githubIssue, this.teamAssigned);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "      case Phase.phaseTesterResponse:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        return Issue.createPhaseTesterResponseIssue(this.githubIssue);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "      case Phase.phaseModeration:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        return Issue.createPhaseModerationIssue(this.githubIssue, this.teamAssigned);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        return Issue.createPhaseBugReportingIssue(this.githubIssue);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "   * Depending on the phase of the peer testing, each phase will have a response associated to them."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "   * This function will allow the current instance of issue to retain the state of response of the given `issue`."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param phase - The phase in which you want to retain your responses."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param issue - The issue which you want your current instance to retain from."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "  retainResponses(phase: Phase, issue: Issue) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueComment \u003d issue.issueComment;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    this.githubComments \u003d issue.githubComments;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (phase) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "      case Phase.phaseBugReporting:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d issue.description;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "      case Phase.phaseTeamResponse:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        this.teamResponse \u003d issue.teamResponse;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "      case Phase.phaseTesterResponse:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        this.testerResponses \u003d issue.testerResponses;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        this.teamResponse \u003d issue.teamResponse;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "      case Phase.phaseModeration:"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        this.issueDisputes \u003d issue.issueDisputes;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "   * Updates the tester\u0027s responses and team response based on the given githubComment."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param githubComment - A version of githubComment to update the issue with."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "  updateTesterResponse(githubComment: GithubComment): void {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    const template \u003d new TesterResponseTemplate([githubComment]);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueComment \u003d template.comment;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    this.teamResponse \u003d template.teamResponse !\u003d\u003d undefined ? template.teamResponse.content : undefined;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    this.testerResponses \u003d template.testerResponse !\u003d\u003d undefined ? template.testerResponse.testerResponses : undefined;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "   * Updates the tutor\u0027s resolution of the disputes with a new version of githubComment."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param githubComment - A version of githubComment to update the dispute with."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "  updateDispute(githubComment: GithubComment): void {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    const todoTemplate \u003d new TutorModerationTodoTemplate([githubComment]);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueComment \u003d todoTemplate.comment;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueDisputes \u003d todoTemplate.moderation.disputesToResolve.map((dispute, i) \u003d\u003e {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "      dispute.description \u003d this.issueDisputes[i].description;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "      return dispute;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "  // Template url: https://github.com/CATcher-org/templates#dev-response-phase"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "  createGithubTeamResponse(): string {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    return `# Team\\\u0027s Response\\n${this.teamResponse}\\n ` +"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "      `## Duplicate status (if any):\\n${this.duplicateOf ? `Duplicate of #${this.duplicateOf}` : `--`}`;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "  // Template url: https://github.com/CATcher-org/templates#tutor-moderation"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "  createGithubTutorResponse(): string {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    let tutorResponseString \u003d \u0027# Tutor Moderation\\n\\n\u0027;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const issueDispute of this.issueDisputes) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "      tutorResponseString +\u003d issueDispute.toTutorResponseString();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    return tutorResponseString;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "  // Template url: https://github.com/CATcher-org/templates#teams-response-1"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "  createGithubTesterResponse(): string {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    return `# Team\\\u0027s Response\\n${this.teamResponse}\\n ` +"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "      `# Items for the Tester to Verify\\n${this.getTesterResponsesString(this.testerResponses)}`;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "geshuming"
        },
        "content": "   * Gets the number of unresolved disputes in an Issue."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "geshuming"
        },
        "content": "   */"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  numOfUnresolvedDisputes(): number {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    if (!this.issueDisputes) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      return 0;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    return this.issueDisputes.reduce((prev, current) \u003d\u003e prev + Number(!current.isDone()), 0);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "  private getTesterResponsesString(testerResponses: TesterResponse[]): string {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "    let testerResponsesString \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const testerResponse of testerResponses) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "      testerResponsesString +\u003d testerResponse.toString();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "    return testerResponsesString;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "export interface Issues {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "  [id: number]: Issue;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export const SEVERITY_ORDER \u003d { \u0027-\u0027: 0 , VeryLow: 1, Low: 2, Medium: 3, High: 4 };"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export const ISSUE_TYPE_ORDER \u003d { \u0027-\u0027: 0 , DocumentationBug: 1, FeatureFlaw: 2, FunctionalityBug: 3  };"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "export enum STATUS {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "  Incomplete \u003d \u0027Incomplete\u0027,"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "  Done \u003d \u0027Done\u0027,"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "export const IssuesFilter \u003d {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "  phaseBugReporting: {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "    Student: \u0027FILTER_BY_CREATOR\u0027,"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "    Tutor: \u0027NO_FILTER\u0027,"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "    Admin: \u0027NO_FILTER\u0027,"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "  phaseTeamResponse: {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "    Student: \u0027FILTER_BY_TEAM\u0027,"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "    Tutor: \u0027FILTER_BY_TEAM_ASSIGNED\u0027,"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    Admin: \u0027NO_FILTER\u0027,"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "  phaseTesterResponse: {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    Student: \u0027NO_FILTER\u0027,"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "    Tutor: \u0027NO_ACCESS\u0027,"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    Admin: \u0027NO_FILTER\u0027,"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "  phaseModeration: {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "    Student: \u0027NO_ACCESS\u0027,"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "    Tutor: \u0027FILTER_BY_TEAM_ASSIGNED\u0027,"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "    Admin: \u0027NO_FILTER\u0027,"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      }
    ],
    "authorContributionMap": {
      "geshuming": 11,
      "anubh-v": 21,
      "-": 259
    }
  },
  {
    "path": "src/app/core/models/templates/tutor-moderation-issue-template.model.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Header, Template } from \u0027./template.model\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueDisputeSection } from \u0027./sections/issue-dispute-section.model\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { Section } from \u0027./sections/section.model\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { GithubIssue } from \u0027../github/github-issue.model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "const tutorModerationIssueDescriptionHeaders \u003d {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  description: new Header(\u0027Issue Description\u0027, 1),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  teamResponse: new Header(\u0027Team\\\u0027s Response\u0027, 1),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  disputes: new Header(\u0027Disputes\u0027, 1)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "export class TutorModerationIssueTemplate extends Template {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  description: Section;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  teamResponse: Section;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  dispute: IssueDisputeSection;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(githubIssue: GithubIssue) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    super(Object.values(tutorModerationIssueDescriptionHeaders));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    const issueContent \u003d githubIssue.body;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    this.description \u003d this.parseDescription(issueContent);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    this.teamResponse \u003d this.parseTeamResponse(issueContent);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    this.dispute \u003d this.parseDisputes(issueContent);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  parseDescription(toParse: string): Section {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    return new Section(this.getSectionalDependency(tutorModerationIssueDescriptionHeaders.description), toParse);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  parseTeamResponse(toParse: string): Section {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    return new Section(this.getSectionalDependency(tutorModerationIssueDescriptionHeaders.teamResponse), toParse);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  parseDisputes(toParse: string): IssueDisputeSection {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    return new IssueDisputeSection(this.getSectionalDependency(tutorModerationIssueDescriptionHeaders.disputes), toParse);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 1,
      "-": 37
    }
  },
  {
    "path": "src/app/core/services/data.service.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { GithubService } from \u0027./github.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { catchError, map } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { DataFile } from \u0027../models/data-file.model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { Team } from \u0027../models/team.model\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { User, UserRole } from \u0027../models/user.model\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { Observable, of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "const parse \u003d require(\u0027csv-parse/lib/sync\u0027);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "export class DataService {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  public dataFile: DataFile;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private githubService: GithubService) {}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": "   * Retrieves the csv file from the settings repo and constructs"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "geshuming"
        },
        "content": "   * the required data file for the app."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geshuming"
        },
        "content": "   */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  getDataFile(): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.githubService.fetchDataFile().pipe("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      map((allCsvDataWrapper: {}) \u003d\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.constructData(allCsvDataWrapper);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      }),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      map((jsonData: {}) \u003d\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.dataFile \u003d \u003cDataFile\u003e{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "          teamStructure: this.extractTeamStructure(jsonData)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        return jsonData;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "   * Merges all parsed Csv Data into a single readable JSON"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   * format."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param allCsvDataWrapper - Object containing strings of csv data."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   * @return jsonData - Object representing merged data file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  private constructData(allCsvDataWrapper: {}): {} {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    const jsonData: {} \u003d {};"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    const allCsvData: string \u003d allCsvDataWrapper[\u0027data\u0027];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    jsonData[\u0027roles\u0027] \u003d this.parseRolesData(allCsvData);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    jsonData[\u0027team-structure\u0027] \u003d this.parseTeamStructureData(allCsvData);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    jsonData[\u0027students-allocation\u0027] \u003d this.parseStudentAllocation(allCsvData);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    jsonData[\u0027tutors-allocation\u0027] \u003d this.parseTutorAllocation(allCsvData);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    jsonData[\u0027admins-allocation\u0027] \u003d this.parseAdminAllocation(allCsvData);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    return jsonData;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "   * Parses the input string containing admin allocation information"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "   * into application readable Object."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param csvInput - string containing csv data."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   * @return admins - object that represents parsed csv data."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  private parseAdminAllocation(csvInput: string): {} {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    // CSV Headers"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    const NAME \u003d \u0027name\u0027;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    const ROLE \u003d \u0027role\u0027;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    const admins \u003d {};"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    let parsedCSV: [{}];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    parsedCSV \u003d this.csvParser(csvInput);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    // Formats the parsed information for easier app reading"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    parsedCSV.forEach(entry \u003d\u003e {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      if (entry[ROLE] \u003d\u003d\u003d UserRole.Admin.toLowerCase()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        admins[entry[NAME].toLowerCase()] \u003d {};"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    return admins;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "   * Parses the input string containing tutor allocation information"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "   * into application readable Object."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param csvInput - string containing csv data."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "   * @return admins - object that represents parsed csv data."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  private parseTutorAllocation(csvInput: string): {} {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    // CSV Headers"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    const NAME \u003d \u0027name\u0027;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    const TEAM \u003d \u0027team\u0027;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    const ROLE \u003d \u0027role\u0027;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    const tutors \u003d {};"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    let parsedCSV: [{}];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    parsedCSV \u003d this.csvParser(csvInput);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    // Formats the parsed information for easier app reading"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    parsedCSV.forEach(entry \u003d\u003e {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!(entry[ROLE] \u003d\u003d\u003d UserRole.Tutor.toLowerCase())) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      const tutor \u003d entry[NAME].toLowerCase() in tutors ? tutors[entry[NAME].toLowerCase()] : {};"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "      tutor[entry[TEAM]] \u003d \u0027true\u0027;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "      tutors[entry[NAME].toLowerCase()] \u003d tutor;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    return tutors;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "   * Parses the input string containing student allocation information"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "   * into application readable Object."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param csvInput - string containing csv data."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "   * @return admins - object that represents parsed csv data."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  private parseStudentAllocation(csvInput: string): {} {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    // CSV Headers"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    const TEAM \u003d \u0027team\u0027;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    const NAME \u003d \u0027name\u0027;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    const ROLE \u003d \u0027role\u0027;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    // Team Notation"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    const TEAM_ID \u003d \u0027teamId\u0027;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    const students \u003d {};"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    let parsedCSV: [{}];"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    parsedCSV \u003d this.csvParser(csvInput);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    // Formats the parsed information for easier app reading"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    parsedCSV.forEach(entry \u003d\u003e {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!(entry[ROLE] \u003d\u003d\u003d UserRole.Student.toLowerCase())) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "      const newStudent \u003d {};"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "      newStudent[TEAM_ID] \u003d entry[TEAM];"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "      students[entry[NAME].toLowerCase()] \u003d newStudent;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    return students;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "   * Parses the input string containing team structure information"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "   * into application readable Object."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param csvInput - string containing csv data."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "   * @return admins - object that represents parsed csv data."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  private parseTeamStructureData(csvInput: string): {} {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    // CSV Headers"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    const TEAM \u003d \u0027team\u0027;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    const NAME \u003d \u0027name\u0027;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    const ROLE \u003d \u0027role\u0027;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    const teams \u003d {};"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    let parsedCSV: [{}];"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    parsedCSV \u003d this.csvParser(csvInput);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    // Formats the parsed information for easier app reading"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    parsedCSV.forEach(entry \u003d\u003e {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!(entry[ROLE] \u003d\u003d\u003d UserRole.Student.toLowerCase())) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "      const team \u003d entry[TEAM] in teams ? teams[entry[TEAM]] : {};"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "      team[entry[NAME].toLowerCase()] \u003d \u0027true\u0027;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "      teams[entry[TEAM]] \u003d team;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    return teams;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "   * Parses the input string containing roles information"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "   * into application readable Object."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param csvInput - string containing csv data."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "   * @return admins - object that represents parsed csv data."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  private parseRolesData(csvInput: string): {} {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    // CSV Headers"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    const ROLE \u003d \u0027role\u0027;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    const NAME \u003d \u0027name\u0027;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    const roles \u003d {};"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    const students \u003d {};"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    const tutors \u003d {};"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    const admins \u003d {};"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    let parsedCSV: [{}];"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    parsedCSV \u003d this.csvParser(csvInput);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    // Formats the parsed information for easier app reading"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    parsedCSV.forEach(entry \u003d\u003e {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "      if (entry[ROLE] \u003d\u003d\u003d UserRole.Student.toLowerCase()) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        students[entry[NAME].toLowerCase()] \u003d \u0027true\u0027;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (entry[ROLE] \u003d\u003d\u003d UserRole.Tutor.toLowerCase()) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        tutors[entry[NAME].toLowerCase()] \u003d \u0027true\u0027;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (entry[ROLE] \u003d\u003d\u003d UserRole.Admin.toLowerCase()) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        admins[entry[NAME].toLowerCase()] \u003d \u0027true\u0027;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    roles[\u0027students\u0027] \u003d students;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    roles[\u0027tutors\u0027] \u003d tutors;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    roles[\u0027admins\u0027] \u003d admins;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    return roles;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "   * Converts the input csv information to an array of"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "   * objects syncrhonously. Each object\u0027s values are"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "   * marked by the respective csv table headers."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param csvText - csv information."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "   * @return - Subjects that tracks the parsed data."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  private csvParser(csvText: string): [{}] {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    return parse(csvText, {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      columns: true,"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      skip_empty_lines: true,"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      trim: true"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "  getTeam(teamId: string): Team {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.dataFile.teamStructure.get(teamId);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "  getTeams(): string[] {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    return Array.from(this.dataFile.teamStructure.keys());"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "  // returns a mapping from teamId to their respective team structure."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "  private extractTeamStructure(jsonData: {}): Map\u003cstring, Team\u003e {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    const teamStructure \u003d new Map\u003cstring, Team\u003e();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "    const jsonTeamStructure \u003d jsonData[\u0027team-structure\u0027];"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    const teamIds \u003d Object.keys(jsonTeamStructure);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const teamId of teamIds) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "      const teamMembers \u003d new Array\u003cUser\u003e();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "      const teamMemberIds \u003d Object.keys(jsonTeamStructure[teamId]);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "      for (const teamMemberId of teamMemberIds) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        teamMembers.push(\u003cUser\u003e{loginId: teamMemberId, role: UserRole.Student});"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "      teamStructure.set(teamId, new Team({id: teamId, teamMembers: teamMembers}));"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    return teamStructure;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "  reset() {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    this.dataFile \u003d undefined;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 15,
      "-": 232
    }
  },
  {
    "path": "src/app/core/services/githubevent.service.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { GithubService } from \u0027./github.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { Observable, of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { map, flatMap } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueService } from \u0027./issue.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "export class GithubEventService {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  private lastModified: string; // The timestamp when the title or label of an issue is changed"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  private lastModifiedComment: string; // The timestamp when the comment of an issue is changed"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private githubService: GithubService, private issueService: IssueService) { }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "   * Calls the Github service api to return the latest github event (e.g renaming an issue\u0027s title)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   * of current repository and store the timestamps of the event in this service"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  setLatestChangeEvent(): Observable\u003cany\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.githubService.fetchEventsForRepo().pipe("
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "          if (response.length \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "          this.setLastModifiedTime(response[0][\u0027created_at\u0027]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "          this.setLastModifiedCommentTime(response[0][\u0027issue\u0027][\u0027updated_at\u0027]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "          return response;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      );"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns the latest github event (e.g renaming an issue\u0027s title) of current repository"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   * @returns the json data of the latest event"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  reloadPage() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.githubService.fetchEventsForRepo().pipe("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      flatMap((response: any[]) \u003d\u003e {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        if (response.length \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "          return of(response);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        const eventResponse \u003d response[0];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        // Will only allow page to reload if the latest modify time is different"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        // from last modified, meaning that some changes to the repo has occured."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        if (eventResponse[\u0027created_at\u0027] !\u003d\u003d this.getLastModifiedTime() ||"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        eventResponse[\u0027issue\u0027][\u0027updated_at\u0027] !\u003d\u003d this.getLastModifiedCommentTime()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "          this.setLastModifiedTime(eventResponse[\u0027created_at\u0027]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "          this.setLastModifiedCommentTime(eventResponse[\u0027issue\u0027][\u0027updated_at\u0027]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.issueService.reloadAllIssues();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        return of(response);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  private setLastModifiedTime(lastModified: string): void {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    this.lastModified \u003d lastModified;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  private setLastModifiedCommentTime(lastModified: string): void {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    this.lastModifiedComment \u003d lastModified;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  getLastModifiedTime(): string {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.lastModified;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  getLastModifiedCommentTime(): string {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.lastModifiedComment;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  reset() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    this.lastModified \u003d undefined;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    this.lastModifiedComment \u003d undefined;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 4,
      "-": 74
    }
  },
  {
    "path": "src/app/core/services/issue.service.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { GithubService } from \u0027./github.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { catchError, exhaustMap, finalize, flatMap, map } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { BehaviorSubject, EMPTY, forkJoin, timer, Observable, of, Subscription } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  Issue,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  Issues,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  IssuesFilter, STATUS,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../models/issue.model\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { UserService } from \u0027./user.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { Phase, PhaseService } from \u0027./phase.service\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { PermissionService } from \u0027./permission.service\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { DataService } from \u0027./data.service\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorHandlingService } from \u0027./error-handling.service\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueDispute } from \u0027../models/issue-dispute.model\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import { GithubIssue } from \u0027../models/github/github-issue.model\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueComment } from \u0027../models/comment.model\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import { GithubLabel } from \u0027../models/github/github-label.model\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import RestGithubIssueFilter from \u0027../models/github/github-issue-filter.model\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import { GithubComment } from \u0027../models/github/github-comment.model\u0027;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "export class IssueService {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  static readonly POLL_INTERVAL \u003d 5000; // 5 seconds"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  issues: Issues;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  issues$: BehaviorSubject\u003cIssue[]\u003e;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  private issueTeamFilter \u003d \u0027All Teams\u0027;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  private issuesPollSubscription: Subscription;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  /** Whether the IssueService is downloading the data from Github*/"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  public isLoading \u003d new BehaviorSubject\u003cboolean\u003e(false);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private githubService: GithubService,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "              private userService: UserService,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "              private phaseService: PhaseService,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "              private permissionService: PermissionService,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "              private dataService: DataService) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issues$ \u003d new BehaviorSubject(new Array\u003cIssue\u003e());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  startPollIssues() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.issuesPollSubscription \u003d\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.issues$.getValue().length \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isLoading.next(true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issuesPollSubscription \u003d timer(0, IssueService.POLL_INTERVAL).pipe("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        exhaustMap(() \u003d\u003e {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.reloadAllIssues().pipe("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            catchError(() \u003d\u003e {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "              return EMPTY;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            finalize(() \u003d\u003e this.isLoading.next(false))"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      ).subscribe();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  stopPollIssues() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.issuesPollSubscription) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issuesPollSubscription.unsubscribe();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issuesPollSubscription \u003d undefined;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "   * Will constantly poll and update the application\u0027s state\u0027s with the updated issue."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param issueId - The issue\u0027s id to poll for."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  pollIssue(issueId: number): Observable\u003cIssue\u003e {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    return timer(0, IssueService.POLL_INTERVAL).pipe("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      exhaustMap(() \u003d\u003e {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.githubService.fetchIssueGraphql(issueId).pipe("
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "          map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            const issue \u003d this.createIssueModel(response);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            this.updateLocalStore(issue);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            return issue;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "          }),"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "          catchError((err) \u003d\u003e {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            return this.getIssue(issueId);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "          })"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  reloadAllIssues() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.initializeData();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  getIssue(id: number): Observable\u003cIssue\u003e {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.issues \u003d\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.getLatestIssue(id);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "      return of(this.issues[id]);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  getLatestIssue(id: number): Observable\u003cIssue\u003e {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.githubService.fetchIssueGraphql(id).pipe("
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      map((response: GithubIssue) \u003d\u003e {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        this.createAndSaveIssueModel(response);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.issues[id];"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "      }),"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "      catchError((err) \u003d\u003e {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        return of(this.issues[id]);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "  createIssue(title: string, description: string, severity: string, type: string): Observable\u003cIssue\u003e {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    const labelsArray \u003d [this.createLabel(\u0027severity\u0027, severity), this.createLabel(\u0027type\u0027, type)];"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.githubService.createIssue(title, description, labelsArray).pipe("
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "      map((response: GithubIssue) \u003d\u003e this.createIssueModel(response))"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "  updateIssue(issue: Issue): Observable\u003cIssue\u003e {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    const assignees \u003d this.phaseService.currentPhase \u003d\u003d\u003d Phase.phaseModeration ? [] : issue.assignees;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.githubService.updateIssue(issue.id, issue.title, this.createGithubIssueDescription(issue),"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      this.createLabelsForIssue(issue), assignees).pipe("
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        map((response: GithubIssue) \u003d\u003e {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "          response.comments \u003d issue.githubComments;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.createIssueModel(response);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "  updateIssueWithComment(issue: Issue, issueComment: IssueComment): Observable\u003cIssue\u003e {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.githubService.updateIssueComment(issueComment).pipe("
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "      flatMap((updatedComment: GithubComment) \u003d\u003e {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        issue.githubComments \u003d ["
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "          updatedComment,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "          ...issue.githubComments.filter(c \u003d\u003e c.id !\u003d\u003d updatedComment.id),"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        ];"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.updateIssue(issue);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "  updateTesterResponse(issue: Issue, issueComment: IssueComment): Observable\u003cIssue\u003e {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    const isTesterResponseExist \u003d this.issues[issue.id].testerResponses;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    const commentApiToCall \u003d isTesterResponseExist ? this.githubService.updateIssueComment(issueComment)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "      : this.githubService.createIssueComment(issue.id, issueComment.description);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    const issueClone \u003d issue.clone(this.phaseService.currentPhase);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    issueClone.status \u003d STATUS.Done;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    return forkJoin([commentApiToCall, this.updateIssue(issueClone)]).pipe("
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "      map((responses) \u003d\u003e {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        const [githubComment, issue] \u003d responses;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        issue.updateTesterResponse(githubComment);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        return issue;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "  updateTutorResponse(issue: Issue, issueComment: IssueComment): Observable\u003cIssue\u003e {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    return forkJoin([this.githubService.updateIssueComment(issueComment), this.updateIssue(issue)]).pipe("
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "      map(responses \u003d\u003e {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        const [githubComment, issue] \u003d responses;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        issue.updateDispute(githubComment);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        return issue;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "  createTeamResponse(issue: Issue): Observable\u003cIssue\u003e {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    const teamResponse \u003d issue.createGithubTeamResponse();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.githubService.createIssueComment(issue.id, teamResponse).pipe("
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "      flatMap((githubComment: GithubComment) \u003d\u003e {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        issue.githubComments \u003d ["
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "          githubComment,"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "          ...issue.githubComments.filter(c \u003d\u003e c.id !\u003d\u003d githubComment.id),"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        ];"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.updateIssue(issue);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "  createTutorResponse(issue: Issue, response: string): Observable\u003cIssue\u003e {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    return forkJoin([this.githubService.createIssueComment(issue.id, response), this.updateIssue(issue)]).pipe("
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "      map(responses \u003d\u003e {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        const [githubComment, issue] \u003d responses;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        issue.updateDispute(githubComment);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        return issue;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "   * This function will create a github representation of issue\u0027s description. Given the issue model, it will piece together the different"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "   * attributes to create the github\u0027s description."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "  private createGithubIssueDescription(issue: Issue): string {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (this.phaseService.currentPhase) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "      case Phase.phaseModeration:"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return `# Issue Description\\n${issue.description}\\n# Team\\\u0027s Response\\n${issue.teamResponse}\\n ` +"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "         // `## State the duplicated issue here, if any\\n${issue.duplicateOf ? `Duplicate of #${issue.duplicateOf}` : `--`}\\n` +"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "          `# Disputes\\n\\n${this.getIssueDisputeString(issue.issueDisputes)}\\n`;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        return issue.description;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "  private getIssueDisputeString(issueDisputes: IssueDispute[]): string {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    let issueDisputeString \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const issueDispute of issueDisputes) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "      issueDisputeString +\u003d issueDispute.toString();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    return issueDisputeString;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteIssue(id: number): Observable\u003cIssue\u003e {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.githubService.closeIssue(id).pipe("
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "      map((response: GithubIssue) \u003d\u003e {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        const deletedIssue \u003d this.createIssueModel(response);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        this.deleteFromLocalStore(deletedIssue);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        return deletedIssue;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "   * This function will update the issue\u0027s state of the application. This function needs to be called whenever a issue is deleted."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteFromLocalStore(issueToDelete: Issue) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    const { [issueToDelete.id]: issueToRemove, ...withoutIssueToRemove } \u003d this.issues;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issues \u003d withoutIssueToRemove;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issues$.next(Object.values(this.issues));"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "   * This function will update the issue\u0027s state of the application. This function needs to be called whenever a issue is added/updated."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "  updateLocalStore(issueToUpdate: Issue) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issues \u003d {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "      ...this.issues,"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "      [issueToUpdate.id]: issueToUpdate,"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issues$.next(Object.values(this.issues));"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "   * Check whether the issue has been responded in the phase 2/3."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "  hasTeamResponse(issueId: number): boolean {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    return !!this.issues[issueId].teamResponse;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "   * Obtain an observable containing an array of issues that are duplicates of the parentIssue."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "  getDuplicateIssuesFor(parentIssue: Issue): Observable\u003cIssue[]\u003e {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.issues$.pipe(map((issues) \u003d\u003e {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "      return issues.filter(issue \u003d\u003e {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        return issue.duplicateOf \u003d\u003d\u003d parentIssue.id;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    }));"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "  reset() {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issues \u003d undefined;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issues$.next(new Array\u003cIssue\u003e());"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "    this.stopPollIssues();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isLoading.complete();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isLoading \u003d new BehaviorSubject\u003cboolean\u003e(false);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "  private initializeData(): Observable\u003cIssue[]\u003e {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    const issuesAPICallsByFilter: Array\u003cObservable\u003cArray\u003cGithubIssue\u003e\u003e\u003e \u003d [];"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (IssuesFilter[this.phaseService.currentPhase][this.userService.currentUser.role]) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027FILTER_BY_CREATOR\u0027:"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        issuesAPICallsByFilter.push("
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "          this.githubService.fetchIssuesGraphql(new RestGithubIssueFilter({ creator: this.userService.currentUser.loginId }))"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027FILTER_BY_TEAM\u0027: // Only student has this filter"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        issuesAPICallsByFilter.push("
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "          this.githubService.fetchIssuesGraphqlByTeam("
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "            this.createLabel(\u0027tutorial\u0027, this.userService.currentUser.team.tutorialClassId),"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "            this.createLabel(\u0027team\u0027, this.userService.currentUser.team.teamId),"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "            new RestGithubIssueFilter({}))"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027FILTER_BY_TEAM_ASSIGNED\u0027: // Only for Tutors and Admins"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        const allocatedTeams \u003d this.userService.currentUser.allocatedTeams;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        allocatedTeams.forEach(team \u003d\u003e {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "          issuesAPICallsByFilter.push("
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "            this.githubService.fetchIssuesGraphqlByTeam("
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "              this.createLabel(\u0027tutorial\u0027, team.tutorialClassId),"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "              this.createLabel(\u0027team\u0027, team.teamId),"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "              new RestGithubIssueFilter({}))"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "          );"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027NO_FILTER\u0027:"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        issuesAPICallsByFilter.push("
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "          this.githubService.fetchIssuesGraphql(new RestGithubIssueFilter({}))"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027NO_ACCESS\u0027:"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        return of([]);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "    // const issuesAPICallsByFilter \u003d filters.map(filter \u003d\u003e this.githubService.fetchIssuesGraphql(filter));"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "    return forkJoin(issuesAPICallsByFilter).pipe("
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "      map((issuesByFilter: [][]) \u003d\u003e {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        for (const issues of issuesByFilter) {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "          for (const issue of issues) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "            this.createAndSaveIssueModel(issue);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        return Object.values(this.issues);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "  private createAndSaveIssueModel(githubIssue: GithubIssue): boolean {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "    const issue \u003d this.createIssueModel(githubIssue);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "    this.updateLocalStore(issue);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "    return true;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "   * Given an issue model, create the necessary labels for github."
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "  private createLabelsForIssue(issue: Issue): string[] {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "    const result \u003d [];"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.phaseService.currentPhase !\u003d\u003d Phase.phaseBugReporting \u0026\u0026"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "        this.phaseService.currentPhase !\u003d\u003d Phase.phaseTesterResponse) {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "      const studentTeam \u003d issue.teamAssigned.id.split(\u0027-\u0027);"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "      result.push(this.createLabel(\u0027tutorial\u0027, `${studentTeam[0]}-${studentTeam[1]}`),"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "        this.createLabel(\u0027team\u0027, studentTeam[2]));"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "    if (issue.severity) {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "      result.push(this.createLabel(\u0027severity\u0027, issue.severity));"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "    if (issue.type) {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "      result.push(this.createLabel(\u0027type\u0027, issue.type));"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "    if (issue.responseTag) {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "      result.push(this.createLabel(\u0027response\u0027, issue.responseTag));"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "    if (issue.duplicated) {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "      result.push(\u0027duplicate\u0027);"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "    if (issue.status) {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "      result.push(this.createLabel(\u0027status\u0027, issue.status));"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "    if (issue.pending) {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "      if (+issue.pending \u003e 0) {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        result.push(this.createLabel(\u0027pending\u0027, issue.pending));"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "    if (issue.unsure) {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "      result.push(\u0027unsure\u0027);"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "    return result;"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "  private createLabel(prepend: string, value: string) {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "    return `${prepend}.${value}`;"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "  private extractTeamIdFromGithubIssue(githubIssue: GithubIssue): string {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "    return githubIssue.findLabel(GithubLabel.LABELS.tutorial).concat(\u0027-\u0027).concat(githubIssue.findLabel(GithubLabel.LABELS.team));"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "  private createIssueModel(githubIssue: GithubIssue): Issue {"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (this.phaseService.currentPhase) {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "      case Phase.phaseBugReporting:"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "        return Issue.createPhaseBugReportingIssue(githubIssue);"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "      case Phase.phaseTeamResponse:"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        return Issue.createPhaseTeamResponseIssue(githubIssue,"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "          this.dataService.getTeam(this.extractTeamIdFromGithubIssue(githubIssue)));"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "      case Phase.phaseTesterResponse:"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "        return Issue.createPhaseTesterResponseIssue(githubIssue);"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "      case Phase.phaseModeration:"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "        return Issue.createPhaseModerationIssue(githubIssue,"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "          this.dataService.getTeam(this.extractTeamIdFromGithubIssue(githubIssue)));"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "  setIssueTeamFilter(filterValue: string) {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "    if (filterValue) {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issueTeamFilter \u003d filterValue;"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "  getIssueTeamFilter(): string {"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.issueTeamFilter;"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 1,
      "-": 414
    }
  },
  {
    "path": "src/app/core/services/label.service.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { GithubService } from \u0027./github.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { map } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { Label } from \u0027../models/label.model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { User } from \u0027../models/user.model\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/* The threshold to decide if color is dark or light."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "A higher threshold value will result in more colors determined to be \"dark\"."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "W3C recommendation is 0.179, but 0.184 is chosen so that some colors (like bright red)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "are considered dark (Github too consider them dark) */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "const COLOR_DARKNESS_THRESHOLD \u003d 0.184;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "const COLOR_DARK_TEXT  \u003d \u0027000000\u0027; // Dark color for text with light background"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "const COLOR_LIGHT_TEXT  \u003d \u0027FFFFFF\u0027; // Light color for text with dark background"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "const DISPLAY_NAME_SEVERITY \u003d \u0027Severity\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "const DISPLAY_NAME_BUG_TYPE \u003d \u0027Bug Type\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "const DISPLAY_NAME_RESPONSE \u003d \u0027Response\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "export class LabelService {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  private readonly REQUIRED_LABELS \u003d {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    severity: {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      VeryLow: new Label(\u0027severity\u0027, \u0027VeryLow\u0027, \u0027ffe0e0\u0027),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      Low: new Label(\u0027severity\u0027, \u0027Low\u0027, \u0027ffcccc\u0027),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      Medium: new Label(\u0027severity\u0027, \u0027Medium\u0027, \u0027ff9999\u0027),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      High: new Label(\u0027severity\u0027, \u0027High\u0027, \u0027ff6666\u0027)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    type: {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      DocumentationBug: new Label(\u0027type\u0027, \u0027DocumentationBug\u0027, \u0027d966ff\u0027),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      FeatureFlaw: new Label(\u0027type\u0027, \u0027FeatureFlaw\u0027, \u0027d966ff\u0027),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      FunctionalityBug: new Label(\u0027type\u0027, \u0027FunctionalityBug\u0027, \u00279900cc\u0027)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    response: {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      Accepted: new Label(\u0027response\u0027, \u0027Accepted\u0027, \u002700802b\u0027),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      CannotReproduce: new Label(\u0027response\u0027, \u0027CannotReproduce\u0027, \u0027ffebcc\u0027),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      IssueUnclear: new Label(\u0027response\u0027, \u0027IssueUnclear\u0027, \u0027ffcc80\u0027),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      NotInScope: new Label(\u0027response\u0027, \u0027NotInScope\u0027, \u0027ffcc80\u0027),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      Rejected: new Label(\u0027response\u0027, \u0027Rejected\u0027, \u0027ff9900\u0027)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    status: {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      Done: new Label(\u0027status\u0027, \u0027Done\u0027, \u0027a6a6a6\u0027),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      Incomplete: new Label(\u0027status\u0027, \u0027Incomplete\u0027, \u0027000000\u0027)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    others: {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      duplicate: new Label(undefined, \u0027duplicate\u0027, \u00270066ff\u0027)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  private severityLabels: Label[] \u003d Object.values(this.REQUIRED_LABELS.severity);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  private typeLabels: Label[] \u003d Object.values(this.REQUIRED_LABELS.type);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  private responseLabels: Label[] \u003d Object.values(this.REQUIRED_LABELS.response);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  private statusLabels: Label[] \u003d Object.values(this.REQUIRED_LABELS.status);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  private otherLabels: Label[] \u003d Object.values(this.REQUIRED_LABELS.others);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  private labelArrays \u003d {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    severity: this.severityLabels,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    type: this.typeLabels,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    response: this.responseLabels,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    status: this.statusLabels,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    others: this.otherLabels"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private githubService: GithubService) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "   * Synchronizes the labels in github with those required by the application."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  synchronizeRemoteLabels(): Observable\u003cany\u003e {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.githubService.fetchAllLabels().pipe("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "          this.ensureRepoHasRequiredLabels(this.parseLabelData(response), this.getRequiredLabelsAsArray());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "          return response;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      );"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns all the labels of a certain type (e.g severity)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param attributeName: the type of the label"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "   * @return an array of label of that type"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  getLabelList(attributeName: string): Label[] {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (attributeName) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027severity\u0027:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.severityLabels;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027type\u0027:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.typeLabels;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027responseTag\u0027:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027response\u0027:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.responseLabels;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns a title for the label type"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param attributeName: the type of the label"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "  getLabelTitle(attributeName: string): string {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (attributeName) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027severity\u0027:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        return DISPLAY_NAME_SEVERITY;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027type\u0027:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        return DISPLAY_NAME_BUG_TYPE;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027responseTag\u0027:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        return DISPLAY_NAME_RESPONSE;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns the color of the label by searching a list of"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "   * all available labels."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param labelValue: the label\u0027s value (e.g Low / Medium / High / ...)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "  getColorOfLabel(labelValue: string): string {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    // TODO: Rewrite function - labelValue insufficient to differentiate between labels. Should use `labelCategory.labelValue` format."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    const WHITE_COLOR \u003d \u0027ffffff\u0027;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    if (labelValue \u003d\u003d\u003d \u0027\u0027) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "      return WHITE_COLOR;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    const existingLabel \u003d this.getRequiredLabelsAsArray().find(label \u003d\u003e label.labelValue \u003d\u003d\u003d labelValue);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    if (existingLabel \u003d\u003d\u003d undefined || existingLabel.labelColor \u003d\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "      return WHITE_COLOR;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "      return existingLabel.labelColor;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "  private getRequiredLabelsAsArray(): Label[] {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    let requiredLabels: Label[] \u003d [];"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const category of Object.keys(this.labelArrays)) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "      requiredLabels \u003d requiredLabels.concat(this.labelArrays[category]);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    return requiredLabels;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "   * Ensures that the repo has the required labels."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "   * Compares the actual labels in the repo with the required labels. If an required label is missing,"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "   * it is added to the repo. If the required label exists but the label color is not as expected,"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "   * the color is updated. Does not delete actual labels that do not match required labels."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "   * i.e., the repo might have more labels than the required labels after this operation."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param actualLabels: labels in the repo."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param requiredLabels: required labels."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "  private ensureRepoHasRequiredLabels(actualLabels: Label[], requiredLabels: Label[]): void {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    requiredLabels.forEach(label \u003d\u003e {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "      // Finds for a label that has the same name as a required label."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "      const nameMatchedLabels: Label[] \u003d actualLabels.filter(remoteLabel \u003d\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "          remoteLabel.getFormattedName() \u003d\u003d\u003d label.getFormattedName());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "      if (nameMatchedLabels.length \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        // Create new Label (Could not find a label with the same name \u0026 category)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        this.githubService.createLabel(label.getFormattedName(), label.labelColor);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (nameMatchedLabels.length \u003d\u003d\u003d 1) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        if (nameMatchedLabels[0].equals(label)) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "          // the label exists exactly as expected -\u003e do nothing"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "          // the label exists but the color does not match"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "          this.githubService.updateLabel(label.getFormattedName(), label.labelColor);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        throw new Error(\u0027Unexpected error: the repo has multiple labels with the same name \u0027 + label.getFormattedName());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "   * Parses label information and returns an array of Label objects."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param labels - Label Information from API."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "  parseLabelData(labels: Array\u003c{}\u003e): Label[] {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    const labelData: Label[] \u003d [];"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const label of labels) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "      let labelCategory: string;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "      let labelValue: string;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "      const containsDotRegex \u003d /\\./g;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "      const rawName: string \u003d String(label[\u0027name\u0027]);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "      [labelCategory, labelValue] \u003d containsDotRegex.test(rawName)"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        ? String(label[\u0027name\u0027]).split(\u0027.\u0027)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        : [undefined, rawName];"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "      const labelColor: string \u003d String(label[\u0027color\u0027]);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "      labelData.push(new Label(labelCategory, labelValue, labelColor));"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    return labelData;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "   /**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns true if the given color is considered \"dark\""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "   * The color is considered \"dark\" if its luminance is less than COLOR_DARKNESS_THRESHOLD"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param inputColor: the color"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "  isDarkColor(inputColor: string): boolean {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    const COLOR \u003d (inputColor.charAt(0) \u003d\u003d\u003d \u0027#\u0027) ? inputColor.substring(1, 7) : inputColor;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    const R \u003d parseInt(COLOR.substring(0, 2), 16);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    const G \u003d parseInt(COLOR.substring(2, 4), 16);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    const B \u003d parseInt(COLOR.substring(4, 6), 16);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    const RGB \u003d [R / 255, G / 255, B / 255];"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    const LINEAR_RGB \u003d RGB.map((col) \u003d\u003e {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "      if (col \u003c\u003d 0.03928) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        return col / 12.92;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "      return Math.pow((col + 0.055) / 1.055, 2.4);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    // Calculate the luminance of the color"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "    const LUMINANCE \u003d (0.2126 * LINEAR_RGB[0]) + (0.7152 * LINEAR_RGB[1]) + (0.0722 * LINEAR_RGB[2]);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    // The color is \"dark\" if the luminance is lower than the threshold"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "    return LUMINANCE \u003c COLOR_DARKNESS_THRESHOLD;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns a css style for the label to use"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param color: the color of the label"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "   * @return the style with background-color in rgb"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "   * @throws exception if input is an invalid color code"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "  setLabelStyle(color: string) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    let textColor: string;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "    textColor \u003d this.isDarkColor(color) ? COLOR_LIGHT_TEXT : COLOR_DARK_TEXT;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    const styles \u003d {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027background-color\u0027 : `#${color}`,"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027border-radius\u0027 : \u00273px\u0027,"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027cursor\u0027 : \u0027default\u0027,"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027padding\u0027 : \u00273px\u0027,"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027color\u0027 : `#${textColor}`,"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027font-weight\u0027 : \u0027410\u0027,"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    return styles;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 1,
      "-": 256
    }
  },
  {
    "path": "src/app/core/services/permission.service.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { GithubService } from \u0027./github.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { UserService } from \u0027./user.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { Phase, PhaseService } from \u0027./phase.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { UserRole } from \u0027../models/user.model\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "const enum PermissionLevel { Phase \u003d \u0027Phase\u0027, User \u003d \u0027User\u0027 }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "const PERMISSIONS \u003d {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  [Phase.phaseBugReporting]: {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    [UserRole.Student]: {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueCreatable\u0027: true,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDeletable\u0027: true,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueTitleEditable\u0027: true,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDescriptionEditable\u0027: true,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueLabelsEditable\u0027: true,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTeamResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTesterResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTutorResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    [UserRole.Tutor]: {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueCreatable\u0027: false,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDeletable\u0027: false,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueTitleEditable\u0027: false,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDescriptionEditable\u0027: false,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueLabelsEditable\u0027: false,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTeamResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTesterResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTutorResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    [UserRole.Admin]: {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueCreatable\u0027: true,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDeletable\u0027: true,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueTitleEditable\u0027: true,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDescriptionEditable\u0027: true,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueLabelsEditable\u0027: true,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTeamResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTesterResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTutorResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  [Phase.phaseTeamResponse]: {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    [UserRole.Student]: {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueCreatable\u0027: false,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDeletable\u0027: false,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueTitleEditable\u0027: false,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDescriptionEditable\u0027: false,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueLabelsEditable\u0027: true,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTeamResponseEditable\u0027: true,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTesterResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTutorResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    [UserRole.Tutor]: {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueCreatable\u0027: false,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDeletable\u0027: false,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueTitleEditable\u0027: false,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDescriptionEditable\u0027: false,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueLabelsEditable\u0027: false,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTeamResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTesterResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTutorResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    [UserRole.Admin]: {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueCreatable\u0027: false,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDeletable\u0027: false,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueTitleEditable\u0027: false,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDescriptionEditable\u0027: true,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueLabelsEditable\u0027: true,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTeamResponseEditable\u0027: true,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTesterResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTutorResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  [Phase.phaseTesterResponse]: {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    [UserRole.Student]: {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueCreatable\u0027: false,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDeletable\u0027: false,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueTitleEditable\u0027: false,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDescriptionEditable\u0027: false,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueLabelsEditable\u0027: false,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTeamResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTesterResponseEditable\u0027: true,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTutorResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    [UserRole.Tutor]: {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueCreatable\u0027: false,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDeletable\u0027: false,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueTitleEditable\u0027: false,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDescriptionEditable\u0027: false,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueLabelsEditable\u0027: false,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTeamResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTesterResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTutorResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    [UserRole.Admin]: {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueCreatable\u0027: false,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDeletable\u0027: false,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueTitleEditable\u0027: false,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDescriptionEditable\u0027: true,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueLabelsEditable\u0027: true,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTeamResponseEditable\u0027: true,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTesterResponseEditable\u0027: true,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTutorResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "  /** Phase 3 Permissions **/"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  [Phase.phaseModeration]: {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    [UserRole.Student]: {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueCreatable\u0027: false,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDeletable\u0027: false,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueTitleEditable\u0027: false,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDescriptionEditable\u0027: false,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueLabelsEditable\u0027: false,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTeamResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTesterResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTutorResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    [UserRole.Tutor]: {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueCreatable\u0027: false,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDeletable\u0027: false,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueTitleEditable\u0027: false,"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDescriptionEditable\u0027: true,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueLabelsEditable\u0027: true,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTeamResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTesterResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTutorResponseEditable\u0027: true,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    [UserRole.Admin]: {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueCreatable\u0027: false,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDeletable\u0027: false,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueTitleEditable\u0027: false,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueDescriptionEditable\u0027: true,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isIssueLabelsEditable\u0027: true,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTeamResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTesterResponseEditable\u0027: false,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027isTutorResponseEditable\u0027: true,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "export class PermissionService {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private githubService: GithubService, private userService: UserService, private phaseService: PhaseService) {}"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "  isIssueCreatable(): boolean {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.askForPermission(PermissionLevel.User, \u0027isIssueCreatable\u0027);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "  isIssueDeletable(): boolean {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.askForPermission(PermissionLevel.User, \u0027isIssueDeletable\u0027);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "  isIssueTitleEditable(): boolean {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.askForPermission(PermissionLevel.User, \u0027isIssueTitleEditable\u0027);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "  isIssueDescriptionEditable(): boolean {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.askForPermission(PermissionLevel.User, \u0027isIssueDescriptionEditable\u0027);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "  isIssueLabelsEditable(): boolean {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.askForPermission(PermissionLevel.User, \u0027isIssueLabelsEditable\u0027);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "  isTesterResponseEditable(): boolean {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.askForPermission(PermissionLevel.User, \u0027isTesterResponseEditable\u0027);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "  isTeamResponseEditable(): boolean {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.askForPermission(PermissionLevel.User, \u0027isTeamResponseEditable\u0027);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "  isTutorResponseEditable(): boolean {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.askForPermission(PermissionLevel.User, \u0027isTutorResponseEditable\u0027);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  isIssueEditable(): boolean {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    return this.isIssueTitleEditable() || this.isIssueDescriptionEditable()"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "           || this.isIssueLabelsEditable() || this.isTeamResponseEditable()"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "           || this.isTesterResponseEditable() || this.isTutorResponseEditable();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "  private askForPermission(permissionLevel: PermissionLevel, permissionType: string): boolean {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (permissionLevel) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "      case PermissionLevel.Phase:"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        return PERMISSIONS[this.phaseService.currentPhase][permissionType];"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "      case PermissionLevel.User:"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        return PERMISSIONS[this.phaseService.currentPhase][this.userService.currentUser.role][permissionType];"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 5,
      "-": 193
    }
  },
  {
    "path": "src/app/core/services/upload.service.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { GithubService } from \u0027./github.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { uuid } from \u0027../../shared/lib/uuid\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { throwError } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export const SUPPORTED_FILE_TYPES \u003d [\u0027gif\u0027, \u0027jpeg\u0027, \u0027jpg\u0027, \u0027png\u0027, \u0027docx\u0027, \u0027gz\u0027, \u0027log\u0027, \u0027pdf\u0027, \u0027pptx\u0027, \u0027txt\u0027, \u0027xlsx\u0027, \u0027zip\u0027];"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export const FILE_TYPE_SUPPORT_ERROR \u003d \u0027We don\\\u0027t support that file type.\u0027 +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  \u0027 Try again with \u0027 + SUPPORTED_FILE_TYPES.join(\u0027, \u0027) + \u0027.\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "export class UploadService {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private githubService: GithubService) {}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  uploadFile(base64File: string | ArrayBuffer, userFilename: string) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    let base64String: string;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    if (base64File instanceof ArrayBuffer) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      base64String \u003d String.fromCharCode.apply(null, new Uint16Array(base64File));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      base64String \u003d base64File;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    const fileType \u003d userFilename.split(\u0027.\u0027).pop();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    if (SUPPORTED_FILE_TYPES.includes(fileType.toLowerCase())) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      base64String \u003d base64String.split(\u0027,\u0027)[1];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      const onlineFilename \u003d uuid();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.githubService.uploadFile(`${onlineFilename}.${fileType}`, base64String);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      return throwError(FILE_TYPE_SUPPORT_ERROR);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  isSupportedFileType(fileName): boolean {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    const fileType \u003d fileName.split(\u0027.\u0027).pop();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    return SUPPORTED_FILE_TYPES.includes(fileType.toLowerCase());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 4,
      "-": 35
    }
  },
  {
    "path": "src/app/phase-bug-reporting/new-issue/new-issue.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import { Issue } from \u0027../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormBuilder, FormGroup, NgForm, Validators } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { finalize } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { LabelService } from \u0027../../core/services/label.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { SUBMIT_BUTTON_TEXT } from \u0027../../shared/view-issue/view-issue.component\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-new-issue\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./new-issue.component.html\u0027,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./new-issue.component.css\u0027]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "export class NewIssueComponent implements OnInit {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  newIssueForm: FormGroup;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  isFormPending \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  submitButtonText: string;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private issueService: IssueService, private formBuilder: FormBuilder,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService, public labelService: LabelService,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "              private router: Router) { }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    this.newIssueForm \u003d this.formBuilder.group({"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      title: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      description: [\u0027No details provided.\u0027],"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      severity: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      type: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.SUBMIT;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  submitNewIssue(form: NgForm) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.newIssueForm.invalid) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isFormPending \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    this.issueService.createIssue(this.title.value,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      Issue.updateDescription(this.description.value),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      this.severity.value, this.type.value).pipe(finalize(() \u003d\u003e this.isFormPending \u003d false))"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      .subscribe("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        newIssue \u003d\u003e {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "          this.issueService.updateLocalStore(newIssue);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "          this.router.navigateByUrl(`phaseBugReporting/issues/${newIssue.id}`);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "          form.resetForm();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "          error \u003d\u003e {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "          this.errorHandlingService.handleError(error);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  get title() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newIssueForm.get(\u0027title\u0027);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  get description() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newIssueForm.get(\u0027description\u0027);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  get severity() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newIssueForm.get(\u0027severity\u0027);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  get type() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newIssueForm.get(\u0027type\u0027);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 4,
      "-": 67
    }
  },
  {
    "path": "src/app/phase-bug-reporting/phase-bug-reporting.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { PermissionService } from \u0027../core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { UserService } from \u0027../core/services/user.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { ACTION_BUTTONS, IssueTablesComponent, TABLE_COLUMNS } from \u0027../shared/issue-tables/issue-tables.component\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-phase-bug-reporting\u0027,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./phase-bug-reporting.component.html\u0027,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./phase-bug-reporting.component.css\u0027]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "export class PhaseBugReportingComponent implements OnInit {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly displayedColumns \u003d ["
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    TABLE_COLUMNS.ID,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    TABLE_COLUMNS.TITLE,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    TABLE_COLUMNS.TYPE,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    TABLE_COLUMNS.SEVERITY,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    TABLE_COLUMNS.ACTIONS"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  ];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly actionButtons: ACTION_BUTTONS[] \u003d ["
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ACTION_BUTTONS.VIEW_IN_WEB,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    ACTION_BUTTONS.DELETE_ISSUE,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    ACTION_BUTTONS.FIX_ISSUE"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  ];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(IssueTablesComponent) table: IssueTablesComponent;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(public permissions: PermissionService,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "              public userService: UserService) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  applyFilter(filterValue: string) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    this.table.issues.filter \u003d filterValue;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 2,
      "-": 36
    }
  },
  {
    "path": "src/app/phase-moderation/phase-moderation.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssuesFilter } from \u0027../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueService } from \u0027../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorHandlingService } from \u0027../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { UserService } from \u0027../core/services/user.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { Phase } from \u0027../core/services/phase.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { DataService } from \u0027../core/services/data.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { LabelService } from \u0027../core/services/label.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { GithubService } from \u0027../core/services/github.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { ACTION_BUTTONS, IssueTablesComponent, TABLE_COLUMNS } from \u0027../shared/issue-tables/issue-tables.component\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-phase-moderation\u0027,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./phase-moderation.component.html\u0027,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./phase-moderation.component.css\u0027]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "export class PhaseModerationComponent implements OnInit {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  displayedColumns \u003d ["
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    TABLE_COLUMNS.ID,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    TABLE_COLUMNS.TITLE,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    TABLE_COLUMNS.TYPE,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    TABLE_COLUMNS.SEVERITY,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    TABLE_COLUMNS.TODO,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    TABLE_COLUMNS.ACTIONS"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  ];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  public teamFilter \u003d \u0027All Teams\u0027;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  readonly actionButtons: ACTION_BUTTONS[] \u003d [ACTION_BUTTONS.VIEW_IN_WEB, ACTION_BUTTONS.FIX_ISSUE];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(IssueTablesComponent) table: IssueTablesComponent;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private issueService: IssueService,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "              public userService: UserService, private labelService: LabelService, private githubService: GithubService,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "              private dataService: DataService) { }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.setIssueTeamFilter(this.teamFilter);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  applyFilter(filterValue: string) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    this.table.issues.filter \u003d filterValue;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  get teamList(): string[] {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    const teams \u003d this.dataService.getTeams();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (IssuesFilter[Phase.phaseModeration][this.userService.currentUser.role]) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027FILTER_BY_TEAM_ASSIGNED\u0027:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        return [\u0027All Teams\u0027, ...this.userService.currentUser.allocatedTeams.map(team \u003d\u003e team.id)];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027NO_FILTER\u0027:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        return [\u0027All Teams\u0027, ...teams];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  updateDisplayedTeam(newTeam: string) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    this.teamFilter \u003d newTeam;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    this.table.issues.teamFilter \u003d this.teamFilter;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 1,
      "-": 64
    }
  },
  {
    "path": "src/app/phase-team-response/issues-pending/issues-pending.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssuesDataTable } from \u0027../../shared/issue-tables/IssuesDataTable\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { Issue } from \u0027../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { PermissionService } from \u0027../../core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { UserService } from \u0027../../core/services/user.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { UserRole } from \u0027../../core/models/user.model\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { ACTION_BUTTONS, IssueTablesComponent, TABLE_COLUMNS } from \u0027../../shared/issue-tables/issue-tables.component\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-issues-pending\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./issues-pending.component.html\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./issues-pending.component.css\u0027]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "export class IssuesPendingComponent implements OnInit, OnChanges {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  displayedColumns;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  filter: (issue: Issue) \u003d\u003e boolean;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly actionButtons: ACTION_BUTTONS[] \u003d ["
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    ACTION_BUTTONS.VIEW_IN_WEB,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ACTION_BUTTONS.RESPOND_TO_ISSUE,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    ACTION_BUTTONS.MARK_AS_RESPONDED,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    ACTION_BUTTONS.FIX_ISSUE"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  ];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() teamFilter: string;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(IssueTablesComponent) table: IssueTablesComponent;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(public issueService: IssueService,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "              public permissions: PermissionService, public userService: UserService) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    if (userService.currentUser.role !\u003d\u003d UserRole.Student) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      this.displayedColumns \u003d ["
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.ID,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.TITLE,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.TEAM_ASSIGNED,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.TYPE,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.SEVERITY,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.DUPLICATED_ISSUES,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.ACTIONS"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      ];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      this.displayedColumns \u003d ["
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.ID,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.TITLE,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.TYPE,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.SEVERITY,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.DUPLICATED_ISSUES,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.ACTIONS"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      ];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnChanges(changes: SimpleChanges) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!changes.teamFilter.isFirstChange()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      this.table.issues.teamFilter \u003d changes.teamFilter.currentValue;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    this.filter \u003d (issue: Issue) \u003d\u003e {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      return (!this.issueService.hasTeamResponse(issue.id) || (!issue.status || issue.status \u003d\u003d\u003d \u0027Incomplete\u0027)) \u0026\u0026"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        !issue.duplicateOf;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  applyFilter(filterValue: string) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    this.table.issues.filter \u003d filterValue;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 2,
      "-": 68
    }
  },
  {
    "path": "src/app/phase-team-response/issues-responded/issues-responded.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssuesDataTable } from \u0027../../shared/issue-tables/IssuesDataTable\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { Issue } from \u0027../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { UserService } from \u0027../../core/services/user.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { UserRole } from \u0027../../core/models/user.model\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { ACTION_BUTTONS, IssueTablesComponent, TABLE_COLUMNS } from \u0027../../shared/issue-tables/issue-tables.component\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-issues-responded\u0027,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./issues-responded.component.html\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./issues-responded.component.css\u0027],"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "export class IssuesRespondedComponent implements OnInit, OnChanges {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  displayedColumns: string[];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  filter: (issue: Issue) \u003d\u003e boolean;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly actionButtons: ACTION_BUTTONS[] \u003d ["
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    ACTION_BUTTONS.VIEW_IN_WEB,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    ACTION_BUTTONS.MARK_AS_PENDING,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    ACTION_BUTTONS.FIX_ISSUE"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  ];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() teamFilter: string;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(IssueTablesComponent) table: IssueTablesComponent;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(public issueService: IssueService, public userService: UserService) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    if (userService.currentUser.role \u003d\u003d\u003d UserRole.Student) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      this.displayedColumns \u003d ["
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.ID,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.TITLE,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.TYPE,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.SEVERITY,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.RESPONSE,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.ASSIGNEE,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.DUPLICATED_ISSUES,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.ACTIONS"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      ];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      this.displayedColumns \u003d ["
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.ID,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.TITLE,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.TEAM_ASSIGNED,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.TYPE,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.SEVERITY,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.RESPONSE,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.ASSIGNEE,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.DUPLICATED_ISSUES,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        TABLE_COLUMNS.ACTIONS"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      ];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnChanges(changes: SimpleChanges) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!changes.teamFilter.isFirstChange()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      this.table.issues.teamFilter \u003d changes.teamFilter.currentValue;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    this.filter \u003d (issue: Issue) \u003d\u003e {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.issueService.hasTeamResponse(issue.id) \u0026\u0026 !issue.duplicateOf \u0026\u0026"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        (issue.status \u003d\u003d\u003d \u0027Done\u0027);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  applyFilter(filterValue: string) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    this.table.issues.filter \u003d filterValue;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 2,
      "-": 69
    }
  },
  {
    "path": "src/app/phase-tester-response/issue-pending/issue-pending.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ACTION_BUTTONS, IssueTablesComponent, TABLE_COLUMNS } from \u0027../../shared/issue-tables/issue-tables.component\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { Issue, STATUS } from \u0027../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-issue-pending\u0027,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./issue-pending.component.html\u0027,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./issue-pending.component.css\u0027]"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "export class IssuePendingComponent implements OnInit {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(IssueTablesComponent) table: IssueTablesComponent;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly displayedColumns \u003d ["
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    TABLE_COLUMNS.ID,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    TABLE_COLUMNS.TITLE,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    TABLE_COLUMNS.TYPE,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    TABLE_COLUMNS.SEVERITY,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    TABLE_COLUMNS.ACTIONS"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  ];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly actionButtons: ACTION_BUTTONS[] \u003d ["
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    ACTION_BUTTONS.VIEW_IN_WEB,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    ACTION_BUTTONS.RESPOND_TO_ISSUE,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    ACTION_BUTTONS.MARK_AS_RESPONDED,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    ACTION_BUTTONS.FIX_ISSUE"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  ];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  filter: (issue: Issue) \u003d\u003e boolean;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor() { }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    this.filter \u003d (issue: Issue) \u003d\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      return (!issue.status || issue.status \u003d\u003d\u003d STATUS.Incomplete) \u0026\u0026 !!issue.issueComment;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  applyFilter(filterValue: string) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    this.table.issues.filter \u003d filterValue;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 2,
      "-": 39
    }
  },
  {
    "path": "src/app/phase-tester-response/issue-responded/issue-responded.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ACTION_BUTTONS, IssueTablesComponent, TABLE_COLUMNS } from \u0027../../shared/issue-tables/issue-tables.component\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { Issue, STATUS } from \u0027../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-issue-responded\u0027,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./issue-responded.component.html\u0027,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./issue-responded.component.css\u0027]"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "export class IssueRespondedComponent implements OnInit {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(IssueTablesComponent) table: IssueTablesComponent;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly displayedColumns  \u003d ["
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    TABLE_COLUMNS.ID,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    TABLE_COLUMNS.TITLE,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    TABLE_COLUMNS.TYPE,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    TABLE_COLUMNS.SEVERITY,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    TABLE_COLUMNS.ACTIONS"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  ];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly actionButtons: ACTION_BUTTONS[] \u003d ["
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ACTION_BUTTONS.VIEW_IN_WEB,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    ACTION_BUTTONS.MARK_AS_PENDING,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    ACTION_BUTTONS.FIX_ISSUE"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  ];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  filter: (issue: Issue) \u003d\u003e boolean;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor() { }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    this.filter \u003d (issue: Issue) \u003d\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      return (issue.status \u003d\u003d\u003d STATUS.Done) \u0026\u0026 !!issue.issueComment;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  applyFilter(filterValue: string) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    this.table.issues.filter \u003d filterValue;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 2,
      "-": 37
    }
  },
  {
    "path": "src/app/shared/comment-editor/comment-editor.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cform [formGroup]\u003d\"commentForm\" style\u003d\"min-height: 350px\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-tab-group class\u003d\"mat-elevation-z1\" animationDuration\u003d\"0ms\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-tab label\u003d\"Write\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv #dropArea class\u003d\"tab-content\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "           (dragleave)\u003d\"onDragExit($event)\" (dragenter)\u003d\"onDragEnter($event)\" (drop)\u003d\"onDrop($event)\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "           (dragover)\u003d\"enableFileDrop($event)\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-form-field appearance\u003d\"outline\" style\u003d\"width: 100%\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-label\u003e\u003c/mat-label\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctextarea ctrlKeys (ctrlV)\u003d\"onPaste()\" #commentTextArea (dragover)\u003d\"disableCaretMovement($event)\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                    id\u003d\"{{ this.id }}\" formControlName\u003d\"{{ this.id }}\" matInput placeholder\u003d\"Description\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                    cdkTextareaAutosize #autosize\u003d\"cdkTextareaAutosize\" cdkAutosizeMinRows\u003d\"10\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                    cdkAutosizeMaxRows\u003d\"20\" (change)\u003d\"formatText()\"\u003e\u003c/textarea\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-error *ngIf\u003d\"commentField.errors \u0026\u0026 commentField.errors[\u0027required\u0027] \u0026\u0026 commentField.touched\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            Description required."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-error\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"drag-and-drop\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"!isInErrorState\"\u003e Attach files by dragging \u0026 dropping or select them by clicking here. \u003c/span\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"isInErrorState\" class\u003d\"error\"\u003e {{uploadErrorMessage}} \u003c/span\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cinput #fileInput [disabled]\u003d\"this.commentField.disabled\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                   [accept]\u003d\"SUPPORTED_FILE_TYPES\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                   type\u003d\"file\" class\u003d\"file\" (change)\u003d\"onFileInputUpload($event, fileInput)\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-tab\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-tab label\u003d\"Preview\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"tab-content\" style\u003d\"min-height: 228px\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmarkdown #markdownArea *ngIf\u003d\"commentField.value !\u003d\u003d \u0027\u0027\" [data]\u003d\"commentField.value\"\u003e\u003c/markdown\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv *ngIf\u003d\"commentField.value \u003d\u003d\u003d\u0027\u0027\"\u003e Nothing to preview. \u003c/div\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-tab\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-tab-group\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/form\u003e"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 1,
      "-": 34
    }
  },
  {
    "path": "src/app/shared/comment-editor/comment-editor.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { AbstractControl, FormGroup } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import { FILE_TYPE_SUPPORT_ERROR, SUPPORTED_FILE_TYPES, UploadService } from \u0027../../core/services/upload.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { clipboard } from \u0027electron\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpErrorResponse } from \u0027@angular/common/http\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "const DISPLAYABLE_CONTENT \u003d [\u0027gif\u0027, \u0027jpeg\u0027, \u0027jpg\u0027, \u0027png\u0027];"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "const MAX_UPLOAD_SIZE \u003d 10000000; // 10MB"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-comment-editor\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./comment-editor.component.html\u0027,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./comment-editor.component.css\u0027],"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "export class CommentEditorComponent implements OnInit {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly SUPPORTED_FILE_TYPES \u003d SUPPORTED_FILE_TYPES;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private uploadService: UploadService,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService) {}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() commentField: AbstractControl; // Compulsory Input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() commentForm: FormGroup; // Compulsory Input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() id: string; // Compulsory Input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() initialDescription?: string;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  // Allows the comment editor to control the overall form\u0027s completeness."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() isFormPending?: boolean;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output() isFormPendingChange: EventEmitter\u003cboolean\u003e \u003d new EventEmitter\u003cboolean\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  // Allow the comment editor to control the text of the submit button to prompt the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() submitButtonText?: string;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output() submitButtonTextChange: EventEmitter\u003cstring\u003e \u003d new EventEmitter\u003cstring\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  formatFileUploadingButtonText: (string) \u003d\u003e string \u003d ((currentButtonText: string) \u003d\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    return currentButtonText + \u0027 (Waiting for File Upload to finish...)\u0027;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  initialSubmitButtonText: string;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  lastUploadingTime: string;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(\u0027dropArea\u0027) dropArea;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(\u0027commentTextArea\u0027) commentTextArea;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(\u0027markdownArea\u0027) markdownArea;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  dragActiveCounter \u003d 0;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  uploadErrorMessage: string;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.initialDescription !\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      this.commentField.setValue(this.initialDescription);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.commentField \u003d\u003d\u003d undefined || this.commentForm \u003d\u003d\u003d undefined || this.id \u003d\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      throw new Error(\u0027Comment Editor\\\u0027s compulsory properties are not defined.\u0027);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    this.initialSubmitButtonText \u003d this.submitButtonText;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  onDragEnter(event) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    event.preventDefault();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    event.stopPropagation();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    this.dragActiveCounter++;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.commentField.disabled) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      this.dropArea.nativeElement.classList.add(\u0027highlight-drag-box-disabled\u0027);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      this.dropArea.nativeElement.classList.add(\u0027highlight-drag-box\u0027);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  // Prevent cursor in textarea from moving when file is dragged over it."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  disableCaretMovement(event) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    event.preventDefault();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  // To enable file drop in non-input elements, the dragOver event must be cancelled."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  enableFileDrop(event) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    event.preventDefault();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  onDrop(event) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    event.preventDefault();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    event.stopPropagation();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    this.removeHighlightBorderStyle();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.commentField.disabled) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    const files \u003d event.dataTransfer.files;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    if (files.length \u003e 0) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "      this.readAndUploadFile(files[0]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "      this.commentTextArea.nativeElement.focus();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  onDragExit(event) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    event.preventDefault();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    event.stopPropagation();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    this.removeHighlightBorderStyle();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  onFileInputUpload(event, fileInput) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    event.preventDefault();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    event.stopPropagation();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    const files \u003d fileInput.files;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    if (files.length \u003e 0) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "      this.readAndUploadFile(files[0]);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      fileInput.value \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  updateParentFormsSubmittability(isFormPending: boolean, submitButtonText: string) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isFormPendingChange.emit(isFormPending);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "      this.submitButtonTextChange.emit(submitButtonText);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "  readAndUploadFile(file: File): void {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    this.uploadErrorMessage \u003d null;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    const reader \u003d new FileReader();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    const filename \u003d file.name;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    const insertedText \u003d this.insertUploadingText(filename);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    if (file.size \u003e\u003d MAX_UPLOAD_SIZE) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "      this.handleUploadError(\u0027Oops, file is too big. Keep it under 10MB.\u0027, insertedText);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!this.uploadService.isSupportedFileType(filename)) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "      this.handleUploadError(FILE_TYPE_SUPPORT_ERROR, insertedText);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    // Log the most recent upload."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    this.lastUploadingTime \u003d new Date().getTime().toString();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    const currentFileUploadTime \u003d this.lastUploadingTime;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    // Prevents Form Submission during Upload"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    this.updateParentFormsSubmittability(true, this.formatFileUploadingButtonText(this.initialSubmitButtonText));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    reader.onload \u003d () \u003d\u003e {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "      this.uploadService.uploadFile(reader.result, filename).subscribe((response) \u003d\u003e {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        this.insertUploadUrl(filename, response.data.content.download_url);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        this.handleUploadError(error, insertedText);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        // Allow button enabling if this is the last file that was uploaded."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        if (currentFileUploadTime \u003d\u003d\u003d this.lastUploadingTime) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "          this.updateParentFormsSubmittability(false, this.initialSubmitButtonText);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "      }, () \u003d\u003e {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        // Allow button enabling if this is the last file that was uploaded."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        if (currentFileUploadTime \u003d\u003d\u003d this.lastUploadingTime) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "          this.updateParentFormsSubmittability(false, this.initialSubmitButtonText);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    reader.readAsDataURL(file);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "   * Formats the text to create space at the end of the user input to prevent any issues with"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "   * the markdown interpretation."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "  formatText() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    const newLinesRegex \u003d /[\\n\\r]/gi;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.commentTextArea.nativeElement.value.split(newLinesRegex).filter(split \u003d\u003e split.trim() !\u003d\u003d \u0027\u0027).length \u003e 0) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "      this.commentField.setValue(this.commentTextArea.nativeElement.value + \u0027\\n\\r\u0027);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "      this.commentField.setValue(\u0027\u0027);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "  onPaste() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    this.uploadErrorMessage \u003d null;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    const imageFileType \u003d clipboard.availableFormats().filter(type \u003d\u003e type.includes(\u0027image\u0027));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    if (imageFileType.length \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    const filename \u003d `image.${imageFileType[0].split(\u0027/\u0027)[1]}`;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    const insertedText \u003d this.insertUploadingText(filename);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!this.uploadService.isSupportedFileType(filename)) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      this.handleUploadError(FILE_TYPE_SUPPORT_ERROR, insertedText);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    // Log the most recent upload."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    this.lastUploadingTime \u003d new Date().getTime().toString();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    const currentFileUploadTime \u003d this.lastUploadingTime;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    // Prevents Form Submission during Upload"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    this.updateParentFormsSubmittability(true, this.formatFileUploadingButtonText(this.initialSubmitButtonText));"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    this.uploadService.uploadFile(clipboard.readImage().toDataURL(), filename).subscribe((response) \u003d\u003e {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "      this.insertUploadUrl(filename, response.data.content.download_url);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "      this.handleUploadError(error, insertedText);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "      // Allow button enabling if this is the last file that was uploaded."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "      if (currentFileUploadTime \u003d\u003d\u003d this.lastUploadingTime) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        this.updateParentFormsSubmittability(false, this.initialSubmitButtonText);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "      // Allow button enabling if this is the last file that was uploaded."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "      if (currentFileUploadTime \u003d\u003d\u003d this.lastUploadingTime) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        this.updateParentFormsSubmittability(false, this.initialSubmitButtonText);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "  get isInErrorState(): boolean {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    return !!this.uploadErrorMessage;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "  private handleUploadError(error, insertedText: string) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    if (error instanceof HttpErrorResponse) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "      this.errorHandlingService.handleError(error);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "      this.uploadErrorMessage \u003d \u0027Something went wrong while uploading your file. Please try again.\u0027;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "      this.uploadErrorMessage \u003d error;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    this.commentField.setValue(this.commentField.value.replace(insertedText, \u0027\u0027));"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "  private insertUploadingText(filename: string): string {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    const originalDescription \u003d this.commentField.value;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    const fileType \u003d filename.split(\u0027.\u0027).pop();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    let toInsert: string;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    if (DISPLAYABLE_CONTENT.includes(fileType.toLowerCase())) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "      toInsert \u003d `![Uploading ${filename}...]\\n`;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "      toInsert \u003d `[Uploading ${filename}...]\\n`;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    const cursorPosition \u003d this.commentTextArea.nativeElement.selectionEnd;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    const endOfLineIndex \u003d originalDescription.indexOf(\u0027\\n\u0027, cursorPosition);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    const nextCursorPosition \u003d cursorPosition + toInsert.length;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "    if (endOfLineIndex \u003d\u003d\u003d -1) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.commentField.value \u003d\u003d\u003d \u0027\u0027) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        this.commentField.setValue(toInsert);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        this.commentField.setValue(`${this.commentField.value}\\n${toInsert}`);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "      const startTillNewline \u003d originalDescription.slice(0, endOfLineIndex + 1);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "      const newlineTillEnd \u003d originalDescription.slice(endOfLineIndex);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "      this.commentField.setValue(`${startTillNewline + toInsert + newlineTillEnd}`);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    this.commentTextArea.nativeElement.setSelectionRange(nextCursorPosition, nextCursorPosition);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "    return toInsert;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "  private insertUploadUrl(filename: string, uploadUrl: string) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "    const cursorPosition \u003d this.commentTextArea.nativeElement.selectionEnd;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    const startIndexOfString \u003d this.commentField.value.indexOf(`[Uploading ${filename}...]`);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    const endIndexOfString \u003d startIndexOfString + `[Uploading ${filename}...]`.length;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "    const endOfInsertedString \u003d startIndexOfString + `[${filename}](${uploadUrl})`.length;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    this.commentField.setValue("
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "      this.commentField.value.replace(`[Uploading ${filename}...]`, `[${filename}](${uploadUrl})`));"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "    if (cursorPosition \u003e startIndexOfString - 1 \u0026\u0026 cursorPosition \u003c\u003d endIndexOfString) { // within the range of uploading text"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "      this.commentTextArea.nativeElement.setSelectionRange(endOfInsertedString, endOfInsertedString);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "      this.commentTextArea.nativeElement.setSelectionRange(cursorPosition, cursorPosition);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "  private removeHighlightBorderStyle() {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "    this.dragActiveCounter--;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.dragActiveCounter \u003d\u003d\u003d 0) { // To make sure when dragging over a child element, drop area is still highlight."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "      this.dropArea.nativeElement.classList.remove(\u0027highlight-drag-box\u0027);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "      this.dropArea.nativeElement.classList.remove(\u0027highlight-drag-box-disabled\u0027);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 2,
      "-": 281
    }
  },
  {
    "path": "src/app/shared/error-toasters/form-error/form-error.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, Inject, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { MAT_SNACK_BAR_DATA, MatSnackBarRef } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-form-error\u0027,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./form-error.component.html\u0027,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export class FormErrorComponent {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public snackBarRef: MatSnackBarRef\u003cFormErrorComponent\u003e,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Inject(MAT_SNACK_BAR_DATA) public data: any) {}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 1,
      "-": 11
    }
  },
  {
    "path": "src/app/shared/error-toasters/general-message-error/general-message-error.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, Inject, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { MAT_SNACK_BAR_DATA, MatSnackBarRef } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-general-message-error\u0027,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./general-message-error.component.html\u0027,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export class GeneralMessageErrorComponent {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public snackBarRef: MatSnackBarRef\u003cGeneralMessageErrorComponent\u003e,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Inject(MAT_SNACK_BAR_DATA) public data: any) {}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 1,
      "-": 11
    }
  },
  {
    "path": "src/app/shared/error-toasters/invalid-credentials-error/invalid-credentials-error.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, Inject, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { MAT_SNACK_BAR_DATA, MatSnackBarRef } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-form-error\u0027,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./invalid-credentials-error.component.html\u0027,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export class InvalidCredentialsErrorComponent {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public snackBarRef: MatSnackBarRef\u003cInvalidCredentialsErrorComponent\u003e,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Inject(MAT_SNACK_BAR_DATA) public data: any) {}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 1,
      "-": 11
    }
  },
  {
    "path": "src/app/shared/issue-tables/IssuesDataTable.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { BehaviorSubject, merge, Observable, Subscription } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { DataSource } from \u0027@angular/cdk/table\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { Issue, ISSUE_TYPE_ORDER, SEVERITY_ORDER } from \u0027../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { MatPaginator, MatSort } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { delay, flatMap, map, startWith, tap } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "export class IssuesDataTable extends DataSource\u003cIssue\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  private filterChange \u003d new BehaviorSubject(\u0027\u0027);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  private teamFilterChange \u003d new BehaviorSubject(\u0027\u0027);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  private issuesSubject \u003d new BehaviorSubject\u003cIssue[]\u003e([]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  private issueSubscription: Subscription;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  public isLoading$ \u003d this.issueService.isLoading.asObservable();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private issueService: IssueService, private errorHandlingService: ErrorHandlingService, private sort: MatSort,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "              private paginator: MatPaginator, private displayedColumn: string[],"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "              private defaultFilter?: (issue: Issue) \u003d\u003e boolean) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  connect(): Observable\u003cIssue[]\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.issuesSubject.asObservable();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  disconnect() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    this.filterChange.complete();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    this.teamFilterChange.complete();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issuesSubject.complete();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueSubscription.unsubscribe();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.stopPollIssues();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  loadIssues() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    const displayDataChanges \u003d ["
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issueService.issues$,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      this.paginator.page,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sort.sortChange,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filterChange,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      this.teamFilterChange,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    ];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.startPollIssues();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueSubscription \u003d this.issueService.issues$.pipe("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      flatMap(() \u003d\u003e {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        return merge(...displayDataChanges).pipe("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "          map(() \u003d\u003e {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            let data \u003d \u003cIssue[]\u003eObject.values(this.issueService.issues$.getValue()).reverse();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            if (this.defaultFilter) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "              data \u003d data.filter(this.defaultFilter);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            data \u003d this.getSortedData(data);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            data \u003d this.getFilteredTeamData(data);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            data \u003d this.getFilteredData(data);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            data \u003d this.getPaginatedData(data);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            return data;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "          })"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    ).subscribe((issues) \u003d\u003e {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issuesSubject.next(issues);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  get filter(): string {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.filterChange.value;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  set filter(filter: string) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    this.filterChange.next(filter);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  get teamFilter(): string {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.teamFilterChange.value;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  set teamFilter(teamFilter: string) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    this.teamFilterChange.next(teamFilter);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.setIssueTeamFilter(this.teamFilterChange.value);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  private getFilteredTeamData(data: Issue[]): Issue[] {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    return data.filter((issue) \u003d\u003e {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!this.teamFilter || this.teamFilter \u003d\u003d\u003d \u0027All Teams\u0027) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "      return issue.teamAssigned.id \u003d\u003d\u003d this.teamFilter;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  private getSortedData(data: Issue[]): Issue[] {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!this.sort.active) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "      return data;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    return data.sort((a, b) \u003d\u003e {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "      switch (this.sort.active) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        case \u0027type\u0027:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.compareValue(ISSUE_TYPE_ORDER[a.type], ISSUE_TYPE_ORDER[b.type]);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        case \u0027severity\u0027:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.compareValue(SEVERITY_ORDER[a.severity], SEVERITY_ORDER[b.severity]);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        case \u0027assignees\u0027:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.compareValue(a.assignees.join(\u0027, \u0027), b.assignees.join(\u0027, \u0027));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        case \u0027teamAssigned\u0027:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.compareValue(a.teamAssigned.id, b.teamAssigned.id);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        case \u0027Todo Remaining\u0027:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "geshuming"
        },
        "content": "          return -this.compareValue(a.numOfUnresolvedDisputes(), b.numOfUnresolvedDisputes());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        default: // id, title, responseTag"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.compareValue(a[this.sort.active], b[this.sort.active]);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  private getPaginatedData(data: Issue[]): Issue[] {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    let startIndex \u003d this.paginator.pageIndex * this.paginator.pageSize;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    const result \u003d data.splice(startIndex, this.paginator.pageSize);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    if (result.length \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "      this.paginator.pageIndex -\u003d 1;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "      startIndex \u003d this.paginator.pageIndex * this.paginator.pageSize;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "      return data.splice(startIndex, this.paginator.pageSize);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    return result;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "  private getFilteredData(data: Issue[]): Issue[] {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    const searchKey \u003d this.filter.toLowerCase();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    const result \u003d data.slice().filter((issue: Issue) \u003d\u003e {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "      for (const column of this.displayedColumn) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (column) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "          case \u0027assignees\u0027:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            for (const assignee of issue.assignees) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "              if (assignee.toLowerCase().indexOf(searchKey) !\u003d\u003d -1) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "              }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "          case \u0027duplicatedIssues\u0027:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            const duplicatedIssues \u003d this.issueService.issues$.getValue().filter(el \u003d\u003e el.duplicateOf \u003d\u003d\u003d issue.id);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            if (duplicatedIssues.filter(el \u003d\u003e `#${String(el.id)}`.includes(searchKey)).length !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "              return true;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "          default:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            const searchStr \u003d String(issue[column]).toLowerCase();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            if (searchStr.indexOf(searchKey) !\u003d\u003d -1) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "              return true;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    this.paginator.length \u003d result.length;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    return result;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "  private compareIntegerValue(valueA: number, valueB: number): number {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    return (valueA \u003c valueB ? -1 : 1) * (this.sort.direction \u003d\u003d\u003d \u0027asc\u0027 ? 1 : -1);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "le0tan"
        },
        "content": "  private compareValue(valueA: string | number, valueB: string | number): number {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    if (typeof valueA \u003d\u003d\u003d \u0027number\u0027 \u0026\u0026 typeof valueB \u003d\u003d\u003d \u0027number\u0027) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.compareIntegerValue(valueA, valueB);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    const a \u003d String(valueA || \u0027\u0027).toUpperCase();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "le0tan"
        },
        "content": "    const b \u003d String(valueB || \u0027\u0027).toUpperCase();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    return (a \u003c b ? -1 : 1) * (this.sort.direction \u003d\u003d\u003d \u0027asc\u0027 ? 1 : -1);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 2,
      "le0tan": 3,
      "-": 167
    }
  },
  {
    "path": "src/app/shared/issue-tables/issue-tables.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctable mat-table [dataSource]\u003d\"this.issues\" matSort class\u003d\"mat-elevation-z8\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c!-- ID Column --\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"id\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e ID \u003c/th\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan (click)\u003d\"$event.stopPropagation()\" style\u003d\"cursor: default;\"\u003e{{issue.id}}\u003c/span\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c!-- Title Column --\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"title\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Title \u003c/th\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ca class\u003d\"no-underline link-grey-dark\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e {{this.fitTitleText(issue.title)}} \u003c/a\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c!-- Team Assigned Column --\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-container *ngIf\u003d\"userService.currentUser.role !\u003d\u003d \u0027Student\u0027\" matColumnDef\u003d\"teamAssigned\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Team \u003c/th\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e {{ issue.teamAssigned \u0026\u0026 issue.teamAssigned.id || \u0027-\u0027}} \u003c/td\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c!-- Type Column --\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"type\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cth mat-header-cell [style.width]\u003d\"permissions.isTeamResponseEditable() ? \u002710%\u0027 : \u002715%\u0027\" *matHeaderCellDef mat-sort-header\u003e Type \u003c/th\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cspan (click)\u003d\"$event.stopPropagation()\" [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.type))\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "              {{issue.type || \u0027-\u0027}}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/span\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c!-- Severity Column --\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"severity\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cth mat-header-cell [style.width]\u003d\"permissions.isTeamResponseEditable() ? \u00279%\u0027 : \u002712%\u0027\" *matHeaderCellDef mat-sort-header\u003e Severity \u003c/th\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan (click)\u003d\"$event.stopPropagation()\" [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.severity))\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.severity || \u0027-\u0027}}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c!--Response Tag Column--\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"responseTag\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Response \u003c/th\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan (click)\u003d\"$event.stopPropagation()\" *ngIf\u003d\"issue.responseTag\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "              [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.responseTag))\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.responseTag}}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan *ngIf\u003d\"!issue.responseTag\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c!--Assignee Column--\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"assignees\"\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cth [style.width]\u003d\"userService.currentUser.role \u003d\u003d\u003d \u0027Student\u0027 ? \u002715%\u0027 : \u002710%\u0027\" mat-header-cell *matHeaderCellDef mat-sort-header\u003e Assignees \u003c/th\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan (click)\u003d\"$event.stopPropagation()\" style\u003d\"cursor: default;\" *ngIf\u003d\"issue.assignees.length !\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.assignees.join(\u0027, \u0027)}}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan *ngIf\u003d\"issue.assignees.length \u003d\u003d\u003d 0\" style\u003d\"margin-left: 5%\"\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"We strongly recommend assigning all issues to someone\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                    matTooltipPosition\u003d\"above\" style\u003d\"color: #FFAB40;\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c!-- Duplicated Issues Column --\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"duplicatedIssues\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cth mat-header-cell *matHeaderCellDef\u003e Duplicates \u003c/th\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv *ngIf\u003d\"(issueService.getDuplicateIssuesFor(issue) | async).length \u003d\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        -"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cmat-chip-list *ngFor\u003d\"let duplicateIssue of (issueService.getDuplicateIssuesFor(issue) | async)\" style\u003d\"display: inline-block; margin-left: 5px;\"\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-chip [routerLink]\u003d\"[\u0027issues/\u0027 + duplicateIssue.id]\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                  [matTooltip]\u003d\"duplicateIssue.title\" matTooltipPosition\u003d\"above\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                  style\u003d\"font-size: 12px; cursor: pointer\"\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "          #{{duplicateIssue.id}}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-chip\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/mat-chip-list\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c!-- To do Column --\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"Todo Remaining\"\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Todo Remaining \u003c/th\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan *ngIf\u003d\"isTodoListChecked(issue) \u0026\u0026 issue.issueDisputes.length \u003e 0\"\u003e \u003cfont color\u003d\"green\"\u003eAll tasks are completed\u003c/font\u003e \u003c/span\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan *ngIf\u003d\"!isTodoListChecked(issue)\"\u003e \u003cfont color\u003d\"red\"\u003e{{ issue.issueDisputes.length - todoFinished(issue) }}/{{ issue.issueDisputes.length }} tasks pending.\u003c/font\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cprogress *ngIf\u003d\"issue.issueDisputes.length \u003e 0\" value\u003d{{todoFinished(issue)}} max\u003d{{issue.issueDisputes.length}} role\u003d\"progressbar\" style\u003d\"width: 100%\" aria-valuenow\u003d\"100\" aria-valuemin\u003d\"0\" aria-valuemax\u003d\"100\"\u003e\u003c/progress\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan *ngIf\u003d\"issue.issueDisputes.length \u003d\u003d\u003d 0\"\u003e No Todo List for this issue \u003c/span\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c!-- Action Buttons Column --\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"actions\"\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cth mat-header-cell *matHeaderCellDef\u003e Actions \u003c/th\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton mat-button matTooltip\u003d\"View this issue in web-browser\" *ngIf\u003d\"this.isActionVisible(action_buttons.VIEW_IN_WEB)\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "              (click)\u003d\"this.githubService.viewIssueInBrowser(issue.id)\" style\u003d\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "              transform: scale(0.8)\"\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-icon\u003elink\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton *ngIf\u003d\"this.isResponseEditable() \u0026\u0026 !issue.status"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "       \u0026\u0026 this.isActionVisible(action_buttons.RESPOND_TO_ISSUE); else tryEditIssue\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "              [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\" mat-button color\u003d\"accent\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "              style\u003d\"transform: scale(0.8)\" matTooltip\u003d\"Respond to this issue\"\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-icon\u003efeedback\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      \u003cng-template #tryEditIssue\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        \u003cbutton *ngIf\u003d\"permissions.isIssueEditable() \u0026\u0026 this.isActionVisible(action_buttons.FIX_ISSUE)\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                mat-button color\u003d\"accent\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                style\u003d\"transform: scale(0.8)\" matTooltip\u003d\"Edit this issue\" \u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "          \u003cmat-icon\u003eedit\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton *ngIf\u003d\"this.isResponseEditable() \u0026\u0026 issue.status"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0026\u0026 this.isActionVisible(action_buttons.MARK_AS_RESPONDED)\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "              mat-button color\u003d\"primary\" (click)\u003d\"markAsResponded(issue)\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "              style\u003d\"transform: scale(0.8)\" matTooltip\u003d\"Mark this issue as Responded\"\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-icon\u003echeck_circle\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton color\u003d\"primary\" matTooltip\u003d\"Mark this issue as Pending\" mat-button (click)\u003d\"markAsPending(issue)\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "              style\u003d\"transform: scale(0.8)\" *ngIf\u003d\"(userService.currentUser.role \u003d\u003d\u003d \u0027Student\u0027 || userService.currentUser.role \u003d\u003d\u003d \u0027Admin\u0027)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "              \u0026\u0026 this.isActionVisible(action_buttons.MARK_AS_PENDING)\"\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-icon\u003ecancel\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton mat-button color\u003d\"warn\" *ngIf\u003d\"permissions.isIssueDeletable() \u0026\u0026 !issuesPendingDeletion[issue.id]"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0026\u0026 this.isActionVisible(action_buttons.DELETE_ISSUE)\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "              (click)\u003d\"deleteIssue(issue.id)\" matTooltip\u003d\"Delete this issue\" style\u003d\"transform: scale(0.8)\"\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-icon\u003edelete_outline\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cmat-spinner color\u003d\"warn\" [diameter]\u003d\"25\" style\u003d\"display: inline; padding-right: 30px; margin-left: 5px\""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                   *ngIf\u003d\"issuesPendingDeletion[issue.id] \u0026\u0026 this.isActionVisible(action_buttons.DELETE_ISSUE)\" \u003e\u003c/mat-spinner\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctr mat-header-row *matHeaderRowDef\u003d\"this.headers\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctr mat-row *matRowDef\u003d\"let issue; columns: this.headers;\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\" style\u003d\"cursor: pointer\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmat-card *ngIf\u003d\"this.issues.isLoading$ | async\""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "          style\u003d\"display: flex; justify-content: center; align-items: center\"\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-progress-spinner color\u003d\"primary\" mode\u003d\"indeterminate\" diameter\u003d\"50\" strokeWidth\u003d\"5\"\u003e\u003c/mat-progress-spinner\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/mat-card\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmat-paginator [pageSize]\u003d\"20\" [pageSizeOptions]\u003d\"[10, 20, 50]\"\u003e\u003c/mat-paginator\u003e"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 10,
      "-": 139
    }
  },
  {
    "path": "src/app/shared/issue-tables/issue-tables.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { AfterViewInit, Component, Input, OnInit, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Issue, STATUS } from \u0027../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { PermissionService } from \u0027../../core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { LabelService } from \u0027../../core/services/label.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { UserService } from \u0027../../core/services/user.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { GithubService } from \u0027../../core/services/github.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { finalize } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssuesDataTable } from \u0027./IssuesDataTable\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { MatPaginator, MatSort } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { Phase, PhaseService } from \u0027../../core/services/phase.service\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "export enum ACTION_BUTTONS {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  VIEW_IN_WEB,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  MARK_AS_RESPONDED,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  MARK_AS_PENDING,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  RESPOND_TO_ISSUE,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  FIX_ISSUE,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  DELETE_ISSUE"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "export enum TABLE_COLUMNS {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  ID \u003d \u0027id\u0027,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  TITLE \u003d \u0027title\u0027,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  TEAM_ASSIGNED \u003d \u0027teamAssigned\u0027,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  TYPE \u003d \u0027type\u0027,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  SEVERITY \u003d \u0027severity\u0027,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  RESPONSE \u003d \u0027responseTag\u0027,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  ASSIGNEE \u003d \u0027assignees\u0027,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  DUPLICATED_ISSUES \u003d \u0027duplicatedIssues\u0027,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  TODO \u003d \u0027Todo Remaining\u0027,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  ACTIONS \u003d \u0027actions\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-issue-tables\u0027,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./issue-tables.component.html\u0027,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./issue-tables.component.css\u0027]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "export class IssueTablesComponent implements OnInit, AfterViewInit {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() headers: string[];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() actions: ACTION_BUTTONS[];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() filters?: any \u003d undefined;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(MatSort) sort: MatSort;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(MatPaginator) paginator: MatPaginator;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  issues: IssuesDataTable;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  issuesPendingDeletion: {[id: number]: boolean};"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  private readonly action_buttons \u003d ACTION_BUTTONS;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(public userService: UserService,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "              private permissions: PermissionService,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "              private labelService: LabelService,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "              private githubService: GithubService,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "              private issueService: IssueService,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "              private phaseService: PhaseService,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService) { }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issues \u003d new IssuesDataTable(this.issueService, this.errorHandlingService, this.sort,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      this.paginator, this.headers, this.filters);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issuesPendingDeletion \u003d {};"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  ngAfterViewInit(): void {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    setTimeout(() \u003d\u003e {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issues.loadIssues();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "   * Formats the title text to account for those that contain long words."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param title - Title of Issue that is to be displayed in the Table Row."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  fitTitleText(title: string): string {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    // Arbitrary Length of Characters beyond which an overflow occurs."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    const MAX_WORD_LENGTH \u003d 43;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    const SPLITTER_TEXT \u003d \u0027 \u0027;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    const ELLIPSES \u003d \u0027...\u0027;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    return title.split(SPLITTER_TEXT).map(word \u003d\u003e {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "      if (word.length \u003e MAX_WORD_LENGTH) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        return word.substring(0, MAX_WORD_LENGTH - 5).concat(ELLIPSES);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "      return word;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }).join(SPLITTER_TEXT);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  isActionVisible(action: ACTION_BUTTONS): boolean {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.actions.includes(action);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  markAsResponded(issue: Issue) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.updateIssue(\u003cIssue\u003e{"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "      ...issue,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "      status: STATUS.Done"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((updatedIssue) \u003d\u003e {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issueService.updateLocalStore(updatedIssue);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }, error \u003d\u003e {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "      this.errorHandlingService.handleError(error);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    event.stopPropagation();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "  isResponseEditable() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.permissions.isTeamResponseEditable() || this.permissions.isTesterResponseEditable();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  markAsPending(issue: Issue) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.updateIssue(\u003cIssue\u003e{"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "      ...issue,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "      status: STATUS.Incomplete"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((updatedIssue) \u003d\u003e {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issueService.updateLocalStore(updatedIssue);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }, error \u003d\u003e {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "      this.errorHandlingService.handleError(error);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    event.stopPropagation();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "geshuming"
        },
        "content": "   * Gets the number of resolved disputes."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "geshuming"
        },
        "content": "   */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  todoFinished(issue: Issue): number {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    return issue.issueDisputes.length - issue.numOfUnresolvedDisputes();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "geshuming"
        },
        "content": "   * Checks if all the disputes are resolved."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "geshuming"
        },
        "content": "   */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "  isTodoListChecked(issue: Issue): boolean {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    return issue.issueDisputes \u0026\u0026 issue.numOfUnresolvedDisputes() \u003d\u003d\u003d 0;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteIssue(id: number) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issuesPendingDeletion \u003d {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "      ...this.issuesPendingDeletion,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "      [id]: true,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.deleteIssue(id).pipe(finalize(() \u003d\u003e {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "      const { [id]: issueRemoved, ...theRest } \u003d this.issuesPendingDeletion;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issuesPendingDeletion \u003d theRest;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    })).subscribe((removedIssue) \u003d\u003e {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "      this.errorHandlingService.handleError(error);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    event.stopPropagation();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 8,
      "-": 145
    }
  },
  {
    "path": "src/app/shared/issue/description/description.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormBuilder, FormGroup, NgForm } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { Issue } from \u0027../../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueService } from \u0027../../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorHandlingService } from \u0027../../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { finalize, map, flatMap } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { PermissionService } from \u0027../../../core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { SUBMIT_BUTTON_TEXT } from \u0027../../view-issue/view-issue.component\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { throwError } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { Conflict } from \u0027../../../core/models/conflict/conflict.model\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { MatDialog } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { ConflictDialogComponent } from \u0027../conflict-dialog/conflict-dialog.component\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-issue-description\u0027,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./description.component.html\u0027,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./description.component.css\u0027],"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "export class DescriptionComponent implements OnInit {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  isSavePending \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  issueDescriptionForm: FormGroup;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  conflict: Conflict;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  submitButtonText: string;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() issue: Issue;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() title: string;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() isEditing: boolean;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output() changeEditState \u003d new EventEmitter\u003cboolean\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private issueService: IssueService,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "              private formBuilder: FormBuilder,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "              private dialog: MatDialog,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "              public permissions: PermissionService) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueDescriptionForm \u003d this.formBuilder.group({"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      description: [\u0027\u0027],"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.SAVE;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  changeToEditMode() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    this.changeEditState.emit(true);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueDescriptionForm.setValue({"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      description: this.issue[\u0027description\u0027] || \u0027\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  updateDescription(form: NgForm) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.issueDescriptionForm.invalid) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isSavePending \u003d true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.getLatestIssue(this.issue.id).pipe("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      map((issue: Issue) \u003d\u003e {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return issue.description \u003d\u003d\u003d this.issue.description;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      }),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      flatMap((isSaveToUpdate: boolean) \u003d\u003e {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isSaveToUpdate || this.submitButtonText \u003d\u003d\u003d SUBMIT_BUTTON_TEXT.OVERWRITE) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.issueService.updateIssue(this.getUpdatedIssue());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "          this.conflict \u003d new Conflict(this.issue.description, this.issueService.issues[this.issue.id].description);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "          this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.OVERWRITE;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "          this.viewChanges();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "          return throwError(\u0027The content you are editing has changed. Please verify the changes and try again.\u0027);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      }),"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      finalize(() \u003d\u003e this.isSavePending \u003d false)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    ).subscribe((editedIssue: Issue) \u003d\u003e {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issueUpdated.emit(editedIssue);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      this.resetToDefault();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      form.resetForm();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      this.errorHandlingService.handleError(error);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  viewChanges(): void {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    this.dialog.open(ConflictDialogComponent, {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "      data: this.conflict,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "      autoFocus: false"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  resetToDefault(): void {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.SAVE;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    this.conflict \u003d undefined;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    this.changeEditState.emit(false);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "   * When user exits exit mode, we will need to sync the issue in IssueService with this component."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  cancelEditMode(): void {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.getIssue(this.issue.id).subscribe((issue: Issue) \u003d\u003e {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issueUpdated.emit(issue);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "      this.resetToDefault();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  private getUpdatedIssue(): Issue {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    return \u003cIssue\u003e {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      ...this.issue,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      [\u0027description\u0027]: Issue.updateDescription(this.issueDescriptionForm.get(\u0027description\u0027).value)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 2,
      "-": 109
    }
  },
  {
    "path": "src/app/shared/label-dropdown/label-dropdown.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cform [formGroup]\u003d\"dropdownForm\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-form-field style\u003d\"width: 100%;\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-select [ngClass]\u003d\"dropdownTextColor\" formControlName\u003d\"{{attributeName}}\" placeholder\u003d\"{{this.labelService.getLabelTitle(attributeName)}}\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      (selectionChange)\u003d\"setSelectedLabelColor($event.value)\" [ngStyle]\u003d\"this.labelService.setLabelStyle(this.selectedColor)\" required\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cmat-select-trigger\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        {{dropdownControl.value}}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/mat-select-trigger\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cmat-option *ngFor\u003d\"let value of labelList\" [value]\u003d\"value.labelValue\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-icon [ngStyle]\u003d\"{\u0027color\u0027: \u0027#\u0027 + value.labelColor}\"\u003estop\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan\u003e {{value.labelValue}}\u003c/span\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/mat-option\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-error *ngIf\u003d\"dropdownControl.errors \u0026\u0026 dropdownControl.errors[\u0027required\u0027] \u0026\u0026 dropdownControl.touched\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "      {{this.labelService.getLabelTitle(attributeName)}} required."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-error\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/form\u003e"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 1,
      "-": 16
    }
  },
  {
    "path": "src/app/shared/label-dropdown/label-dropdown.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit, Input } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { LabelService } from \u0027../../core/services/label.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormGroup, AbstractControl } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { Label } from \u0027../../core/models/label.model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export const WHITE_TEXT_CLASS \u003d \u0027white-text\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export const BLACK_TEXT_CLASS \u003d \u0027black-text\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-label-dropdown\u0027,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./label-dropdown.component.html\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./label-dropdown.component.css\u0027]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "export class LabelDropdownComponent implements OnInit {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  dropdownControl: AbstractControl;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() attributeName: string;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() initialValue: string;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() dropdownForm: FormGroup;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  selectedColor: string;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  labelList: Label[];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(public labelService: LabelService) { }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    this.selectedColor \u003d this.labelService.getColorOfLabel(this.initialValue);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    this.labelList \u003d this.labelService.getLabelList(this.attributeName);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    this.dropdownControl \u003d this.dropdownForm.get(this.attributeName);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  setSelectedLabelColor(labelValue: string) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    this.selectedColor \u003d this.labelService.getColorOfLabel(labelValue);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  get dropdownTextColor(): string {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    return this.labelService.isDarkColor(this.selectedColor) ? WHITE_TEXT_CLASS : BLACK_TEXT_CLASS;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 4,
      "-": 35
    }
  },
  {
    "path": "src/app/shared/view-issue/new-team-response/new-team-response.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueService } from \u0027../../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormBuilder, FormGroup, NgForm, Validators } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { Issue, SEVERITY_ORDER, STATUS } from \u0027../../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorHandlingService } from \u0027../../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { finalize, flatMap, map } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { Observable, throwError } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { LabelService } from \u0027../../../core/services/label.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueComment } from \u0027../../../core/models/comment.model\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { SUBMIT_BUTTON_TEXT } from \u0027../view-issue.component\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { Conflict } from \u0027../../../core/models/conflict/conflict.model\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { MatDialog } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { ConflictDialogComponent } from \u0027./conflict-dialog/conflict-dialog.component\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import { PhaseService } from \u0027../../../core/services/phase.service\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import { MatCheckboxChange } from \u0027@angular/material/checkbox\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-new-team-response\u0027,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./new-team-response.component.html\u0027,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./new-team-response.component.css\u0027]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "export class NewTeamResponseComponent implements OnInit {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  newTeamResponseForm: FormGroup;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  teamMembers: string[];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  duplicatedIssueList: Observable\u003cIssue[]\u003e;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  conflict: Conflict;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  isFormPending \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  submitButtonText: string;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() issue: Issue;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private issueService: IssueService,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "              private formBuilder: FormBuilder,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "              public labelService: LabelService,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "              private dialog: MatDialog,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "              private phaseService: PhaseService) { }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    this.teamMembers \u003d this.issue.teamAssigned.teamMembers.map((member) \u003d\u003e {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      return member.loginId;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    this.duplicatedIssueList \u003d this.getDupIssueList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    this.newTeamResponseForm \u003d this.formBuilder.group({"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      description: [\u0027No response provided.\u0027],"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      severity: [this.issue.severity, Validators.required],"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      type: [this.issue.type, Validators.required],"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      responseTag: [this.issue.responseTag, Validators.required],"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      assignees: [this.issue.assignees.map(a \u003d\u003e a.toLowerCase())],"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      duplicated: [false],"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      duplicateOf: [\u0027\u0027]"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    this.duplicated.valueChanges.subscribe(checked \u003d\u003e {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      if (checked) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        this.duplicateOf.setValidators(Validators.required);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        this.responseTag.setValidators(null);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        this.duplicateOf.setValidators(null);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        this.responseTag.setValidators(Validators.required);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      this.duplicateOf.updateValueAndValidity();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      this.responseTag.updateValueAndValidity();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.SUBMIT;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  submitNewTeamResponse(form: NgForm) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.newTeamResponseForm.invalid) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isFormPending \u003d true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    const latestIssue \u003d this.getUpdatedIssue();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isSafeToSubmit().pipe("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      flatMap((isSaveToSubmit: boolean) \u003d\u003e {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        const newCommentDescription \u003d latestIssue.createGithubTeamResponse();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isSaveToSubmit) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.issueService.createTeamResponse(latestIssue);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (this.submitButtonText \u003d\u003d\u003d SUBMIT_BUTTON_TEXT.OVERWRITE) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "          const issueCommentId \u003d this.issueService.issues[this.issue.id].issueComment.id;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.issueService.updateIssueWithComment(latestIssue, \u003cIssueComment\u003e{"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            id: issueCommentId,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            description: newCommentDescription,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "          this.conflict \u003d new Conflict(\u0027 \u0027, this.issueService.issues[this.issue.id].teamResponse);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "          this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.OVERWRITE;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "          this.viewUpdatedResponse();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "          return throwError(\u0027A response has been submitted. Please verify the changes and try again.\u0027);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "      }),"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "      finalize(() \u003d\u003e this.isFormPending \u003d false)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    ).subscribe((updatedIssue: Issue) \u003d\u003e {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "      // updatedIssue.issueComment \u003d updatedComment;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issueUpdated.emit(updatedIssue);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "      form.resetForm();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "      this.errorHandlingService.handleError(error);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "   * @return - Determines whether it is safe to submit a tester response."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "  isSafeToSubmit(): Observable\u003cboolean\u003e {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.issueService.getLatestIssue(this.issue.id).pipe("
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "      map((issue: Issue) \u003d\u003e {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        return !issue.teamResponse;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "   * @return - an updated copy of issue with its updated value from the form."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "  getUpdatedIssue(): Issue {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    const clone \u003d this.issue.clone(this.phaseService.currentPhase);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    clone.severity \u003d this.severity.value;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    clone.type \u003d this.type.value;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    clone.assignees \u003d this.assignees.value;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    clone.responseTag \u003d this.responseTag.value;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    clone.duplicated \u003d this.duplicated.value;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    clone.duplicateOf \u003d this.duplicateOf.value;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    clone.status \u003d STATUS.Done;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    clone.teamResponse \u003d Issue.updateTeamResponse(this.description.value);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    return clone;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "  dupIssueOptionIsDisabled(issue: Issue): boolean {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    return SEVERITY_ORDER[this.severity.value] \u003e SEVERITY_ORDER[issue.severity] || (issue.duplicated || !!issue.duplicateOf);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "  getDisabledDupOptionErrorText(issue: Issue): string {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    const reason \u003d new Array\u003cstring\u003e();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.dupIssueOptionIsDisabled(issue)) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "      if (SEVERITY_ORDER[this.severity.value] \u003e SEVERITY_ORDER[issue.severity]) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        reason.push(\u0027Issue of lower priority\u0027);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (issue.duplicated || !!issue.duplicateOf) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        reason.push(\u0027A duplicated issue\u0027);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    return reason.join(\u0027, \u0027);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "  handleChangeOfDuplicateCheckbox(event: MatCheckboxChange) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    if (event.checked) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "      this.responseTag.setValue(\u0027\u0027);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "      this.assignees.setValue([]);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "      this.responseTag.markAsUntouched();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "      this.duplicateOf.setValue(\u0027\u0027);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "      this.duplicateOf.markAsUntouched();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "   * Pops up a dialog that shows the updated team response that was submitted."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "  viewUpdatedResponse(): void {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    this.dialog.open(ConflictDialogComponent, {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "      data: this.issueService.issues[this.issue.id],"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "      autoFocus: false"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "  refresh(): void {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    const updatedIssue \u003d this.issueService.issues[this.issue.id];"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueUpdated.emit(updatedIssue);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "  private getDupIssueList(): Observable\u003cIssue[]\u003e {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.issueService.issues$.pipe(map((issues) \u003d\u003e {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "      return issues.filter((issue) \u003d\u003e {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.issue.id !\u003d\u003d issue.id;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    }));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "  get description() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newTeamResponseForm.get(\u0027description\u0027);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "  get severity() {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newTeamResponseForm.get(\u0027severity\u0027);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "  get type() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newTeamResponseForm.get(\u0027type\u0027);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "  get assignees() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newTeamResponseForm.get(\u0027assignees\u0027);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "  get responseTag() {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newTeamResponseForm.get(\u0027responseTag\u0027);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "  get duplicated() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newTeamResponseForm.get(\u0027duplicated\u0027);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "  get duplicateOf() {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newTeamResponseForm.get(\u0027duplicateOf\u0027);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 2,
      "-": 207
    }
  },
  {
    "path": "src/app/shared/view-issue/team-response/team-response.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormBuilder, FormGroup, NgForm } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueService } from \u0027../../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorHandlingService } from \u0027../../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { PermissionService } from \u0027../../../core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { Issue, STATUS } from \u0027../../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueComment } from \u0027../../../core/models/comment.model\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { SUBMIT_BUTTON_TEXT } from \u0027../view-issue.component\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { Observable, throwError } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { finalize, map, flatMap } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { Conflict } from \u0027../../../core/models/conflict/conflict.model\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { ConflictDialogComponent } from \u0027../../issue/conflict-dialog/conflict-dialog.component\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { MatDialog } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import { PhaseService } from \u0027../../../core/services/phase.service\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-team-response\u0027,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./team-response.component.html\u0027,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./team-response.component.css\u0027],"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "export class TeamResponseComponent implements OnInit {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  isSavePending \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  responseForm: FormGroup;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  conflict: Conflict;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  submitButtonText: string;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() issue: Issue;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() isEditing: boolean;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output() updateEditState \u003d new EventEmitter\u003cboolean\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private issueService: IssueService,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "              private formBuilder: FormBuilder,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "              private permissions: PermissionService,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "              private dialog: MatDialog,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "              private phaseService: PhaseService) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    this.responseForm \u003d this.formBuilder.group({"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      description: [\u0027\u0027],"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.SAVE;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  changeToEditMode() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    this.updateEditState.emit(true);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    this.responseForm.setValue({"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      description: this.issue.teamResponse || \u0027\u0027,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  updateResponse(form: NgForm) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.responseForm.invalid) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isSavePending \u003d true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    const updatedIssue \u003d this.getUpdatedIssue();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    const updatedIssueComment \u003d \u003cIssueComment\u003e{"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "      ...updatedIssue.issueComment,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      description: updatedIssue.createGithubTeamResponse(),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isSafeToUpdate().pipe("
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      flatMap((isSaveToUpdate: boolean) \u003d\u003e {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isSaveToUpdate || this.submitButtonText \u003d\u003d\u003d SUBMIT_BUTTON_TEXT.OVERWRITE) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.issueService.updateIssueWithComment(updatedIssue, updatedIssueComment);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (this.isUpdatingDeletedResponse()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.issueService.createTeamResponse(updatedIssue);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "          this.conflict \u003d new Conflict(this.issue.teamResponse, this.issueService.issues[this.issue.id].teamResponse);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "          this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.OVERWRITE;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "          this.viewChanges();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "          return throwError(\u0027The content you are editing has changed. Please verify the changes and try again.\u0027);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      }),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      finalize(() \u003d\u003e this.isSavePending \u003d false)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    ).subscribe((updatedIssue: Issue) \u003d\u003e {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issueUpdated.emit(updatedIssue);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "      this.resetToDefault();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "      form.resetForm();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "      this.errorHandlingService.handleError(error);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "   * @return - Determines whether it is safe to updated an existing team response."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  isSafeToUpdate(): Observable\u003cboolean\u003e {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.issueService.getLatestIssue(this.issue.id).pipe("
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "      map((issue: Issue) \u003d\u003e {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        return issue.teamResponse \u003d\u003d\u003d this.issue.teamResponse;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "   * Determines whether the user is updating a response that has already been deleted on Github."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  isUpdatingDeletedResponse(): boolean {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.issue.teamResponse \u0026\u0026 !this.issueService.issues[this.issue.id].teamResponse;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "  canEditIssue(): boolean {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.permissions.isTeamResponseEditable();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "   * Resets to default form state."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "  resetToDefault(): void {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.SAVE;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    this.conflict \u003d undefined;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    this.updateEditState.emit(false);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "  viewChanges(): void {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    this.dialog.open(ConflictDialogComponent, {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "      data: this.conflict,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "      autoFocus: false"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "   * When user exits exit mode, we will need to sync the issue in IssueService with this component."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "  cancelEditMode(): void {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.getIssue(this.issue.id).subscribe((issue: Issue) \u003d\u003e {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issueUpdated.emit(issue);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "      this.resetToDefault();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "  private getUpdatedIssue(): Issue {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    const clone \u003d this.issue.clone(this.phaseService.currentPhase);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    clone.teamResponse \u003d Issue.updateTeamResponse(this.responseForm.get(\u0027description\u0027).value);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!clone.status) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "      clone.status \u003d clone.teamResponse \u003d\u003d\u003d \u0027\u0027 ? STATUS.Incomplete : STATUS.Done;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    return clone;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 2,
      "-": 144
    }
  },
  {
    "path": "tests/app/shared/label-dropdown/label-dropdown.component.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import { LabelDropdownComponent, BLACK_TEXT_CLASS, WHITE_TEXT_CLASS } from \u0027../../../../src/app/shared/label-dropdown/label-dropdown.component\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import { LabelService } from \u0027../../../../src/app/core/services/label.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import { FormGroup, FormBuilder, Validators } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import { SEVERITY_LABELS, COLOR_WHITE, SEVERITY } from \u0027../../../constants/label.constants\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "describe(\u0027LabelDropdownComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  let labelDropdownComponent: LabelDropdownComponent;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  let labelService: any;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    labelService \u003d jasmine.createSpyObj(LabelService, [\u0027getLabelList\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      \u0027getColorOfLabel\u0027, \u0027isDarkColor\u0027]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    const formGroup: FormGroup \u003d new FormBuilder().group(({"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      title: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      description: [\u0027No details provided.\u0027],"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      severity: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      type: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    }));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    labelDropdownComponent \u003d new LabelDropdownComponent(labelService);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    labelDropdownComponent.dropdownForm \u003d formGroup;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  });"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  it(\u0027should be initialised with a list of labels, an initial colour and a dropdown control\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    labelDropdownComponent.attributeName \u003d SEVERITY;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    labelDropdownComponent.initialValue \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    labelService.getLabelList.and.returnValue(SEVERITY_LABELS);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    labelService.getColorOfLabel.and.returnValue(COLOR_WHITE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    labelDropdownComponent.ngOnInit();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    expect(labelDropdownComponent.labelList).toEqual(SEVERITY_LABELS);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    expect(labelDropdownComponent.selectedColor).toEqual(COLOR_WHITE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    expect(labelDropdownComponent.dropdownControl).toBeDefined();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  });"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  it(\u0027should set its dropdown text colour based on the darkness of the current colour\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    labelService.isDarkColor.and.returnValue(false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    expect(labelDropdownComponent.dropdownTextColor).toBe(BLACK_TEXT_CLASS);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    labelService.isDarkColor.and.returnValue(true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    expect(labelDropdownComponent.dropdownTextColor).toBe(WHITE_TEXT_CLASS);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  });"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 43
    }
  },
  {
    "path": "tests/auto-spy.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "/** Create an object with methods that are autoSpy-ed to use as mock dependency */"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": "export function autoSpy\u003cT\u003e(obj: new (...args: any[]) \u003d\u003e T): SpyOf\u003cT\u003e {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    const res: SpyOf\u003cT\u003e \u003d {} as any;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    // turns out that in target:es2015 the methods attached to the prototype are not enumerable so Object.keys returns []."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    // So to workaround that and keep some backwards compatibility - merge with ownPropertyNames - that disregards the enumerable property."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    const keys \u003d [...Object.keys(obj.prototype), ...Object.getOwnPropertyNames(obj.prototype)];"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    keys.forEach(key \u003d\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        res[key] \u003d jasmine.createSpy(key);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    });"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    return res;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "/** Keeps the types of properties of a type but assigns type of Spy to the methods */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "type SpyOf\u003cT\u003e \u003d T \u0026"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    Partial\u003c{ [k in keyof T]: T[k] extends (...args: any[]) \u003d\u003e any ? jasmine.Spy : T[k] }\u003e;"
      }
    ],
    "authorContributionMap": {
      "geshuming": 17
    }
  },
  {
    "path": "tests/constants/data.constants.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import { DataFile } from \u0027../../src/app/core/models/data-file.model\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import { Team } from \u0027../../src/app/core/models/team.model\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import { UserRole } from \u0027../../src/app/core/models/user.model\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export const csvString \u003d `"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "role,name,team"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "student,JunWei96,CS2103T-W12-3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "admin,damithc,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "tutor,anubh-v,CS2103T-W12-3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "admin,geshuming,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "tutor,jj-lim,CS2103T-W12-3"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "tutor,jj-lim,CS2103T-W12-3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "tutor,jj-lim,CS2103T-W12-4"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "tutor,q     ,CS2103T-W12-4"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "student,003-samuel,CS2103T-W12-3"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "student,damithc,CS2103T-W12-3"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "student,RonakLakhotia,CS2103T-W12-4"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "student,ptvrajsk,CS2103T-W12-3` +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "`                       `;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "// jsonData is a json representation of csvString"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export const jsonData \u003d {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    roles: {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      students: {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        junwei96: \u0027true\u0027,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        \u0027003-samuel\u0027: \u0027true\u0027,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        damithc: \u0027true\u0027,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        ronaklakhotia: \u0027true\u0027,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        ptvrajsk: \u0027true\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      },"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      tutors: { \u0027anubh-v\u0027: \u0027true\u0027, \u0027jj-lim\u0027: \u0027true\u0027, q: \u0027true\u0027 },"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      admins: { damithc: \u0027true\u0027, geshuming: \u0027true\u0027 }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    },"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \u0027team-structure\u0027: {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      \u0027CS2103T-W12-3\u0027: {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        junwei96: \u0027true\u0027,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        \u0027003-samuel\u0027: \u0027true\u0027,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        damithc: \u0027true\u0027,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        ptvrajsk: \u0027true\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      },"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      \u0027CS2103T-W12-4\u0027: { ronaklakhotia: \u0027true\u0027 }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    },"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \u0027students-allocation\u0027: {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      junwei96: { teamId: \u0027CS2103T-W12-3\u0027 },"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      \u0027003-samuel\u0027: { teamId: \u0027CS2103T-W12-3\u0027 },"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      damithc: { teamId: \u0027CS2103T-W12-3\u0027 },"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      ronaklakhotia: { teamId: \u0027CS2103T-W12-4\u0027 },"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      ptvrajsk: { teamId: \u0027CS2103T-W12-3\u0027 }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    },"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \u0027tutors-allocation\u0027: {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      \u0027anubh-v\u0027: { \u0027CS2103T-W12-3\u0027: \u0027true\u0027 },"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      \u0027jj-lim\u0027: { \u0027CS2103T-W12-3\u0027: \u0027true\u0027, \u0027CS2103T-W12-4\u0027: \u0027true\u0027 },"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      q: { \u0027CS2103T-W12-4\u0027: \u0027true\u0027 }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    },"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \u0027admins-allocation\u0027: { damithc: {}, geshuming: {} }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  };"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  // These are objects representing some users and teams in jsonData"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "const TEAM_3 \u003d new Team({"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  id: \u0027CS2103T-W12-3\u0027,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  teamMembers: [ {loginId: \u0027junwei96\u0027, role: UserRole.Student},"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                {loginId: \u0027003-samuel\u0027, role: UserRole.Student}  ,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                {loginId: \u0027damithc\u0027,  role: UserRole.Student},"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                {loginId: \u0027ptvrajsk\u0027, role: UserRole.Student}]"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "const TEAM_4 \u003d new Team({"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  id: \u0027CS2103T-W12-4\u0027,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  teamMembers: [{loginId: \u0027ronaklakhotia\u0027, role: UserRole.Student}]"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export const USER_JUNWEI \u003d {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  loginId: \u0027junwei96\u0027,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  role: UserRole.Student,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  team: TEAM_3"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "geshuming"
        },
        "content": "};"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export const USER_Q \u003d {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  loginId: \u0027q\u0027,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  role: UserRole.Tutor,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  allocatedTeams: [TEAM_4]"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "geshuming"
        },
        "content": "};"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export const USER_SHUMING \u003d {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  loginId: \u0027geshuming\u0027,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  role: UserRole.Admin,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  allocatedTeams: []"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "geshuming"
        },
        "content": "};"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export const USER_WITH_TWO_ROLES \u003d {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  loginId: \u0027damithc\u0027,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  role: UserRole.Admin,"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  allocatedTeams: []"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "geshuming"
        },
        "content": "};"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "geshuming"
        },
        "content": "export const dataFileTeamStructure: DataFile \u003d {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  teamStructure: new Map\u003cstring, Team\u003e(["
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    [\u0027CS2103T-W12-3\u0027, new Team({id: \u0027CS2103T-W12-3\u0027, teamMembers: ["
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      {loginId: \u0027junwei96\u0027, role: UserRole.Student},"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      {loginId: \u0027003-samuel\u0027, role: UserRole.Student},"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      {loginId: \u0027damithc\u0027, role: UserRole.Student},"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      {loginId: \u0027ptvrajsk\u0027, role: UserRole.Student}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    ]})],"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    [\u0027CS2103T-W12-4\u0027, new Team({id: \u0027CS2103T-W12-4\u0027, teamMembers: ["
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      {loginId: \u0027ronaklakhotia\u0027, role: UserRole.Student}"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    ]})]"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  ])"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "geshuming"
        },
        "content": "};"
      }
    ],
    "authorContributionMap": {
      "geshuming": 17,
      "anubh-v": 84,
      "-": 8
    }
  },
  {
    "path": "tests/constants/githubcomment.constants.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import { GithubComment } from \u0027../../src/app/core/models/github/github-comment.model\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export const EMPTY_TEAM_RESPONSE: GithubComment \u003d {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    body: \u0027# Team\\\u0027s Response\\n\u0027 +"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \u0027\\n\u0027 +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \u0027 ## Duplicate status (if any):\\n\u0027 +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \u0027--\u0027,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    created_at: \u00272020-02-16T18:31:38Z\u0027,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    id: 586737495,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    issue_url: \u0027https://api.github.com/repos/CATcher-org/pe-results/issues/91\u0027,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    updated_at: \u00272020-03-02T12:50:02Z\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    url: \u0027https://api.github.com/repos/CATcher-org/pe-results/issues/comments/586737495\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    user: {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      login: \u0027testathorStudent\u0027,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      id: 46639862,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      avatar_url: \u0027https://avatars3.githubusercontent.com/u/46639862?v\u003d4\u0027,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      url: \u0027https://api.github.com/users/testathorStudent\u0027,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    },"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  };"
      }
    ],
    "authorContributionMap": {
      "geshuming": 3,
      "anubh-v": 16
    }
  },
  {
    "path": "tests/constants/githubevent.constants.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import { ISSUE_WITH_ASSIGNEES, ISSUE_WITH_EMPTY_DESCRIPTION } from \u0027./githubissue.constants\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "/* Contains a simplified version of the data obtained when we query"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "   for the latest events on a repository using the Octokit API."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "   (specifically, the data obtained from octokit.issues.listEventsForRepo())"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "   For repos used by CATcher, these events will only involve issues. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export const CHANGE_TITLE_EVENT \u003d {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    event: \u0027renamed\u0027,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    created_at: \u00272020-03-13T12:40:47Z\u0027,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    rename: {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        from: \u0027App lags on large amount of input\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        to: \u0027App starts to lag when given large amount of input\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    },"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    issue: ISSUE_WITH_EMPTY_DESCRIPTION"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "};"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export const ADD_LABEL_EVENT \u003d {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    event: \u0027labeled\u0027,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    created_at: \u00272020-03-02T16:34:03Z\u0027,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    label: { name: \u0027severity.VeryLow\u0027, color: \u0027ffe0e0\u0027 },"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    issue: ISSUE_WITH_ASSIGNEES"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "};"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "/* In the list of events returned by Octokit API,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "   the events are ordered by time of creation,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "   with the most recent events appearing first. */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export const EVENTS \u003d [CHANGE_TITLE_EVENT, ADD_LABEL_EVENT];"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 28
    }
  },
  {
    "path": "tests/constants/githubissue.constants.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import { GithubIssue } from \u0027../../src/app/core/models/github/github-issue.model\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  GITHUB_LABEL_FUNCTIONALITY_BUG,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  GITHUB_LABEL_MEDIUM_SEVERITY,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  GITHUB_LABEL_TEAM_LABEL,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  GITHUB_LABEL_TUTORIAL_LABEL"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../constants/githublabel.constants\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueState } from \u0027../../graphql/graphql-types\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { EMPTY_TEAM_RESPONSE } from \u0027./githubcomment.constants\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export const ISSUE_WITH_EMPTY_DESCRIPTION \u003d new GithubIssue({"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  id: \u0027574085971\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  number: 92,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  assignees: [],"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  comments: [],"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  body: \u0027\u0027,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  created_at: \u00272020-03-02T16:19:02Z\u0027,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  labels: [GITHUB_LABEL_TEAM_LABEL, GITHUB_LABEL_TUTORIAL_LABEL,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    GITHUB_LABEL_FUNCTIONALITY_BUG, GITHUB_LABEL_MEDIUM_SEVERITY],"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  state: IssueState.Open,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  title: \u0027App starts to lag when given large amount of input\u0027,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  updated_at: \u00272020-03-13T13:37:32Z\u0027,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  url: \u0027https://api.github.com/repos/CATcher-org/pe-results/issues/92\u0027,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  user: {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    login: \u0027anubh-v\u0027,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    avatar_url: \u0027https://avatars1.githubusercontent.com/u/35621759?v\u003d4\u0027,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    url: \u0027https://api.github.com/users/anubh-v\u0027,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export const ISSUE_WITH_ASSIGNEES \u003d new GithubIssue({"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  id: \u0027551732011\u0027,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  number: 91,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  assignees: ["
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      login: \u0027anubh-v\u0027,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      id: 35621759,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      url: \u0027https://api.github.com/users/anubh-v\u0027,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  body: \u0027Screen freezes every few minutes\u0027,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  created_at: \u00272020-01-18T07:01:45Z\u0027,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  labels: [GITHUB_LABEL_TEAM_LABEL, GITHUB_LABEL_TUTORIAL_LABEL,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      GITHUB_LABEL_FUNCTIONALITY_BUG, GITHUB_LABEL_MEDIUM_SEVERITY"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "     ],"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  state: IssueState.Open,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  title: \u0027Screen freezes\u0027,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  updated_at: \u00272020-03-02T12:50:02Z\u0027,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  url: \u0027https://api.github.com/repos/CATcher-org/pe-results/issues/91\u0027,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  user: {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    login: \u0027anubh-v\u0027,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    avatar_url: \u0027https://avatars1.githubusercontent.com/u/35621759?v\u003d4\u0027,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    url: \u0027https://api.github.com/users/anubh-v\u0027,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  comments: [EMPTY_TEAM_RESPONSE],"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 37,
      "-": 19
    }
  },
  {
    "path": "tests/constants/githublabel.constants.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { GithubLabel } from \u0027../../src/app/core/models/github/github-label.model\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export const GITHUB_LABEL_FUNCTIONALITY_BUG \u003d {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    color: \u00279900cc\u0027,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    name: \u0027type.FunctionalityBug\u0027,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    id: 1226647550,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    url: \u0027https://api.github.com/repos/CATcher-org/pe-results/labels/type.FunctionalityBug\u0027,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "} as GithubLabel;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export const GITHUB_LABEL_MEDIUM_SEVERITY \u003d  {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    color: \u0027ff9999\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    name: \u0027severity.Medium\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    id: 1226647149,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    url: \u0027https://api.github.com/repos/CATcher-org/pe-results/labels/severity.Medium\u0027,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "} as GithubLabel;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export const GITHUB_LABEL_TUTORIAL_LABEL \u003d {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    url: \u0027https://api.github.com/repos/CATcher-org/pe-results/labels/tutorial.CS2103T-W12\u0027,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    name: \u0027tutorial.CS2103T-W12\u0027,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    color: \u0027c2e0c6\u0027,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    id: 1226649736,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": "} as GithubLabel;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export const GITHUB_LABEL_TEAM_LABEL \u003d {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    id: 1226649835,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    url: \u0027https://api.github.com/repos/CATcher-org/pe-results/labels/team.3\u0027,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    name: \u0027team.3\u0027,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    color: \u0027d4c5f9\u0027,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "geshuming"
        },
        "content": "} as GithubLabel;"
      }
    ],
    "authorContributionMap": {
      "geshuming": 4,
      "anubh-v": 24,
      "-": 1
    }
  },
  {
    "path": "tests/constants/label.constants.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import { Label } from \u0027../../src/app/core/models/label.model\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "// Label name constants"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "export const SEVERITY_LOW \u003d \u0027Low\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "export const SEVERITY_MEDIUM \u003d \u0027Medium\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "export const SEVERITY_HIGH \u003d \u0027High\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "export const TYPE_DOCUMENTATION_BUG \u003d \u0027DocumentationBug\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "export const TYPE_FUNCTIONALITY_BUG \u003d \u0027FunctionalityBug\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "export const RESPONSE_ACCEPTED \u003d \u0027Accepted\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "export const RESPONSE_REJECTED \u003d \u0027Rejected\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "export const RESPONSE_ISSUE_UNCLEAR \u003d \u0027IssueUnclear\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "export const RESPONSE_CANNOT_REPRODUCE \u003d \u0027CannotReproduce\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "export const STATUS_DONE \u003d \u0027Done\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "export const STATUS_INCOMPLETE \u003d \u0027Incomplete\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "// Label category constants"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "export const SEVERITY \u003d \u0027severity\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "export const TYPE \u003d \u0027type\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "export const RESPONSE \u003d \u0027response\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "export const STATUS \u003d \u0027status\u0027;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "// Label color constants"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "export const COLOR_BLACK  \u003d \u0027000000\u0027;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "export const COLOR_WHITE  \u003d \u0027FFFFFF\u0027;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "export const COLOR_SEVERITY_LOW \u003d \u0027ffcccc\u0027;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "export const COLOR_SEVERITY_MEDIUM \u003d \u0027ff9999\u0027;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "export const COLOR_SEVERITY_HIGH \u003d \u0027ff6666\u0027;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "export const COLOR_TYPE_DOCUMENTATION_BUG \u003d \u0027d966ff\u0027;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "export const COLOR_TYPE_FUNCTIONALITY_BUG \u003d \u00279900cc\u0027;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "export const COLOR_RESPONSE_ACCEPTED \u003d \u002700802b\u0027;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "export const COLOR_RESPONSE_REJECTED \u003d \u0027ff9900\u0027;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "export const COLOR_RESPONSE_ISSUE_UNCLEAR \u003d \u0027ffcc80\u0027;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "export const COLOR_RESPONSE_CANNOT_REPRODUCE \u003d \u0027ffebcc\u0027;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "export const COLOR_STATUS_DONE \u003d \u0027a6a6a6\u0027;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "export const COLOR_STATUS_INCOMPLETE \u003d \u0027000000\u0027;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "// CSS style constants"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "export const DARK_BG_LIGHT_TEXT \u003d {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027background-color\u0027 : `#${COLOR_BLACK}`,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027border-radius\u0027 : \u00273px\u0027,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027cursor\u0027 : \u0027default\u0027,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027padding\u0027 : \u00273px\u0027,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027color\u0027 : `#${COLOR_WHITE}`,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027font-weight\u0027 : \u0027410\u0027,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "export const LIGHT_BG_DARK_TEXT \u003d {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027background-color\u0027 : `#${COLOR_WHITE}`,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027border-radius\u0027 : \u00273px\u0027,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027cursor\u0027 : \u0027default\u0027,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027padding\u0027 : \u00273px\u0027,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027color\u0027 : `#${COLOR_BLACK}`,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027font-weight\u0027 : \u0027410\u0027,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "// Constant array of labels to simulate Github response"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "export const LABEL_ARRAY \u003d ["
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        color: COLOR_RESPONSE_ACCEPTED,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        name: RESPONSE + \u0027.\u0027 + RESPONSE_ACCEPTED"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        color: COLOR_SEVERITY_LOW,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        name: SEVERITY + \u0027.\u0027 + SEVERITY_LOW"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        color: COLOR_TYPE_FUNCTIONALITY_BUG,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        name: TYPE + \u0027.\u0027 + TYPE_FUNCTIONALITY_BUG"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "// List of labels"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "export const SEVERITY_LABELS \u003d [new Label(SEVERITY, SEVERITY_LOW, COLOR_SEVERITY_LOW),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  new Label(SEVERITY, SEVERITY_MEDIUM, COLOR_SEVERITY_MEDIUM),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  new Label(SEVERITY, SEVERITY_HIGH, COLOR_SEVERITY_HIGH)];"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 7,
      "-": 68
    }
  },
  {
    "path": "tests/model/issue.model.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import { Issue } from \u0027../../src/app/core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import { ISSUE_WITH_EMPTY_DESCRIPTION, ISSUE_WITH_ASSIGNEES } from \u0027../constants/githubissue.constants\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "describe(\u0027Issue model class\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    describe(\u0027.createPhaseBugReportIssue(githubIssue)\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        it(\u0027correctly creates a bug reporting issue that has an empty description\u0027, async () \u003d\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            const issue \u003d Issue.createPhaseBugReportingIssue(ISSUE_WITH_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            expect(issue.title).toBe(\u0027App starts to lag when given large amount of input\u0027);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            expect(issue.description).toBe(\u0027No details provided by bug reporter.\u0027);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            expect(issue.severity).toBe(\u0027Medium\u0027);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            expect(issue.type).toBe(\u0027FunctionalityBug\u0027);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        });"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    });"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    describe(\u0027.createPhaseTeamResponseIssue(githubIssue, githubComment)\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        it(\u0027correctly creates a team response issue that has an empty team response\u0027, async() \u003d\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            const dummyTeam \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            const issue \u003d Issue.createPhaseTeamResponseIssue(ISSUE_WITH_ASSIGNEES, dummyTeam);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            expect(issue.title).toBe(\u0027Screen freezes\u0027);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            expect(issue.teamResponse).toBe(\u0027No details provided by team.\u0027);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            expect(issue.severity).toBe(\u0027Medium\u0027);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            expect(issue.assignees).toContain(\u0027anubh-v\u0027);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            expect(issue.assignees.length).toBe(1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        });"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    describe(\u0027.updateDescription(description) and .updateTeamResponse(teamResponse)\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        it(\u0027correctly clean strings obtained from users\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            const noDetailsFromBugReporter \u003d \u0027No details provided by bug reporter.\u0027;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            const noDetailsFromTeam \u003d \u0027No details provided by team.\u0027;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            expect(Issue.updateDescription(\u0027\u0027)).toBe(noDetailsFromBugReporter);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            expect(Issue.updateTeamResponse(\u0027\u0027)).toBe(noDetailsFromTeam);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            expect(Issue.updateDescription(null)).toBe(noDetailsFromBugReporter);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            expect(Issue.updateTeamResponse(undefined)).toBe(noDetailsFromTeam);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            const typicalDescription \u003d \u0027The app crashes after parsing config files.\u0027;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            const typicalTeamResponse \u003d \u0027Cannot replicate the bug.\u0027;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            expect(Issue.updateDescription(typicalDescription)).toBe(typicalDescription);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            expect(Issue.updateTeamResponse(typicalTeamResponse)).toBe(typicalTeamResponse);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            const inputWithSpecialChars \u003d \u0027$%^!@\u0026-_test\u0027;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            expect(Issue.updateDescription(inputWithSpecialChars)).toBe(inputWithSpecialChars);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            expect(Issue.updateTeamResponse(inputWithSpecialChars)).toBe(inputWithSpecialChars);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        });"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    });"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "geshuming": 4,
      "anubh-v": 40,
      "-": 1
    }
  },
  {
    "path": "tests/services/application.service.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import { ApplicationService } from \u0027../../src/app/core/services/application.service\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "const applicationService \u003d new ApplicationService(null);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "const currentVersion \u003d \u00273.2.5\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "describe(\u0027Test the ApplicationService\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    it(\u0027Test whether the ApplicationService can detect outdated versions\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(applicationService.isOutdatedVersion(\u00272.2.5\u0027, currentVersion)).toBe(false);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(applicationService.isOutdatedVersion(\u00273.1\u0027, currentVersion)).toBe(false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(applicationService.isOutdatedVersion(\u00273.2.4\u0027, currentVersion)).toBe(false);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(applicationService.isOutdatedVersion(\u00273.2.4.8.9\u0027, currentVersion)).toBe(false);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(applicationService.isOutdatedVersion(currentVersion, currentVersion)).toBe(false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(applicationService.isOutdatedVersion(\u00273.2.5.0\u0027, currentVersion)).toBe(true);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(applicationService.isOutdatedVersion(\u00273.2.5.5\u0027, currentVersion)).toBe(true);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(applicationService.isOutdatedVersion(\u00273.2.6\u0027, currentVersion)).toBe(true);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(applicationService.isOutdatedVersion(\u002710\u0027, currentVersion)).toBe(true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    });"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "geshuming": 1,
      "anubh-v": 17
    }
  },
  {
    "path": "tests/services/data.service.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import { of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import { DataService } from \u0027../../src/app/core/services/data.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import { GithubService } from \u0027../../src/app/core/services/github.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import { autoSpy } from \u0027../auto-spy\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import { csvString, jsonData, dataFileTeamStructure } from \u0027../constants/data.constants\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "describe(\u0027DataService\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  describe(\u0027.getDataFile()\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    it(\u0027returns a json representation of the repo\\\u0027s data csv\u0027, done \u003d\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      const { build, githubService } \u003d setup();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      const dataService \u003d build();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      githubService.fetchDataFile.and.returnValue(of({\u0027data\u0027: csvString}));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      dataService.getDataFile().subscribe(actual \u003d\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        expect(actual).toEqual(jsonData);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        done();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      });"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    });"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    it(\u0027initializes an internal data structure that maps teamIds to Team objects\u0027, done \u003d\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      const { build, githubService } \u003d setup();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      const dataService \u003d build();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      githubService.fetchDataFile.and.returnValue(of({\u0027data\u0027: csvString}));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      dataService.getDataFile().subscribe(actual \u003d\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        expect(dataService.dataFile).toEqual(dataFileTeamStructure);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        done();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      });"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    });"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  });"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  describe(\u0027.getTeam(teamId)\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    it(\u0027returns the Team object corresponding to the given teamId\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      // arrange"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      const { build } \u003d setup();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      const dataService \u003d build();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      spyOn(dataService, \u0027getDataFile\u0027).and.callFake(() \u003d\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        dataService.dataFile \u003d dataFileTeamStructure;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return of({});"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      });"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      // act"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      dataService.getDataFile();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      // assert"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      expect(dataService.getTeam(\u0027CS2103T-W12-3\u0027)).toEqual(dataFileTeamStructure.teamStructure.get(\u0027CS2103T-W12-3\u0027));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      expect(dataService.getTeam(\u0027CS2103T-W12-4\u0027)).toEqual(dataFileTeamStructure.teamStructure.get(\u0027CS2103T-W12-4\u0027));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      expect(dataService.getTeam(\u0027CS2103T-W12-1\u0027)).toBeUndefined();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      expect(dataService.getTeam(\u0027CS2103T-W12-2\u0027)).toBeUndefined();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    });"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  });"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  describe(\u0027.getTeams()\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    it(\u0027returns an array containing ids of the teams in the repo\\\u0027s data csv\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      // arrange"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      const { build } \u003d setup();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      const dataService \u003d build();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      spyOn(dataService, \u0027getDataFile\u0027).and.callFake(() \u003d\u003e {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        dataService.dataFile \u003d dataFileTeamStructure;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return of({});"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      });"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      const teams \u003d ["
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        \u0027CS2103T-W12-3\u0027,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        \u0027CS2103T-W12-4\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      ];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      // act"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      dataService.getDataFile();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      const actual \u003d dataService.getTeams();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      // assert"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      expect(actual).toEqual(teams);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    });"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  });"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  describe(\u0027.reset()\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      it(\u0027clears the internal state of the DataService\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      // arrange"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      const { build } \u003d setup();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      const dataService \u003d build();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      spyOn(dataService, \u0027getDataFile\u0027).and.callFake(() \u003d\u003e {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        dataService.dataFile \u003d dataFileTeamStructure;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return of({});"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      });"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      // assert"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      dataService.getDataFile();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      expect(dataService.dataFile).toBeDefined();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      dataService.reset();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      expect(dataService.dataFile).toBeUndefined();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      });"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  });"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "geshuming"
        },
        "content": "});"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "geshuming"
        },
        "content": "function setup() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  const githubService \u003d autoSpy(GithubService);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  const builder \u003d {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    githubService,"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    build() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      return new DataService(githubService);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  };"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "geshuming"
        },
        "content": "  return builder;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 91,
      "anubh-v": 9
    }
  },
  {
    "path": "tests/services/githubevent.service.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import { GithubEventService } from \u0027../../src/app/core/services/githubevent.service\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import { of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import { EVENTS, ADD_LABEL_EVENT, CHANGE_TITLE_EVENT } from \u0027../constants/githubevent.constants\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "let githubService: any;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "let issueService: any;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "describe(\u0027GithubEventService\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  beforeAll(() \u003d\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    githubService \u003d jasmine.createSpyObj(\u0027GithubService\u0027, [\u0027fetchEventsForRepo\u0027]);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  });"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  describe(\u0027.setLatestChangeEvent()\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    it(\u0027stores the time of the most recent issue event\\ and most recent issue update.\u0027, async () \u003d\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      githubService.fetchEventsForRepo.and.returnValue(of(EVENTS));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      const githubEventService: GithubEventService \u003d new GithubEventService(githubService, null);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      await githubEventService.setLatestChangeEvent().toPromise();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      assertLastModified(githubEventService, EVENTS);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    });"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  });"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  describe(\u0027.reloadPage()\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    beforeAll(() \u003d\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      issueService \u003d jasmine.createSpyObj(\u0027IssueService\u0027, [\u0027reloadAllIssues\u0027]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      issueService.reloadAllIssues.and.returnValue(of([]));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    });"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    afterEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      issueService.reloadAllIssues.calls.reset();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    });"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    it(\u0027triggers the IssueService to re-initialise the issue list if there are new events\u0027, async () \u003d\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      const FIRST_EVENT \u003d [ADD_LABEL_EVENT];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      const SECOND_EVENT \u003d [CHANGE_TITLE_EVENT];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      githubService.fetchEventsForRepo.and.returnValue(of(FIRST_EVENT));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      const githubEventService: GithubEventService \u003d new GithubEventService(githubService, issueService);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      await githubEventService.reloadPage().toPromise();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      expect(issueService.reloadAllIssues.calls.count()).toBe(1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      assertLastModified(githubEventService, FIRST_EVENT);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      githubService.fetchEventsForRepo.and.returnValue(of(SECOND_EVENT));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      await githubEventService.reloadPage().toPromise();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      expect(issueService.reloadAllIssues.calls.count()).toBe(2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      assertLastModified(githubEventService, SECOND_EVENT);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    });"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    it(\u0027does not trigger the IssueService to re-initialise the issue list, if there are no new events\u0027,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      async () \u003d\u003e {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      githubService.fetchEventsForRepo.and.returnValue(of(EVENTS));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      const githubEventService: GithubEventService \u003d new GithubEventService(githubService, issueService);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      await githubEventService.reloadPage().toPromise();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      expect(issueService.reloadAllIssues.calls.count()).toBe(1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      assertLastModified(githubEventService, EVENTS);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      await githubEventService.reloadPage().toPromise();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      // issueService.reloadAllIssues must not have been called again"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      expect(issueService.reloadAllIssues.calls.count()).toBe(1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      assertLastModified(githubEventService, EVENTS);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    });"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  });"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  describe(\u0027.reset()\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    it(\u0027clears the details of the most recent event\u0027, async () \u003d\u003e {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      githubService.fetchEventsForRepo.and.returnValue(of(EVENTS));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      const githubEventService: GithubEventService \u003d new GithubEventService(githubService, null);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      await githubEventService.setLatestChangeEvent().toPromise();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      expect(githubEventService.getLastModifiedTime()).toBeDefined();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      expect(githubEventService.getLastModifiedCommentTime()).toBeDefined();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      githubEventService.reset();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      expect(githubEventService.getLastModifiedTime()).toBeUndefined();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      expect(githubEventService.getLastModifiedCommentTime()).toBeUndefined();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    });"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  });"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "});"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "function assertLastModified(githubEventService: GithubEventService, expectedEvents) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  expect(githubEventService.getLastModifiedTime()).toBe(expectedEvents[0].created_at);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  expect(githubEventService.getLastModifiedCommentTime()).toBe(expectedEvents[0].issue.updated_at);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anubh-v": 83
    }
  },
  {
    "path": "tests/services/permissions.service.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import { PermissionService } from \u0027../../src/app/core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import { Phase, PhaseService } from \u0027../../src/app/core/services/phase.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import { UserService } from \u0027../../src/app/core/services/user.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import { UserRole } from \u0027../../src/app/core/models/user.model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "const testStudent \u003d {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    loginId: \u0027testStudent\u0027,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    role: UserRole.Student"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "};"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "const testTutor \u003d {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    loginId: \u0027testTutor\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    role: UserRole.Tutor"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": "};"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "const testAdmin \u003d {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    loginId: \u0027testAdmin\u0027,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    role: UserRole.Admin"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": "};"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geshuming"
        },
        "content": "const mockUserService \u003d new UserService(null, null);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": "const mockPhaseService \u003d new PhaseService(null, null, null, null, null);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geshuming"
        },
        "content": "const permissionService \u003d new PermissionService(null, mockUserService, mockPhaseService);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "describe(\u0027Test a few permissions for each role in each phase\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    it(\u0027Test a few permissions for UserRole.Student\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        mockPhaseService.currentPhase \u003d Phase.phaseBugReporting;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        mockUserService.currentUser \u003d testStudent;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(permissionService.isIssueCreatable()).toBe(true);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(permissionService.isTutorResponseEditable()).toBe(false);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        mockPhaseService.currentPhase \u003d Phase.phaseTeamResponse;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(permissionService.isIssueLabelsEditable()).toBe(true);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(permissionService.isTeamResponseEditable()).toBe(true);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        mockPhaseService.currentPhase \u003d Phase.phaseTesterResponse;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        expect(permissionService.isIssueEditable()).toBe(true);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(permissionService.isIssueDescriptionEditable()).toBe(false);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        mockPhaseService.currentPhase \u003d Phase.phaseModeration;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(permissionService.isIssueDeletable()).toBe(false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(permissionService.isIssueTitleEditable()).toBe(false);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    });"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    it(\u0027Test a few permissions for UserRole.Tutor\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        mockPhaseService.currentPhase \u003d Phase.phaseBugReporting;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        mockUserService.currentUser \u003d testTutor;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(permissionService.isIssueCreatable()).toBe(false);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(permissionService.isIssueTitleEditable()).toBe(false);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        mockPhaseService.currentPhase \u003d Phase.phaseTeamResponse;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(permissionService.isIssueLabelsEditable()).toBe(false);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(permissionService.isTeamResponseEditable()).toBe(false);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        mockPhaseService.currentPhase \u003d Phase.phaseTesterResponse;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(permissionService.isIssueEditable()).toBe(false);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(permissionService.isIssueDescriptionEditable()).toBe(false);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        mockPhaseService.currentPhase \u003d Phase.phaseModeration;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(permissionService.isTutorResponseEditable()).toBe(true);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(permissionService.isIssueDeletable()).toBe(false);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    });"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    it(\u0027Test a few permissions for UserRole.Admin\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        mockPhaseService.currentPhase \u003d Phase.phaseBugReporting;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        mockUserService.currentUser \u003d testAdmin;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(permissionService.isIssueCreatable()).toBe(true);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(permissionService.isTutorResponseEditable()).toBe(false);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        mockPhaseService.currentPhase \u003d Phase.phaseTeamResponse;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(permissionService.isIssueLabelsEditable()).toBe(true);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(permissionService.isTeamResponseEditable()).toBe(true);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        mockPhaseService.currentPhase \u003d Phase.phaseTesterResponse;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(permissionService.isIssueEditable()).toBe(true);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(permissionService.isIssueDescriptionEditable()).toBe(true);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        mockPhaseService.currentPhase \u003d Phase.phaseModeration;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(permissionService.isIssueDeletable()).toBe(false);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        expect(permissionService.isIssueTitleEditable()).toBe(false);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    });"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "geshuming": 5,
      "anubh-v": 67,
      "-": 1
    }
  },
  {
    "path": "tests/services/upload.service.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import { UploadService, SUPPORTED_FILE_TYPES, FILE_TYPE_SUPPORT_ERROR } from \u0027../../src/app/core/services/upload.service\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "const PERIOD \u003d \u0027.\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "describe(\u0027UploadService\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    describe(\u0027.isSupportedFileType(fileName)\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        it(\u0027can distinguish valid / invalid filetypes\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            const uploadService \u003d new UploadService(null);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            for (const validFileType of SUPPORTED_FILE_TYPES) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                const validFileName \u003d \u0027testFile\u0027 + PERIOD + validFileType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                expect(uploadService.isSupportedFileType(validFileName)).toBe(true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            const invalidFileName \u003d \u0027testFile\u0027 + PERIOD + \u0027java\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            expect(uploadService.isSupportedFileType(invalidFileName)).toBe(false);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        });"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        it(\u0027is case insensitive\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "          const uploadService \u003d new UploadService(null);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": "          const invalidFileName \u003d \u0027TESTfile\u0027 + PERIOD + \u0027JS\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "          expect(uploadService.isSupportedFileType(invalidFileName)).toBe(false);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        });"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        it(\u0027returns false for filenames that do not have a file extension\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "          const uploadService \u003d new UploadService(null);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "          for (const validFileType of SUPPORTED_FILE_TYPES) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            const fileNameWithoutFileExtension \u003d \u0027testFile\u0027 + validFileType;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            expect(uploadService.isSupportedFileType(fileNameWithoutFileExtension)).toBe(false);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "          }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        });"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    });"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    describe(\u0027.uploadFile(fileData, fileName)\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        it(\u0027throws an error if an invalid filetype is uploaded\u0027, done \u003d\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "          const uploadService \u003d new UploadService(null);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "          uploadService.uploadFile(\u0027testdata\u0027, \u0027testFile.java\u0027).subscribe("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            val \u003d\u003e {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "              fail(\u0027This test case should fail.\u0027);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "              done();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            },"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            error \u003d\u003e {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "              expect(error).toBe(FILE_TYPE_SUPPORT_ERROR);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "              done();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "          );"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        });"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    });"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "geshuming": 5,
      "anubh-v": 42
    }
  },
  {
    "path": "tests/services/user.service.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import { jsonData, USER_JUNWEI, USER_Q, USER_SHUMING, USER_WITH_TWO_ROLES } from \u0027../constants/data.constants\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import { UserService } from \u0027../../src/app/core/services/user.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import { User, UserRole } from \u0027../../src/app/core/models/user.model\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import { of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "let dataService: any;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "describe(\u0027UserService\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  describe(\u0027.createUserModel(loginId)\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    beforeAll(() \u003d\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      dataService \u003d jasmine.createSpyObj(\u0027DataService\u0027, [\u0027getDataFile\u0027]);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      dataService.getDataFile.and.returnValue(of(jsonData));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    });"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    it(\u0027creates a Student user correctly\u0027, async () \u003d\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      await createAndVerifyUser(USER_JUNWEI.loginId, USER_JUNWEI);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    });"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    it(\u0027creates a Tutor user correctly when loginId is very short\u0027, async () \u003d\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      await createAndVerifyUser(USER_Q.loginId, USER_Q);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    });"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    it(\u0027creates an Admin user correctly\u0027, async () \u003d\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      await createAndVerifyUser(USER_SHUMING.loginId, USER_SHUMING);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    it(\u0027treats the loginId in a case insensitive manner\u0027, async () \u003d\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      await createAndVerifyUser(\u0027JUNWEi96\u0027, USER_JUNWEI);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    });"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    it(\u0027assigns highest possible role to a user who has multiple roles in data.csv\u0027, async () \u003d\u003e {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      await createAndVerifyUser(USER_WITH_TWO_ROLES.loginId, USER_WITH_TWO_ROLES);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    });"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    it(\u0027throws an error if the user is unauthorized\u0027, (done) \u003d\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      const userService \u003d new UserService(null, dataService);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      userService.createUserModel(\u0027RandomUser\u0027).subscribe("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        user \u003d\u003e {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "          fail(\u0027This test case should have failed.\u0027);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "          done();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        },"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        error \u003d\u003e {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "          expect(error).toEqual(new Error(\u0027Unauthorized user.\u0027));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "          done();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "      );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    });"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  });"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "});"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "async function createAndVerifyUser(loginId: string, expectedUser: User) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  const userService \u003d new UserService(null, dataService);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  const actualUser \u003d await userService.createUserModel(loginId).toPromise();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  expect(actualUser).toEqual(expectedUser);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 3,
      "anubh-v": 51,
      "-": 1
    }
  }
]

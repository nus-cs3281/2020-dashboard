[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Se-book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Online Version"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "[Demo](https://se-edu.github.io/se-book/)"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 3
    }
  },
  {
    "path": "_markbind/layouts/default/navigation.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cnavigation\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "* **About this book**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  * [About]({{baseUrl}}/about/acknowledgements.html)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  * [How to use this book]({{baseUrl}}/about/usage.html)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "* **Software engineering**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "  * [Software engineering]({{baseUrl}}/softwareEngineering/index.html)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "* **Object-oriented programming**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "  * [Object-oriented programming]({{baseUrl}}/oop/index.html)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "* **Requirements**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Requirements]({{baseUrl}}/requirements/index.html)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "  * [Gathering requirements]({{baseUrl}}/gatheringRequirements/index.html)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "  * [Specifying requirements]({{baseUrl}}/specifyingRequirements/index.html)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "* **Design**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Design]({{baseUrl}}/design/index.html)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "  * [Design fundamentals]({{baseUrl}}/designFundamentals/index.html)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Modeling]({{baseUrl}}/modeling/index.html)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Architecture]({{baseUrl}}/architecture/index.html)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "  * [Design patterns]({{baseUrl}}/designPatterns/index.html)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "  * [Design approaches]({{baseUrl}}/designApproaches/index.html)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "* **Implementation**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  * [IDEs]({{baseUrl}}/ides/index.html)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "  * [Code quality]({{baseUrl}}/codeQuality/index.html)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Refactoring]({{baseUrl}}/refactoring/index.html)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Documentation]({{baseUrl}}/documentation/index.html)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "  * [Error handling]({{baseUrl}}/errorHandling/index.html)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Integration]({{baseUrl}}/integration/index.html)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Reuse]({{baseUrl}}/reuse/index.html)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "* **Quality assurance**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "  * [Quality assurance]({{baseUrl}}/qualityAssurance/index.html)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Testing]({{baseUrl}}/testing/index.html)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "  * [Test case design]({{baseUrl}}/testCaseDesign/index.html)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "* **Project management**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "  * [Revision control]({{baseUrl}}/revisionControl/index.html)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "  * [Project planning]({{baseUrl}}/projectPlanning/index.html)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Teamwork]({{baseUrl}}/teamwork/index.html)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "  * [SDLC process models]({{baseUrl}}/processModels/index.html)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "* **Tools**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  * [UML]({{baseUrl}}/uml/index.html)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Intellij IDEA]({{baseUrl}}/intellij/index.html)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Git and GitHub]({{baseUrl}}/gitAndGithub/index.html)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "* **Principles**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Principles]({{baseUrl}}/principles/index.html)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "* **Supplementary**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  * [C++ to Java]({{baseUrl}}/cppToJava/index.html)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "* **[Combined exercises]({{baseUrl}}/combined/exercises.html)**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "* **[List of definitions]({{baseUrl}}/common/definitions.html)**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "* **[List of references]({{baseUrl}}/common/references.html)**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "* **[List of learning outcomes]({{baseUrl}}/common/outcomes.html)**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "* **[Printable version]({{baseUrl}}/common/print.html)**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/navigation\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 24,
      "-": 40
    }
  },
  {
    "path": "about/acknowledgements.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"About: Acknowledgements\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/css/textbook.css\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"website-content\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "**This book is [SE-EDU](https://se-education.org) sub project.**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "## License"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "* This book is free and open-source, and is available under the MIT licence."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "## Bug reports, suggestions"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "* Please post in [issue tracker](https://github.com/se-edu/se-book/issues)."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "## Contributions"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "* PRs are welcome."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "## Contact us"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "* You can contact us as `seer[at]comp.nus.edu.sg`."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "## Acknowledgements"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"text-only\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "* A large portion of this book is based on learning materials created by the following Software Engineering Instructors for their students (in alphabetical order):"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Bimlesh Wadhwa](http://www.comp.nus.edu.sg/~bimlesh)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Damith C. Rajapakse](http://www.comp.nus.edu.sg/~damithch)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Henry Chia](http://www.comp.nus.edu.sg/~hchia)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Soo Yuen Jien](http://www.comp.nus.edu.sg/~sooyj)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* [Rebekah Low](https://github.com/rebekahlow-jy): For programming the initial version of this book in [MarkBind](https://markbind.github.io/) format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 46
    }
  },
  {
    "path": "about/usage.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"About: Usage\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/css/textbook.css\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"website-content\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "# Using this book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"browsers\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "### Browser compatibility"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "Most of this will work on most mainstream Browsers, but \u003d\u003dembedded slides are best viewed using Chrome\u003d\u003d."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"layers\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "### Information layers"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "This book tries to _layer_ information so that readers can decide to omit less important layers if they wish to. "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "**More important information are in bold** or \u003d\u003dhighlighted\u003d\u003d while %%less important information are dimmed%% or in collapsed panels such as the below."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"Some less important info in a minimized panel\" minimized\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "Less important info"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e\u003cp/\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"%%Some less important info in a boarder-less panel%%\" type\u003d\"seamless\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "Less important info"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e\u003cp/\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"%%Some less important info in a panel%%\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "Less important info"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e\u003cp/\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "**Tabs indicate alternative formats of the same content** (e.g. video vs text). You can choose the one you like and ignore the other tabs. "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctabs\u003e "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctab header\u003d\"{{ icon_text }}\"\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "Some textual description of X"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/tab\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctab header\u003d\"{{ icon_video }}\"\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "Video describing X"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/tab\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/tabs\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "**Dotted underlines indicate \u003ctrigger for\u003d\"pop:tooltip-example\"\u003etool tips\u003c/trigger\u003e** (activated by hovering over it) and **dashed underlines indicate \u003ctrigger for\u003d\"modal:modal-example\" trigger\u003d\"click\"\u003emodal windows\u003c/trigger\u003e** (activated by clicking) containing additional information."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpopover id\u003d\"pop:tooltip-example\" header\u003d\"Tooltip Example\" placement\u003d\"top\"\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv slot\u003d\"content\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    Additional information"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/popover\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmodal header\u003d\"Modal Example\" id\u003d\"modal:modal-example\"\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  Additional information"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/modal\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"conventions\"\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "### Conventions used"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "#### Shorthand headings"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "Meaning of some shortened headings:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003cbig\u003e**What**\u003c/big\u003e : the **meaning** of the concept in concern "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel header\u003d\"%%Example%%\" src\u003d\"../refactoring/what/unit-inElsewhere-asFlat.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003cbig\u003e**Why**\u003c/big\u003e : the **motivation** behind the concept in concern"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel header\u003d\"%%Example%%\" src\u003d\"../documentation/guidelines/goTopDown/why/unit-inElsewhere-asFlat.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003cbig\u003e**How**\u003c/big\u003e : the **usage** of the concept in concern "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel header\u003d\"%%Example%%\" src\u003d\"../refactoring/how/unit-inElsewhere-asFlat.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003cbig\u003e**When**\u003c/big\u003e : the **pros and cons** of the concept in concern, **when to use** the concept "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel header\u003d\"%%Example%%\" src\u003d\"../refactoring/when/unit-inElsewhere-asFlat.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "#### Boxed-text styles"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"indented\"\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"info\"\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    additional info"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"warning\"\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    warning"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"success\"\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    positive message"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"important\"\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    important message"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"wrong\"\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    an error to avoid"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"tip\"\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    tip"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"definition\"\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    definition"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "#### Meaning of icons"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"indented\"\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_extra }} : tangential info, can be ignored if not interested\u003cbr\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_new_window }} : direct link to the LO. \u003ckbd\u003eCtrl\u003c/kbd\u003e+`Click` to open the LO in new window/tab.\u003cbr\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_outcome }} : learning outcomes\u003cbr\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_prereq }} : prerequisite learning outcome\u003cbr\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} : examples\u003cbr\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_resource }} : resources\u003cbr\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_exercise }} : exercises\u003cbr\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_print }} : printable version\u003cbr\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_preview }} : preview/more info\u003cbr\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_video }} : video\u003cbr\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_terminal }} : a command to be run in a terminal\u003cbr\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_text }} : textual description\u003cbr\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_slides }} : slides\u003cbr\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_output }} : output produced by running code\u003cbr\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_Q }} question without answer\u003cbr\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_Q_A }} question with answer\u003cbr\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"searching\"\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "### Searching"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "The book currently does not have a _search_ feature. The workaround is to load [the printable version of the book]({{baseUrl}}/common/print.html) (which loads the entire book into one page, minus the exercises) and use the Browser\u0027s search function."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"saving\"\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "### Saving as PDF files"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "1. Use Chrome to load the page you want to save as pdf."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click on the `Print` option in Chrome’s menu."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set the destination to `Save as PDF`, then click `Save` to save a copy of the file in PDF format. For best results, use the settings indicated in the screenshot below.\u003cbr/\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cimg src\u003d\"{{baseUrl}}/about/images/chromeSaveAsPdf.png\" /\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"printing\"\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "### Printing"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "The {{icon_print}} icon indicates printer-friendly versions of each chapter. A printer-friendly version of the entire book can be found [here]({{baseUrl}}/common/print.html)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 9,
      "-": 176
    }
  },
  {
    "path": "architecture/architecturalStyles/clientServer/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eClient-server architectural style\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "architecture/architecturalStyles/eventDriven/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eEvent-driven architectural style\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "architecture/architecturalStyles/more/moreStyles/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eMore styles\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can name several other architecture styles\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Other well-known architectural styles include the _pipes-and-filters architectures_, the _broker architectures_, the _peer-to-peer architectures_, and the _message-oriented architectures_.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"resources.md\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 14
    }
  },
  {
    "path": "architecture/architecturalStyles/more/usingStyles/q-essay-styleExamples.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Comment on how to use architecture styles in Minesweeper.\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion has-input\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Assume you are designing a multiplayer version of the Minesweeper game where any number of players can play the same Minefield. Players use their own PCs to play the game. A player scores by deducing a cell correctly before any of the other players do. Once a cell is correctly deduced, it appears as either marked or cleared for all players. "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "Comment on how each of the following architectural styles could be potentially useful when designing the architecture for this game."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "1. Client-server"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "2. Transaction-processing"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "3. SOA (Service Oriented Architecture)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "4. multi-layer (n-tier)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "1. Client-server – Clients can be the game UI running on player PCs. The server can be the game logic running on one machine."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "2. Transaction-processing – Each player action can be packaged as transactions (by the client component running on the player PC) and sent to the server. Server processes them in the order they are received."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "3. SOA – The game can access a remote web services for things such as getting new puzzles, validating puzzles, charging players subscription fees, etc."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "4. Multi-layer – The server component can have two layers: logic layer and the storage layer."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/architecture/architecturalStyles/more/usingStyles/images/minesweeperExample.png\" height\u003d\"300\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 24
    }
  },
  {
    "path": "architecture/architecturalStyles/more/usingStyles/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eUsing styles\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain how architectural styles are combined\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Most applications use a mix of these architectural styles.**  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} An application can use a client-server architecture where the server component comprises several layers, i.e. it uses the n-Tier architecture."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c!-- TODO: add diagram --\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 27
    }
  },
  {
    "path": "architecture/architecturalStyles/nTier/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eN-tier architectural style\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "architecture/architecturalStyles/serviceOriented/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eService-oriented architectural style\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "architecture/architecturalStyles/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eArchitectural styles\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"introduction/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"nTier/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"clientServer/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"transactionProcessing/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"serviceOriented/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"eventDriven/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"more/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 12
    }
  },
  {
    "path": "architecture/architecturalStyles/transactionProcessing/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eTransaction processing architectural style\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "architecture/architectureDiagrams/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eArchitecture diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"reading/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"drawing/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 7
    }
  },
  {
    "path": "architecture/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Software Architecture\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 2,
      "-": 5
    }
  },
  {
    "path": "architecture/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eSoftware architecture\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"introduction/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"architectureDiagrams/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"architecturalStyles/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 8
    }
  },
  {
    "path": "codeQuality/avoidShortcuts/basic/avoidEmptyCatchBlocks/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAvoid empty catch blocks\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can improve code quality using technique: avoid empty catch blocks \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Never write an empty `catch` statement. At least give a comment to explain why the `catch` block is left empty."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 13
    }
  },
  {
    "path": "codeQuality/avoidShortcuts/basic/deleteDeadCode/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eDelete dead code\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can improve code quality using technique: delete dead code \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "You might feel reluctant to delete code you have painstakingly written, even if you have no use for that code any more (\"I spent a lot of time writing that code; what if I need it again?\"). Consider all code as baggage you have to carry; get rid of unused code the moment it becomes redundant. If you need that code again, simply recover it from the revision control tool you are using. Deleting code you wrote previously is a sign that you are improving."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 2,
      "-": 12
    }
  },
  {
    "path": "codeQuality/avoidShortcuts/basic/dontRecycleVarsOrParams/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eDon\u0027t recycle variables or parameters\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can improve code quality using technique: don\u0027t recycle variables or parameters \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "*\tUse one variable for one purpose. Do not reuse a variable for a different purpose other than its intended one, just because the data type is the same."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "*\tDo not reuse formal parameters as local variables inside the method."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "{{bad}}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"alt-java\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "double computeRectangleArea(double length, double width) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    length \u003d length * width;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    return length;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"alt-python\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "```python"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "def compute_rectangle_area(length, width):"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    length \u003d length * width"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    return length"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "{{good}}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"alt-java\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "double computeRectangleArea(double length, double width) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    double area;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    area \u003d length * width;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    return area;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"alt-python\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "```python"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "def compute_rectangle_area(length, width):"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    area \u003d length * width"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    return area"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 61
    }
  },
  {
    "path": "codeQuality/avoidShortcuts/basic/useDefaultBranch/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eUse the default branch\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can improve code quality using technique: use the default branch \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Always include a default branch in `case` statements."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "Furthermore, use it for the intended default action and not just to execute the last option. If there is no default action, you can use the \u0027default\u0027 branch to detect errors (i.e. if execution reached the `default` branch, throw an exception). This also applies to the final `else` of an `if-else` construct. That is, the final `else` should mean \u0027everything else\u0027, and not the final option. Do not use `else` when an `if` condition can be explicitly specified, unless there is absolutely no other possibility."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{{bad}}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "if (red) print \"red\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "else print \"blue\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "{{good}}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "if (red) print \"red\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "else if (blue) print \"blue\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "else error(\"incorrect input\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 32
    }
  },
  {
    "path": "codeQuality/avoidShortcuts/intermediate/minimiseCodeDuplication/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eMinimize code duplication\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can improve code quality using technique: minimize code duplication \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Code duplication, especially when you copy-paste-modify code, often indicates a poor quality implementation.** While it may not be possible to have zero duplication, always think twice before duplicating code; most often there is a better alternative."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "This guideline is closely related to the \u003ctrigger for\u003d\"modal:duplication-dry\" trigger\u003d\"click\"\u003eDRY Principle\u003ctrigger\u003e. "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmodal header\u003d\"**{{icon_preview}} DRY Principle**\" id\u003d\"modal:duplication-dry\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../../../../principles/dryPrinciple/unit-inElsewhere-asFlat.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/modal\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 19
    }
  },
  {
    "path": "codeQuality/avoidShortcuts/intermediate/minimiseVariableScope/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eMinimize scope of variables\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can improve code quality using technique: minimise scope of variables \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Minimize global variables**. Global variables may be the most convenient way to pass information around, but they do create implicit links between code segments that use the global variable. Avoid them as much as possible."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "**Define variables in the least possible scope**. For example, if the variable is used only within the `if` block of the conditional statement, it should be declared inside that `if` block. "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e**The most powerful technique for minimizing the scope of a local variable is to declare it where it is first used.** \u003csub\u003e-- _Effective Java_, by Joshua Bloch\u003c/sub\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_resource }} Resources:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "* [Refactoring: Reduce Scope of Variable](https://refactoring.com/catalog/reduceScopeOfVariable.html) "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 21
    }
  },
  {
    "path": "codeQuality/avoidShortcuts/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eGuideline: Avoid unsafe shortcuts\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"introduction/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"basic/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"intermediate/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 8
    }
  },
  {
    "path": "codeQuality/commentMinimally/basic/dontRepeatObvious/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eDo not repeat the obvious\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can improve code quality using technique: do not repeat the obvious \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "If the code is self-explanatory, refrain from repeating the description in a comment just for the sake of \u0027good documentation\u0027."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"alt-java\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{bad}}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "//increment x"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "x++;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "//trim the input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "trimInput();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"alt-python\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "{{bad}}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "```python"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# increment x"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "x \u003d x + 1"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# trim the input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "trim_input()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 36
    }
  },
  {
    "path": "codeQuality/commentMinimally/basic/writeToReader/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eWrite to the reader\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can improve code quality using technique: write to the reader \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Do not write comments as if they are private notes to yourself. Instead, write them well enough to be understood by another programmer. One type of comments that is almost always useful is the _header comment_ that you write for a class or an operation to explain its purpose."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Examples:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"alt-java\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"example-java.md\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"alt-python\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"example-python.md\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 31
    }
  },
  {
    "path": "codeQuality/commentMinimally/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eGuideline: Comment minimally, but sufficiently\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"introduction/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"basic/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"intermediate/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 8
    }
  },
  {
    "path": "codeQuality/followStandard/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eGuideline: Follow a standard\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"introduction/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"basic/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"intermediate/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 8
    }
  },
  {
    "path": "codeQuality/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Code Quality\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 5
    }
  },
  {
    "path": "codeQuality/introduction/basic/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eWhat\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain the importance of code quality\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e Always code as if the person who ends up maintaining your code will be a violent psychopath who knows where you live. \u003csub\u003e-- Martin Golding\u003c/sub\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "**\u003ctrigger for\u003d\"pop:production-code\"\u003eProduction code\u003c/trigger\u003e needs to be of high quality**. Given how the world is becoming increasingly dependent of software, poor quality code is something no one can afford to tolerate."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpopover id\u003d\"pop:production-code\" header\u003d\"{{icon_preview}} Production Code\" placement\u003d\"top\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv slot\u003d\"content\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    Code being used in an actual product with actual users"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/popover\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 21
    }
  },
  {
    "path": "codeQuality/maximiseReadability/advanced/makeHappyPathProminent/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eMake the happy path prominent\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can improve code quality using technique: make the happy path prominent \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "The happy path (i.e. the execution path taken when everything goes well) should be clear and prominent in your code. Restructure the code to make the happy path unindented as much as possible. It is the ‘unusual’ cases that should be indented. Someone reading the code should not get distracted by alternative paths taken when error conditions happen. One technique that could help in this regard is the use of [guard clauses](http://wiki.c2.com/?GuardClause)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{{bad}}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "if (!isUnusualCase) {  //detecting an unusual condition"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!isErrorCase) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        start();    //main path"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        process();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        cleanup();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        handleError();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "} else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    handleUnusualCase(); //handling that unusual condition"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "In the code above,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "* Unusual condition detection is separated from their handling."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "* Main path is nested deeply."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "{{good}}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if (isUnusualCase) { //Guard Clause"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    handleUnusualCase();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    return;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "if (isErrorCase) { //Guard Clause"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    handleError();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    return;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "start();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "process();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "cleanup();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "exit();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "In contrast, the above code"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "* deals with unusual conditions as soon as they are detected so that the reader doesn\u0027t have to remember them for long."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "* keeps the main path un-indented."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 60
    }
  },
  {
    "path": "codeQuality/maximiseReadability/basic/avoidComplicatedExpressions/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAvoid complicated expressions\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can improve code quality using technique: avoid complicated expressions \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Avoid complicated expressions, especially those having many negations and nested parentheses. If you must evaluate complicated expressions, have it done in steps (i.e. calculate some intermediate values first and use them to calculate the final value)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"alt-java\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"example-java.md\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"alt-python\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"example-python.md\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e {{ icon_quote_start }} The competent programmer is fully aware of the strictly limited size of his own skull; therefore he approaches the programming task in full humility, and among other things he avoids clever tricks like the plague. {{ icon_quote_end }} \u003csub\u003e-- Edsger Dijkstra\u003c/sub\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 25
    }
  },
  {
    "path": "codeQuality/maximiseReadability/basic/avoidDeepNesting/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAvoid deep nesting\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can improve code quality using technique: avoid deep nesting \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003eIf you need more than 3 levels of indentation, you\u0027re screwed anyway, and should fix your program. \u003csub\u003e--Linux 1.3.53 CodingStyle\u003c/sub\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "In particular, avoid [_arrowhead_ style code](https://blog.codinghorror.com/flattening-arrow-code/)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/codeQuality/maximiseReadability/basic/avoidDeepNesting/images/arrowheadStyle.png\" width\u003d\"500\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} A real code example:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"alt-java\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../../introduction/example-java.md\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"alt-python\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../../introduction/example-python.md\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 31
    }
  },
  {
    "path": "codeQuality/maximiseReadability/basic/avoidLongMethods/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAvoid long methods\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can improve code quality using technique: avoid long methods \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Be wary when a method is longer than the computer screen, and take corrective action when it goes beyond 30 LOC (lines of code). The bigger the haystack, the harder it is to find a needle."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 13
    }
  },
  {
    "path": "codeQuality/maximiseReadability/basic/avoidMagicNumbers/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAvoid magic numbers\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can improve code quality using technique: avoid magic numbers \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "When the code has a number that does not explain the meaning of the number, it is called a \"magic number\" (as in \"the number appears as if by magic\"). Using a \u003ctooltip content\u003d\"e.g., `PI`\"\u003e_named constant_\u003c/tooltip\u003e makes the code easier to understand because the name tells us more about the meaning of the number."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Example:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"alt-java\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"example-java.md\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"alt-python\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"example-python.md\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "Similarly, you can have ‘magic’ values of other data types."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "{{bad}}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"alt-java\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "return \"Error 1432\"  // A magic string!"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"alt-python\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "```python"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "return \"Error 1432\"  # A magic string!"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "In general, try to avoid any magic literals."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 3,
      "-": 54
    }
  },
  {
    "path": "codeQuality/maximiseReadability/basic/makeCodeObvious/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eMake the code obvious\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can improve code quality using technique: make the code obvious \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Make the code as explicit as possible, even if the language syntax allows them to be implicit. Here are some examples:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* [`Java`] Use explicit type conversion instead of implicit type conversion."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* [`Java`, `Python`] Use parentheses/braces to show grouping even when they can be skipped."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "* [`Java`, `Python`] Use \u003ctrigger trigger\u003d\"click\" for\u003d\"modal:obviousCode-enums\"\u003eenumerations\u003c/trigger\u003e when a certain variable can take only a small number of finite values. For example, instead of declaring the variable \u0027state\u0027 as an integer and using values 0,1,2 to denote the states \u0027starting\u0027, \u0027enabled\u0027, and \u0027disabled\u0027 respectively, declare \u0027state\u0027 as type `SystemState` and define an enumeration `SystemState` that has values `\u0027STARTING\u0027`, `\u0027ENABLED\u0027`, and `\u0027DISABLED\u0027`."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmodal header\u003d\"More about enumerations\" id\u003d\"modal:obviousCode-enums\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "* [More about Java enumerations]({{ java_tutorial }}/java/javaOO/enum.html)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "* [More about Python enumerations](https://docs.python.org/3/library/enum.html)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/modal\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 24
    }
  },
  {
    "path": "codeQuality/maximiseReadability/intermediate/avoidPrematureOptimizations/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAvoid premature optimizations\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can improve code quality using technique: avoid premature optimizations \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Optimizing code prematurely has several drawbacks**:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "* **You may not know which parts are the real performance bottlenecks**. This is especially the case when the code undergoes transformations (e.g. compiling, minifying, transpiling, etc.) before it becomes an executable. Ideally, you should use a profiler tool to identify the actual bottlenecks of the code first, and optimize only those parts."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* **Optimizing can complicate the code**, affecting correctness and understandability"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* **Hand-optimized code can be harder for the compiler to optimize** (the simpler the code, the easier for the compiler to optimize it). In many cases a compiler can do a better job of optimizing the runtime code if you don\u0027t get in the way by trying to hand-optimize the source code."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "A popular saying in the industry is **_make it work, make it right, make it fast_** which means in most cases getting the code to perform correctly should take priority over optimizing it. If the code doesn\u0027t work correctly, it has no value on matter how fast/efficient it it."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e {{ icon_quote_start }} Premature optimization is the root of all evil in programming. {{ icon_start_end }} \u003csub\u003e--[Donald Knuth](https://en.wikipedia.org/wiki/Donald_Knuth)\u003c/sub\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "Note that **there are cases where optimizing takes priority over other things** %%e.g. when writing code for resource-constrained environments%%. This guideline simply a caution that you should optimize only when it is really needed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 2,
      "-": 21
    }
  },
  {
    "path": "codeQuality/maximiseReadability/intermediate/dontTripReader/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eDo not \u0027Trip Up\u0027 reader\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can improve code quality using technique: do not \u0027trip up\u0027 reader \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Avoid things that would make the reader go ‘huh?’, such as,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "*\tunused parameters in the method signature"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "*\tsimilar things that look different"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "*\tdifferent things that look similar"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "*\tmultiple statements in the same line"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "*\tdata flow anomalies such as, pre-assigning values to variables and modifying it without any use of the pre-assigned value"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 19
    }
  },
  {
    "path": "codeQuality/maximiseReadability/intermediate/q-tick-drawback.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Drawbacks of prepature optimizations\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "What are the drawbacks of trying to optimize code too soon?"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "- [ ] a. You may not know which parts are the real performance bottleneck"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "- [ ] b. When you optimize code manually, it becomes harder for the compiler to optimize"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] c. Optimizing can complicate code"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] d. Optimizing can lead to more error-prone code"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "a, b, c, d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 2,
      "-": 15
    }
  },
  {
    "path": "codeQuality/maximiseReadability/intermediate/q-tick-trueFalse.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Small methods or lengthy methods?\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Putting all details in one place can create lengthy methods, but it is preferred over creating many small methods because it makes the code easier to understand."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) True"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) False"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "False"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "Explanation: If you are using abstraction properly, you DON’T need to see all details to understand something. The whole point of using abstraction is to be able to understand things without knowing as little details as possible. This is why you are recommend to use single level of abstraction per method and top-down coding."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 17
    }
  },
  {
    "path": "codeQuality/maximiseReadability/intermediate/slapHard/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eSLAP hard\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can improve code quality using technique: SLAP hard \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Avoid varying the level of \u003ctrigger trigger\u003d\"click\" for\u003d\"modal:slap-abstraction\"\u003eabstraction\u003c/trigger\u003e within a code fragment."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "Note: The _Productive Programmer_ (by Neal Ford) calls this the _SLAP principle_ i.e. Single Level of Abstraction Per method."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "{{bad}} (`readData();` and `salary \u003d basic*rise+1000;` are at different levels of abstraction)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "readData();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "salary \u003d basic*rise+1000;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "tax \u003d (taxable?salary*0.07:0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "displayResult();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "{{good}} (all statements are at the same level of abstraction)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "readData();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "processData();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "displayResult();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmodal header\u003d\"\" id\u003d\"modal:slap-abstraction\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../../../../designFundamentals/abstraction/what/unit-inElsewhere-asFlat.md\" boilerplate/\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/modal\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 40
    }
  },
  {
    "path": "codeQuality/maximiseReadability/intermediate/structureCodeLogically/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eStructure code logically\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can improve code quality using technique: structure code logically \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "Lay out the code so that it adheres to the logical structure. The code should read like a story. Just like you use section breaks, chapters and paragraphs to organize a story, use classes, methods, indentation and line spacing in your code to group related segments of the code.  For example, you can use blank lines to group related statements together."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "Sometimes, the correctness of your code does not depend on the order in which you perform certain intermediary steps. Nevertheless, this order may affect the clarity of the story you are trying to tell. Choose the order that makes the story most readable."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 2,
      "-": 14
    }
  },
  {
    "path": "codeQuality/maximiseReadability/introduction/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eIntroduction\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain the importance of readability\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e {{ icon_quote_start }} Programs should be written and polished until they acquire publication quality. {{ icon_quote_end }} \u003csub\u003e--[Niklaus Wirth](https://en.wikipedia.org/wiki/Niklaus_Wirth)\u003c/sub\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "**Among various dimensions of code quality, such as run-time efficiency, security, and robustness, one of the most important is understandability.** This is because in any non-trivial software project, code needs to be read, understood, and modified by other developers later on. Even if you do not intend to pass the code to someone else, code quality is still important because you will become a \u0027stranger\u0027 to your own code someday."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The two code samples given below achieve the same functionality, but one is easier to read."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"alt-java\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"example-java.md\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"alt-python\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"example-python.md\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 30
    }
  },
  {
    "path": "codeQuality/maximiseReadability/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eGuideline: Maximise readability\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"introduction/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"basic/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"intermediate/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"advanced/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 9
    }
  },
  {
    "path": "codeQuality/nameWell/basic/nounsAndVerbsAsNames/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eUse nouns for things and verbs for actions\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can improve code quality using technique: use nouns for things and verbs for actions \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e{{ icon_quote_start }} Every system is built from a domain-specific language designed by the programmers to describe that system. Functions are the verbs of that language, and classes are the nouns. {{ icon_quote_end }}\u003cbr\u003e\u003csub\u003e― Robert C. Martin, _Clean Code: A Handbook of Agile Software Craftsmanship_\u003c/sub\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "**Use nouns for classes/variables and verbs for methods/functions.**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "Name for a | {{bad}}        | {{good}}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "-----------|-----------------|----------------"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "Class      |`CheckLimit`     | `LimitChecker`           "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "method     |`result()`       | `calculate()`  "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "**Distinguish clearly between single-valued and multivalued variables.**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Examples:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"alt-java\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "{{good}}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "Person student;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "ArrayList\u003cPerson\u003e students;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"alt-python\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "{{good}}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "```python"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "name \u003d \u0027Jim\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "names \u003d [\u0027Jim\u0027, \u0027Alice\u0027]"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 52
    }
  },
  {
    "path": "codeQuality/nameWell/basic/useStandardWords/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eUse standard words\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can improve code quality using technique: use standard words \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Use correct spelling in names. Avoid \u0027texting-style\u0027 spelling. **Avoid foreign language words, slang, and names that are only meaningful within specific contexts/times** %%e.g. terms from private jokes, a TV show currently popular in your country%%"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 13
    }
  },
  {
    "path": "codeQuality/nameWell/intermediate/avoidMisleadingNames/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAvoid misleading names\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can improve code quality using technique: avoid misleading names \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Related things should be named similarly, while unrelated things should NOT.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Example: Consider these variables "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "* `colorBlack`: hex value for color black"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "* `colorWhite`: hex value for color white"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "* `colorBlue`: number of times blue is used"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "* `hexForRed`: hex value for color red"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "This is misleading because `colorBlue` is named similar to `colorWhite` and `colorBlack` but has a different purpose while `hexForRed` is named differently but has very similar purpose to the first two variables. The following is better: "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "* `hexForBlack` `hexForWhite` `hexForRed` "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "* `blueColorCount`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "Avoid misleading or ambiguous names (e.g. those with multiple meanings), similar sounding names, hard-to-pronounce ones (e.g. avoid ambiguities like \"is that a lowercase L, capital I or number 1?\", or \"is that number 0 or letter O?\"), almost similar names."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "| {{bad}}        | {{good}}        |  Reason      |"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "| --------------- | --------------- |  --------------- |"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "|`phase0`  |`phaseZero`  |  Is that zero or letter O? |"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "|`rwrLgtDirn`  |`rowerLegitDirection`  |  Hard to pronounce |"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "|`right` `left` `wrong`  |`rightDirection` `leftDirection` `wrongResponse`  |  `right` is for \u0027correct\u0027 or \u0027opposite of \u0027left\u0027? |"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "|`redBooks` `readBooks`  |`redColorBooks` `booksRead` |  `red` and `read` (past tense) sounds the same |"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "|`FiletMignon`  |`egg` |  If the requirement is just a name of a food, `egg` is a much easier to type/say choice than `FiletMignon` |"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 44
    }
  },
  {
    "path": "codeQuality/nameWell/intermediate/notTooLongNorShort/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eNot too long, not too short\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can improve code quality using technique: not too long, not too short \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "While it is preferable not to have lengthy names, names that are \u0027too short\u0027 are even worse.  If you must abbreviate or use acronyms, do it consistently. Explain their full meaning at an obvious location."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 13
    }
  },
  {
    "path": "codeQuality/nameWell/intermediate/useNameExplain/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eUse name to explain\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can improve code quality using technique: use name to explain \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**A name is not just for differentiation; it should explain the named entity to the reader accurately and at a sufficient level of detail.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "| {{bad}}          |  {{good}}                     |"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "| ----------------- |  ----------------------------- |"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "|`processInput()`  (what \u0027process\u0027?) |  `removeWhiteSpaceFromInput()` |"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "|`flag`   |  `isValidInput` |"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "|`temp`   |   |"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "**If the name has multiple words, they should be in a sensible order.**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "| {{bad}}        |  {{good}}       |"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "| --------------- |  --------------- |"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "|`bySizeOrder()`  |  `orderBySize()` |"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "Imagine going to the doctor\u0027s and saying \"My eye1 is swollen\"! Don’t use numbers or case to distinguish names."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "| {{bad}}          | {{bad}}          | {{good}}                     |"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "| ----------------- | ----------------- | ----------------------------- |"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "|`value1`, `value2` | `value`, `Value`  | `originalValue`, `finalValue` |"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 50
    }
  },
  {
    "path": "codeQuality/nameWell/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eGuideline: Name well\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"introduction/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"basic/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"intermediate/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 8
    }
  },
  {
    "path": "codeQuality/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eCode quality\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"introduction/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"maximiseReadability/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"followStandard/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"nameWell/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"avoidShortcuts/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"commentMinimally/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 11
    }
  },
  {
    "path": "combined/exercises.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "title: \"Combined Exercises\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/css/textbook.css\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"website-content\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "## Combined Exercises"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "Here are some exercises that combine multiple topics."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises/chooseCorrectStatementAboutRequirements.md\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises/correctStatementAboutClassObjectSequenceDiagrams.md\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises/usefulModelToDescribeWorkflow.md\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises/oddStatementOnProjMgtTools.md\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises/correctStatementAboutPrinciplesAndPatterns.md\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises/interpretClassAndObjectDiagramAllNotations.md\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 4,
      "-": 17
    }
  },
  {
    "path": "combined/exercises/chooseCorrectStatementAboutRequirements.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Choose the correct statement about requirements.\" expanded\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"%%{{ icon_prereq }}%% Prerequisites\" minimized\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../requirements/introduction/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }} Requirements: Introduction%%\" /\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../requirements/nonFunctionalRequirements/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }} Requirements: Non-Functional Requirements%%\" /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../gatheringRequirements/prototyping/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }} Gathering Requirements: Prototyping%%\" /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "Choose the correct statement"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) a. A non-functional requirement is a requirement that hasn’t been fully implemented yet."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) b. Functional requirements are always more important than non-functional ones."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) c. In a green field project, one must start by studying the existing product."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) d. Prototyping can be used to discover as well as record requirements."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) e. Users know how the product should be. They just don’t know how to communicate it to us."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "d"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "Explanation:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "* Functional requirements are not *always* more important."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "* Greenfield projects do not have existing products."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "* Users can inform us about the present. They may not be able to envision the future. (It’s not the consumers’ job to know what they want --Steve Jobs)."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 31
    }
  },
  {
    "path": "combined/exercises/correctStatementAboutClassObjectSequenceDiagrams.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Class Diagrams vs Object Diagrams vs Sequence Diagrams\" expanded\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_prereq }} Prerequisites\" expandable minimized\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../modeling/modelingStructures/objectDiagrams/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }}%% Modeling: Modeling Structures: Object Diagrams\" /\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../modeling/modelingStructures/classDiagramsBasic/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }}%% Modeling: Modeling Structures: Class Diagrams\" /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../modeling/modelingBehaviors/sequenceDiagramsBasic/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }}%% Modeling: Modeling Behaviors: Sequence Diagrams\" /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "Choose the incorrect statement."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) a. An object diagrams models the structure of an OO system at a given time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) b. A class diagrams models the general structure of an OO solution."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) c. A class diagram can correspond to many object diagrams."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) d. A sequence diagram represents how objects are connected to each other."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) e. Sequence diagrams can be used to find APIs for classes."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "d"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "Explanation: A sequence diagram is a behavior diagram, not a structure diagram. An SD can represent how objects interact with each other (i.e., behavior), not how they are connected to each other (i.e. structure)."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 27
    }
  },
  {
    "path": "combined/exercises/correctStatementAboutPrinciplesAndPatterns.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Choose the least  correct statement about principles and patterns.\" expanded\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"%%{{ icon_prereq }}%% Prerequisites\" minimized\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../designPatterns/introduction/what/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"{{ icon_prereq }} Design Patterns: Introduction: What\" /\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "Choose the least correct statement"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) a. Principles are typically more general than patterns."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) b. Both patterns and principles are ways for us to benefit from experiences of others."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) c. Patterns gives us a higher-level vocabulary to talk about design."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) d. Most design patterns and design principles try to reduce coupling and increase cohesion."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) e. The more patterns we apply, the better the design becomes."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "Explanation: Patterns have costs and sometimes they may be an overkill. Therefore, we should apply them judiciously."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 25
    }
  },
  {
    "path": "combined/exercises/oddStatementOnProjMgtTools.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Pick the odd one out of these project management tools/techniques.\" expanded\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"%%{{ icon_prereq }}%% Prerequisites\" minimized\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../revisionControl/what/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"{{ icon_prereq }} Revision Control: What\" /\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../projectPlanning/ganttCharts/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"Project Planning: Gantt Charts\" /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../projectPlanning/issueTrackers/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"{{ icon_prereq }} Project Planning: Issue Trackers\" /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../projectPlanning/pertCharts/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"Project Planning: PERT Charts\" /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../projectPlanning/workBreakdownStructure/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"{{ icon_prereq }} Project Planning: Work Breakdown Structure\" /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "Pick the odd one out."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) a. RCS (Revision Control Software)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) b. Gantt charts"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) c. Issue trackers"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) d. PERT charts"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) e. Work Breakdown Structure (WBS)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "a"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "Explanation: RCS is for managing code changes. The others are tools and techniques for managing project schedules. It’s OK if you don’t agree with the answer. What matters is that you know what each one is for."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 29
    }
  },
  {
    "path": "combined/exercises/usefulModelToDescribeWorkflow.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Which one of these is the most useful to describe a workflow?\" expanded\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_prereq }} Prerequisites\" expandable minimized\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../modeling/modelingStructures/classDiagramsBasic/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }}%% Modeling: Modeling Structures: Class Diagrams\" /\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../modeling/modelingStructures/objectDiagrams/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }}%% Modeling: Modeling Structures: Object Diagrams\" /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../modeling/modelingBehaviors/activityDiagrams/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }}%% Modeling: Modeling Behaviors: Activity Diagrams\" /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\t\u003cpanel src\u003d\"../../modeling/modelingBehaviors/stateMachineDiagrams/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }}%% Modeling: Modeling Behaviors: State Machine Diagrams\" /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../modeling/modelingBehaviors/useCaseDiagrams/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }}%% Modeling: Modeling Behaviors: Use Case Diagrams\" /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "Which one of these is the most useful to model a workflow?"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) a. class diagram"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) b. object diagram"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) c. activity diagram"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) d. state machine diagram"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) e. use case diagram"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "c"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 27
    }
  },
  {
    "path": "common/all.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"SE Book [All-In-One-Page Big File!]\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/css/textbook.css\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"website-content\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# BOOK: SOFTWARE ENGINEERING FOR SELF-DIRECTED LEARNERS"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "### About this Book"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "* [Acknowledgements](about/acknowledgements.html)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "* [How to use this book](about/usage.html)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"toc.md\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "# SECTION: INTRODUCTION"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../softwareEngineering/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# SECTION: PROGRAMMING PARADIGMS"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# SECTION: REQUIREMENTS"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../requirements/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gatheringRequirements/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../specifyingRequirements/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "# SECTION: DESIGN"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../design/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designFundamentals/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../architecture/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designPatterns/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designApproaches/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "# SECTION: IMPLEMENTATION"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../ides/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../refactoring/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../documentation/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../errorHandling/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../integration/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../reuse/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "# SECTION: QUALITY ASSURANCE"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../qualityAssurance/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testCaseDesign/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "# SECTION: PROJECT MANAGEMENT"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../revisionControl/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../projectPlanning/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../teamwork/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../processModels/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "# SECTION: TOOLS"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../intellij/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gitAndGithub/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "# SECTION: PRINCIPLES"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../principles/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "# SECTION: SUPPLEMENTARY"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../cppToJava/chapter.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c!-- TODO: add review --\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "* [List of Definitions](common/definitions.html)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "* [List of References](common/references.html)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "* [List of Learning Outcomes](common/outcomes.html)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "* [Printable Version {{icon_print}}](common/print.html)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 2,
      "-": 113
    }
  },
  {
    "path": "common/definitions.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Definitions\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/css/textbook.css\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"website-content\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "# Definitions"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "## A"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-abstractClass\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "**Abstract Class**: A class declared as an _abstract class_ cannot be instantiated, but it can be subclassed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-abstractMethod\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "**Abstract Method**: An _abstract method_ is a method signature without a method implementation."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-abstraction\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "**Abstraction** is a technique for dealing with complexity. It works by establishing a level of complexity we are interested in, and suppressing the more complex details below that level."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-acceptance-testing\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "**_Acceptance testing_ (aka _User Acceptance Testing (UAT)_: test the system to ensure it meets the user requirements.**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-actor\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "**Actor**: An actor (in a use case) is a role played by a user.  An actor can be a human or another system. Actors are not part of the system; they reside outside the system."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-architecture\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "**Architecture**: The high level structures of a software system, the discipline of creating such structures, and the documentation of these structures. These structures are needed to reason about the software system. Each structure comprises software elements, relations among them, and properties of both elements and relations. The architecture of a software system is a metaphor, analogous to the architecture of a building."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "## B"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-brainstorming\"\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "**Brainstorming**: A group activity designed to _generate a large number of diverse and creative ideas_ for the _solution_ of a problem."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-brooks-law\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "**Brooks\u0027 Law**: Adding people to a late project will make it later. -- Fred Brooks (author of _The Mythical Man-Month_)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "## C"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-camel-case\"\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cblockquote\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpic src\u003d\"https://upload.wikimedia.org/wikipedia/commons/e/ef/CamelCase.svg\" width\u003d\"200\" alt\u003d\"camelCase\"\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/pic\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "_CamelCase_ is named after the \"humps\" of its capital letters, similar to the humps of a Bactrian camel. Camel case (stylized as `camelCase`) is the practice of writing compound words or phrases such that each word or abbreviation in the middle of the phrase begins with a capital letter, with no intervening spaces or punctuation."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csmall\u003e%%-- adapted from [Wikipedia](https://en.wikipedia.org/wiki/Camel_case)%%\u003c/small\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/blockquote\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "e.g., `createEmptyList`, `listOfIntegers`, `htmlText`, `dvdPlayer`. This book defines camelCase style as requiring the first letter to be lower case. If the first letter is upper case instead e.g., `CreateEmptyList`, it is called _UpperCamelCase_ or _PascalCase_."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-client-code\"\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "**Client component/method/object**: The component/method/object that is interacting with a given code."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-cli\"\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "**CLI App**: An application that has a _Command Line Interface_. i.e. user interacts with the app by typing in commands."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-commit\"\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "**Commit**: Saving the current state of the working folder into the Git revision history."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-coupling\"\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "**Coupling**: The degree of interdependence between software modules; a measure of how closely connected two routines or modules are; the strength of the relationships between module."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "## D"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-dependency-inversion-principle\"\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "**Dependency Inversion Principle**:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "1. High-level modules should not depend on low-level modules. Both should depend on abstractions."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "2. Abstractions should not depend on details. Details should depend on abstractions."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-design-pattern\"\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "**Design Pattern** : An _elegant reusable solution_ to a _commonly recurring problem_ within a _given context_ in software design."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-domain-expert\"\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "**Domain Expert** : An expert of a discipline to which the product is connected %%e.g., for a software used for Accounting, a domain expert is someone who is an expert of Accounting%%."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-dry-principle\"\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "**DRY (Don\u0027t Repeat Yourself) Principle**: Every piece of knowledge must have a single, unambiguous, authoritative representation within a system \u003csub\u003e_The Pragmatic Programmer_, by Andy Hunt and Dave Thomas\u003c/sub\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-dynamic-binding\"\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "**Dynamic Binding** (\u003ctooltip content\u003d\"There are subtle differences between late binding and dynamic binding, but they are beyond the scope of this document\"\u003eaka late binding\u003c/tooltip\u003e) : a mechanism where method calls in code are \u003ctooltip content\u003d\"deciding which method implementation to execure\"\u003eresolved\u003c/tooltip\u003e at \u003ctooltip content\u003d\"at the moment the method call is executed\"\u003eruntime\u003c/tooltip\u003e, rather than at compile time."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "## E"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-enterprise-application\"\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "**Enterprise Application**: ‘enterprise applications’ means software applications used at organizations level and therefore has to meet much higher demands (such as in scalability, security, performance, and robustness) than software meant for individual use."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-exception\"\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "**Exception**:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e The term _exception_ is shorthand for the phrase \"exceptional event.\" An _exception_ is an event, which occurs during the execution of a program, that disrupts the normal flow of the program\u0027s instructions. –- Java Tutorial (Oracle Inc.)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-equivalence-partition\"\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "**Equivalence partition (aka equivalence class)**: A group of test inputs that are likely to be processed by the SUT in the same way."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "## F"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-feature-list\"\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "**Feature List**: A list of features of a product _grouped according to some criteria_ such as aspect, priority, order of delivery, etc."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-focus-group\"\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "**Focus Groups**: A kind of _informal interview_ within an _interactive group setting_."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "## G"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-glossary\"\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "**Glossary**: A glossary serves to ensure that _all stakeholders have a common understanding_ of the noteworthy terms, abbreviations, acronyms etc."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "## I"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-interface-segregation-principle\"\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "**Interface Segregation Principle (ISP)**: No client should be forced to depend on methods it does not use."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "## L"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-law-of-demeter\"\u003e"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "**Law of Demeter (LoD)**:"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "* An object should have limited knowledge of another object."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "* An object should only interact with objects that are closely related to it."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "Also known as"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "* Don’t talk to strangers."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "* Principle of least knowledge"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-liskov-substitution-principle\"\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "**Liskov Substitution Principle (LSP)**: Derived classes must be substitutable for their base classes. \u003csub\u003e-- proposed by [Barbara Liskov](https://en.wikipedia.org/wiki/Barbara_Liskov)\u003c/sub\u003e"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "## O"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-open-closed-principle\"\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "**Open-Closed Principle (OCP)**: A module should be _open_ for extension but _closed_ for modification. That is, modules should be written so that they can be extended, without requiring them to be modified. \u003csub\u003e-- proposed by [Bertrand Meyer](https://en.wikipedia.org/wiki/Bertrand_Meyer)\u003c/sub\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "## P"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-pair-programming\"\u003e"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "**Pair Programming**: "
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ePair programming is an agile software development technique in which two programmers work together at one workstation. One, the driver, writes code while the other, the observer or navigator, reviews each line of code as it is typed in. The two programmers switch roles frequently. \u003csub\u003e[[source: Wikipedia](https://en.wikipedia.org/wiki/Pair_programming)]\u003c/sub\u003e"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-prototyping\"\u003e"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "**Prototype**: A prototype is a _mock up, a scaled down version, or a partial system constructed_"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "*\tto get users’ feedback."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "*\tto validate a technical concept (a \"proof-of-concept\" prototype)."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "*\tto give a preview of what is to come, or to compare multiple alternatives on a small scale before committing fully to one alternative."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "*\tfor early field-testing under controlled conditions."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-polymorphism\"\u003e"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "**Polymorphism**:"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e The ability of different objects to respond, each in its own way, to identical messages is called polymorphism. \u003csub\u003e-- [Object-Oriented Programming with Objective-C](https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/OOP_ObjC/), Apple\u003c/sub\u003e"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "## R"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-rcs\"\u003e"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "**RCS**:  **Revision Control Software** are the software tools that automate the process of _Revision Control_ i.e. managing revisions of software artifacts."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-repo\"\u003e"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "**Repository** (_repo_ for short):  The database of the history of a directory being tracked by an RCS software (e.g. Git)."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-revision\"\u003e"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "**Revision**: A _revision_ (some seem to use it interchangeably with _version_ while others seem to distinguish the two -- here, let us treat them as the same, for simplicity) is a state of a piece of information at a specific time that is a result of some changes to it %%e.g., if you modify the code and save the file, you have a new revision (or a version) of that file%%."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "## S"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-separation-concerns-principle\"\u003e"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "**Separation of Concerns Principle (SoC)**: To achieve better modularity, separate the code into distinct sections, such that each section addresses a separate _concern_. -- Proposed by [Edsger W. Dijkstra](https://en.wikipedia.org/wiki/Edsger_W._Dijkstra)"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-single-responsibility-principle\"\u003e"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "**Single Responsibility Principle (SRP)**: A class should have one, and only one, reason to change. \u003csub\u003e-- Robert C. Martin\u003c/sub\u003e"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-se\"\u003e"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "**Software Engineering**: Software Engineering is the application of a systematic, disciplined, quantifiable approach to the development, operation, and maintenance of software\" \u003csub\u003e-- IEEE Standard Glossary of Software Engineering Terminology\u003c/sub\u003e"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-stage\"\u003e"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "**Stage**: Instructing Git to prepare a file for committing."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-stakeholder\"\u003e"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "**Stakeholder**: A party that is potentially affected by the software project. e.g. users, sponsors, developers, interest groups, government agencies, etc."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-static-analysis\"\u003e"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "**Static analysis**: Static analysis is the analysis of code without actually executing the code.  "
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-static-binding\"\u003e"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "**Static binding** (aka early binding): When a method call is resolved at compile time.  "
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-stub\"\u003e"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "**Stub**: A stub has the same interface as the component it replaces, but its implementation is so simple that it is unlikely to have any bugs. It mimics the responses of the component, but only for the a limited set of predetermined inputs. That is, it does not know how to respond to any other inputs. Typically, these mimicked responses are hard-coded in the stub rather than computed or retrieved from elsewhere, e.g. from a database. "
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-sut\"\u003e"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "**SUT**: Software Under Test"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-system-testing\"\u003e"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "**_System testing_: take the _whole system_ and test it _against the system specification_.**"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "## T"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-testing\"\u003e"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "**Testing**: Operating a system or component under specified conditions, observing or recording the results, and making an evaluation of some aspect of the system or component.  –- source: IEEE"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-type-signature\"\u003e"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "**Type Signature**: The _type signature_ of an operation is the type sequence of the parameters. The return type and parameter names are not part of the type signature. However, the parameter order is significant. "
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Example:"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "| Method                           | Type Signature          |"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "| :------------------------------: | :---------------------: |"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "| `int add(int X, int Y)`          | `(int, int)`            |"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "| `void add(int A, int B)`         | `(int, int)`            |"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "| `void m(int X, double Y)`        | `(int, double)`         |"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "| `void m(double X, int Y)`        | `(double, int)`         |"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "## U"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-uml\"\u003e"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "[**Unified Modeling Language (UML)**](http://www.uml.org/#UML2.0) is a graphical notation to describe various aspects of a software system. UML is the brainchild of three software modeling specialists James Rumbaugh, Grady Booch and Ivar Jacobson (also known as the Three Amigos). Each of them has developed their own notation for modeling software systems before joining force to create a unified modeling language (hence, the term ‘Unified’ in UML). UML is currently the _de facto_ modeling notation used in the software industry. "
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-unit-testing\"\u003e"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "**Unit testing**: testing individual units (methods, classes, subsystems, ...) to ensure each piece works correctly "
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-use-case\"\u003e"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "**Use Case**: A description of a set of sequences of actions, including variants, that a system performs to yield an observable result of value to an \u003ctrigger for\u003d\"pop:actor\"\u003eactor\u003c/trigger\u003e.[ :book: : \u003cpopover effect\u003d\"fade\" placement\u003d\"top\" \u003euml-user-guide\u003cspan slot\u003d\"content\"\u003e\u003cinclude src\u003d\"./references.md#uml-user-guide\" inline/\u003e\u003c/span\u003e\u003c/popover\u003e]"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpopover id\u003d\"pop:actor\" header\u003d\"{{icon_preview}}\" placement\u003d\"top\"\u003e"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv slot\u003d\"content\"\u003e"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cinclude src\u003d\"definitions.md#def-actor\" /\u003e"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/popover\u003e"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-user-story\"\u003e"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "**User story**: User stories are short, simple descriptions of a feature told from the perspective of the person who desires the new capability, usually a user or customer of the system. \u003csub\u003e[[Mike Cohn](https://www.mountaingoatsoftware.com/agile/user-stories)]\u003c/sub\u003e"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-user-story-format\"\u003e"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "**User story format**: `As a {user type/role} I can {function} so that {benefit}`"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "## W"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-working-directory\"\u003e"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "**Working directory**: The directory the repo is based in is called the _working directory_."
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "## Y"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"def-yagni-principle\"\u003e"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "**YAGNI (You Aren\u0027t Gonna Need It!) Principle**: Do not add code simply because ‘you might need it in the future’."
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 410
    }
  },
  {
    "path": "common/outcomes.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"SE Book: Full List of Learning Outcomes\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/css/textbook.css\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"website-content\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "# Learning Outcomes"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "## Software Engineering"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../softwareEngineering/introduction/prosAndCons/unit-inParent-asOutcome.md\" boilerplate/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "## Requirements"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "### Requirements"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../requirements/introduction/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../requirements/nonFunctionalRequirements/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../requirements/prioritizing/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../requirements/quality/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "### Gathering"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gatheringRequirements/brainstorming/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gatheringRequirements/userSurveys/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gatheringRequirements/observation/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gatheringRequirements/interviews/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gatheringRequirements/focusGroups/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gatheringRequirements/prototyping/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gatheringRequirements/productSurveys/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "### Specifying"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../specifyingRequirements/prose/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../specifyingRequirements/featureList/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../specifyingRequirements/userStories/introduction/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../specifyingRequirements/userStories/details/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../specifyingRequirements/userStories/usage/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../specifyingRequirements/useCases/introduction/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../specifyingRequirements/useCases/identifying/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../specifyingRequirements/useCases/details/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../specifyingRequirements/useCases/usage/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../specifyingRequirements/glossary/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../specifyingRequirements/supplementaryRequirements/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "## Design"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "### Software Design"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../design/introduction/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "### Design Fundamentals"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designFundamentals/abstraction/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designFundamentals/coupling/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designFundamentals/coupling/how/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designFundamentals/coupling/types/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designFundamentals/cohesion/how/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designFundamentals/cohesion/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "### Object Oriented Programming"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/introduction/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/objects/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/objects/abstraction/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/objects/encapsulation/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/classes/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/classes/classLevelMembers/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/classes/enumerations/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/associations/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/associations/navigability/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/associations/multiplicity/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/associations/dependencies/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/associations/composition/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/associations/aggregation/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/associations/associationClasses/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/inheritance/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/inheritance/overriding/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/inheritance/overloading/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/inheritance/interfaces/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/inheritance/abstractClasses/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/inheritance/dynamicAndStaticBinding/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/inheritance/substitutability/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/polymorphism/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/polymorphism/how/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/more/miscellaneous/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/more/review/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "### Modeling"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/introduction/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/introduction/how/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/introduction/umlModels/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/modelingStructures/classDiagramsBasic/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/modelingStructures/classDiagramsIntermediate/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/modelingStructures/classDiagramsAdvanced/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/modelingStructures/objectDiagrams/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/modelingStructures/objectOrientedDomainModels/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/modelingStructures/deploymentDiagrams/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/modelingStructures/componentDiagrams/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/modelingStructures/packageDiagrams/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/modelingStructures/compositeStructureDiagrams/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/modelingBehaviors/activityDiagrams/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/modelingBehaviors/sequenceDiagramsBasic/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/modelingBehaviors/sequenceDiagramsIntermediate/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/modelingBehaviors/sequenceDiagramsAdvanced/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/modelingBehaviors/useCaseDiagrams/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/modelingBehaviors/timingDiagrams/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/modelingBehaviors/interactionOverviewDiagrams/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/modelingBehaviors/communicationDiagrams/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/modelingBehaviors/stateMachineDiagrams/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/modelingASolution/introduction/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/modelingASolution/basic/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/modelingASolution/intermediate/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "### Architecture"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../architecture/introduction/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../architecture/architectureDiagrams/reading/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../architecture/architectureDiagrams/drawing/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../architecture/architecturalStyles/introduction/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../architecture/architecturalStyles/nTier/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../architecture/architecturalStyles/clientServer/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../architecture/architecturalStyles/transactionProcessing/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../architecture/architecturalStyles/serviceOriented/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../architecture/architecturalStyles/eventDriven/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../architecture/architecturalStyles/more/moreStyles/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../architecture/architecturalStyles/more/usingStyles/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "### Design Patterns"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designPatterns/introduction/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designPatterns/introduction/format/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designPatterns/singleton/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designPatterns/singleton/implementation/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designPatterns/singleton/evaluation/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designPatterns/abstractionOccurrence/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designPatterns/facade/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designPatterns/command/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designPatterns/modelViewController/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designPatterns/observer/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designPatterns/more/combiningDesignPatterns/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designPatterns/more/otherDesignPatterns/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designPatterns/more/usingDesignPatterns/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designPatterns/more/otherTypesOfPatterns/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designPatterns/more/vsPrinciples/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "## Design Approaches"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designApproaches/multilevelDesign/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designApproaches/topDownBottomUp/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designApproaches/agileDesign/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "## Implementation"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "### IDEs"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../ides/introduction/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../ides/debugging/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "### Code Quality"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/introduction/basic/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/maximiseReadability/introduction/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/maximiseReadability/basic/avoidComplicatedExpressions/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/maximiseReadability/basic/avoidDeepNesting/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/maximiseReadability/basic/avoidLongMethods/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/maximiseReadability/basic/avoidMagicNumbers/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/maximiseReadability/basic/makeCodeObvious/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/maximiseReadability/intermediate/avoidPrematureOptimizations/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/maximiseReadability/intermediate/dontTripReader/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/maximiseReadability/intermediate/practiceKISSing/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/maximiseReadability/intermediate/slapHard/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/maximiseReadability/intermediate/structureCodeLogically/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/maximiseReadability/advanced/makeHappyPathProminent/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/followStandard/introduction/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/followStandard/basic/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/followStandard/intermediate/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/nameWell/introduction/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/nameWell/basic/nounsAndVerbsAsNames/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/nameWell/basic/useStandardWords/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/nameWell/intermediate/avoidMisleadingNames/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/nameWell/intermediate/notTooLongNorShort/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/nameWell/intermediate/useNameExplain/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/avoidShortcuts/introduction/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/avoidShortcuts/basic/avoidEmptyCatchBlocks/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/avoidShortcuts/basic/deleteDeadCode/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/avoidShortcuts/basic/dontRecycleVarsOrParams/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/avoidShortcuts/basic/useDefaultBranch/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/avoidShortcuts/intermediate/minimiseCodeDuplication/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/avoidShortcuts/intermediate/minimiseVariableScope/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/commentMinimally/introduction/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/commentMinimally/basic/dontRepeatObvious/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/commentMinimally/basic/writeToReader/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/commentMinimally/intermediate/explainWhatWhyNotHow/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "### Refactoring"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../refactoring/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../refactoring/how/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../refactoring/when/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "### Documentation"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../documentation/introduction/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../documentation/guidelines/goTopDown/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../documentation/guidelines/goTopDown/why/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../documentation/guidelines/goTopDown/how/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../documentation/guidelines/aimForComprehensibility/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../documentation/guidelines/aimForComprehensibility/how/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../documentation/guidelines/documentMinimally/how/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../documentation/guidelines/documentMinimally/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../documentation/tools/javaDoc/how/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../documentation/tools/javaDoc/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../documentation/tools/markdown/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../documentation/tools/markdown/how/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../documentation/tools/asciiDoc/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "### Error Handling"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../errorHandling/introduction/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../errorHandling/exceptions/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../errorHandling/exceptions/how/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../errorHandling/exceptions/when/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../errorHandling/assertions/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../errorHandling/assertions/how/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../errorHandling/assertions/when/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../errorHandling/logging/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../errorHandling/logging/how/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../errorHandling/defensiveProgramming/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../errorHandling/defensiveProgramming/compulsoryAssociations/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../errorHandling/defensiveProgramming/1to1Associations/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../errorHandling/defensiveProgramming/referentialIntegrity/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../errorHandling/defensiveProgramming/when/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../errorHandling/designByContract/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "### Integration"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../integration/introduction/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../integration/approaches/lateVsEarly/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../integration/approaches/bigBangVsIncremental/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../integration/approaches/topDownVsBottomUp/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../integration/buildAutomation/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../integration/buildAutomation/continuousIntegrationDeployment/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../integration/more/review/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "### Reuse"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../reuse/introduction/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../reuse/introduction/when/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../reuse/apis/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../reuse/apis/designingAPIs/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../reuse/libraries/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../reuse/libraries/how/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../reuse/frameworks/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../reuse/frameworks/frameworksVsLibraries/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../reuse/platforms/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../reuse/cloudComputing/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../reuse/cloudComputing/services/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "## Quality Assurance"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "### Quality Assurance"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../qualityAssurance/introduction/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../qualityAssurance/introduction/validationVsVerification/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../qualityAssurance/codeReviews/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../qualityAssurance/staticAnalysis/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../qualityAssurance/formalVerification/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "### Testing"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/introduction/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/introduction/testability/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/testingTypes/unitTesting/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/testingTypes/unitTesting/stubs/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/testingTypes/integrationTesting/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/testingTypes/systemTesting/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/testingTypes/alphaBetaTesting/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/testingTypes/dogfooding/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/testingTypes/developerTesting/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/testingTypes/developerTesting/why/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/testingTypes/exploratoryVsScriptedTesting/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/testingTypes/exploratoryVsScriptedTesting/when/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/testingTypes/acceptanceTesting/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/testingTypes/acceptanceTesting/acceptanceVsSystemTesting/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/testingTypes/regressionTesting/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/testAutomation/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/testAutomation/testingTextUis/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/testAutomation/usingTestDrivers/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/testAutomation/tools/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/testAutomation/testingGuis/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/testCoverage/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/testCoverage/how/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/dependencyInjection/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/dependencyInjection/how/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/tdd/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/tdd/how/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "### Test Case Design"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testCaseDesign/introduction/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testCaseDesign/introduction/positiveVsNegative/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testCaseDesign/introduction/blackVsGlass/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testCaseDesign/equivalencePartitions/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testCaseDesign/equivalencePartitions/basic/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testCaseDesign/equivalencePartitions/intermediate/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testCaseDesign/boundaryValueAnalysis/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testCaseDesign/boundaryValueAnalysis/how/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testCaseDesign/combiningTestInputs/why/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testCaseDesign/combiningTestInputs/combinationStrategies/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testCaseDesign/combiningTestInputs/heuristicValid/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testCaseDesign/combiningTestInputs/heuristicInvalid/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testCaseDesign/combiningTestInputs/mix/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testCaseDesign/more/testingUseCases/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testCaseDesign/summary/recap/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testCaseDesign/summary/exercises/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "## Project Management"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "### Revision Control"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../revisionControl/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../revisionControl/repositories/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../revisionControl/savingHistory/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../revisionControl/usingHistory/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../revisionControl/remoteRepositories/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../revisionControl/branching/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../revisionControl/drcsVsCrcs/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../revisionControl/forkingWorkflow/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../revisionControl/featureBranchFlow/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../revisionControl/centralizedFlow/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "### Project Planning"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../projectPlanning/workBreakdownStructure/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../projectPlanning/milestones/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../projectPlanning/buffers/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../projectPlanning/issueTrackers/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../projectPlanning/ganttCharts/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../projectPlanning/pertCharts/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "### Teamwork"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../teamwork/teamStructures/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "### Process Models"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../processModels/introduction/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../processModels/introduction/sequentialModels/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../processModels/introduction/iterativeModels/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../processModels/introduction/agileModels/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../processModels/exampleProcessModels/xp/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../processModels/exampleProcessModels/scrum/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../processModels/exampleProcessModels/unifiedProcess/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../processModels/more/cmmi/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../processModels/summary/recap/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "## Tools"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "### UML"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/classDiagrams/introduction/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/classDiagrams/classes/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/classDiagrams/associations/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/classDiagrams/associations/navigability/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/classDiagrams/associations/roles/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/classDiagrams/associations/labels/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/classDiagrams/associations/multiplicity/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/classDiagrams/dependencies/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/classDiagrams/associationsAsAttributes/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/classDiagrams/enumerations/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/classDiagrams/classLevelMembers/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/classDiagrams/associationClasses/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/classDiagrams/composition/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/classDiagrams/aggregation/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/classDiagrams/classInheritance/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/classDiagrams/abstractClasses/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/classDiagrams/interfaces/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/objectDiagrams/introduction/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/objectDiagrams/objects/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/objectDiagrams/associations/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/sequenceDiagrams/introduction/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/sequenceDiagrams/basic/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/sequenceDiagrams/objectCreation/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/sequenceDiagrams/objectDeletion/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/sequenceDiagrams/loops/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/sequenceDiagrams/selfInvocation/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/sequenceDiagrams/alternativePaths/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/sequenceDiagrams/optionalPaths/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/sequenceDiagrams/parallelPaths/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/sequenceDiagrams/referenceFrames/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/sequenceDiagrams/minimalNotation/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/activityDiagrams/introduction/what/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/activityDiagrams/basicNotations/linearPaths/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/activityDiagrams/basicNotations/alternatePaths/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/activityDiagrams/basicNotations/parallelPaths/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/activityDiagrams/basicNotations/rakes/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/activityDiagrams/basicNotations/swimlanes/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/notes/notes/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/notes/constraints/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/miscellaneous/objectVsClassDiagrams/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "### Intellij IDEA"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../intellij/projectSetup/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../intellij/codeNavigation/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../intellij/productivityShortcuts/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../intellij/debuggingBasic/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../intellij/refactoring/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "### Git and GitHub"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gitAndGithub/init/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gitAndGithub/commit/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gitAndGithub/ignore/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gitAndGithub/tag/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gitAndGithub/checkout/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gitAndGithub/stash/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gitAndGithub/clone/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gitAndGithub/pull/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gitAndGithub/push/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gitAndGithub/branch/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gitAndGithub/mergeConflicts/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gitAndGithub/createPRs/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gitAndGithub/managePRs/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gitAndGithub/forkingWorkflow/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "## Principles"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "### SE Principles"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../principles/singleResponsibilityPrinciple/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../principles/interfaceSegregationPrinciple/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../principles/liskovSubstitutionPrinciple/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../principles/dependencyInversionPrinciple/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../principles/openClosedPrinciple/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../principles/solidPrinciples/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../principles/separationOfConcernsPrinciple/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../principles/lawOfDemeter/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../principles/brooksLaw/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../principles/yagniPrinciple/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../principles/dryPrinciple/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../principles/review/unit-inParent-asOutcome.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "jamessspanggg": 25,
      "-": 421
    }
  },
  {
    "path": "common/print.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"SE Book [Printable, Big File!]\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/css/textbook.css\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"website-content\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"main\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "# BOOK: SOFTWARE ENGINEERING FOR SELF-DIRECTED LEARNERS"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"toc.md\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "# SECTION: INTRODUCTION"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../softwareEngineering/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# SECTION: PROGRAMMING PARADIGMS"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../oop/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# SECTION: REQUIREMENTS"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../requirements/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gatheringRequirements/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../specifyingRequirements/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "# SECTION: DESIGN"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../design/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designFundamentals/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../modeling/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../architecture/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designPatterns/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../designApproaches/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "# SECTION: IMPLEMENTATION"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../ides/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../codeQuality/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../refactoring/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../documentation/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../errorHandling/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../integration/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../reuse/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "# SECTION: QUALITY ASSURANCE"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../qualityAssurance/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testing/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../testCaseDesign/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "# SECTION: PROJECT MANAGEMENT"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../revisionControl/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../projectPlanning/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../teamwork/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../processModels/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "# SECTION: TOOLS"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../uml/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../intellij/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../gitAndGithub/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "# SECTION: PRINCIPLES"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../principles/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "# SECTION: SUPPLEMENTARY"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"../cppToJava/print.md#main\" /\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c!-- TODO: add review --\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "%%[END OF BOOK]%%"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "jamessspanggg": 7,
      "-": 99
    }
  },
  {
    "path": "common/references.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"References\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/css/textbook.css\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"website-content\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "# References"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* [zielczynski] \u003cdiv id\u003d\"zielczynski\"\u003ePeter Zielczynski, _**Requirements Management Using IBM Rational RequisitePro**_, IBM Press, 2008\u003c/div\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "* [xp-user-stories]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv id\u003d\"xp-user-stories\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [http://www.extremeprogramming.org/rules/userstories.html](http://www.extremeprogramming.org/rules/userstories.html) : This is the main website for eXtreme Programming (XP), an approach to software development currently popular among practitioners. User stories are commonly used among XP practitioners to capture requirements."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "* [uml-user-guide]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cspan id\u003d\"uml-user-guide\"\u003e_**The Unified Modeling Language User Guide**_, 2e, G Booch, J Rumbaugh, and I Jacobson \u003c/span\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "* [uml-distilled] \u003cspan id\u003d\"uml-distilled\"\u003eUML distilled by Martin Fowler \u003c/span\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "* [refactoring-catalog]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cspan id\u003d\"refactoring-catalog\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  * Java: [http://refactoring.com/catalog/](http://refactoring.com/catalog/) - This is a list of common refactorings, maintained by Martin Fowler, a leading authority on refactoring. He is also the author of the ‘bestseller’ on refactoring: [Refactoring: Improving the Design of Existing Code](https://martinfowler.com/books/#refactoring)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  * Python: [https://refactoring.guru/refactoring/catalog](https://refactoring.guru/refactoring/catalog) -- A catalog of refactorings applicable to Python code."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/span\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* [bach-et-explained]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv id\u003d\"bach-et-explained\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [_**Exploratory Testing Explained**_](http://www.satisfice.com/articles/et-article.pdf), an online article by [James Bach](http://www.satisfice.com/aboutjames.shtml)  -- James Bach is an industry thought leader in software testing)."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "* [bryan-mercurial-guide]"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u003cdiv id\u003d\"bryan-mercurial-guide\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [_**Mercurial: The Definitive Guide**_](http://hgbook.red-bean.com/) by Bryan O\u0027Sullivan retrieved on 2012/07/11"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "jamessspanggg": 7,
      "-": 46
    }
  },
  {
    "path": "common/toc.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "* [**SECTION: INTRODUCTION**](#section-introduction)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Software Engineering](#software-engineering)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "* [**SECTION: PROGRAMMING PARADIGMS**](#section-programming-paradigms) "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Object-Oriented Programming](#object-oriented-programming)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* [**SECTION: REQUIREMENTS**](#section-requirements) "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Requirements](#requirements)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Gathering Requirements](#gathering-requirements)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Specifying Requirements](#specifying-requirements)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "* [**SECTION: DESIGN**](#section-design) "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Design](#design)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Design Fundamentals](#design-fundamentals)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Modeling](#modeling)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Architecture](#software-architecture)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Design Patterns](#software-design-patterns)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Design Approaches](#design-approaches)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "* [**SECTION: IMPLEMENTATION**](#section-implementation) "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  * [IDEs](#ides)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Code Quality](#code-quality)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Refactoring](#refactoring)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Documentation](#documentation)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Error Handling](#error-handling)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Integration](#integration)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Reuse](#reuse)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "* [**SECTION: QUALITY ASSURANCE**](#section-quality-assurance) "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Quality Assurance](#quality-assurance)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Testing](#testing)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Test Case Design](#test-case-design)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "* [**SECTION: PROJECT MANAGEMENT**](#section-project-management) "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Revision Control](#revision-control)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Project Planning](#project-planning)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Teamwork](#teamwork)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  * [SDLC Process Models](#sdlc-process-models)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "* [**SECTION: TOOLS**](#section-tools) "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  * [UML](#uml)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Intellij IDEA](#intellij-idea)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  * [Git and GitHub](#git-and-github)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [**SECTION: PRINCIPLES**](#section-principles)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Principles](#principles)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [**SECTION: SUPPLEMENTARY**](#section-supplementary)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  * [C++ to Java](#c-to-java)"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 4,
      "-": 36
    }
  },
  {
    "path": "cppToJava/about/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAbout this chapter\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp class\u003d\"lead\"\u003e\u003cmd\u003eThis book chapter **assumes you are familiar with basic C++ programming**. It provides a crash course to help you migrate from C++ to Java.\u003c/md\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "This chapter **borrows heavily from the excellent book [_ThinkJava_](http://greenteapress.com/wp/think-java/)** by Allen Downey and Chris Mayfield. As required by the _terms of reuse_ of that book, this chapter is released under the [Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License](http://creativecommons.org/licenses/by-nc-sa/3.0/) and not under the MIT license as the rest of this book."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Some conventions used in this chapter:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"indented\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "{{ similar }} icon marks the description of an aspect of Java that works mostly similar to C++"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "{{ different }} icon marks the description of an aspect of Java that is distinctly different from C++"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "Other resources used:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "* [C++ and Java Syntax Differences Cheat Sheet](https://www.cprogramming.com/tutorial/java/syntax-differences-java-c++.html) by Alex Allain"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "* [_Java Tutorial_ provided by Oracle]({{ java_tutorial }}/). Extracts from this resource are marked as {{ oracle }}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 27
    }
  },
  {
    "path": "cppToJava/classes/classLevelMembers/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eClass-level members\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use class-level members\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "The content below is an extract from {{ oracle }}, with slight adaptations."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"indented\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "When a number of objects are created from the same class blueprint, they each have their own distinct copies of instance variables. In the case of a `Bicycle` class, the instance variables are gear, and speed. Each Bicycle object has its own values for these variables, stored in different memory locations."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "**Sometimes, you want to have variables that are common to all objects. This is accomplished with the `static` modifier.** Fields that have the `static` modifier in their declaration are called _static fields_ or _class variables_. They are associated with the class, rather than with any object. Every instance of the class shares a class variable, which is in one fixed location in memory. Any object can change the value of a class variable, but class variables can also be manipulated without creating an instance of the class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Suppose you want to create a number of Bicycle objects and assign each a serial number, beginning with 1 for the first object. This ID number is unique to each object and is therefore an instance variable. At the same time, you need a field to keep track of how many `Bicycle` objects have been created so that you know what ID to assign to the next one. Such a field is not related to any individual object, but to the class as a whole. For this you need a class variable, `numberOfBicycles`, as follows:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class Bicycle {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private int gear;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private int speed;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    // an instance variable for the object ID"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private int id;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    // a class variable for the number of Bicycle objects instantiated"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private static int numberOfBicycles \u003d 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        ..."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "**_Class variables_ are referenced by the class name itself**, as in `Bicycle.numberOfBicycles` This makes it clear that they are class variables."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "The Java programming language supports static methods as well as static variables. Static methods, which have the `static` modifier in their declarations, should be invoked with the class name, without the need for creating an instance of the class, as in `ClassName.methodName(args)`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "**The `static` modifier, in combination with the `final` modifier, is also used to define constants.** The final modifier indicates that the value of this field cannot change. For example, the following variable declaration defines a constant named `PI`, whose value is an approximation of pi (the ratio of the circumference of a circle to its diameter):"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "`static final double PI \u003d 3.141592653589793;`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Here is an example with class-level variables and class-level methods:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "public class Bicycle {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    private int gear;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    private int speed;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private int id;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    private static int numberOfBicycles \u003d 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public Bicycle(int startSpeed, int startGear) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        gear \u003d startGear;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        speed \u003d startSpeed;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        numberOfBicycles++;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        id \u003d numberOfBicycles;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    public int getID() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        return id;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public static int getNumberOfBicycles() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        return numberOfBicycles;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public int getGear(){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        return gear;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGear(int newValue) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        gear \u003d newValue;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    public int getSpeed() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        return speed;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_tip }} Explanation of **`System.out.println(...)`**:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "* `out` is a class-level public attribute of the `System` class."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "* `println` is a instance level method of the `out` object."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercisesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 110
    }
  },
  {
    "path": "cppToJava/classes/definingClasses/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eDefining classes\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can define Java classes\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "As you know,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "* Defining a class introduces a new object type."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* Every object belongs to some object type; that is, it is an instance of some class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* A class definition is like a template for objects: it specifies what attributes the objects have and what methods can operate on them."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "* The `new` operator instantiates objects, that is, it creates new instances of a class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "* The methods that operate on an object type are defined in the class for that object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Here\u0027s a class called `Time`, intended to represent a moment in time. It has three attributes and no methods."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private int hour;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private int minute;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private int second;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "You can give a class any name you like. **The Java convention is to use \u003ctooltip content\u003d\"e.g., `MyHelloWord` rather than `myHelloWorld` or `myhelloword` or `my_hello_world`\"\u003ePascalCase\u003c/tooltip\u003e format for class names**."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "The code is \u003ctooltip content\u003d\"there are exceptions to this rule\"\u003eusually\u003c/tooltip\u003e placed in a file whose name matches the class %%e.g., the `Time` class should be in a file named `Time.java`%%."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "When a class is `public` %%(e.g., the `Time` class in the above example)%% it can be used in other classes. But the \u003ctooltip content\u003d\"Attributes are also called **instance variables**, because each instance has its own variables.\"\u003einstance variables\u003c/tooltip\u003e that are `private` %%(e.g., the `hour`, `minute` and `second` attributes of the `Time` class)%% can only be accessed from inside the `Time` class."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "##### Constructors"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"indented\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "The syntax for \u003ctooltip content\u003d\"special methods that construct the object and initialize the instance variables\"\u003econstructors\u003c/tooltip\u003e is similar to that of other methods, except:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* The name of the constructor is the same as the name of the class."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "* The keyword `static` is omitted."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "* Does not return anything. A constructor returns the created object by default."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "When you invoke `new`, Java creates the object and calls your constructor to initialize the instance variables. When the constructor is done, it returns a reference to the new object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Here is an example constructor for the `Time` class:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "public Time() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    hour \u003d 0;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    minute \u003d 0;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    second \u003d 0;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "This constructor does not take any arguments. Each line initializes an instance variable to `0` (which in this example means midnight)."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "Now you can create `Time` objects."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "`Time time \u003d new Time();`{.java}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "Like other methods, constructors can be \u003ctooltip content\u003d\"i.e., you can provide multiple constructors with different parameters\"\u003eoverloaded\u003c/tooltip\u003e."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} You can add another constructor to the `Time` class to allow creating `Time` objects that are initialized to a specific time:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "public Time(int h, int m, int s) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    hour \u003d h;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    minute \u003d m;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    second \u003d s;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "Here\u0027s how you can invoke the new constructor:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "`Time justBeforeMidnight \u003d new Time(11, 59, 59);`{.java}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "##### `this` keyword"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"indented\"\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "**The `this` keyword is a reference variable in Java that refers to the \u003ctooltip content\u003d\"i.e., the enclosing object, or _myself_\"\u003ecurrent object\u003c/tooltip\u003e.** You can use `this` the same way you use the name of any other object. For example, you can read and write the instance variables of `this`, and you can pass `this` as an argument to other methods. But you do not declare `this`, and you can’t make an assignment to it."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} In the following version of the constructor, the names and types of the parameters are the same as the instance variables (parameters don’t have to use the same names, but that’s a common style). As a result, the parameters **_shadow_** (or hide) the instance variables, so the keyword `this` is necessary to tell them apart."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "public Time(int hour, int minute, int second) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    this.hour \u003d hour;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    this.minute \u003d minute;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    this.second \u003d second;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "**`this` can be used to refer to a constructor of a class within the same class too.**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} In this example the constructor `Time()` uses the `this` keyword to call its own overloaded constructor `Time(int, int, int)`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "public Time() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    this(0, 0, 0); // call the overloaded constructor"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "public Time(int hour, int minute, int second) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "##### Instance methods"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "**You can add methods to a class which can then be used from the objects of that class.** These _instance_ methods do not have the `static` keyword in the method signature. Instance methods can access attributes of the class."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Here\u0027s how you can add a method to the `Time` class to get the number of seconds passed till midnight."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "public int secondsSinceMidnight() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    return hour*60*60 + minute*60 + second;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "Here\u0027s how you can use that method."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "Time t \u003d new Time(0, 2, 5);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(t.secondsSinceMidnight() + \" seconds since midnight!\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercisesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 149
    }
  },
  {
    "path": "cppToJava/classes/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eJava classes\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"definingClasses/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"gettersAndSetters/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"classLevelMembers/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 8
    }
  },
  {
    "path": "cppToJava/collections/arrayListClass/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eThe `ArrayList` class\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use the ArrayList class\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "The `ArrayList` class is a resizable-array implementation of the `List` interface. Unlike a normal `array`, an `ArrayList` can grow in size as you add more items to it. The example below illustrate some of the useful methods of the `ArrayList` class using an `ArrayList` of `String` objects."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class ArrayListDemo {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String args[]) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cString\u003e items \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Before adding any items:\" + items);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        items.add(\"Apple\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        items.add(\"Box\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        items.add(\"Cup\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        items.add(\"Dart\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"After adding four items: \" + items);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        items.remove(\"Box\"); // remove item \"Box\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"After removing Box: \" + items);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        items.add(1, \"Banana\"); // add \"Banana\" at index 1"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"After adding Banana: \" + items);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        items.add(\"Egg\"); // add \"Egg\", will be added to the end"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        items.add(\"Cup\"); // add another \"Cup\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"After adding Egg: \" + items);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"Number of items: \" + items.size());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"Index of Cup: \" + items.indexOf(\"Cup\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"Index of Zebra: \" + items.indexOf(\"Zebra\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"Item at index 3 is: \" + items.get(2));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"Do we have a Box?: \" + items.contains(\"Box\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"Do we have an Apple?: \" + items.contains(\"Apple\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        items.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"After clearing: \" + items);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void print(String text) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(text);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_output }}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "Before adding any items:[]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "After adding four items: [Apple, Box, Cup, Dart]"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "After removing Box: [Apple, Cup, Dart]"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "After adding Banana: [Apple, Banana, Cup, Dart]"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "After adding Egg: [Apple, Banana, Cup, Dart, Egg, Cup]"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "Number of items: 6"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "Index of Cup: 2"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "Index of Zebra: -1"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "Item at index 3 is: Cup"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "Do we have a Box?: false"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "Do we have an Apple?: true"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "After clearing: []"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csmall\u003e[[Try the above code on Repl.it](https://repl.it/@seedu/Demo-ArrayList)]\u003c/small\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"resourcesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercisesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 77
    }
  },
  {
    "path": "cppToJava/collections/hashMapClass/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eThe `HashMap` class\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use the HashMap class\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "`HashMap` is an implementation of the `Map` interface. It allows you to store a collection of _key-value pairs_. The example below illustrates how to use a `HashMap\u003cString, Point\u003e` to maintain a list of coordinates and their identifiers e.g., the identifier `x1` is used to identify the point `0,0` where `x1` is the _key_ and `0,0` is the _value_."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.awt.Point;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class HashMapDemo {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        HashMap\u003cString, Point\u003e points \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        // put the key-value pairs in the HashMap"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        points.put(\"x1\", new Point(0, 0));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        points.put(\"x2\", new Point(0, 5));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        points.put(\"x3\", new Point(5, 5));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        points.put(\"x4\", new Point(5, 0));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        // retrieve a value for a key using the get method"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"Coordinates of x1: \" + pointAsString(points.get(\"x1\")));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        // check if a key or a value exists"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"Key x1 exists? \" + points.containsKey(\"x1\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"Key x1 exists? \" + points.containsKey(\"y1\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"Value (0,0) exists? \" + points.containsValue(new Point(0, 0)));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"Value (1,2) exists? \" + points.containsValue(new Point(1, 2)));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        // update the value of a key to a new value"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        points.put(\"x1\", new Point(-1,-1));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        // iterate over the entries"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Map.Entry\u003cString, Point\u003e entry : points.entrySet()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            print(entry.getKey() + \" \u003d \" + pointAsString(entry.getValue()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"Number of keys: \" + points.size());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        points.clear();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"Number of keys after clearing: \" + points.size());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String pointAsString(Point p) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[\" + p.x + \",\" + p.y + \"]\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void print(String s) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_output }}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "Coordinates of x1: [0,0]"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "Key x1 exists? true"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "Key x1 exists? false"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "Value (0,0) exists? true"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "Value (1,2) exists? false"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "x1 \u003d [-1,-1]"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "x2 \u003d [0,5]"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "x3 \u003d [5,5]"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "x4 \u003d [5,0]"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "Number of keys: 4"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "Number of keys after clearing: 0"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csmall\u003e[[Try the above code on Repl.it](https://repl.it/@seedu/Demo-HashMap)]\u003c/small\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercisesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"resourcesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 79
    }
  },
  {
    "path": "cppToJava/collections/what/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eThe collections framework\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain the Collections framework\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "This section uses extracts from the {{ oracle }}, with some adaptations."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "**A _collection_ — sometimes called a _container_ — is simply an object that groups multiple elements into a single unit.** Collections are used to store, retrieve, manipulate, and communicate aggregate data."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Typically, collections represent data items that form a natural group, such as a poker hand (a collection of cards), a mail folder (a collection of letters), or a telephone directory (a mapping of names to phone numbers)."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "**The collections framework is a unified architecture for representing and manipulating collections.** It contains the following:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "* **Interfaces**: These are abstract data types that represent collections. Interfaces allow collections to be manipulated independently of the details of their representation.\u003cbr\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  %%{{ icon_example }} Example: the `List\u003cE\u003e` interface can be used to manipulate list-like collections which may be implemented in different ways such as `ArrayList\u003cE\u003e` or `LinkedList\u003cE\u003e`.%%\u003cbr\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "* **Implementations**: These are the concrete implementations of the collection interfaces. In essence, they are reusable data structures.\u003cbr\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  %%{{ icon_example }} Example: the `ArrayList\u003cE\u003e` class implements the `List\u003cE\u003e` interface while the `HashMap\u003cK, V\u003e` class implements the `Map\u003cK, V\u003e` interface.%%\u003cbr\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "* **Algorithms**: These are the methods that perform useful computations, such as _searching_ and _sorting_, on objects that implement collection interfaces. The algorithms are said to be polymorphic: that is, the same method can be used on many different implementations of the appropriate collection interface.\u003cbr\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  %%{{ icon_example }} Example: the `sort(List\u003cE\u003e)` method can sort a collection that implements the `List\u003cE\u003e` interface.%%"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "{{ similar }} **A well-known example of collections frameworks is the C++ _Standard Template Library (STL)_**. {{ different }} Although both are collections frameworks and the syntax look similar, note that there are important philosophical and implementation differences between the two."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "The following list describes the core collection interfaces:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "* **`Collection`** — the root of the collection hierarchy. A collection represents a group of objects known as its elements. The Collection interface is the least common denominator that all collections implement and is used to pass collections around and to manipulate them when maximum generality is desired. Some types of collections allow duplicate elements, and others do not. Some are ordered and others are unordered. The Java platform doesn\u0027t provide any direct implementations of this interface but provides implementations of more specific subinterfaces, such as `Set` and `List`. %%Also see the [`Collection` API]({{ java_api }}/java/util/Collection.html).%%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "* **`Set`** — a collection that cannot contain duplicate elements. This interface models the mathematical set abstraction and is used to represent sets, such as the cards comprising a poker hand, the courses making up a student\u0027s schedule, or the processes running on a machine. %%Also see the [`Set` API]({{ java_api }}/java/util/Set.html).%%"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "* **`List`** — an ordered collection (sometimes called a _sequence_). `List`s can contain duplicate elements. The user of a `List` generally has precise control over where in the list each element is inserted and can access elements by their integer index (position). %%Also see the [`List` API]({{ java_api }}/java/util/List.html).%%"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* **`Queue`** — a collection used to hold multiple elements prior to processing. Besides basic `Collection` operations, a `Queue` provides additional insertion, extraction, and inspection operations. %%Also see the [`Queue` API]({{ java_api }}/java/util/Queue.html).%%"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* **`Map`** — an object that maps keys to values. A `Map` cannot contain duplicate keys; each key can map to at most one value. %%Also see the [`Map` API]({{ java_api }}/java/util/Map.html).%%"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "* Others: `Deque`, `SortedSet`, `SortedMap`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 45
    }
  },
  {
    "path": "cppToJava/controlFlow/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eControl flow\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"branching/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"methods/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"loops/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 8
    }
  },
  {
    "path": "cppToJava/dataTypes/primitiveTypes/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003ePrimitive data types\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use primitive data types\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Here are the primitive data types in Java:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "* **`byte`**: an integer in the range -128 to 127 (inclusive)."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* **`short`**: an integer in the range -32,768 to 32,767 (inclusive)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* **`int`**: an integer in the range -2\u003csup\u003e31\u003c/sup\u003e to 2\u003csup\u003e31\u003c/sup\u003e-1."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "* **`long`**: An integer in the range -2\u003csup\u003e63\u003c/sup\u003e to 2\u003csup\u003e63\u003c/sup\u003e-1."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "* **`float`**: a single-precision 32-bit IEEE 754 floating point. This data type should never be used for precise values, such as currency. For that, you will need to use the [java.math.BigDecimal]({{ java_api }}/java/math/BigDecimal.html) class instead."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "* **`double`**: a double-precision 64-bit IEEE 754 floating point. For decimal values, this data type is generally the default choice. This data type should never be used for precise values, such as currency."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "* **`boolean`**: has only two possible values: `true` and `false`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "* **`char`**: The char data type is a single 16-bit Unicode character. It has a minimum value of `\u0027\\u0000\u0027` (or `0`) and a maximum value of `\u0027\\uffff\u0027` (or `65,535` inclusive)."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "**`String`** (a peek)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "{{ different }} Java has a built-in type called `String` to represent strings. While `String` is not a primitive type, they are used as often, if not more. `String` values are demarcated by enclosing in a pair of double quotes. You can use the plus operator to concatenate strings."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "E.g.,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "String name \u003d \"John Doe\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(\"Hello \" + name + \"!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "String is not a primitive type. You’ll learn more about strings in a later section."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"resourcesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 35
    }
  },
  {
    "path": "cppToJava/dataTypes/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eData types\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"primitiveTypes/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"variables/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"operators/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"arrays/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 9
    }
  },
  {
    "path": "cppToJava/exceptions/how/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eHow to use Exceptions\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use Java Exceptions\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "The content below uses extracts from the {{ oracle }}, with some adaptations."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "**A program can catch exceptions by using a combination of the `try`, `catch` blocks.**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* The `try` block identifies a block of code in which an exception can occur."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* The `catch` block identifies a block of code, known as an exception handler, that can handle a particular type of exception."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The `writeList()` method below calls a method `process()` that can cause two type of exceptions. It uses a try-catch construct to deal with each exception."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public void writeList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    print(\"starting method\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"starting process\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        process();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"finishing process\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"caught IOOBE\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"caught IOE\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    print(\"finishing method\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "Some possible outputs:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "No exceptions {{ icon_output }} | `IOException` {{ icon_output }} | `IndexOutOfBoundsException` {{ icon_output }}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------|---------------------------------|-----------------------------------------------"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan class\u003d\"text-monospace\"\u003estarting method\u003cbr\u003estarting process\u003cbr\u003efinishing process\u003cbr\u003efinishing method\u003c/span\u003e | \u003cspan class\u003d\"text-monospace\"\u003estarting method\u003cbr\u003estarting process\u003cbr\u003e~~finishing process~~\u003cbr\u003e\u003d\u003dcaught IOE\u003d\u003d\u003cbr\u003efinishing method \u003c/span\u003e| \u003cspan class\u003d\"text-monospace\"\u003estarting method\u003cbr\u003estarting process\u003cbr\u003e~~finishing process~~\u003cbr\u003e\u003d\u003dcaught IOOBE\u003d\u003d\u003cbr\u003efinishing method\u003c/span\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "You can **use a `finally` block to specify code that is guaranteed to execute with or without the exception.** This is the right place to close files, recover resources, and otherwise clean up after the code enclosed in the `try` block."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The `writeList()` method below has a `finally` block:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "public void writeList() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    print(\"starting method\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"starting process\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        process();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"finishing process\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"caught IOOBE\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"caught IOE\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    } finally {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        // clean up"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        print(\"cleaning up\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    print(\"finishing method\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "Some possible outputs:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "No exceptions {{ icon_output }} | `IOException` {{ icon_output }} | `IndexOutOfBoundsException` {{ icon_output }}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------|---------------------------------|-----------------------------------------------"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan class\u003d\"text-monospace\"\u003estarting method\u003cbr\u003estarting process\u003cbr\u003efinishing process\u003cbr\u003e\u003d\u003dcleaning up\u003d\u003d\u003cbr\u003efinishing method\u003c/span\u003e | \u003cspan class\u003d\"text-monospace\"\u003estarting method\u003cbr\u003estarting process\u003cbr\u003e~~finishing process~~\u003cbr\u003ecaught IOE\u003cbr\u003e\u003d\u003dcleaning up\u003d\u003d\u003cbr\u003efinishing method \u003c/span\u003e| \u003cspan class\u003d\"text-monospace\"\u003estarting method\u003cbr\u003estarting process\u003cbr\u003e~~finishing process~~\u003cbr\u003ecaught IOOBE\u003cbr\u003e\u003d\u003dcleaning up\u003d\u003d\u003cbr\u003efinishing method\u003c/span\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "* The `try` statement should contain at least one `catch` block or a finally block and may have multiple `catch` blocks."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "* The class of the exception object indicates the type of exception thrown. The exception object can contain further information about the error, including an error message."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "**You can use the `throw` statement to throw an exception.** The throw statement requires a \u003ctooltip content\u003d\"Throwable objects are instances of any subclass of the `Throwable` class.\"\u003ethrowable\u003c/tooltip\u003e object as the argument."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Here\u0027s an example of a `throw` statement."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "if (size \u003d\u003d 0) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    throw new EmptyStackException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "In Java, **Checked exceptions are subject to the _Catch or Specify Requirement_**: code that might throw checked exceptions must be enclosed by either of the following:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "* A `try` statement that catches the exception. The `try` must provide a handler for the exception."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "* A method that specifies that it can throw the exception. The method must provide a `throws` clause that lists the exception."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "Unchecked exceptions are not required to follow to the _Catch or Specify Requirement_ but you can apply the requirement to them too."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Here\u0027s an example of a method specifying that it throws certain checked exceptions:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "public void writeList() throws IOException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    print(\"starting method\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    process();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    print(\"finishing method\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    Some possible outputs:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "No exceptions {{ icon_output }} | `IOException` {{ icon_output }} | `IndexOutOfBoundsException` {{ icon_output }}"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------|---------------------------------|-----------------------------------------------"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan class\u003d\"text-monospace\"\u003estarting method\u003cbr\u003efinishing method\u003c/span\u003e | \u003cspan class\u003d\"text-monospace\"\u003estarting method\u003cbr\u003e~~finishing method~~\u003c/span\u003e| \u003cspan class\u003d\"text-monospace\"\u003estarting method\u003cbr\u003e~~finishing method~~\u003c/span\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "**Java comes with a collection of [built-in exception classes](https://www.geeksforgeeks.org/built-exceptions-java-examples/)** that you can use. When they are not enough, **it is possible to [create your own exception classes](https://www.javatpoint.com/custom-exception)**."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercisesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 123
    }
  },
  {
    "path": "cppToJava/gettingStarted/compiling/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eCompiling a program\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can compile a simple Java program\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "To compile the HelloWorld program, open a command console, navigate to the folder containing the file, and run the following command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_terminal }} `javac HelloWorld.java`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "If the compilation is successful, you should see a file `HelloWorld.class`. That file contains the byte code for your program. If the compilation is unsuccessful, you will be notified of the \u003ctrigger for\u003d\"pop:compiling-errors\"\u003ecompile-time errors\u003c/trigger\u003e."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpopover id\u003d\"pop:compiling-errors\" header\u003d\"Compile-time errors\" placement\u003d\"top\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv slot\u003d\"content\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "_Compile-time errors_ %%(aka _compile errors_)%% occur when you violate the syntax rules of the Java language. For example, parentheses and braces have to come in matching pairs."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "Error messages from the compiler usually indicate where in the program the error occurred, and sometimes they can tell you exactly what the error is."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/popover\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "Notes:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "* `javac` is the java compiler that you get when you install the JDK."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "* For the above command to work, your console program should be able to find the javac executable (e.g., {{ icon_windows }} the location of the `javac.exe` should be in the `PATH` system variable)."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 31
    }
  },
  {
    "path": "cppToJava/gettingStarted/running/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eRunning a program\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can run a simple Java program\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "To run the HelloWorld program, in a command console, run the following command from the folder containing `HelloWorld.class` file."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_terminal }} `java HelloWorld`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Notes:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "* `java` in the command above refers to the Java interpreter installed in your computer."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "* Similar to `javac`, your console should be able to find the java executable."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "When you run a Java program, you can encounter a \u003ctooltip content\u003d\"so-called because it does not appear until after the program has started running\"\u003erun-time error\u003c/tooltip\u003e. These errors are also called \"exceptions\" because they usually indicate that something exceptional (and bad) has happened. When a run-time error occurs, the interpreter displays an error message that explains what happened and where."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} For example, modify the HelloWorld code to include the following line, compile it again, and run it."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(5/0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "You should get a message like this:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "```sh"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "Exception in thread \"main\" java.lang.ArithmeticException: / by zero"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    at Hello.main(Hello.java:5)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "**Integrated Development Environments (IDEs)** can automate the intermediate step of compiling. They usually have a \u003cspan style\u003d\"color:green\"\u003e:fas-play-circle:\u003c/span\u003e _Run_ button which compiles the code first and then runs it."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "Example IDEs:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "* Intellij IDEA"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "* Eclipse"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* NetBeans"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercisesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 47
    }
  },
  {
    "path": "cppToJava/gettingStarted/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eGetting started\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"installation/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"helloWorld/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"compiling/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"running/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 9
    }
  },
  {
    "path": "cppToJava/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"C++ to Java\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 5
    }
  },
  {
    "path": "cppToJava/inheritance/abstractClassesAndMethods/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAbstract classes and methods\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use abstract classes and methods\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "In Java, **an _abstract method_ is declared with the keyword `abstract` and given without an implementation**. If a class includes abstract methods, then the class itself must be declared abstract."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The `speak` method in this `Animal` class is `abstract`. Note how the method signature ends with a semicolon and there is no method body. This makes sense as the implementation of the `speak` method depends on the type of the animal and it is meaningless to provide a common implementation for all animal types."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class Animal {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public Animal(String name){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public abstract String speak();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "As one method of the class is `abstract`, the class itself is `abstract`."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "**An _abstract class_ is declared with the keyword `abstract`. Abstract classes can be used as reference type but cannot be instantiated.**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} This `Account` class has been declared as abstract although it does not have any abstract methods. Attempting to instantiate `Account` objects will result in a compile error."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class Account {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    int number;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    void close(){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        //..."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "`Account a;` {{ icon_output_right }} {{ icon_tick_green }} OK to use as a type \u003cbr\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "`a \u003d new Account();` {{ icon_output_right }} {{ icon_x_red }} Compile error!"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_info }} In Java, even **a class that does not have any abstract methods _can_ be declared as an abstract class.**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "**When an abstract class is subclassed, the subclass should provides implementations for all of the abstract methods in its superclass or else the subclass must also be declared abstract.**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The `Feline` class below inherits from the abstract class `Animal` but it does not provide an implementation for the abstract method `speak`. As a result, the `Feline` class needs to be abstract too."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class Feline extends Animal {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public Feline(String name) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "The `DomesticCat` class inherits the abstract `Feline` class and provides the implementation for the abstract method `speak`. As a result, it need not be (but _can_ be) declared as abstract."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "public class DomesticCat extends Feline {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public DomesticCat(String name) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public String speak() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"Meow\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "* `Animal a \u003d new Feline(\"Mittens\");`{.java}\u003cbr\u003e{{ icon_x_red }} Compile error! `Feline` is abstract."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "* `Animal a \u003d new DomesticCat(\"Mittens\");`{.java}\u003cbr\u003e{{ icon_tick_green }} OK. `DomesticCat` can be instantiated and assigned to a variable of `Animal` type %%(the assignment is allowed by polymorphism)%%."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"resourcesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercisesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 91
    }
  },
  {
    "path": "cppToJava/inheritance/basic/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eInheritance (Basics)\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use basic inheritance\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is an extract from the {{ oracle }}, with slight adaptations."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"indented\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ similar }} **A class that is derived from another class is called a _subclass_** (also a _derived_ class, _extended_ class, or _child_ class). The class from which the subclass is derived is called a _superclass_ (also a _base_ class or a _parent_ class)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{{ similar }} **A subclass inherits all the members** (fields, methods, and nested classes) from its superclass. Constructors are not members, so they are not inherited by subclasses, but the constructor of the superclass can be invoked from the subclass."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "{{ different }} **Every class has one and only one direct superclass (_single inheritance_)**, except the `Object` class, which has no superclass, . In the absence of any other explicit superclass, every class is implicitly a subclass of `Object`. Classes can be derived from classes that are derived from classes that are derived from classes, and so on, and ultimately derived from the topmost class, `Object`. Such a class is said to be _descended_ from all the classes in the _inheritance chain_ stretching back to `Object`. Java does not support _multiple inheritance_ among classes."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "{{ different }} **The `java.lang.Object` class defines and implements behavior common to all classes**—including the ones that you write. In the Java platform, many classes derive directly from `Object`, other classes derive from some of those classes, and so on, forming a single hierarchy of classes."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "**The keyword `extends` indicates one class inheriting from another.**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Here is the sample code for a possible implementation of a `Bicycle` class and a `MountainBike` class that is a subclass of the `Bicycle`:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "public class Bicycle {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public int gear;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public int speed;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public Bicycle(int startSpeed, int startGear) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        gear \u003d startGear;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        speed \u003d startSpeed;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGear(int newValue) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        gear \u003d newValue;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public void applyBrake(int decrement) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        speed -\u003d decrement;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public void speedUp(int increment) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        speed +\u003d increment;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "public class MountainBike extends Bicycle {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    // the MountainBike subclass adds one field"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public int seatHeight;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    // the MountainBike subclass has one constructor"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public MountainBike(int startHeight, int startSpeed, int startGear) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        super(startSpeed, startGear);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        seatHeight \u003d startHeight;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    // the MountainBike subclass adds one method"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setHeight(int newValue) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        seatHeight \u003d newValue;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "**A subclass inherits all the fields and methods of the superclass.** In the example above, `MountainBike` inherits all the fields and methods of `Bicycle` and adds the field `seatHeight` and a method to set it."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "##### Accessing superclass members"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "**If your method overrides one of its superclass\u0027s methods, you can invoke the overridden method through the use of the keyword `super`.** You can also use `super` to refer to a \u003ctooltip content\u003d\"when both the superclass and the subclass use the same variable name, the superclass variables is said to be _hidden/shadowed_ by the subclass variable\"\u003ehidden field\u003c/tooltip\u003e (although hiding fields is discouraged)."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Consider this class, `Superclass` and a subclass, called `Subclass`, that overrides `printMethod()`:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "public class Superclass {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    public void printMethod() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Printed in Superclass.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "public class Subclass extends Superclass {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    // overrides printMethod in Superclass"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    public void printMethod() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        super.printMethod();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Printed in Subclass\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        Subclass s \u003d new Subclass();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        s.printMethod();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_output }}"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "Printed in Superclass."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "Printed in Subclass"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "Within `Subclass`, the simple name `printMethod()` refers to the one declared in `Subclass`, which overrides the one in `Superclass`. So, to refer to `printMethod()` inherited from `Superclass`, `Subclass` must use a qualified name, using `super` as shown."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "##### Subclass constructors"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "**A subclass constructor can invoke the superclass constructor.** Invocation of a superclass constructor must be the first line in the subclass constructor."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "The syntax for calling a superclass constructor is `super()` %%(which invokes the no-argument constructor of the superclass)%% or `super(parameters)` %%(to invoke the superclass constructor with a matching parameter list)%%."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The following example illustrates how to use the `super` keyword to invoke a superclass\u0027s constructor. Recall from the `Bicycle` example that `MountainBike` is a subclass of `Bicycle`. Here is the `MountainBike` (subclass) constructor that calls the superclass constructor and then adds some initialization code of its own (i.e., `seatHeight \u003d startHeight;`{.java}):"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "public MountainBike(int startHeight, int startSpeed, int startGear) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    super(startSpeed, startGear);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    seatHeight \u003d startHeight;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "Note: If a constructor does not explicitly invoke a superclass constructor, the Java compiler automatically inserts a call to the no-argument constructor of the superclass. If the superclass does not have a no-argument constructor, you will get a compile-time error. `Object` does have such a constructor, so if `Object` is the only superclass, there is no problem."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "##### Access modifiers (simplified)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "**Access level modifiers determine whether other classes can use a particular field or invoke a particular method.** Given below is a simplified version of Java access modifiers, \u003d\u003dassuming you have not yet started placing your classes in different packages\u003d\u003d i.e., all classes are placed in the root level. A full explanation of access modifiers is given in a later topic."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "There are two levels of access control:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "1. **At the class level**:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "   * **`public`**: the class is visible to all other classes"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "   * **no modifier**: same as `public`\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "2. **At the member level**:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "   * **`public`** : the member is visible to all other classes"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "   * **no modifier**: same as `public`"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "   * **`protected`**: the member is visible to sub classes only"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "   * **`private`**: the member is not visible to other classes (but can be accessed in its own class)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercisesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 3,
      "-": 153
    }
  },
  {
    "path": "cppToJava/inheritance/objectClass/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eThe `Object` class\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use Object class\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "As you know, all Java objects inherit from the `Object` class. Let us look at some of the useful methods in the `Object` class that can be used by other classes."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "##### The `toString` method"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"indented\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "**Every class inherits a `toString` method from the `Object` class that is used by Java to get a string representation of the object** %%e.g., for printing%%. By default, it simply returns the type of the object and its address (in hexadecimal)."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Suppose you defined a class called `Time`, to represent a moment in time. If you create a `Time` object and display it with println:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "class Time {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    int hours;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    int minutes;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    int seconds;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    Time(int hours, int minutes, int seconds) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        this.hours \u003d hours;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.minutes \u003d minutes;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.seconds \u003d seconds;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": " Time t \u003d new Time(5, 20, 13);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " System.out.println(t);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_output_right }} `Time@80cc7c0` %%(the address part can vary)%%"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "**You can override the `toString` method in your classes** to provide a more meaningful string representation of the objects of that class."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Here\u0027s an example of overriding the `toString` method of the `Time` class:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "class Time{"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "   //..."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "   @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "       return String.format(\"%02d:%02d:%02d\\n\", this.hours, this.minutes, this.seconds);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": " Time t \u003d new Time(5, 20, 13);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": " System.out.println(t);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_output_right }} `05:20:13`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_tip }} `@Override` is an optional annotation you can use to indicate that the method is overriding a method from the parent class."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "##### The `equals` method"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"indented\"\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "**There are two ways to check whether values are equal: the `\u003d\u003d` operator and the `equals` method. With objects you can use either one, but they are not the same.**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "* The `\u003d\u003d` operator checks whether objects are identical; that is, whether they are the same object."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "* The `equals` method checks whether they are equivalent; that is, whether they have the same value."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "The definition of identity is always the same, so the `\u003d\u003d` operator always does the same thing."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Consider the following variables:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "Time time1 \u003d new Time(9, 30, 0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "Time time2 \u003d time1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "Time time3 \u003d new Time(9, 30, 0);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "* The assignment operator copies references, so `time1` and `time2` refer to the same object. Because they are identical, `time1 \u003d\u003d time2` is `true`."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "* But `time1` and `time3` refer to different objects. Because they are not identical, `time1 \u003d\u003d time3` is `false`."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "By default, the `equals` method inherited from the `Object` class does the same thing as `\u003d\u003d`. **As the definition of equivalence is different for different classes, you can override the `equals` method to define your own criteria for equivalence** of objects of your class."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Here\u0027s how you can override the `equals` method of the `Time` class to provide an `equals` method that considers two `Time` objects equivalent as long as they represent the same time of the day:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    int hours;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    int minutes;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    int seconds;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        Time other \u003d (Time) o;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.hours \u003d\u003d other.hours"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 this.minutes \u003d\u003d other.minutes"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 this.seconds \u003d\u003d other.seconds;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "Time t1 \u003d new Time(5, 20, 13);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "Time t2 \u003d new Time(5, 20, 13);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(t1 \u003d\u003d t2);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(t1.equals(t2));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_output }}"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "false"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "true"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_important_big_red }} Note that a proper `equals` method implementation is more complex than the example above. See the article [_How to Implement Java’s equals Method Correctly_ by Nicolai Parlog](https://www.sitepoint.com/implement-javas-equals-method-correctly/) for a detailed explanation before you implement your own `equals` method."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercisesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 136
    }
  },
  {
    "path": "cppToJava/javaWorld/editions/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eJava editions\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain Java editions\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "According to the [Official Java documentation](https://docs.oracle.com/javaee/6/firstcup/doc/gkhoy.html), there are four platforms of the Java programming language:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* **Java Platform, Standard Edition (Java SE)**: Contains the core functionality of the Java programming language."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "* **Java Platform, Enterprise Edition (Java EE)**: For developing and running large-scale enterprise applications. Built on top of Java SE."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "* **Java Platform, Micro Edition (Java ME)**: For Java programming language applications meant for small devices, like mobile phones. A subset of Java SE."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "* **JavaFX**: For creating applications with graphical user interfaces. Can work with the other three above."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "This book chapter uses the Java SE edition unless stated otherwise."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 23
    }
  },
  {
    "path": "cppToJava/javaWorld/how/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eHow Java works\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain how Java works at a higher-level\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Java is both \u003ctooltip content\u003d\"generates machine code from source code before executing the program\"\u003e_compiled_\u003c/tooltip\u003e and \u003ctooltip content\u003d\"the interpreter executes the program directly, one statement at a time\"\u003e_interpreted_\u003c/tooltip\u003e.** Instead of translating programs directly into machine language, the Java compiler generates _byte code_. Byte code is _portable_, so it is possible to compile a Java program on one machine, transfer the byte code to another machine, and run the byte code on the other machine. That’s why Java is considered a _platform independent technology_, aka _WORA_ (Write Once Run Anywhere). The interpreter that runs byte code is called a “Java Virtual Machine” (JVM)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e**Java technology is both a _programming language_ and a _platform_.** The Java programming language is a high-level object-oriented language that has a particular syntax and style. A Java platform is a particular environment in which Java programming language applications run. \u003csmall\u003e--[Oracle](https://docs.oracle.com/javaee/6/firstcup/doc/gkhoy.html)\u003c/small\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 15
    }
  },
  {
    "path": "cppToJava/javaWorld/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eThe Java world\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"how/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"editions/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 8
    }
  },
  {
    "path": "cppToJava/misc/accessModifiers/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAccess modifiers\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain access modifiers\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Access level modifiers determine whether other classes can use a particular field or invoke a particular method.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "There are two levels of access control:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "1. **At the class level**:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * **`public`**: the class is visible to all classes everywhere"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * **no modifier (the default, also known as _package-private_)**: it is visible only within its own package\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "2. **At the member level**:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "   * **`public`** or **no modifier (_package-private_)**: same meaning as when used with top-level classes"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   * **`private`**: the member can only be accessed in its own class"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   * **`protected`**: the member can only be accessed within its own package (as with package-private) and, in addition, by a subclass of its class in another package"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "The following table shows the access to members permitted by each modifier."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"indented\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "Modifier |\t\u003ctooltip content\u003d\"whether the class itself has access to the member defined by the access level\"\u003eClass\u003c/tooltip\u003e |\t\u003ctooltip content\u003d\"whether classes in the same package as the class (regardless of their parentage) have access to the member\"\u003ePackage\u003c/tooltip\u003e |\t\u003ctooltip content\u003d\"whether subclasses of the class declared outside this package have access to the member\"\u003eSubclass\u003c/tooltip\u003e |\t\u003ctooltip content\u003d\"whether all classes have access to the member\"\u003eWorld\u003c/tooltip\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "--------------|-----------------------|-----------------------|-----------------------|----------------------"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`public`\t     | {{ icon_tick_green }} |\t{{ icon_tick_green }} |\t{{ icon_tick_green }} |\t{{ icon_tick_green }}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "`protected`\t  | {{ icon_tick_green }} |\t{{ icon_tick_green }} |\t{{ icon_tick_green }} |\t{{ icon_x_red }}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "no modifier\t  | {{ icon_tick_green }} |\t{{ icon_tick_green }} |\t{{ icon_x_red }}      |\t{{ icon_x_red }}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "`private`\t    | {{ icon_tick_green }} |\t{{ icon_x_red }}      |\t{{ icon_x_red }}      |\t{{ icon_x_red }}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "Access levels affect you in two ways:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "1. When you use classes that come from another source, such as the classes in the Java platform, access levels determine which members of those classes your own classes can use."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "1. When you write a class, you need to decide what access level every member variable and every method in your class should have."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 41
    }
  },
  {
    "path": "cppToJava/misc/fileAccess/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eFile access\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can read/write text files using Java\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**You can use the [`java.io.File`]({{ java_api }}/java/io/File.html) class to represent a file object**. It can be used to access properties of the file object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} This code creates a `File` object to represent a file `fruits.txt` that exists in the `data` directory \u003d\u003drelative to the current working directory\u003d\u003d and uses that object to print some properties of the file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class FileClassDemo {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        File f \u003d new File(\"data/fruits.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"full path: \" + f.getAbsolutePath());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"file exists?: \" + f.exists());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"is Directory?: \" + f.isDirectory());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_output }}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "full path: C:\\sample-code\\data\\fruits.txt"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "file exists?: true"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "is Directory?: false"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_info }} If you use backslash to specify the file path in a Windows computer, you need to use an additional backslash as an escape character because the backslash by itself has a special meaning. e.g., use {{ icon_tick_green }}`\"data\\\\fruits.txt\"`, not {{ icon_x_red }} `\"data\\fruits.txt\"`. Alternatively, you can use forward slash {{ icon_tick_green }} `\"data/fruits.txt\"` (even on Windows)."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "**You can read from a file using a `Scanner` object that uses a `File` object as the _source_ of data.**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} This code uses a `Scanner` object to read (and print) contents of a text file line-by-line:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "public class FileReadingDemo {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void printFileContents(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(s.nextLine());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            printFileContents(\"data/fruits.txt\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_output }} i.e., contents of the `data/fruits.txt`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "5 Apples"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "3 Bananas"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "6 Cherries"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "**You can use a [`java.io.FileWriter`]({{ java_api }}/java/io/FileWriter.html) object to write to a file.**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The `writeToFile` method below uses a `FileWrite` object to write to a file. The method is being used to write two lines to the file `temp/lines.txt`."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "public class FileWritingDemo {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        String file2 \u003d \"temp/lines.txt\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            writeToFile(file2, \"first line\" + System.lineSeparator() + \"second line\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_output }} Contents of the `temp/lines.txt`:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "first line"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "second line"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "Note that you \u003d\u003dneed to call the `close()` method\u003d\u003d of the `FileWriter` object for the writing operation to be completed."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "**You can create a `FileWriter` object that appends to the file** (instead of overwriting the current content) by specifying an additional boolean parameter to the constructor."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The method below appends to the file rather than overwrites."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "private static void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    fw.write(textToAppend);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    fw.close();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "**The [`java.nio.file.Files`]({{ java_api }}/java/nio/file/Files.html) is a utility class that provides several useful file operations.** It relies on the [`java.nio.file.Paths`]({{ java_api }}/java/nio/file/Paths.html) file to generate `Path` objects that represent file paths."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} This example uses the `Files` class to copy a file and delete a file."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "public class FilesClassDemo {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) throws IOException{"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        Files.copy(Paths.get(\"data/fruits.txt\"), Paths.get(\"temp/fruits2.txt\"));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        Files.delete(Paths.get(\"temp/fruits2.txt\"));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "The techniques above are good enough to manipulate simple text files. Note that **it is also possible to [perform file I/O operations using other classes](https://www.tutorialspoint.com/java/java_files_io.htm)**."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 158
    }
  },
  {
    "path": "cppToJava/misc/jar/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eUsing JAR files\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use JAR files\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Java applications are typically delivered as JAR (short for _Java Archive_) files.** A JAR contains Java classes and other resources (icons, media files, etc.)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "An executable JAR file can be launched using the `java -jar` command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} `java -jar foo.jar` launches the `foo.jar` file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} You can download the Collate-TUI.jar from [https://se-edu.github.io/collate/](https://se-edu.github.io/collate/) and run it using the command`java -jar Collate-TUI.jar` command. It\u0027s usage is given [here](https://se-education.org/collate/docs/User-Guide.html#using-the-text-ui)."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "The IDE can help you to package your application as a JAR file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"resourcesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 26
    }
  },
  {
    "path": "cppToJava/misc/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eMiscellaneous topics\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"enums/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"packages/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"accessModifiers/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"constants/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"casting/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"fileAccess/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"jar/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"varargs/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"streams/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"javaFX/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 15
    }
  },
  {
    "path": "cppToJava/objects/garbageCollection/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eGarbage collection\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain Java garbage collection\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "What happens when no variables refer to an object?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "Point spot \u003d new Point(3, 4);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "spot \u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "The first line creates a new `Point` object and makes spot refer to it. The second line changes `spot` so that instead of referring to the object, it refers to nothing. If there are no references to an object, there is no way to access its attributes or invoke a method on it. From the programmer’s view, it ceases to exist. However it’s still present in the computer’s memory, taking up space."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "{{ different }} **In Java, you don’t have to delete objects you create when they are no longer needed.** As your program runs, the system automatically looks for stranded objects and reclaims them; then the space can be reused for new objects. This process is called _garbage collection_. You don’t have to do anything to make garbage collection happen, and in general don’t have to be aware of it. But in high-performance applications, you may notice a slight delay every now and then when Java reclaims space from discarded objects."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 20
    }
  },
  {
    "path": "cppToJava/objects/instanceMembers/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eInstance members\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use instance members of objects\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Variables that belong to an object are called _attributes_ (or _fields_).**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "{{ different }} To access an attribute of an object, Java uses _dot notation_."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The code below uses `spot.x` which means \"go to the object `spot` refers to, and get the value of the attribute `x`.\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "Point spot \u003d new Point(3, 4);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "int sum \u003d spot.x * spot.x + spot.y * spot.y;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(spot.x + \", \" + spot.y + \", \" + sum);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_output }}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "3, 4, 25"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "**You can \u003ctooltip content\u003d\"i.e., change/modify\"\u003e_mutate_\u003c/tooltip\u003e an object by assigning a different values to its attributes.**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} This example changes the x value of the `Point` object to `5`."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "Point spot \u003d new Point(3, 4);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "spot.x \u003d 5;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(spot.x + \", \" + spot.y);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_output }}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "5, 4"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "{{ different }} **Java uses the dot notation to invoke methods on an object too.**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} This example invokes the `translate` method on a `Point` object so that it moves to a different location."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "Point spot \u003d new Point(3, 4);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(spot.x + \", \" + spot.y);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "spot.translate(5,5);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(spot.x + \", \" + spot.y);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_output }}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "3, 4"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "8, 9"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercisesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 68
    }
  },
  {
    "path": "cppToJava/objects/passingObjects/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003ePassing objects around\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can pass objects between methods\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**You can pass objects as parameters to a method in the usual way**."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The `printPoint` method below takes a `Point` object as an argument and displays its attributes in `(x,y)` format."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public static void printPoint(Point p) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    System.out.println(\"(\" + p.x + \", \" + p.y + \")\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public static void main(String[] args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    Point spot \u003d new Point(3, 4);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    printPoint(spot);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_output }}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "3, 4"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "**You can return an object from a method too.**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The `java.awt` package also provides a class called `Rectangle`. `Rectangle` objects are similar to points, but they have four attributes: `x`, `y`, `width`, and `height`. The `findCenter` method below takes a `Rectangle` as an argument and returns a `Point` that corresponds to the center of the rectangle:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "public static Point findCenter(Rectangle box) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    int x \u003d box.x + box.width / 2;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    int y \u003d box.y + box.height / 2;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    return new Point(x, y);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "The return type of this method is `Point`. The last line creates a new `Point` object and returns a reference to it."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "##### `null` and `NullPointerException`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"indented\"\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "**`null` is a special value that means \"no object\"**. You can assign null to a variable to indicate that the variable is \u0027empty\u0027 at the moment. However, if you try to use a null value, either by accessing an attribute or invoking a method, Java throws a `NullPointerException`."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} In this example, the variable `spot` is assigned a `null` value. As a result, trying to access `spot.x` attribute or invoking the `spot.translate` method results in a `NullPointerException`."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "Point spot \u003d null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "int x \u003d spot.x;          // NullPointerException"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "spot.translate(50, 50);  // NullPointerException"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "On the other hand, it is legal to return null from a method or to pass a `null` reference as an argument to a method."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Returning `null` from a method."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "public static Point createCopy(Point p) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    if (p \u003d\u003d null) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        return null; // return null if p is null"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    // create a new object with same x,y values"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    return new Point(p.x, p.y);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Passing `null` as the argument."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "Point result \u003d createCopy(null);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(result);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_output }}"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "null"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "**It is possible to have multiple variables that refer to the same object.**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Notice how `p1` and `p2` are aliases for the same object. When the object is changed using the variable `p1`, the changes are visible via `p2` as well (and vice versa), because they both point to the same `Point` object."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "Point p1 \u003d new Point(0,0);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "Point p2 \u003d p1;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(\"p1: \" + p1.x + \", \" + p1.y);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(\"p2: \" + p2.x + \", \" + p2.y);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "p1.x \u003d 1;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "p2.y \u003d 2;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(\"p1: \" + p1.x + \", \" + p1.y);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(\"p2: \" + p2.x + \", \" + p2.y);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_output }}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "p1: 0, 0"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "p2: 0, 0"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "p1: 1, 2"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "p2: 1, 2"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "{{ different }} **Java does not have explicit pointers** (and other related things such as pointer de-referencing and pointer arithmetic). **When an object is passed into a method as an argument, the method gains access to the original object.** If the method changes the object it received, the changes are retained in the object even after the method has completed."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Note how `p3` retains changes done to it by the method `swapCoordinates` even after the method has completed executing."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "public static void swapCoordinates(Point p){"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    int temp \u003d p.x;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    p.x \u003d p.y;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    p.y \u003d temp;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "public static void main(String[] args) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    Point p3 \u003d new Point(2,3);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    System.out.println(\"p3: \" + p3.x + \", \" + p3.y);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    swapCoordinates(p3);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    System.out.println(\"p3: \" + p3.x + \", \" + p3.y);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_ouput }}"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "p3: 2, 3"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "p3: 3, 2"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercisesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 151
    }
  },
  {
    "path": "cppToJava/objects/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eJava objects\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"usingObjects/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"instanceMembers/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"passingObjects/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"garbageCollection/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 9
    }
  },
  {
    "path": "cppToJava/objects/usingObjects/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eUsing Java objects\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use in-built Java objects\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Java is an \"object-oriented\" language, which means that it uses objects to represent data and provide methods related to them. Object types are called _classes_ e.g., you can use `String` objects in Java and those objects belong to the `String` class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "##### importing"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"indented\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "Java comes with many inbuilt classes which are organized into _packages_. Here are some examples:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "package | Some example classes in the package"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "----------|----------------"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "`java.lang` | `String`, `Math`, `System`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "**Before using a class in your code, you need to `import` the class.** `import` statements appear at the top of the code."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} This example imports the `java.awt.Point` class (i.e., the `Point` class in the `java.awt` package) -- which can be used to represent \u003ctrigger for\u003d\"pop:usingObjects-coordinates\"\u003ethe coordinates of a location in a Cartesian plane\u003c/trigger\u003e  -- and use it in the `main` method."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpopover id\u003d\"pop:usingObjects-coordinates\" header\u003d\"Coordinates of a location in a Cartesian plane\" placement\u003d\"top\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv slot\u003d\"content\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "In mathematical notation, points are often written in parentheses with a comma separating the coordinates. For example, `(0,0)` indicates the origin, and `(x,y)` indicates the point `x` units to the right and `y` units up from the origin."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/popover\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import java.awt.Point;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "public class Main{"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        Point spot \u003d new Point(3, 4);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        int x \u003d spot.x;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(x);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "   }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_tip }} You might wonder why we can use the `System` class without importing it. `System` belongs to **the `java.lang` package, which is imported automatically**."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "##### `new` operator"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"indented\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "**To create a new object, you have to use the `new` operator**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} This line shows how to create a new `Point` object using the `new` operator:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "Point spot \u003d new Point(3, 4);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercisesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 71
    }
  },
  {
    "path": "cppToJava/usefulClasses/stringClass/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eThe `String` class\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use the String class\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "String is a built-in Java class that you \u003ctrigger trigger\u003d\"click\" for\u003d\"modal:stringClass-javaLang\"\u003ecan use without importing\u003c/trigger\u003e. Given below are some useful String methods:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmodal id\u003d\"modal:stringClass-javaLang\" header\u003d\":bulb: `java.lang` classes can be used without importing\" placement\u003d\"top\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " Any class in the [`java.lang`]({{ java_api }}/java/lang/package-summary.html) package can be used without importing."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/modal\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "##### Find characters of a string"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"indented\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "Strings provide a method named `charAt`, which extracts a character. It returns a `char`, a primitive type that stores an individual character (as opposed to strings of them)."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "String fruit \u003d \"banana\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "char letter \u003d fruit.charAt(0);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "The argument 0 means that we want the letter at position 0. Like array indexes, string indexes start at 0, so the character assigned to `letter` is `\u0027b\u0027`."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "You can convert a string to an array of characters using the `toCharArray` method."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "char[] fruitChars \u003d fruit.toCharArray()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "##### Change a string to upper/lower case"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"indented\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "Strings provide methods, `toUpperCase` and `toLowerCase`, that convert from uppercase to lowercase and back."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} After these statements run, `upperName` refers to the string `\"ALAN TURING\"` but `name` still refers to `\"Alan Turing\"`."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "String name \u003d \"Alan Turing\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "String upperName \u003d name.toUpperCase();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(name);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(upperName);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_output }}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "Alan Turing"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "ALAN TURING"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "Note that **a string method cannot change the string object on which the method is invoked, because strings are \u003ctooltip content\u003d\"once created, cannot be modified\"\u003e_immutable_\u003c/tooltip\u003e**. For example, when you invoke `toUpperCase` on a string `\"abc\"`, you get a new string object `\"ABC\"` as the return value rather than the string `\"abc\"` being changed to `\"ABC\"`. As a result, for such string methods that _seemingly_ modify the string but _actually_ return a new string instead e.g., `toLowerCase`, \u003d\u003dinvoking the method has no effect if you don’t assign the return value to a variable\u003d\u003d."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "String s \u003d \"Ada\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "s.toUpperCase(); // no effect"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "s \u003d s.toUpperCase(); // the correct way"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "##### Replacing parts of a string"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"indented\"\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "Another useful method is `replace`, which finds and replaces instances of one string within another."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} This example replaces `\"Computer Science\"` with `\"CS\"`."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "String text \u003d \"Computer Science is fun!\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "text \u003d text.replace(\"Computer Science\", \"CS\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(text);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_output }}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "CS is fun!"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "##### Accessing substrings"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"indented\"\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "The `substring` method returns a new string that copies letters from an existing string, starting at the given index."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "* `\"banana\".substring(0)` {{ icon_output_right }} `\"banana\"`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "* `\"banana\".substring(2)` {{ icon_output_right }} `\"nana\"`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "* `\"banana\".substring(6)` {{ icon_output_right }} `\"\"`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "If it’s invoked with two arguments, they are treated as a start and end index:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "* `\"banana\".substring(0, 3)` {{ icon_output_right }} `\"ban\"`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "* `\"banana\".substring(2, 5)` {{ icon_output_right }} `\"nan\"`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "* `\"banana\".substring(6, 6)` {{ icon_output_right }} `\"\"`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "##### Searching within strings"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"indented\"\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "The `indexOf` method searches for a single character (or a substring) in a string and returns the index of the first occurrence. The method returns `-1` if there are no occurrences."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "* `\"banana\".indexOf(\u0027a\u0027)` {{ icon_output_right }} `1`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "* `\"banana\".indexOf(\u0027a\u0027, 2)` {{ icon_output_right }} `3` %%searches for `\u0027a\u0027`, starting from position 2%%"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "* `\"banana\".indexOf(\u0027x\u0027)` {{ icon_output_right }} `-1`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "* `\"banana\".indexOf(\"nan\")` {{ icon_output_right }} `2` %%searches for the substring `\"nan\"`%%"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "##### Comparing strings"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"indented\"\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "To compare two strings, it is tempting to use the `\u003d\u003d` and `!\u003d` operators."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "String name1 \u003d \"Alan Turing\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "String name2 \u003d \"Alan Turing\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(name1 \u003d\u003d name2);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "This code compiles and runs, and most of the time it shows `true`. But it is not correct. The problem is, \u003ctooltip content\u003d\"i.e., as opposed to comparing primitive values e.g., `2 \u003d\u003d 2`\"\u003ewhen used for comparing objects\u003c/tooltip\u003e, the `\u003d\u003d` operator checks whether the two variables refer to the same object (by comparing the references). If you give it two different string objects that contain the same letters, it is supposed to yield `true` because they are two distinct objects even if they contain the same text. However, because Java strings are immutable, \u003d\u003din some cases (but not always)\u003d\u003d Java reuses existing string objects instead of creating multiple objects, which can cause the above code to yield `true`. Therefore, it is not safe to use `\u003d\u003d` to compare strings if your intention is to check if they contain the same text."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "**The right way to compare strings is with the `equals` method.**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} This example invokes `equals` on `name1` and passes `name2` as an argument. The `equals` method returns `true` if the strings contain the same characters; otherwise it returns `false`."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "if (name1.equals(name2)) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    System.out.println(\"The names are the same.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "If the strings differ, you can use `compareTo` to see which comes first in alphabetical order. The return value from `compareTo` is the difference between the first characters in the strings that differ. If the strings are equal, their difference is zero. If the first string (the one on which the method is invoked) comes first in the alphabet, the difference is negative. Otherwise, the difference is positive."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} In this example, `compareTo` returns positive 8, because the second letter of \"Alan\" comes 8 letters _after_ the second letter of \"Ada\"."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "String name1 \u003d \"Alan\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "String name2 \u003d \"Ada\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "int diff \u003d name1.compareTo(name2);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "if (diff \u003d\u003d 0) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    System.out.println(\"The names are the same.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "} else if (diff \u003c 0) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    System.out.println(\"name1 comes before name2.\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "} else if (diff \u003e 0) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    System.out.println(\"name2 comes before name1.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "Both `equals` and `compareTo` are case-sensitive. The uppercase letters come before the lowercase letters, so `\"Ada\"` comes before `\"ada\"`. To check if two strings are similar irrespective of the differences in case, you can use the `equalsIgnoreCase` method."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "String s1 \u003d \"Apple\";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "String s2 \u003d \"apple\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(s1.equals(s2)); //false"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(s1.equalsIgnoreCase(s2)); //true"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "Some more comparison-related `String` methods:"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "* `contains`: checks if one string is a sub-string of the other e.g., `Snapple` and `app`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "* `startsWith`: checks if one string has the other as a substring at the _beginning_ e.g., `Apple` and `App`"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "* `endsWith`: checks if one string has the other as a substring at the _end_ e.g., `Crab` and `ab`"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "##### Printing special characters (line breaks, tabs, ...)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"indented\"\u003e"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "You can embed a special character %%e.g., line break, tab, backspace, etc.%% in a string using an _escape sequence_."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "Escape sequence | meaning"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "----------------|--------"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "`\\n`     | newline character"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "`\\t`     | tab character"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "`\\b`     | backspace character"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "`\\f`     | form feed character"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "`\\r`     | carriage return character"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "`\\\"`     | \" (double quote) character"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "`\\\u0027`     | \u0027 (single quote) character"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "`\\\\`     | \\ (back slash) character"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "`\\uDDDD` |character from the Unicode character set, by specifying the Unicode as four hex digits in the place of `DDDD`"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} An example of using escape sequences to print some special characters."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(\"First line\\nSecond \\\"line\\\"\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_output }}"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "First line"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "Second \"line\""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_tip }} As the behavior of the `\\n` \u003ctooltip content\u003d\"e.g., behavior differs between Windows and OS-X\"\u003edepends on the platform\u003c/tooltip\u003e, the recommended way to print a line break is using the `System.lineSeparator()` as it works the same in all platforms."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Using `System.lineSeparator()` to print a line break."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(\"First line\" + System.lineSeparator() + \"Second line\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_output }}"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "First line"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "Second line"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "##### String formatting"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"indented\"\u003e"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "Sometimes programs need to create strings that are formatted in a certain way. `String.format` takes a _format specifier_ followed by a sequence of values and returns a new string formatted as specified."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The following method returns a time string in 12-hour format. The format specifier `\\%02d` means “two digit integer padded with zeros”, so `timeString(19, 5)` returns the string `\"07:05 PM\"`."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "public static String timeString(int hour, int minute) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    String ampm;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    if (hour \u003c 12) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        ampm \u003d \"AM\";"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        if (hour \u003d\u003d 0) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            hour \u003d 12;  // midnight"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        ampm \u003d \"PM\";"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        hour \u003d hour - 12;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "    return String.format(\"%02d:%02d %s\", hour, minute, ampm); // returns \"07:05 PM\""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"resourcesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercisesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 2,
      "-": 260
    }
  },
  {
    "path": "cppToJava/usefulClasses/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eSome useful classes\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"api/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"stringClass/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"wrapperClasses/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"arraysClass/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"scannerClass/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 10
    }
  },
  {
    "path": "cppToJava/usefulClasses/wrapperClasses/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eWrapper Classes for primitive types\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use wrapper classes for primitive\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Primitive values (like `int`, `double`, and `char`) do not provide methods."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} For example, you can’t call `equals` on an `int`:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "int i \u003d 5;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(i.equals(5));  // compiler error"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "But **for each primitive type, there is a corresponding class in the Java library, called a _wrapper class_**, as given in the table below. They are in the `java.lang` package i.e., no need to import."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "Primitive type | Wrapper class"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|-------------"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "`byte`         | `Byte`"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "`short`        | `Short`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`int`          | `Integer`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`long`         | `Long`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "`float`        | `Float`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "`double`       | `Double`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "`char`         | `Character`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "`boolean`      | `Boolean`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "Double d \u003d new Double(2.5);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "int i \u003d d.intValue();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(d);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(i);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_output }}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "2.5"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "2"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "Each wrapper class defines constants `MIN_VALUE` and `MAX_VALUE`."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Accessing max and min values for integers:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "System.out.println(Integer.MIN_VALUE + \" : \" + Integer.MAX_VALUE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_output_right }} `-2147483648 : 2147483647`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "**Wrapper classes provide methods for \u003ctooltip content\u003d\"In this context, parse means something like “read and translate”\"\u003e_parsing_\u003c/tooltip\u003e strings to other types** e.g., `Integer.parseInt` converts a string to (you guessed it) an integer. The other wrapper classes provide similar methods, like `Double.parseDouble` and `Boolean.parseBoolean`."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} `Integer.parseInt(\"1234\")` {{ icon_output_right }} `1234`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "Wrapper classes also provide `toString`, which returns a string representation of a value."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} `Integer.toString(1234)` {{ icon_output_right }} `\"1234\"`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercisesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 78
    }
  },
  {
    "path": "design/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Software Design\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 5
    }
  },
  {
    "path": "design/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eSoftware design\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"introduction/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "designApproaches/agileDesign/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAgile design\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "designApproaches/agileDesign/what/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAgile design\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain agile design\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**_Agile design_ can be contrasted with _full upfront design_ in the following way**:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e**Agile designs are emergent, they’re not defined up front.** Your overall system design will emerge over time, evolving to fulfill new requirements and take advantage of new technologies as appropriate. Although you will often do **some initial architectural modeling at the very beginning** of a project, this will be just enough to get your team going. This approach does not produce a fully documented set of models in place before you may begin coding. \u003csub\u003e-- adapted from [agilemodeling.com](http://agilemodeling.com/essays/agileDesign.htm)\u003c/sub\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 18
    }
  },
  {
    "path": "designApproaches/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Design Approaches\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 5
    }
  },
  {
    "path": "designApproaches/multilevelDesign/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eMulti-level design\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "designApproaches/multilevelDesign/what/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eMulti-level design\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain multi-level design\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "In a smaller system, design of the entire system can be shown in one place."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv v-closeable alt\u003d\"single-level design example\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} This class diagram of [se-edu/addressbook-level2](https://se-education.org/addressbook-level2) depicts the design of the entire software."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"https://se-education.org/addressbook-level2/images/mainClassDiagram.png\" width\u003d\"600\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "**Design of bigger systems needs to be done/shown at multiple levels.**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv v-closeable alt\u003d\"multi-level design example\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} This architecture diagram of [se-edu/addressbook-level3](https://se-education.org/addressbook-level3) depicts the high-level design of the software."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"https://se-education.org/addressbook-level3/images/ArchitectureDiagram.png\" width\u003d\"300\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "Here are examples of lower level designs of some components of the same software:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctabs\u003e "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctab header\u003d\"UI\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"https://se-edu.github.io/addressbook-level3/images/UiClassDiagram.png\" width\u003d\"700\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/tab\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctab header\u003d\"Logic\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"https://se-edu.github.io/addressbook-level3/images/LogicClassDiagram.png\" width\u003d\"800\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/tab\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctab header\u003d\"Storage\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"https://se-edu.github.io/addressbook-level3/images/StorageClassDiagram.png\" width\u003d\"700\" /\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/tab\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/tabs\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 59
    }
  },
  {
    "path": "designApproaches/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eDesign approaches\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"multilevelDesign/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"topDownBottomUp/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"agileDesign/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 8
    }
  },
  {
    "path": "designApproaches/topDownBottomUp/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eTop-down and bottom-up design\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "designApproaches/topDownBottomUp/what/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eTop-down and bottom-up design\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003cpanel src\u003d\"../../multilevelDesign/what/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }} Design → Design Approaches → Multi-Level Design → What%%\" popup-url\u003d\"{{ baseUrl }}/designApproaches/multilevelDesign/what\" /\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain top-down and bottom-up design\u003c/span\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "**Multi-level design can be done in a top-down manner, bottom-up manner, or as a mix.**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* Top-down: Design the high-level design first and flesh out the lower levels later. This is especially useful when designing big and novel systems where the high-level design needs to be stable before lower levels can be designed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* Bottom-up: Design lower level components first and put them together to create the higher-level systems later. This is not usually scalable for bigger systems. One instance where this approach might work is when designing a variations of an existing system or re-purposing existing components to build a new system."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "* Mix: Design the top levels using the top-down approach but switch to a bottom-up approach when designing the bottom levels. "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 20
    }
  },
  {
    "path": "designFundamentals/abstraction/what/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eWhat\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain abstraction\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"definition\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../../../common/definitions.md#def-abstraction\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "**The guiding principle of abstraction is that only details that are relevant to the current perspective or the task at hand needs to be considered.** As most programs are written to solve complex problems involving large amounts of intricate details, it is impossible to deal with all these details at the same time. That is where abstraction can help."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "**\u003d\u003d_Data abstraction_\u003d\u003d: abstracting away the lower level data items and thinking in terms of bigger entities**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "{{ icon_example }} Within a certain software component, you might deal with a _user_ data type, while ignoring the details contained in the user data item such as _name_, and _date of birth_. These details have been ‘abstracted away’ as they do not affect the task of that software component."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "**\u003d\u003d_Control abstraction_\u003d\u003d: abstracting away details of the actual control flow to focus on tasks at a higher level**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} `print(“Hello”)` is an abstraction of the actual output mechanism within the computer."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "**Abstraction can be applied repeatedly to obtain progressively _higher levels of abstractions_.** "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} An example of different levels of data abstraction: a `File` is a data item that is at a higher level than an array and an array is at a higher level than a bit. "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} An example of different levels of control abstraction: `execute(Game)` is at a higher level than `print(Char)` which is at a higher than an Assembly language instruction `MOV`."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "**Abstraction is a general concept that is not limited to just data or control abstractions.**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Some more general examples of abstraction:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "* An OOP _class_ is an abstraction over related data and behaviors."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "* An _architecture_ is a higher-level abstraction of the design of a software."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "* Models (e.g., UML models) are abstractions of some aspect of reality."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 55
    }
  },
  {
    "path": "designFundamentals/cohesion/how/q-essay-emailMessage.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Which class is more cohesive?\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion has-input\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Compare the cohesion of the following two versions of the `EmailMessage` class. Which one is more cohesive and why?"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "// version-1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "class EmailMessage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    private String sendTo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " \t  private String subject;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public EmailMessage(String sendTo, String subject, String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sendTo \u003d sendTo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        this.subject \u003d subject;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sendMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        // sends message using sendTo, subject and message"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "// version-2"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "class EmailMessage {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private String sendTo;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private String subject;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private String username;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public EmailMessage(String sendTo, String subject, String message) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sendTo \u003d sendTo;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.subject \u003d subject;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sendMessage() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        // sends message using sendTo, subject and message"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public void login(String username, String password) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        this.username \u003d username;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        // code to login"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "Version 2 is less cohesive."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "Explanation: Version 2 is handling functionality related to login, which is not directly related to the concept of ‘email message’ that the class is supposed to represent. On a related note, you can improve the cohesion of both versions by removing the sendMessage functionality. Although sending message is related to emails, this class is supposed to represent an email message, not an email server."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 55
    }
  },
  {
    "path": "designFundamentals/coupling/types/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eTypes of coupling\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003cpanel src\u003d\"../what/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }} Design → Design Fundamentals → Coupling → What%%\" popup-url\u003d\"{{ baseUrl }}/designFundamentals/coupling/what\" /\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can identify types of coupling\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Some examples of different coupling types:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* **Content coupling**: one module modifies or relies on the internal workings of another module %%e.g., accessing local data of another module%% "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* **Common/Global coupling**: two modules share the same global data "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "* **Control coupling**: one module controlling the flow of another, by passing it information on what to do %%e.g., passing a flag%%"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "* **Data coupling**: one module sharing data with another module %%e.g. via passing parameters%% "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "* **External coupling**: two modules share an externally imposed convention %%e.g., data formats, communication protocols, device interfaces%%. "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "* **Subclass coupling**: a class inherits from another class. Note that a child class is coupled to the parent class but not the other way around."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "* **Temporal coupling**: two actions are bundled together just because they happen to occur at the same time %%e.g. extracting a contiguous block of code as a method although the code block contains statements unrelated to each other%%"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 21
    }
  },
  {
    "path": "designFundamentals/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Software Design Fundamentals\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 5
    }
  },
  {
    "path": "designFundamentals/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eDesign fundamentals\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"abstraction/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"coupling/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"cohesion/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 8
    }
  },
  {
    "path": "designPatterns/abstractionOccurrence/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAbstraction occurrence pattern\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "designPatterns/command/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eCommand pattern\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "designPatterns/facade/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eFacade pattern\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "designPatterns/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Software Design Patterns\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 5
    }
  },
  {
    "path": "designPatterns/modelViewController/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eModel view controller (MVC) pattern\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "designPatterns/more/combiningDesignPatterns/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eCombining design patterns\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can combine multiple patterns to fit a context\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Design patterns are usually embedded in a larger design and sometimes applied in combination with other design patterns.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Let us look at a case study that shows how design patterns are used in the design of a class structure for a Stock Inventory System (SIS) for a shop. The shop sells appliances, and accessories for the appliances. SIS simply stores information about each item in the store."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "**Use Cases**:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "* Create a new item"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "* View information about an item"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "* Modify information about an item"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "* View all available accessories for a given appliance"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "* List all items in the store"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "SIS can be accessed using multiple terminals. Shop assistants use their own terminals to access SIS, while the shop manager’s terminal continuously displays a list of all items in store. In the future, it is expected that suppliers of items use their own applications to connect to SIS to get real-time information about current stock status.  User authentication is not required for the current version, but may be required in the future."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "A step by step explanation of the design is given below. Note that this is one out of many possible designs.  Design patterns are also applied where appropriate."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "A `StockItem` can be an Appliance or an Accessory."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/designPatterns/more/combiningDesignPatterns/images/stockItem.png\" height\u003d\"100\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "To track that each `Accessory` is associated with the correct `Appliance`, consider the following alternative class structures."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/designPatterns/more/combiningDesignPatterns/images/alternativeOne.png\" height\u003d\"120\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "The third one seems more appropriate (the second one is suitable if accessories can have accessories). Next, consider between keeping a list of `Appliances`, and a list of `StockItems`.  Which is more appropriate?"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/designPatterns/more/combiningDesignPatterns/images/alternativeTwo.png\" height\u003d\"100\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "The latter seems more suitable because it can handle both appliances and accessories the same way. Next, an abstraction occurrence pattern is applied to keep track of `StockItems`."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/designPatterns/more/combiningDesignPatterns/images/alternativeThree.png\" height\u003d\"100\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "Note the inclusion of navigabilities. Here’s a sample object diagram based on the class model created thus far."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/designPatterns/more/combiningDesignPatterns/images/stockItemListObjectDiagram.png\" height\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "Next, apply the façade pattern to shield the SIS internals from the UI."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/designPatterns/more/combiningDesignPatterns/images/withFacade.png\" height\u003d\"200\" /\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "As UI consists of multiple views, the  MVC pattern is applied here."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/designPatterns/more/combiningDesignPatterns/images/withMVC.png\" height\u003d\"270\" /\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "Some views need to be updated when the data change; apply the Observer pattern here."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/designPatterns/more/combiningDesignPatterns/images/withObserver.png\" height\u003d\"270\" /\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "In addition, the Singleton pattern can be applied to the façade class."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 74
    }
  },
  {
    "path": "designPatterns/more/otherDesignPatterns/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eOther design patterns\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can recognize some of the GoF design patterns\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**The most famous source of design patterns is the [\"Gang of Four\" (GoF) book](https://en.wikipedia.org/wiki/Design_Patterns) which contains 23 design patterns divided into three categories**:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* **Creational**: About object creation. They separate the operation of an application from how its objects are created."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    * Abstract Factory, Builder, Factory Method, Prototype, Singleton"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "* **Structural**: About the composition of objects into larger structures while catering for future extension in structure."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    * Adapter, Bridge, Composite, Decorator, Façade, Flyweight, Proxy"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "* **Behavioral**: Defining how objects interact and how responsibility is distributed among them."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    * Chain of Responsibility, Command, Interpreter, Template Method, Iterator, Mediator, Memento, Observer, State, Strategy, Visitor"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 20
    }
  },
  {
    "path": "designPatterns/more/otherTypesOfPatterns/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eOther types of patterns\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain how patterns exist beyond software design domain\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "The notion of capturing design ideas as \"patterns\" is usually attributed to [Christopher Alexander](https://en.wikipedia.org/wiki/Christopher_Alexander). He is a building architect noted for his theories about design. His book _Timeless way of building_ talks about \"design patterns\" for constructing buildings."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "Here is a sample pattern from that book:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e When a room has a window with a view, the window becomes a focal point: people are attracted to the window and want to look through it. The furniture in the room creates a second focal point:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e everyone is attracted toward whatever point the furniture aims them at (usually the center of the room or a TV). This makes people feel uncomfortable. They want to look out the window,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e and toward the other focus at the same time. If you rearrange the furniture, so that its focal point becomes the window, then everyone will suddenly notice that the"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e room is much more “comfortable”"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "Apparently, patterns and anti-patterns are found in the field of building architecture. This is because they are general concepts applicable to any domain, not just software design. In software engineering, there are many general types of patterns: Analysis patterns, Design patterns, Testing patterns, Architectural patterns, Project management patterns, and so on."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "In fact, the abstraction occurrence pattern is more of an analysis pattern than a design pattern, while MVC is more of an architectural pattern."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "New patterns can be created too. If a common problem needs to be solved frequently that leads to a non-obvious and better solution, it can be formulated as a pattern so that it can be reused by others. However, don’t reinvent the wheel; the pattern might already exist."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 29
    }
  },
  {
    "path": "designPatterns/more/usingDesignPatterns/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eUsing design patterns\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain pros and cons of design patterns\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Design pattern provides a high-level vocabulary to talk about design.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Someone can say \u0027apply Observer pattern here\u0027 instead of having to describe the mechanics of the solution in detail."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "**Knowing more patterns is a way to become more ‘experienced’.** Aim to learn at least the context and the problem of patterns %%so that when you encounter those problems you know where to look for a solution%%. "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "**Some patterns are domain-specific** %%e.g. patterns for distributed applications%%, **some are created in-house** %%e.g. patterns in the company/project%% and **some can be self-created** %%e.g. from past experience%%."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "**Be careful not to overuse patterns.** Do not throw patterns at a problem at every opportunity. Patterns come with overhead such as adding more classes or increasing the levels of abstraction. Use them only when they are needed. Before applying a pattern, make sure that:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "* there is substantial improvement in  the design, not just superficial."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "* the associated tradeoffs are carefully considered. There are times when a design pattern is not appropriate (or an overkill)."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 27
    }
  },
  {
    "path": "designPatterns/more/vsPrinciples/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eDesign patterns versus design principles\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can differentiate between design patterns and principles\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Design _principles_  have varying degrees of formality – rules, opinions, rules of thumb, observations, and axioms.** Compared to design patterns, principles are **more general**, have **wider applicability**, with correspondingly **greater overlap** among them."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 13
    }
  },
  {
    "path": "designPatterns/observer/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eObserver pattern\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "designPatterns/observer/what/q-tick-trueFalse.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Observer patter usage\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "The Observer pattern can be used when you want one object to initiate an activity in another object without having a direct dependency from the first object to the second object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) True"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) False"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "True"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Explanation: Yes. For example, when applying the Observer pattern to an MVC structure, Views can get notified and update themselves about a change to the Model without the Model having to depend on the Views."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 16
    }
  },
  {
    "path": "designPatterns/singleton/evaluation/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eEvaluation\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can decide when to apply Singleton design pattern\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Pros:**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "* easy to apply "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* effective in achieving its goal with minimal extra work"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* provides an easy way to access the singleton object from anywhere in the code base"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "**Cons:**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "* The singleton object acts like a global variable that increases coupling across the code base."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "* In testing, it is difficult to replace Singleton objects with stubs (static methods cannot be overridden)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "* In testing, singleton objects carry data from one test to another even when you want each test to be independent of the others."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "Given there are some significant cons, it is recommended that you apply the Singleton pattern when, in addition to requiring only one instance of a class, there is a risk of creating multiple objects by mistake, and creating such multiple objects has real negative consequences."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 23
    }
  },
  {
    "path": "designPatterns/singleton/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eSingleton pattern\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"implementation/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"evaluation/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 8
    }
  },
  {
    "path": "designPatterns/singleton/what/q-tick-correctStatement.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Statements about the Singleton pattern\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "You use the Singleton pattern when"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "- ( ) a. You want an a class with a private constructor."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "- ( ) b. You want a single class to hold all functionality of the system."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "- ( ) c. You want a class with no more than one instance."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "- ( ) d. You want to hide internal structure of a component from its clients."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "(c)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 5,
      "-": 12
    }
  },
  {
    "path": "designPatterns/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eSoftware design patterns\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"introduction/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"singleton/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"abstractionOccurrence/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"facade/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"command/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"modelViewController/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"observer/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"more/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 13
    }
  },
  {
    "path": "documentation/guidelines/aimForComprehensibility/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eGuideline: Aim for comprehensibility\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"how/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 7
    }
  },
  {
    "path": "documentation/guidelines/documentMinimally/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eGuideline: Document minimally, but sufficiently\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"how/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 7
    }
  },
  {
    "path": "documentation/guidelines/goTopDown/how/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eHow\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can write documentation in a top-down manner\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} To explain a system called `SystemFoo` with two sub-systems, `FrontEnd` and `BackEnd`, start by describing the system at the highest level of abstraction, and progressively drill down to lower level details. An outline for such a description is given below."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "[First, explain what the system is, in a black-box fashion (no internal details, only the external view).]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e`SystemFoo` is a ...."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "[Next, explain the high-level architecture of `SystemFoo`, referring to its major components only.]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e`SystemFoo` consists of two major components: `FrontEnd` and `BackEnd`.\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003eThe job of `FrontEnd` is to ...  while the job of `BackEnd` is to ...\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003eAnd this is how `FrontEnd` and `BackEnd` work together ..."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "[Now you can drill down to `FrontEnd`\u0027s details.]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e`FrontEnd` consists of three major components: `A`, `B`, `C`\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e`A`\u0027s job is to ...\u003cbr\u003e`B`\u0027s job is to...\u003cbr\u003e`C`\u0027s job is to...\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003eAnd this is how the three components work together ..."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[At this point, further drill down the internal workings of each component. A reader who is not interested in knowing nitty-gritty details can skip ahead to the section on `BackEnd`.]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003eIn-depth description of `A`\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003eIn-depth description of `B`\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e..."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "[At this point drill down details of the `BackEnd`.]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e..."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 47
    }
  },
  {
    "path": "documentation/guidelines/goTopDown/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eGuideline: Go top-down, not bottom-up\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"why/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"how/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 8
    }
  },
  {
    "path": "documentation/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Documentation\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 5
    }
  },
  {
    "path": "documentation/introduction/what/q-tick-incorrectStatement.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Statements about API documentation\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Choose correct statements about API documentation."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] a. They are useful for both developers who use the API and developers who maintain the API implementation."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] b. There are tools that can generate API documents from code comments."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "- [ ] c. API documentation may contain code examples."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "All"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 15
    }
  },
  {
    "path": "errorHandling/assertions/how/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eHow\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use assertions\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Use the `assert` keyword to define assertions."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} This assertion will fail with the message `x should be 0` if `x` is not 0 at this point."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "x \u003d getX();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "assert x \u003d\u003d 0 : \"x should be 0\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "..."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "**Assertions can be disabled without modifying the code.**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} `java -enableassertions HelloWorld` (or `java -ea HelloWorld`) will run `HelloWorld` with assertions enabled while `java -disableassertions HelloWorld` will run it without verifying assertions."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"important\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "**Java disables assertions by default.** This could create a situation where you think all assertions are being verified as `true` while in fact they are not being verified at all. Therefore, remember to enable assertions when you run the program if you want them to be in effect."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_tip }} Enable assertions in Intellij ([how?](https://stackoverflow.com/questions/18168257/where-to-add-compiler-options-like-ea-in-intellij-idea)) and get an assertion to fail temporarily (e.g. insert an `assert false` into the code temporarily) to confirm assertions are being verified."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "{{ icon_info }} **Java `assert` vs JUnit assertions: They are similar in purpose but JUnit assertions are more powerful and customized for testing.** In addition, JUnit assertions are not disabled by default. You recommend you use JUnit assertions in test code and Java `assert` in functional code."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"resources.md\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 44
    }
  },
  {
    "path": "errorHandling/assertions/what/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eWhat\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain assertions\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**_Assertions_ are used to define assumptions about the program state so that the runtime can verify them.** An assertion failure indicates a possible bug in the code %%because the code has resulted in a program state that violates an assumption about how the code _should_ behave%%."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} An assertion can be used to express something like _when the execution comes to this point, the variable `v` cannot be null_. "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "**If the runtime detects an _assertion failure_, it typically take some drastic action** such as terminating the execution with an error message. This is because an assertion failure indicates a possible bug and the sooner the execution stops, the safer it is."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "{{ icon_example }} In the Java code below, suppose you set an assertion that `timeout` returned by `Config.getTimeout()` is greater than `0`. Now, if the `Config.getTimeout()` returned `-1` in a specific execution of this line, the runtime can detect it as a _assertion failure_ -- i.e. an assumption about the expected behavior of the code turned out to be wrong which could potentially be the result of a bug -- and take some drastic action such as terminating the execution."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "int timeout \u003d Config.getTimeout(); "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 31
    }
  },
  {
    "path": "errorHandling/defensiveProgramming/1to1Associations/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eEnforcing 1-to-1 associations\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003cpanel src\u003d\"../what/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }} Implementation → Error Handling → Defensive Programming → What%%\" popup-url\u003d\"{{ baseUrl }}/errorHandling/defensiveProgramming/what\" /\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use defensive coding to enforce 1-to-1 associations\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Consider the association given below. A defensive implementation requires to ensure a `MinedCell` cannot exist without a `Mine` and vice versa which requires simultaneous object creation. However, Java can only create one object at a time. Given below are two alternatives implementations, both of which violate the multiplicity for a short period of time."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/errorHandling/defensiveProgramming/1to1Associations/images/minedCell.png\" height\u003d\"50\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "Option 1:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "class MinedCell {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private Mine mine;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public MinedCell(Mine m){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        if (m \u003d\u003d null) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            showError();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        mine \u003d m;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    …"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "Option 1 forces us to keep a `Mine` without a `MinedCell` (until the `MinedCell` is created)."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "Option 2:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "class MinedCell {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private Mine mine;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public MinedCell(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        mine \u003d new Mine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    …"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "Option 2 is more defensive because the `Mine` is immediately linked to a `MinedCell`."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 48
    }
  },
  {
    "path": "errorHandling/defensiveProgramming/compulsoryAssociations/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eEnforcing compulsory associations\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003cpanel src\u003d\"../what/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }} Implementation → Error Handling → Defensive Programming → What%%\" popup-url\u003d\"{{ baseUrl }}/errorHandling/defensiveProgramming/what\" /\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use defensive coding to enforce compulsory associations\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Consider two classes, `Account` and `Guarantor`, with an association as shown in the following diagram:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/errorHandling/defensiveProgramming/compulsoryAssociations/images/accountGuarantor.png\" height\u003d\"50\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "Here, the association is compulsory i.e. an `Account` object should always be linked to a `Guarantor`. One way to implement this is to simply use a reference variable, like this:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "class Account {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    Guarantor guarantor;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    void setGuarantor(Guarantor g) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        guarantor \u003d g;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "However, what if someone else used the `Account` class like this?"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "Account a \u003d new Account();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "a.setGuarantor(null);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "This results in an `Account` without a `Guarantor`! In a real banking system, this could have serious consequences! The code here did not try to prevent such a thing from happening. You can make the code more defensive by proactively enforcing the multiplicity constraint, like this:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "class Account {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private Guarantor guarantor;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public Account(Guarantor g){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        if (g \u003d\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            stopSystemWithMessage(\"multiplicity violated. Null Guarantor\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        guarantor \u003d g;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuarantor (Guarantor g){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        if (g \u003d\u003d null) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            stopSystemWithMessage(\"multiplicity violated. Null Guarantor\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        guarantor \u003d g;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    …"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 2,
      "-": 65
    }
  },
  {
    "path": "errorHandling/defensiveProgramming/referentialIntegrity/q-essay-bank.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Bidirectional association between `Bank` and `Account`\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion has-input\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Implement this bidirectional association.  Note that the `Bank` uses `accNumber` attribute to uniquely identify an `Account` object. Assume the `Bank` class is responsible for maintaining the links between objects."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/errorHandling/defensiveProgramming/referentialIntegrity/images/bankAccount.jpg\" height\u003d\"60\" /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "The code below contains a method in the `Bank` class to create an account; the bank field in the new account is thereby filled by the bank creating it."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "Assume that once an `Account` has been assigned to one `Bank`, it cannot be assigned to a different `Bank`. Once the `Account` is removed from the `Bank`, it will not be used any more (hence, no need to remove the link from `Account` to `Bank`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Account {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private int accNumber ;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private Bank theBank ;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public Account(int n, Bank b) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        accno \u003d n ;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        theBank \u003d b ;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public int getNumber() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        return accNumber;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public Bank getBank() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        return theBank ;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "public class Bank {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private HashMap\u003c Integer, Account \u003e theAccounts \u003d new HashMap \u003c Integer, Account \u003e ();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createAccount(int n) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        addAccount(new Account(n, this)) ;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addAccount(Account a) {          "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        theAccounts.put(a.getNumber(), a);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void removeAccount(int accNumber) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        theAccounts.remove(accNumber);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public Account lookupAccount(int accNumber) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return theAccounts.get(accNumber);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 55
    }
  },
  {
    "path": "errorHandling/defensiveProgramming/referentialIntegrity/q-essay-minesweeper.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Implement `Player` and `Region`\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion has-input\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "Imagine that you now support the following feature in our Minesweeper game."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "Feature ID: multiplayer\u003cbr\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Description: A minefield is divided into mine regions. Each region is assigned to a single player. Players can swap regions. To win the game, all regions must be cleared."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is an extract from our class diagram."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/errorHandling/defensiveProgramming/referentialIntegrity/images/playerRegion.png\" height\u003d\"100\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "Minimally, this can be implemented like this."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "class Player{"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    Region region;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    void setRegion(Region r) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        region \u003d r;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    Region getRegion() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        return region;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "} "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "// Region class is similar"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "However, this is not very defensive. For example, a user of this class can pass a `null` to either of the methods, thus violating the multiplicity of the relationship."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "Implement the two classes using a more defensive approach. Take note of the bidirectional link which requires us to preserve referential integrity at all times."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "In this solution, assume `Regions` can be created without `Players` (note that you cannot be 100% defensive all the time). The usage will be something like this:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "Region r1 \u003d new Region();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "Player p1 \u003d new Player(r1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "Region r2 \u003d new Region();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "Player p2 \u003d new Player(r2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "p1.setRegion(r2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "r1.setPlayer(p2);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "Here are the two classes.  Get methods are omitted as they are simple.  Note how much extra effort you need to be defensive."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "public class Region {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private Player myPlayer;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public Region() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        // initialise region"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setPlayer(Player newPlayer) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        if (newPlayer \u003d\u003d null) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            stopSystemWithErrorMessage(\"Multiplicity violation\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        if (myPlayer \u003d\u003d newPlayer) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            return; // same player"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        if (myPlayer !\u003d null) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            // I already have a Player!"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            myPlayer.removeRegion(this);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        myPlayer \u003d newPlayer;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        // set the reverse link"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        myPlayer.setRegion(this);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    public void removePlayer(Player disconnectingPlayer) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        if (myPlayer \u003d\u003d disconnectingPlayer){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            myPlayer \u003d null;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            stopSystemWithErrorMessage(\"Unknown Player trying to disconnect\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    private void stopSystemWithErrorMessage(String msg) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        ..."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "public class Player {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    private Region myRegion;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    public Player(Region region) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        setRegion(region);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setRegion(Region newRegion) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        if (newRegion \u003d\u003d null) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            stopSystemWithErrorMessage(\"Multiplicity violation\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        if (myRegion \u003d\u003d newRegion) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            return; // no change in Region!"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        if (myRegion !\u003d null) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            // previous region exists"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            myRegion.removePlayer(this);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        myRegion \u003d newRegion;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        // set the reverse link"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        myRegion.setPlayer(this);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    public void removeRegion(Region disconnectingRegion) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        if (myRegion \u003d\u003d disconnectingRegion) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            myRegion \u003d null;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    private void stopSystemWithErrorMessage(String msg) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        ..."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "Note that the above code stops the system when the multiplicity is violated. Alternatively, you can throw an exception and let the caller handle the situation."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 4,
      "-": 128
    }
  },
  {
    "path": "errorHandling/defensiveProgramming/referentialIntegrity/q-tick-trueFalse.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} True or False?\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Bidirectional associations, if not implemented properly, can result in referential integrity violations."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) True"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) False"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "True"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "Explanation: Bidirectional associations require two objects to link to each other. When one of these links is not consistent with the other, you have a referential integrity violation."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 16
    }
  },
  {
    "path": "errorHandling/defensiveProgramming/referentialIntegrity/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eEnforcing referential integrity\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003cpanel src\u003d\"../what/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }} Implementation → Error Handling → Defensive Programming → What%%\" popup-url\u003d\"{{ baseUrl }}/errorHandling/defensiveProgramming/what\" /\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use defensive coding to enforce referential integrity of bi-directional associations\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "A bidirectional association in the design (shown in (a)) is usually emulated at code level using two variables (as shown in (b))."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/errorHandling/defensiveProgramming/referentialIntegrity/images/manWoman.png\" height\u003d\"140\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "class Man {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    Woman girlfriend;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    void setGirlfriend(Woman w) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        girlfriend \u003d w;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    …"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "class Woman {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    Man boyfriend;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    void setBoyfriend(Man m) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        boyfriend \u003d m;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "The two classes are meant to be used as follows: "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "Woman jean;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "Man james;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "…"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "james.setGirlfriend(jean);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "jean.setBoyfriend(james);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "Suppose the two classes were used this instead: "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "Woman jean; Man james, yong;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "…"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "james.setGirlfriend(jean);  "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "jean.setBoyfriend(yong);  "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "Now James\u0027 girlfriend is Jean, while Jean\u0027s boyfriend is not James. This situation results as the code was not defensive enough to stop this \"love triangle\". In such a situation, you should say that _the referential integrity has been violated_. It simply means _there is an inconsistency in object references_."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/errorHandling/defensiveProgramming/referentialIntegrity/images/woman.png\" height\u003d\"50\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "One way to prevent this situation is to implement the two classes as shown below. Note how the referential integrity is maintained."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "public class Woman {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    private Man boyfriend;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setBoyfriend(Man m) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        if(boyfriend \u003d\u003d m){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        if (boyfriend !\u003d null) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            boyfriend.breakUp();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        boyfriend \u003d m;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        m.setGirlfriend(this);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public void breakUp() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        boyfriend \u003d null;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }   "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    ..."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "public class Man{"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    private Woman girlfriend;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGirlfriend(Woman w) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        if(girlfriend \u003d\u003d w){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        if (girlfriend !\u003d null) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            girlfriend.breakUp();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        girlfriend \u003d w;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        w.setBoyfriend(this);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    public void breakUp() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        girlfriend \u003d null;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }  "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "   ..."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "When the code `james.setGirlfriend(jean)` is executed, the code ensures that `james` break up with any current girlfriend before he accepts `jean` as the girlfriend. Furthermore, the code ensures that `jean` breaks up with any existing boyfriends and accepts `james` as the boyfriend."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 2,
      "-": 110
    }
  },
  {
    "path": "errorHandling/defensiveProgramming/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eDefensive programming\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"compulsoryAssociations/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"1to1Associations/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"referentialIntegrity/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"when/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 10
    }
  },
  {
    "path": "errorHandling/defensiveProgramming/what/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eWhat\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain defensive programming\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "**A defensive programmer codes under the assumption \"if you leave room for things to go wrong, they _will_ go wrong\".** Therefore, a defensive programmer proactively tries to eliminate any room for things to go wrong."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Consider a `MainApp#getConfig()` a method that returns a `Config` object containing configuration data. A typical implementation is given below:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "class MainApp{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    Config config;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Returns the config object */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    Config getConfig(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        return config;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "If the returned Config object is not meant to be modified, a defensive programmer might use a more _defensive_ implementation given below. %%This is more defensive because even if the returned `Config` object is modified (although it is not meant to be) it will not affect the `config` object inside the `MainApp` object.%%"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Returns a copy of the config object */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    Config getConfig(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        return config.copy(); //return a defensive copy"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "``` "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 36
    }
  },
  {
    "path": "errorHandling/designByContract/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eDesign-by-contract approach\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "errorHandling/designByContract/what/q-tick-incorrectStatement.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Statements about the Design-by-contract approach?\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Which statements are correct?"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] a. It is not natively supported by Java and C++."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] b. It is an alternative to OOP."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] c. It assumes the caller of a method is responsible for ensuring all preconditions are met."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "(a)~~(b)~~(c)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "Explanation: DbC is not an alternative to OOP. You can use DbC in an OOP solution. "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 18
    }
  },
  {
    "path": "errorHandling/designByContract/what/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain the Design-by-Contract approach\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eDesign by contract\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**\u003ctooltip content\u003d\"term was coined by Bertrand Meyer\"\u003eDesign by contract (DbC)\u003c/tooltip\u003e is an approach for designing software that requires defining formal, precise and verifiable interface specifications for software components.** "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "Suppose an operation is implemented with the behavior specified precisely in the API (preconditions, post conditions, exceptions etc.). When following the defensive approach, the code should first check if the preconditions have been met. Typically, exceptions are thrown if preconditions are violated. In contrast, the _Design-by-Contract (DbC)_ approach to coding assumes that it is the responsibility of the caller to ensure all preconditions are met. The operation will honor the contract only if the preconditions have been met. If any of them have not been met, the behavior of the operation is \"unspecified\". "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Languages such as Eiffel have native support for DbC. For example, preconditions of an operation can be specified in Eiffel and the language runtime will check precondition violations without the need to do it explicitly in the code. To follow the DbC approach in languages such as Java and C++ where there is no built-in DbC support, assertions can be used to confirm pre-conditions."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 20
    }
  },
  {
    "path": "errorHandling/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Error Handling\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 5
    }
  },
  {
    "path": "errorHandling/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eError handling\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"introduction/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exceptions/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"assertions/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"logging/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"defensiveProgramming/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"designByContract/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 11
    }
  },
  {
    "path": "gatheringRequirements/focusGroups/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eFocus groups\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain focus groups\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv v-closeable alt\u003d\"focus group photo\" class\u003d\"non-printable\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"https://media.defense.gov/2012/Apr/11/2000162334/670/394/0/120403-F-PR861-011.JPG\" width\u003d\"400\" /\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csub\u003e[[source](http://www.hanscom.af.mil/News/Article-Display/Article/380048/caring-for-people-forum-identifies-issues/)]\u003c/sub\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e\u003cp/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "**Focus groups are a kind of informal interview within an interactive group setting.** A group of people (e.g. potential users, beta testers) are asked about their understanding of a specific issue, process, product, advertisement, etc.  "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\"  class\u003d\"non-printable\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cspan slot\u003d\"header\"\u003e\u003cmd\u003e%%{{ icon_video }}: How do focus groups work? - Hector Lanz {{ icon_extra }}%%\u003c/md\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@[youtube](3TwgVQIZPsw)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 26
    }
  },
  {
    "path": "gatheringRequirements/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Gathering Requirements\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "pageNav: 4"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 5
    }
  },
  {
    "path": "gatheringRequirements/productSurveys/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eProduct surveys\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain product surveys\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Studying existing products can unearth shortcomings of existing solutions that can be addressed by a new product.** Product manuals and other forms of documentation of an existing system can tell us how the existing solutions work."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} When developing a game for a mobile device, a look at a similar PC game can give insight into the kind of features and interactions the mobile game can offer."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 17
    }
  },
  {
    "path": "gatheringRequirements/userSurveys/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eUser surveys\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain user surveys\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Surveys can be used to _solicit responses and opinions_ from a large number of stakeholders** regarding a current product or a new product."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 13
    }
  },
  {
    "path": "gitAndGithub/branch/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "title: \"Git and GitHub: Branch\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"unit-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 4
    }
  },
  {
    "path": "gitAndGithub/checkout/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "title: \"Git and GitHub: Checkout\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"unit-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 4
    }
  },
  {
    "path": "gitAndGithub/checkout/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003cpanel src\u003d\"../../revisionControl/usingHistory/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"{{ icon_prereq }} %%Project Management → Revision Control → Using History%%\" popup-url\u003d\"{{ baseUrl }}/revisionControl/usingHistory\" /\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can load a specific version of a Git repo\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eCheckout\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Git can show you what changed in each commit."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctabs\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctab header\u003d\"SourceTree\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cinclude src\u003d\"./sourcetree_1.md\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/tab\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctab header\u003d\"CLI\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cinclude src\u003d\"./cli_1.md\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/tab\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/tabs\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "Git can also show you the difference between two points in the history of the repo."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctabs\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctab header\u003d\"SourceTree\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cinclude src\u003d\"./sourcetree_2.md\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/tab\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctab header\u003d\"CLI\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cinclude src\u003d\"./cli_2.md\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/tab\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/tabs\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "Git can load a specific version of the history to the working directory. Note that if you have uncommitted changes in the working directory, you need to \u003ctrigger trigger\u003d\"click\" for\u003d\"modal:checkout-stash\"\u003estash\u003c/trigger\u003e them first to prevent them from being overwritten."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmodal large header\u003d\"%%Extract%%\" id\u003d\"modal:checkout-stash\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u003cinclude src\u003d\"../stash/unit-inElsewhere-asPanelBody.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/modal\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctabs\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctab header\u003d\"SourceTree\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cinclude src\u003d\"./sourcetree_3.md\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/tab\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctab header\u003d\"CLI\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cinclude src\u003d\"./cli_3.md\" /\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/tab\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/tabs\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 49
    }
  },
  {
    "path": "gitAndGithub/clone/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "title: \"Git and GitHub: Clone\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"unit-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 4
    }
  },
  {
    "path": "gitAndGithub/commit/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "title: \"Git and GitHub: Commit\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"unit-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 4
    }
  },
  {
    "path": "gitAndGithub/createPRs/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "title: \"Git and GitHub: Create PRs\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"unit-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 4
    }
  },
  {
    "path": "gitAndGithub/forkingWorkflow/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "title: \"Git and GitHub: Forking Workflow\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"unit-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 4
    }
  },
  {
    "path": "gitAndGithub/forkingWorkflow/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003cpanel src\u003d\"../../revisionControl/forkingWorkflow/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }} Revision Control → Forking Workflow%%\" popup-url\u003d\"{{ baseUrl }}/revisionControl/forkingWorkflow\" /\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can follow Forking Workflow\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eForking workflow\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_info }} This activity is best done as a team. If you are learning this alone, you can simulate a team by using two different browsers to log into GitHub using two different accounts.   "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. **One member: set up the team org and the team repo.**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   * **[Create a GitHub organization](https://help.github.com/articles/creating-a-new-organization-from-scratch/)** for your team. The org name is up to you. We\u0027ll refer to this organization as _team org_ from now on. "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * **[Add a team ](https://help.github.com/enterprise/2.10/admin/guides/user-management/creating-teams/)** called `developers` to your team org. "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * **[Add your team members](https://help.github.com/enterprise/2.0/admin/guides/user-management/adding-or-inviting-people-to-teams/)** to the `developers` team."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * **Fork [se-edu/samplerepo-workflow-practice](https://github.com/se-edu/samplerepo-workflow-practice) to your team org**. We\u0027ll refer to this as the _team repo_."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   * **[Add the forked repo](https://help.github.com/articles/managing-team-access-to-an-organization-repository/) to the `developers` team.** Give write access."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "2. **Each team member: create PRs via own fork** "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   * **Fork that repo** from your team org to your own GitHub account."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   * **Create a PR** to add a file `yourName.md` %%(e.g. `jonhDoe.md`)\u0026nbsp;%% containing a brief resume of yourself %%(branch → commit → push → create PR)%%"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "3. **For each PR: review, update, and merge.** "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   * A team member (not the PR author): Review the PR by adding comments (can be just dummy comments)."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   * PR author: Update the PR by pushing more commits to it, to simulate updating the PR based on review comments."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   * Another team member: Merge the PR using the GitHub interface."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   * All members: [Sync your local repo (and your fork) with upstream repo](https://help.github.com/articles/syncing-a-fork/). In this case, your _upstream repo_ is the repo in your team org."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "4. **Create conflicting PRs.**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   * Each team member: Create a PR to add yourself under the `Team Members` section in the `README.md`."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   * One member: in the `master` branch, remove John Doe and Jane Doe from the `README.md`, commit, and push to the main repo."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "5. **Merge conflicting PRs one at a time.** Before merging a PR, you’ll have to resolve conflicts. Steps:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   * [Optional] A member can inform the PR author (by posting a comment) that there is a conflict in the PR."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   * PR author: Pull the `master` branch from the repo in your team org. Merge the pulled `master` branch to your PR branch. Resolve the merge conflict that crops up during the merge. Push the updated PR branch to your fork."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   * Another member or the PR author: When GitHub does not indicate a conflict anymore, you can go ahead and merge the PR."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 39
    }
  },
  {
    "path": "gitAndGithub/ignore/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "title: \"Git and GitHub: Ignore\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"unit-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 4
    }
  },
  {
    "path": "gitAndGithub/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "title: \"Git and GitHub\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "pageNav: 4"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 2,
      "-": 4
    }
  },
  {
    "path": "gitAndGithub/init/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "title: \"Git and GitHub: Init\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"unit-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 4
    }
  },
  {
    "path": "gitAndGithub/managePRs/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "title: \"Git and GitHub: Manage PRs\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"unit-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 4
    }
  },
  {
    "path": "gitAndGithub/mergeConflicts/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "title: \"Git and GitHub: Merge Conflicts\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"unit-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 4
    }
  },
  {
    "path": "gitAndGithub/mergeConflicts/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eMerge conflicts\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003cpanel src\u003d\"../branch/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"{{ icon_prereq }} %%Tools → Git \u0026 GitHub → Branching%%\" popup-url\u003d\"{{ baseUrl }}/gitAndGithub/branch\" /\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use Git to resolve merge conflicts\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**1. Start a branch named `fix1` in a local repo. Create a commit** that adds a line with some text to one of the files."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "**2. Switch back to `master` branch. Create a commit with a conflicting change** i.e. it adds a line with some different text in the exact location the previous line was added."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/gitAndGithub/mergeConflicts/images/sourcetree_1.png\" height\u003d\"350\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "**3. Try to merge the `fix1` branch onto the `master` branch.** Git will pause mid-way during the merge and report a merge conflict. If you open the conflicted file, you will see something like this:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "```txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "COLORS"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "------"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "blue"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "black"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "green"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e fix1"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "red"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "white"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "**4. Observe how the conflicted part is marked** between a line starting with `\u003c\u003c\u003c\u003c\u003c\u003c\u003c ` and a line starting with `\u003e\u003e\u003e\u003e\u003e\u003e\u003e`, separated by another line starting with `\u003d\u003d\u003d\u003d\u003d\u003d\u003d`. "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "This is the conflicting part that is coming from the `master` branch:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "```txt"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "black"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "This is the conflicting part that is coming from the `fix1` branch:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "```txt"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "green"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e fix1"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "**5. Resolve the conflict by editing the file**. Let us assume you want to keep both lines in the merged version. You can modify the file to be like this:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "```txt"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "COLORS"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "------"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "blue"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "black"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "green"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "red"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "white"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "**6. Stage the changes, and commit.**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 69
    }
  },
  {
    "path": "gitAndGithub/print.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "title: \"Git and GitHub [Printable]\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/css/textbook.css\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"website-content\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"main\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "# Git and GitHub"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"init/unit-inParent-asFlat-print.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"commit/unit-inParent-asFlat-print.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"ignore/unit-inParent-asFlat-print.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"tag/unit-inParent-asFlat-print.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"checkout/unit-inParent-asFlat-print.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"stash/unit-inParent-asFlat-print.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"clone/unit-inParent-asFlat-print.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"pull/unit-inParent-asFlat-print.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"push/unit-inParent-asFlat-print.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"branch/unit-inParent-asFlat-print.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"mergeConflicts/unit-inParent-asFlat-print.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"createPRs/unit-inParent-asFlat-print.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"managePRs/unit-inParent-asFlat-print.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"forkingWorkflow/unit-inParent-asFlat-print.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 29
    }
  },
  {
    "path": "gitAndGithub/pull/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "title: \"Git and GitHub: Pull\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"unit-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 4
    }
  },
  {
    "path": "gitAndGithub/push/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "title: \"Git and GitHub: Push\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"unit-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 4
    }
  },
  {
    "path": "gitAndGithub/stash/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "title: \"Git and GitHub: Stash\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"unit-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 4
    }
  },
  {
    "path": "gitAndGithub/tag/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "title: \"Git and GitHub: Tag\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"unit-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 4
    }
  },
  {
    "path": "gitAndGithub/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eGit and GitHub\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"init/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"commit/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"ignore/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"tag/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"checkout/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"stash/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"clone/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"pull/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"push/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"branch/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"mergeConflicts/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"createPRs/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"managePRs/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"forkingWorkflow/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 19
    }
  },
  {
    "path": "ides/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"IDEs\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 5
    }
  },
  {
    "path": "index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Book - Software Engineering for Self-Directed Learners\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/css/textbook.css\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"website-content\" id\u003d\"all\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"lead\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "**This is a free and open-source SE textbook under the [SE-EDU](https://se-education.org) initiative.**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "### About this Book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "* [About](about/acknowledgements.html)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "* [How to use this book](about/usage.html)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "### Software Engineering"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Software Engineering]({{baseUrl}}/softwareEngineering/)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/softwareEngineering/print.html)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "### Object-Oriented Programming"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Object-Oriented Programming]({{baseUrl}}/oop/)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/oop/print.html)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "### Requirements"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Requirements]({{baseUrl}}/requirements/)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/requirements/print.html)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Gathering Requirements]({{baseUrl}}/gatheringRequirements/) "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/gatheringRequirements/print.html)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Specifying Requirements]({{baseUrl}}/specifyingRequirements/)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/specifyingRequirements/print.html)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "### Design"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Design]({{baseUrl}}/design/)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/design/print.html)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Design Fundamentals]({{baseUrl}}/designFundamentals/) "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/designFundamentals/print.html)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Modeling]({{baseUrl}}/modeling/)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/modeling/print.html)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Architecture]({{baseUrl}}/architecture/)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/architecture/print.html)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Design Patterns]({{baseUrl}}/designPatterns/) "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/designPatterns/print.html)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Design Approaches]({{baseUrl}}/designApproaches/)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/designApproaches/print.html)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "### Implementation"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [IDEs]({{baseUrl}}/ides/)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/ides/print.html)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Code Quality]({{baseUrl}}/codeQuality/) "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/codeQuality/print.html)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Refactoring]({{baseUrl}}/refactoring/)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/refactoring/print.html)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Documentation]({{baseUrl}}/documentation/)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/documentation/print.html)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Error Handling]({{baseUrl}}/errorHandling/) "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/errorHandling/print.html)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Integration]({{baseUrl}}/integration/)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/integration/print.html)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Reuse]({{baseUrl}}/reuse/)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/reuse/print.html)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "### Quality Assurance"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Quality Assurance]({{baseUrl}}/qualityAssurance/) "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/qualityAssurance/print.html)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Testing]({{baseUrl}}/testing/)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/testing/print.html)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Test Case Design]({{baseUrl}}/testCaseDesign/)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/testCaseDesign/print.html)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "### Project Management"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Revision Control]({{baseUrl}}/revisionControl/) "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/revisionControl/print.html)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Project Planning]({{baseUrl}}/projectPlanning/)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/projectPlanning/print.html)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Teamwork]({{baseUrl}}/teamwork/)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/teamwork/print.html)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Process Models]({{baseUrl}}/processModels/) "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/processModels/print.html)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "### Tools"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [UML]({{baseUrl}}/uml/) "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/uml/print.html)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Intellij IDEA]({{baseUrl}}/intellij/)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/intellij/print.html)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Git and GitHub]({{baseUrl}}/gitAndGithub/)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/gitAndGithub/print.html)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "### Principles"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [Principles]({{baseUrl}}/principles/)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/principles/print.html)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "### Supplementary"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "* [C++ to Java]({{baseUrl}}/cppToJava/)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  [{{icon_print}}]({{baseUrl}}/cppToJava/print.html)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "* [Combined Exercises](combined/exercises.html)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "* [List of Definitions](common/definitions.html)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "* [List of References](common/references.html)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "* [List of Learning Outcomes](common/outcomes.html)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "* [Printable Version {{icon_print}}](common/print.html)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 60,
      "-": 76
    }
  },
  {
    "path": "integration/approaches/bigBangVsIncremental/q-essay-integration.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Big-bang integration in school projects\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion has-input\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Give two arguments in support and two arguments against the following statement."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "_Because there is no external client, it is OK to use big bang integration for a school project._"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "Arguments for:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "*\tIt is relatively simple; even big-bang can succeed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "*\tProject duration is short; there is not enough time to integrate in steps."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "*\tThe system is non-critical, non-production (demo only); the cost of integration issues is relatively small."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "Arguments against:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "*\tInexperienced developers; big-bang more likely to fail"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "*\tToo many problems may be discovered too late. Submission deadline (fixed) can be missed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "*\tTeam members have not worked together before; increases the probability of integration problems."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 23
    }
  },
  {
    "path": "integration/approaches/bigBangVsIncremental/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eBig-bang versus incremental integration\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain how integration approaches vary based on amount merged at a time\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**_Big-bang integration_: integrate all components at the same time.** "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"wrong\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Big-bang is not recommended because it will uncover too many problems at the same time which could make debugging and bug-fixing more complex than when problems are uncovered incrementally."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "**_Incremental integration_: integrate few components at a time.** This approach is better than the big-bang integration because it surfaces integration problems in a more manageable way."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv v-closeable alt\u003d\"slideshow: comparison\" class\u003d\"non-printable\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "Here is an animation that compares the two approaches: "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "@[powerpoint](https://onedrive.live.com/embed?cid\u003dA5AF047C4CAD67AB\u0026resid\u003dA5AF047C4CAD67AB%212315\u0026authkey\u003dAG4cur5IrM7vr7M\u0026em\u003d2)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 32
    }
  },
  {
    "path": "integration/approaches/lateVsEarly/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eLate and one time versus early and frequent\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003cpanel src\u003d\"../../introduction/what/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }} Implementation → Integration → Introduction → What%%\" popup-url\u003d\"{{ baseUrl }}/integration/introduction/what\" /\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain how integration approaches vary based on timing and frequency\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**In terms of timing and frequency, there are two general approaches to integration: _late and one-time_, _early and frequent_.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "**_Late and one-time_: wait till all components are completed and integrate all finished components near the end of the project.** "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"wrong\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  This approach is not recommended because integration often causes many component incompatibilities (due to previous miscommunications and misunderstandings) to surface which can lead to delivery delays %%i.e. Late integration → incompatibilities found → major rework required → cannot meet the delivery date%%."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "**_Early and frequent_: integrate early and evolve each part in parallel, in small steps, re-integrating frequently.** "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} A _\u003ctooltip content\u003d\"it has all the main components in their minimal form, compiles, and runs but does not produce any useful output\"\u003ewalking skeleton\u003c/tooltip\u003e_ can be written first. This can be done by one developer, possibly the one in charge of integration. After that, all developers can flesh out the skeleton in parallel, adding one feature at a time. After each feature is done, simply integrate the new code to the main system."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv v-closeable alt\u003d\"slideshow: comparison\" class\u003d\"non-printable\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "Here is an animation that compares the two approaches: "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "@[powerpoint](https://onedrive.live.com/embed?cid\u003dA5AF047C4CAD67AB\u0026resid\u003dA5AF047C4CAD67AB%212312\u0026authkey\u003dAHtrsZMwQmNcyAE\u0026em\u003d2)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 37
    }
  },
  {
    "path": "integration/approaches/topDownVsBottomUp/q-essay-integration.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Suggest an integration strategy\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion has-input\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Suggest an integration strategy for the system represented by following diagram. You need not follow a strict top-down, bottom-up, sandwich, or big bang approach. Dashed arrows represent dependencies between classes."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "Also take into account the following facts in your test strategy."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* `HospitalUI` will be developed early, so as to get customer feedback early."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "* `HospitalFacade` shields the UI from complexities of the application layer. It simply redirects the method calls received to the appropriate classes below"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "* `IO_Helper` is to be reused from an earlier project, with minor modifications"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* Development of `OutPatient` component has been outsourced, and the delivery is not expected until the 2nd half of the project."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/integration/approaches/topDownVsBottomUp/images/hospital.png\" height\u003d\"250\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "There can be many acceptable answers to this question. But any good strategy should consider at least some of the below."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "* Because `HospitalUI` will be developed early, it’s OK to integrate it early, using stubs, rather than wait for the rest of the system to finish. (i.e. a top-down integration is suitable for `HospitalUI`)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "* Because `HospitalFacade` is unlikely to have a lot of business logic, it may not be worth to write stubs to test it (i.e. a bottom-up integration is better for `HospitalFacade`)."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "* Because `IO_Helper` is to be reused from an earlier project, you can finish it early. This is especially suitable since there are many classes that use it. Therefore `IO_Helper` can be integrated with the dependent classes in bottom-up fashion."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "* Because `OutPatient` class may be delayed, you may have to integrate `PatientMgr` using a stub."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "* `TypeA`, `TypeB`, and `TypeC` seem to be tightly coupled. It may be a good idea to test them together."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is one possible integration test strategy. Relative positioning also indicates a rough timeline."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/integration/approaches/topDownVsBottomUp/images/hospitalIntegration.png\" height\u003d\"250\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 2,
      "-": 31
    }
  },
  {
    "path": "integration/approaches/topDownVsBottomUp/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eTop-down versus bottom-up integration\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003cpanel src\u003d\"../bigBangVsIncremental/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }} Implementation → Integration → Approaches → Big-Bang Vs Incremental%%\" popup-url\u003d\"{{ baseUrl }}/integration/approaches/bigBangVsIncremental\" /\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain how integration approaches vary based on the order of integration\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/integration/approaches/topDownVsBottomUp/images/approaches.png\" height\u003d\"100\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "**Based on the order in which components are integrated, incremental integration can be done in three ways.**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "**_Top-down_ integration: higher-level components are integrated before bringing in the lower-level components.** One advantage of this approach is that higher-level problems can be discovered early. One disadvantage is that this requires the use of \u003ctrigger for\u003d\"pop:topdown-stub\"\u003estubs\u003c/trigger\u003e in place of lower level components until the real lower-level components are integrated to the system. Otherwise, higher-level components cannot function as they depend on lower level ones."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpopover id\u003d\"pop:topdown-stub\" header\u003d\"{{icon_preview}}\" placement\u003d\"top\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv slot\u003d\"content\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cinclude src\u003d\"../../../common/definitions.md#def-stub\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/popover\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "**_Bottom-up_ integration: the reverse of top-down integration.** Note that when integrating lower level components, \u003ctooltip content\u003d\"additional code written to provide inputs to a component via an API\"\u003edrivers\u003c/tooltip\u003e may be needed to test the integrated components %%because the UI may not be integrated yet%%, just like top-down integration needs stubs."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "**_Sandwich_ integration: a mix of the top-down and the bottom-up approaches.** The idea is to do both top-down and bottom-up so as to \u0027meet\u0027 in the middle."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv v-closeable alt\u003d\"slideshow: comparison\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "Here is an animation that compares the three approaches: "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "@[powerpoint](https://onedrive.live.com/embed?cid\u003dA5AF047C4CAD67AB\u0026resid\u003dA5AF047C4CAD67AB%212318\u0026authkey\u003dAD27jxfKqq3nqpQ\u0026em\u003d2)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 39
    }
  },
  {
    "path": "integration/buildAutomation/continuousIntegrationDeployment/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eContinuous integration and continuous deployment\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain continuous integration and continuous deployment\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**An extreme application of build automation is called _continuous integration (CI)_ in which integration, building, and testing happens automatically after each code change.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "**A natural extension of CI is _Continuous Deployment (CD)_ where the changes are not only integrated continuously, but also deployed to end-users at the same time.**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Some examples of CI/CD tools: [Travis](https://travis-ci.org/), [Jenkins](http://jenkins-ci.org), [Appveyor](https://www.appveyor.com), [CircleCI](https://circleci.com), [GitHub Actions](https://github.com/features/actions)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"resources.md\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 22
    }
  },
  {
    "path": "integration/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Integration\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 5
    }
  },
  {
    "path": "integration/more/review/q-radio-recommendedApproach.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Which is the recommended integration approach in general?\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"%%Prerequisites%%\" expandable expanded\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../approaches/bigBangVsIncremental/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"Integration: Approaches: Big-bang vs Incremental Approach\" /\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../approaches/lateVsEarly/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"Integration: Approaches: Late vs Early Approach\" /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../approaches/topDownVsBottomUp/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"Integration: Approaches: Top-down vs Bottom-up Approach\" /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "Which is the recommended integration approach in general?"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) a. Early, big bang, and frequent"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) b. Early, incremental, and frequent"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) c. Late, top down, one time"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "b"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 24
    }
  },
  {
    "path": "integration/more/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eMore\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cinclude src\u003d\"review/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 2,
      "-": 5
    }
  },
  {
    "path": "intellij/codeNavigation/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can navigate code effectively using IDE features\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eCode navigation\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Some useful navigation shortcuts:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Quickly locate a file by name."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Go to the definition of a method from where it is used."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "1. Go back to the previous location."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. View the documentation of a method from where the method is being used, without navigating to the method itself."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "1. Find where a method/field is being used."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"Intellij IDEA Code Navigation\" expanded\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@[youtube](1UHsJyCq1SU)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 25
    }
  },
  {
    "path": "intellij/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Intellij IDEA\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "pageNav: 4"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 5
    }
  },
  {
    "path": "intellij/productivityShortcuts/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use some useful IDE productivity shortcuts\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eProductivity shortcuts\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv v-closeable alt\u003d\"video: Intellij shortcuts\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@[youtube](KsVWdGOnHZU)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "@[youtube](EvXpgL2iho4)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 20
    }
  },
  {
    "path": "intellij/projectSetup/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can setup a project in an IDE\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eProject setup\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "##### Running Intellij IDEA for the First Time"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctabs\u003e "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctab header\u003d\"{{ icon_text }}\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "* [[Intellij Official Tutorial] **Creating, Running and Packaging Your First Java Application**](https://www.jetbrains.com/help/idea/creating-running-and-packaging-your-first-java-application.html)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/tab\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctab header\u003d\"{{ icon_video }}\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@[youtube](c0efB_CKOYo)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "A little bit more detailed explanation %%(from CodeLaunch)%% with some additional info at the end."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "@[youtube](https://www.youtube.com/watch?v\u003dS764o0mAXhg)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/tab\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/tabs\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "##### Importing a Project to Intellij IDEA"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@[youtube](WIYTktB1bT4)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 36
    }
  },
  {
    "path": "modeling/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Modeling\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 5
    }
  },
  {
    "path": "modeling/introduction/how/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eHow\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain how models are used\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**In software development, models are useful in several ways:**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "a) **To analyze a complex entity related to software development.**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Some examples of using models for analysis:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Models of the \u003ctooltip content\u003d\"i.e. the environment in which the software is expected to solve a problem\"\u003eproblem domain\u003c/tooltip\u003e can be built to aid the understanding of the problem to be solved."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "2. When planning a software solution, models can be created to figure out how the solution is to be built. An \u003ctrigger trigger\u003d\"click\" for\u003d\"modal:modelingIntro-archiDiagrams\"\u003earchitecture diagram\u003c/trigger\u003e is such a model."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmodal large header\u003d\"Architecture Diagrams\" id\u003d\"modal:modelingIntro-archiDiagrams\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "An _architecture diagram_ depicts the high-level design of a software."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../../../architecture/architectureDiagrams/reading/text.md#architecture-diagram-examples\"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/modal\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "b) **To communicate information among stakeholders.**  Models can be used as a visual aid in discussions and documentations."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Some examples of using models to communicate:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "1. You can use an architecture diagram to explain the high-level design of the software to developers."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "2. A business analyst can use a _use case diagram_ to explain to the customer the functionality of the system."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "3. A _class diagram_ can be reverse-engineered from code so as to help explain the design of a component to a new developer."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "c) **As a blueprint for creating software.** Models can be used as instructions for building software."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Some examples of using models to as blueprints:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "1. A senior developer draws a class diagram to propose a design for an OOP software and passes it to a junior programmer to implement."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "2. A software tool allows users to draw UML models using its interface and the tool automatically generates the code based on the model."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c!-- TODO: make this an independent LO 4* --\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan slot\u003d\"header\" class\u003d\"card-title\"\u003eModel Driven Development {{ icon_extra }}\u003c/span\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "**_Model-driven development (MDD)_, also called _Model-driven engineering_, is an approach to software development that strives to exploit models as blueprints.** MDD uses models as primary engineering artifacts when developing software. That is, the system is first created in the form of models. After that, the models are converted to code using code-generation techniques (usually, automated or semi-automated, but can even involve manual translation from model to code). MDD requires the use of a very expressive modeling notation (graphical or otherwise), often specific to a given problem domain. It also requires sophisticated tools to generate code from models and maintain the link between models and the code. One advantage of MDD is that the same model can be used to create software for different platforms and different languages. MDD has a lot of promise, but it is still an emerging technology"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "Further reading:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "* [Martin Fowler\u0027s view on MDD](https://martinfowler.com/bliki/ModelDrivenSoftwareDevelopment.html) - TLDR: he is sceptical"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "* [5 types of Model Driven Software Development](http://www.theenterprisearchitect.eu/blog/2009/03/31/5-types-of-model-driven-software-development/) - A more optimistic view, although an old article"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 75
    }
  },
  {
    "path": "modeling/introduction/umlModels/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eUML models\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can identify UML models\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "The following diagram uses the class diagram notation to show the different types of \u003ctrigger trigger\u003d\"click\" for\u003d\"modal:umlModels-uml\"\u003eUML\u003c/trigger\u003e diagrams."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmodal large header\u003d\"UML (Unified Modeling Language)\" id\u003d\"modal:umlModels-uml\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cinclude src\u003d\"../../../common/definitions.md#def-uml\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/modal\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"https://upload.wikimedia.org/wikipedia/commons/e/ed/UML_diagrams_overview.svg\" width\u003d\"800\" /\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csub\u003esource:[https://en.wikipedia.org/](https://en.wikipedia.org/wiki/Unified_Modeling_Language)\u003c/sub\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 23
    }
  },
  {
    "path": "modeling/modelingASolution/basic/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eBasic\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003cpanel src\u003d\"../../../modeling/modelingBehaviors/sequenceDiagramsBasic/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }} Design → Modeling → Modeling Behaviors → Sequence Diagrams → Basic%%\" popup-url\u003d\"{{ baseUrl }}/modeling/modelingBehaviors/sequenceDiagramsBasic\" /\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel src\u003d\"../../../modeling/modelingStructures/classDiagramsBasic/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }} Design → Modeling → Modeling Structures → Class Diagrams → Basic%%\" popup-url\u003d\"{{ baseUrl }}/modeling/modelingStructures/classDiagramsBasic\" /\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use simple class diagrams and sequence diagrams to model an OO solution\u003c/span\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "As mentioned in [\u003ctrigger trigger\u003d\"click\" for\u003d\"modal:basicModelling-modelingIntro\"\u003eDesign → Modeling → Modeling a Solutions → Introduction\u003c/trigger\u003e], this is the Minesweeper design you have come up with so far. Our objective is to analyze, evaluate, and refine that design."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmodal large header\u003d\"Textbook {{ icon_embedding }}\" id\u003d\"modal:basicModelling-modelingIntro\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../introduction/unit-inElsewhere-asFlat.md\" boilerplate/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/modal\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingASolution/introduction/images/textLogicMinefieldCell.png\" height\u003d\"50\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "Let us start by modelling a sample interaction between the person playing the game and the `TextUi` object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingASolution/basic/images/playerText.png\" height\u003d\"300\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "`newgame` and `clear x y` represent commands typed by the `Player` on the `TextUi`."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "How does the `TextUi` object carry out the requests it has received from player? It would need to interact with other objects of the system. Because the `Logic` class is the one that controls the game logic, the `TextUi` needs to collaborate with `Logic` to fulfill the `newgame` request. Let us extend the model to capture that interaction."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingASolution/basic/images/playerTextLogic.png\" height\u003d\"280\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "`W` \u003d Width of the minefield; `H` \u003d  Height of the minefield"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "The above diagram assumes that `W` and `H` are the only information `TextUi` requires to display the minefield to the `Player`. Note that there could be other ways of doing this.  "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "The `Logic` methods you conceptualized in our modelling so far are:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingASolution/basic/images/textLogicMinefieldCell.png\" height\u003d\"115\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "Now, let us look at what other objects and interactions are needed to support the `newGame()` operation.  It is likely that a new `Minefield` object is created when the `newGame()` method is called."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingASolution/basic/images/logicMinefield.png\" height\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "Note that the behavior of the `Minefield` constructor has been abstracted away. It can be designed at a later stage."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "Given below are the interactions between the player and the Text UI for the whole game."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingASolution/basic/images/playerTextLoop.png\" height\u003d\"300\" /\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e\u003cp\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_tip }} Note that \u003ctooltip content\u003d\"using sequence diagramsn\"\u003ea similar technique\u003c/tooltip\u003e can be used when discovering/defining the architecture-level APIs."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv v-closeable alt\u003d\"Tic-Tac-Toe Video\" class\u003d\"non-printable\"\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_video }} Defining the architecture-level APIs for a small Tic-Tac-Toe game:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "@[youtube](Un80XoRT1ME)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 86
    }
  },
  {
    "path": "modeling/modelingASolution/intermediate/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eIntermediate\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003cpanel src\u003d\"../../../modeling/modelingBehaviors/sequenceDiagramsIntermediate/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }} Design → Modeling → Modeling Behaviors → Sequence Diagrams → Intermediate%%\" popup-url\u003d\"{{ baseUrl }}/modeling/modelingBehaviors/sequenceDiagramsIntermediate\" /\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel src\u003d\"../../../modeling/modelingStructures/classDiagramsIntermediate/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }} Design → Modeling → Modeling Structures → Class Diagrams → Intermediate%%\" popup-url\u003d\"{{ baseUrl }}/modeling/modelingStructures/classDiagramsIntermediate\" /\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use intermediate class diagram and sequence diagram concepts to model an OO design\u003c/span\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "Continuing with the example in [\u003ctrigger trigger\u003d\"click\" for\u003d\"modal:conceptualingIntermediate-basic\"\u003eDesign → Modeling → Modeling a Solution → Basic\u003c/trigger\u003e], next let us model how the TextUi interacts with the Logic to support the mark or clear operations until the game is won or lost."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmodal large header\u003d\"\" id\u003d\"modal:conceptualingIntermediate-basic\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../basic/unit-inElsewhere-asFlat.md\" boilerplate/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/modal\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingASolution/intermediate/images/playerTextLogicRef.png\" height\u003d\"250\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingASolution/intermediate/images/textLogicSd.png\" height\u003d\"210\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "This interaction adds the following methods to the `Logic` class"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "* `clearCellAt(int x, int y)`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "* `markCellAt(int x, int y)`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "* `getGameState() :GAME_STATE (GAME_STATE: READY, IN_PLAY, WON, LOST, …)`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "And it adds the following operation to Logic API:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "* `getAppearanceOfCellAt(int,int):CELL_APPEARANCE (CELL_APPEARANCE: HIDDEN, ZERO, ONE, TWO, THREE, …, MARKED, INCORRECTLY_MARKED, INCORRECTLY_CLEARED)`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "In the above design, `TextUi` does not access `Cell` objects directly. Instead, it gets values of type `CELL_APPEARANCE` from `Logic` to be displayed as a minefield to the player. Alternatively, each cell or the entire Minefield can be passed directly to `TextUi`."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "Here is the updated class diagram:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingASolution/intermediate/images/textLogicMinefieldCell.png\" height\u003d\"200\" /\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "The above is for the case when Actor `Player` interacts with the system using a text UI. Additional operations (if any) required for the GUI can be discovered similarly."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "Suppose `Logic` supports a `reset()` operation. You can model it like this:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingASolution/intermediate/images/logicMinefieldReset.png\" height\u003d\"100\" /\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "Our current model assumes that the `Minefield` object has enough information (i.e. H, W, and mine locations) to create itself."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingASolution/intermediate/images/logicMinefieldNewGame.png\" height\u003d\"85\" /\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "An alternative is to have a `ConfigGenerator` object that generates a string containing the minefield information as shown below."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingASolution/intermediate/images/logicConfigGenerator.png\" height\u003d\"170\" /\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "In addition, `getWidth()`, `getHeight()`, `markCellAt(x,y)` and `clearCellAt(x,y)` can be handled like this."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingASolution/intermediate/images/logicMinefieldFunctions.png\" height\u003d\"180\" /\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "The updated class diagram:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingASolution/intermediate/images/textLogicMinefieldCellConfigGenerator.png\" height\u003d\"250\" /\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "How is `getGameState()` operation supported? Given below are two ways (there could be other ways):"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "1. `Minefield` class knows the state of the game at any time. `Logic` class retrieves it from the `Minefield` class as and when required."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "2. `Logic` class maintains the state of the game at all times."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "Here’s the SD for option 1."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingASolution/intermediate/images/logicMinefieldGetGameState.png\" height\u003d\"180\" /\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "Here’s the SD for option 2. Here, assume that the game state is updated after every mark/clear action."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingASolution/intermediate/images/logicMinefieldUpdateState.png\" height\u003d\"250\" /\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "It is now time to explore what happens inside the `Minefield` constructor? One way is to design it as follows."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingASolution/intermediate/images/minefieldCellAlt.png\" height\u003d\"200\" /\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "Now let us assume that `Minesweeper` supports a ‘timing’ feature."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingASolution/intermediate/images/logicTimerOpt.png\" height\u003d\"130\" /\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "Updated class diagram:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingASolution/intermediate/images/fullClassDiagram.png\" height\u003d\"250\" /\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_tip }} When designing components, it is not necessary to draw elaborate UML diagrams capturing all details of the design. They can be done as rough sketches. For example, draw sequence diagrams only when you are not sure which operations are required by each class, or when you want to verify that your class structure can indeed support the required operations."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 143
    }
  },
  {
    "path": "modeling/modelingASolution/introduction/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eIntroduction\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain how modelling can be used before implementation\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**You can use models to analyze and design a software before you start coding.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "Suppose You are planning to implement a simple minesweeper game that has a text based UI and a GUI. Given below is a possible OOP design for the game."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingASolution/introduction/images/textLogicMinefieldCell.png\" height\u003d\"50\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "Before jumping into coding, you may want to find out things such as,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "* Is this class structure able to produce the behavior you want?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "* What API should each class have?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "* Do you need more classes?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "To answer those questions, you can analyze the how the objects of these classes will interact with each other to produce the behavior you want."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 2,
      "-": 25
    }
  },
  {
    "path": "modeling/modelingASolution/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eModeling a solution\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"introduction/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"basic/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"intermediate/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 8
    }
  },
  {
    "path": "modeling/modelingBehaviors/activityDiagrams/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eActivity diagrams - basic\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use basic-level activity diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Software projects often involve _workflows_.** Workflows define the \u003ctooltip content\u003d\"a connected sequence of steps\"\u003e\u003c/tooltip\u003eflow in which a process or a set of tasks is executed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "Understanding such workflows is important for the success of the software project."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "Some examples in which a certain workflow is relevant to software project:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} A software that automates the work of an insurance company needs to take into account the workflow of processing an insurance claim."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The algorithm of a price of code represents the workflow (i.e. the execution flow) of the code."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/activityDiagrams/introduction/what/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Activity Diagrams → Introduction → What\" alt\u003d\"{{ icon_prereq }} UML/AD/Intro\" /\u003e\u003cp/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/activityDiagrams/basicNotations/linearPaths/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Activity Diagrams → Basic Notation → Linear Paths\" alt\u003d\"{{ icon_prereq }} UML/AD/LinearPaths\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/activityDiagrams/basicNotations/alternatePaths/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Activity Diagrams → Basic Notation → Alternate Paths\" alt\u003d\"{{ icon_prereq }} UML/AD/AlternatePaths\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/activityDiagrams/basicNotations/parallelPaths/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Activity Diagrams → Basic Notation → Parellel Paths\" alt\u003d\"{{ icon_prereq }} UML/AD/ParallelPaths\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercisesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 34
    }
  },
  {
    "path": "modeling/modelingBehaviors/activityDiagramsIntermediate/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eActivity diagrams - intermediate\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use intermediate-level activity diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/activityDiagrams/basicNotations/rakes/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Activity Diagrams → Intermediate Notation → Rakes\" alt\u003d\"{{ icon_prereq }} UML/AD/Rakes\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/activityDiagrams/basicNotations/swimlanes/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Activity Diagrams → Intermedidate Notation → Swim Lanes\" alt\u003d\"{{ icon_prereq }} UML/AD/SwimLanes\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 16
    }
  },
  {
    "path": "modeling/modelingBehaviors/communicationDiagrams/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eCommunication diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain communication diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**A _Communication diagrams_ are like sequence diagrams but emphasize the data links between the various participants in the interaction rather than the sequence of interactions.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} An example:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingBehaviors/communicationDiagrams/images/diagram.png\" height\u003d\"300\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csub\u003eAdapted from: _UML Distilled_ by Martin Fowler\u003c/sub\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 24
    }
  },
  {
    "path": "modeling/modelingBehaviors/interactionOverviewDiagrams/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eInteraction overview diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain interaction overview diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**An _Interaction overview_ diagrams is a combination of activity diagrams and sequence diagrams**."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} An example:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingBehaviors/interactionOverviewDiagrams/images/diagram.png\" height\u003d\"420\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csub\u003esource:[https://commons.wikimedia.org](https://en.wikipedia.org/wiki/Interaction_overview_diagram)\u003c/sub\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 24
    }
  },
  {
    "path": "modeling/modelingBehaviors/sequenceDiagramsAdvanced/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can interpret advanced sequence diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eSequence diagrams - advanced\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel src\u003d\"../../../uml/sequenceDiagrams/parallelPaths/embed.md\" boilerplate  header\u003d\"UML: Sequence Diagrams: Parallel Paths\" is-open /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 13
    }
  },
  {
    "path": "modeling/modelingBehaviors/sequenceDiagramsBasic/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eSequence diagrams - basic\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can draw basic sequence diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/sequenceDiagrams/introduction/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Sequence Diagrams → Introduction\" alt\u003d\"{{ icon_prereq }} UML/SequenceDiagrams\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/sequenceDiagrams/basic/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Sequence Diagrams → Basic Notation\" alt\u003d\"{{ icon_prereq }} UML/SD/Basic\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/sequenceDiagrams/loops/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Sequence Diagrams → Loops\" alt\u003d\"{{ icon_prereq }} UML/SD/Loops\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/sequenceDiagrams/objectCreation/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Sequence Diagrams → Object Creation\" alt\u003d\"{{ icon_prereq }} UML/SD/Creation\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/sequenceDiagrams/minimalNotation/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Sequence Diagrams → Minimal Notation\" alt\u003d\"{{ icon_prereq }} UML/SD/Minimal\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercisesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 22
    }
  },
  {
    "path": "modeling/modelingBehaviors/sequenceDiagramsIntermediate/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eSequence diagrams - intermediate\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can draw intermediate-level sequence diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/sequenceDiagrams/objectDeletion/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Sequence Diagrams → Object Deletion\" alt\u003d\"{{ icon_prereq }} UML/SD/Deletion\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/sequenceDiagrams/selfInvocation/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Sequence Diagrams → Self-Invocation\" alt\u003d\"{{ icon_prereq }} UML/SD/Self-Invocation\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/sequenceDiagrams/alternativePaths/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Sequence Diagrams → Alternative Paths\" alt\u003d\"{{ icon_prereq }} UML/SD/Alternative\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/sequenceDiagrams/optionalPaths/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Sequence Diagrams → Optional Paths\" alt\u003d\"{{ icon_prereq }} UML/SD/Optional\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\"  header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Sequence Diagrams → Calls to Static Methods\" alt\u003d\"{{ icon_prereq }} UML/SD/StaticMethods\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../../../uml/sequenceDiagrams/staticMethods/unit-inElsewhere-asFlat.md#main\"  boilerplate /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercisesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 24
    }
  },
  {
    "path": "modeling/modelingBehaviors/stateMachineDiagrams/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eState machine diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain state machine diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**A _State Machine Diagram_ models state-dependent behavior.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Consider how a CD player responds when the “eject CD” button is pushed:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "* If the CD tray is already open, it does nothing."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "* If the CD tray is already in the process of opening (opened half-way), it continues to open the CD tray."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "* If the CD tray is closed and the CD is being played, it stops playing and opens the CD tray."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "* If the CD tray is closed and CD is not being played, it simply opens the CD tray."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "* If the CD tray is already in the process of closing (closed half-way), it waits until the CD tray is fully closed and opens it immediately afterwards."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "What this means is that the CD player’s response to pushing the “eject CD” button depends on what it was doing at the time of the event. More generally, the CD player’s response to the event received depends on its internal state. Such a behavior is called a _state-dependent behavior_."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "Often, state-dependent behavior displayed by an object in a system is simple enough that it needs no extra attention; such a behavior can be as simple as a _conditional_ behavior like `if x\u003ey, then x\u003dx-y`."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "Occasionally, objects may exhibit state-dependent behavior that is complex enough such that it needs to be captured into a separate model. Such state-dependent behavior can be modelled using UML _state machine diagrams_ (SMD for short, sometimes also called ‘state charts’, ‘state diagrams’ or ‘state machines’)."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "An SMD views the life-cycle of an object as consisting of a finite number of states where each state displays a unique behavior pattern.  An SMD captures information such as the states an object can be in, during its lifetime, and how the object responds to various events while in each state and how the object transits from one state to another. In contrast to sequence diagrams that capture object behavior one scenario at a time, SMDs capture the object’s behavior over its full life cycle. "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} An SMD for the Minesweeper game. "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingBehaviors/stateMachineDiagrams/images/minesweeper.png\" height\u003d\"200\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 42
    }
  },
  {
    "path": "modeling/modelingBehaviors/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eModeling behaviors\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"activityDiagrams/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"activityDiagramsIntermediate/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"sequenceDiagramsBasic/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"sequenceDiagramsIntermediate/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"sequenceDiagramsAdvanced/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"useCaseDiagrams/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"timingDiagrams/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"interactionOverviewDiagrams/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"communicationDiagrams/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"stateMachineDiagrams/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 15
    }
  },
  {
    "path": "modeling/modelingBehaviors/timingDiagrams/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eTiming diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain timing diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**A _timing diagram_ focus on timing constraints.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Here is an example timing diagram:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingBehaviors/timingDiagrams/images/diagram.png\" height\u003d\"280\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csub\u003eAdapted from: _UML Distilled_ by Martin Fowler\u003c/sub\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 24
    }
  },
  {
    "path": "modeling/modelingBehaviors/useCaseDiagrams/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain use case diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eUse case diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Use case diagrams model the mapping between features of a system and its user roles.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} A simple use case diagram:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/specifyingRequirements/useCases/introduction/images/ticketMachine.png\" height\u003d\"250\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 21
    }
  },
  {
    "path": "modeling/modelingStructures/addingMoreInfo/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAdding more info to UML models\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can add more info to UML models\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**UML notes can be used to add more info to any UML model.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel src\u003d\"../../../uml/notes/notes/unit-inElsewhere-asFlat.md#title-and-body\" boilerplate header\u003d\"{{ icon_prereq }} UML → Notes\" expanded /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 15
    }
  },
  {
    "path": "modeling/modelingStructures/classDiagramsAdvanced/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eClass Diagrams - advanced\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003cpanel src\u003d\"../classDiagramsIntermediate/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }} Design → Modeling → Class Diagrams (Intermediate)%%\" popup-url\u003d\"{{ baseUrl }}/modeling/modelingStructures/classDiagramsIntermediate\" /\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use advanced class diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**A class diagram can show association classes too.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../oop/associations/associationClasses/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} OOP → Associations → Association Classes\" alt\u003d\"{{ icon_prereq }} OOP/AssociationClasses\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/classDiagrams/associationClasses/what/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML → Class Diagrams → Association Classes → What\" alt\u003d\"{{ icon_prereq }} UML/AssociationsClasses\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 19
    }
  },
  {
    "path": "modeling/modelingStructures/classDiagramsBasic/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eClass diagrams - basic \u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use basic-level class diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "%%\u003csmall\u003e{{ icon_info }} Contents of the panels given below belong to a different chapter; they have been embedded here for convenience and are collapsed by default to avoid content duplication in the printed version.\u003c/small\u003e%%"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/classDiagrams/introduction/what/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Class Diagrams → Introduction → What\" alt\u003d\"{{ icon_prereq }} UML/ClassDiagrams\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "**Classes form the basis of class diagrams.**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/classDiagrams/classes/what/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Class Diagrams → Classes → What\" alt\u003d\"{{ icon_prereq }} Classes\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/classDiagrams/classLevelMembers/what/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Class Diagrams → Class-Level Members → What\" alt\u003d\"{{ icon_prereq }} Class-Level Members\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "**_Associations_ are the main connections among the classes in a class diagram.**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../oop/associations/what/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} OOP {{ icon_embedding }} Associations → What\" alt\u003d\"{{ icon_prereq }} OOP/Associations\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/classDiagrams/associations/what/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Class Diagrams → Associations → What\" alt\u003d\"{{ icon_prereq }} UML/Associations\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "The most basic class diagram is a bunch of classes with some solid lines among them to represent associations, such as this one."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} An example class diagram showing associations between classes."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingStructures/classDiagramsBasic/images/ageListCalculatorPersonMinimal.png\" width\u003d\"450\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "In addition, **associations can show additional decorations such as _association labels_, _association roles_, _multiplicity_ and _navigability_** to add more information to a class diagram."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/classDiagrams/associations/labels/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Class Diagrams → Associations → Labels\" alt\u003d\"{{ icon_prereq }} Labels\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/classDiagrams/associations/roles/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Class Diagrams → Associations → Roles\" alt\u003d\"{{ icon_prereq }} Roles\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../oop/associations/multiplicity/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} OOP {{ icon_embedding }} Associations → Multiplicity\" alt\u003d\"{{ icon_prereq }} OOP/Multiplicity\"/\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/classDiagrams/associations/multiplicity/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Class Diagrams → Associations → Multiplicity\" alt\u003d\"{{ icon_prereq }} UML/Multiplicity\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../oop/associations/navigability/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} OOP {{ icon_embedding }} Associations → Navigability\" alt\u003d\"{{ icon_prereq }} OOP/Navigability\"/\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/classDiagrams/associations/navigability/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Class Diagrams → Associations → Navigability\" alt\u003d\"{{ icon_prereq }} UML/Navigability\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Here is the same class diagram shown earlier but with some additional information included: "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingStructures/classDiagramsBasic/images/ageListCalculatorPerson.png\" width\u003d\"450\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercisesPanel.md\" boilerplate/\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 52
    }
  },
  {
    "path": "modeling/modelingStructures/classDiagramsIntermediate/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eClass diagrams - intermediate\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003cpanel src\u003d\"../classDiagramsBasic/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }} Design → Modeling → Class Diagrams (Basic)%%\" popup-url\u003d\"{{ baseUrl }}/modeling/modelingStructures/classDiagramsBasic\" /\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use intermediate-level class diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**A class diagram can also show different types of relationships between classes: inheritance, compositions, aggregations, dependencies.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"indented\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "##### Modeling inheritance"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../oop/inheritance/what/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} OOP → Inheritance → What\" alt\u003d\"{{ icon_prereq }} OOP/Inheritance\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/classDiagrams/classInheritance/what/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML → Class Diagrams → Inheritance → What\" alt\u003d\"{{ icon_prereq }} UML/Inheritance\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "##### Modeling composition"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../oop/associations/composition/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} OOP → Associations → Composition\" alt\u003d\"{{ icon_prereq }} OOP/Composition\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/classDiagrams/composition/what/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML → Class Diagrams → Composition → What\" alt\u003d\"{{ icon_prereq }} UML/Composition\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "##### Modeling aggregation"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../oop/associations/aggregation/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} OOP → Associations → Aggregation\" alt\u003d\"{{ icon_prereq }} OOP/Aggregation\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/classDiagrams/aggregation/what/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML → Class Diagrams → Aggregation → What\" alt\u003d\"{{ icon_prereq }} UML/Aggregation\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "##### Modeling dependencies"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../oop/associations/dependencies/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} OOP → Associations → Dependencies\" alt\u003d\"{{ icon_prereq }} OOP/Dependencies\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/classDiagrams/dependencies/what/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML → Class Diagrams → Dependencies → What\" alt\u003d\"{{ icon_prereq }} UML/Dependencies\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "**A class diagram can also show different types of class-like entities:**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"indented\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "##### Modeling enumerations"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../oop/classes/enumerations/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} OOP → Classes → Enumerations\" alt\u003d\"{{ icon_prereq }} OOP/Enumerations\" /\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/classDiagrams/enumerations/what/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML → Class Diagrams → Enumerations → What\" alt\u003d\"{{ icon_prereq }} UML/Enumerations\" /\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "##### Modeling abstract classes"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../oop/inheritance/abstractClasses/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} OOP → Inheritance → Abstract Classes\" alt\u003d\"{{ icon_prereq }} OOP/AbstractClasses\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/classDiagrams/abstractClasses/what/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML → Class Diagrams → Abstract Classes → What\" alt\u003d\"{{ icon_prereq }} UML/AbstractClasses\" /\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "##### Modeling interfaces"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../oop/inheritance/interfaces/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} OOP → Inheritance → Interfaces\" alt\u003d\"{{ icon_prereq }} OOP/Interfaces\" /\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/classDiagrams/interfaces/what/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML → Class Diagrams → Interfaces → What\" alt\u003d\"{{ icon_prereq }} UML/Interfaces\" /\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercisesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 59
    }
  },
  {
    "path": "modeling/modelingStructures/componentDiagrams/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eComponent diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain component diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**A _component diagram_ is used to show how a system is divided into components and how they are connected to each other through interfaces.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} An example component diagram:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingStructures/componentDiagrams/images/diagram.png\" height\u003d\"500\" /\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csub\u003esource:[https://commons.wikimedia.org](https://en.wikipedia.org/wiki/Component_diagram)\u003c/sub\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 22
    }
  },
  {
    "path": "modeling/modelingStructures/compositeStructureDiagrams/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eComposite structure diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain composite structure diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**A _composite structure diagram_ hierarchically decomposes a class into its internal structure.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Here is an example composite structure diagram:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingStructures/compositeStructureDiagrams/images/diagram.png\" height\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csub\u003esource:[https://commons.wikimedia.org](https://en.wikipedia.org/wiki/Composite_structure_diagram)\u003c/sub\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 23
    }
  },
  {
    "path": "modeling/modelingStructures/deploymentDiagrams/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eDeployment diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain deployment diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**A _deployment diagram_ shows a system\u0027s physical layout, revealing which pieces of software run on which pieces of hardware.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} An example deployment diagram:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingStructures/deploymentDiagrams/images/diagram.png\" height\u003d\"500\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csub\u003esource:[https://commons.wikimedia.org](https://en.wikipedia.org/wiki/Deployment_diagram)\u003c/sub\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 24
    }
  },
  {
    "path": "modeling/modelingStructures/objectDiagrams/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can use basic object diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eObject diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/objectDiagrams/introduction/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML → Object Diagrams → Introduction\" alt\u003d\"{{ icon_prereq }} Object Diagrams\"/\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "**Object diagrams can be used to complement class diagrams.** For example, you can use object diagrams to model different object structures that can result from a design represented by a given class diagram."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/objectDiagrams/objects/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML → Object Diagrams → Objects\" alt\u003d\"{{ icon_prereq }} OD/Objects\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/objectDiagrams/associations/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML → Object Diagrams → Associations\" alt\u003d\"{{ icon_prereq }} OD/Associations\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercisesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 19
    }
  },
  {
    "path": "modeling/modelingStructures/objectOrientedDomainModels/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eObject oriented domain models\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain object oriented domain models\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e The analysis process for identifying objects and object classes is recognized as one of the most difficult areas of object-oriented development. \u003csub\u003e--[Ian Sommerville, in the book _Software Engineering_](http://www.software-engin.com/)\u003c/sub\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "Class diagrams can also be used to model objects in the \u003ctooltip content\u003d\"the relevant information that needs to be examined to understand a problem\"\u003eproblem domain\u003c/tooltip\u003e (i.e. to model how objects actually interact in the real world, before emulating them in the solution). **Class diagrams are used to model the problem domain are called _conceptual class diagrams_ or _OO domain models (OODMs)_.**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} OO domain model of a snakes and ladders game is given below."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "Description: Snakes and ladders game is played by two or more players using a board and a die. The board has 100 squares marked 1 to 100. Each player owns one piece. Players take turns to throw the die and advance their piece by the number of squares they earned from the die throw. The board has a number of snakes. If a player’s piece lands on a square with a snake head, the piece is automatically moved to the square containing the snake’s tail. Similarly, a piece can automatically move from a ladder foot to the ladder top. The player whose piece is the first to reach the 100th square wins."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingStructures/objectOrientedDomainModels/images/diagram.png\" height\u003d\"420\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "The above OO domain model omits the ladder class for simplicity. It can be included in a similar fashion to the Snake class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "**OODMs do not contain solution-specific classes** (i.e. classes that are used in the solution domain but do not exist in the problem domain). For example, a class called DatabaseConnection could appear in a class diagram but not usually in an OO domain model because DatabaseConnection is something related to a software solution but not an entity in the problem domain."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "**OODMs represents the class _structure_ of the problem domain** and not their behavior, just like class diagrams. To show behavior, use other diagrams such as sequence diagrams."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "**OODM notation is similar to class diagram notation but omit methods and navigability.**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercisesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 37
    }
  },
  {
    "path": "modeling/modelingStructures/ooStructures/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eOO structures\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003cpanel src\u003d\"../../../oop/classes/what/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"{{ icon_prereq }} %%Design → OOP → Classes → Basic%%\" popup-url\u003d\"{{ baseUrl }}/oop/classes/what\" /\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain structure modelling of OO solutions\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "An OO solution is basically a network of objects interacting with each other. Therefore, **it is useful to be able to model how the relevant objects are \u0027networked\u0027 together** inside a software %%i.e. how the objects are connected together%%. "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Given below is an illustration of some objects and how they are connected together. %%Note: the diagram uses an ad-hoc notation.%%"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp\u003e\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingStructures/ooStructures/images/objectsAdHoc.png\" width\u003d\"500\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "Note that these **object structures within the same software can change over time**."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Given below is how the object structure in the previous example could have looked like at a different time."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp\u003e\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingStructures/ooStructures/images/objectsAdHoc2.png\" width\u003d\"500\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "However, object structures do not change at random; they change based on a set of rules, as was decided by the designer of that software. Those **rules that object structures need to follow can be illustrated as a _class structure_** %%i.e. a structure that exists among the relevant classes%%."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Here is a class structure (drawn using an ad-hoc notation) that matches the object structures given in the previous two examples. For example, note how this class structure does not allow any connection between `Genre` objects and `Author` objects, a rule followed by the two object structures above."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp\u003e\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingStructures/ooStructures/images/classesAdHoc.png\" width\u003d\"500\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "UML _Object Diagrams_ are used to model object structures and UML _Class Diagrams_ are used to model class structures of an OO solution."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Here is an object diagram for the above example:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp\u003e\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingStructures/ooStructures/images/objectDiagram.png\" width\u003d\"500\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} And here is the class diagram for it:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp\u003e\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingStructures/ooStructures/images/classDiagram.png\" width\u003d\"500\" /\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercises.md\"/\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 55
    }
  },
  {
    "path": "modeling/modelingStructures/packageDiagrams/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003ePackage diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain package diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**A _package diagram_ shows packages and their dependencies.** A package is a grouping construct for grouping UML elements (classes, use cases, etc.)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Here is an example package diagram:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/modeling/modelingStructures/packageDiagrams/images/diagram.png\" height\u003d\"450\" /\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csub\u003esource:[https://commons.wikimedia.org](https://en.wikipedia.org/wiki/Package_diagram)\u003c/sub\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 22
    }
  },
  {
    "path": "modeling/modelingStructures/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eModeling structures\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"ooStructures/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"classDiagramsBasic/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"addingMoreInfo/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"classDiagramsIntermediate/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"classDiagramsAdvanced/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"objectDiagrams/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"objectOrientedDomainModels/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"deploymentDiagrams/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"componentDiagrams/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"packageDiagrams/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"compositeStructureDiagrams/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 16
    }
  },
  {
    "path": "oop/associations/associationClasses/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAssociation classes\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain the meaning of association classes\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**An _association class_ represents additional information about an association.** It is a normal class but plays a special role from a design point of view."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} A `Man` class and a `Woman` class is linked with a ‘married to’ association and there is a need to store the date of marriage. However, that data is related to the association rather than specifically owned by either the `Man` object or the `Woman` object. In such situations, an additional association class can be introduced, e.g. a `Marriage` class, to store such information. "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" src\u003d\"../../../uml/classDiagrams/associationClasses/what/unit-inElsewhere-asFlat.md#main\" boilerplate header\u003d\"{{ icon_prereq }} UML {{ icon_embedding }} Class Diagrams → Association Classes → What\" alt\u003d\"{{ icon_prereq }} UML/AssociationClasses\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "##### Implementing association classes"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "There is no special way to implement an association class. It can be implemented as a normal class that has variables to represent the endpoint of the association it represents. "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} In the code below, the `Transaction` class is an association class that represent a transaction between a `Person` who is the seller and another `Person` who is the buyer. "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "class Transaction{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    //all fields are compulsory"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    Person seller;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    Person buyer;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    Date date;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    String receiptNumber;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    Transaction (Person seller, Person buyer, Date date, String receiptNumber){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        //set fields"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 47
    }
  },
  {
    "path": "oop/associations/what/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eBasic\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain associations\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Objects in an OO solution need to be connected to each other to form a network so that they can interact with each other. Such **connections between objects are called _associations_.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "{{ icon_example }} Suppose an OOP program for managing a learning management system creates an object structure to represent the related objects. In that object structure you can expect to have associations between a`Course` object that represents a specific course and `Student` objects that represent students taking that course."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "**Associations in an object structure can change over time**."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} To continue the previous example, the associations between a `Course` object and `Student` objects can change as students enroll in the module or drop the module over time."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "**Associations among objects can be generalized as associations between the corresponding classes too.**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "{{ icon_example }} In our example, as some `Course` objects can have associations with some `Student` objects, you can view it as an association between the `Course` class and the `Student` class."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "##### Implementing associations"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "**You use instance level variables to implement associations.**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 3,
      "-": 37
    }
  },
  {
    "path": "oop/classes/classLevelMembers/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eClass-level members\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain class-level members\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "While all objects of a class has the same attributes, each object has its own copy of the attribute value."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} All `Person` objects have the `Name` attribute but the value of that attribute varies between `Person` objects."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "However, some attributes are not suitable to be maintained by individual objects. Instead, they should be maintained centrally, shared by all objects of the class. They are like ‘global variables’ but attached to a specific class. Such **variables whose value is shared by all instances of a class are called \u003d\u003d_class-level attributes_\u003d\u003d**."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The attribute `totalPersons` should be maintained centrally and shared by all `Person` objects rather than copied at each `Person` object.  "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "Similarly, when a normal method is being called, a message is being sent to the receiving object and the result may depend on the receiving object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Sending the `getName()` message to the `Adam` object results in the response `\"Adam\"` while sending the same message to the `Beth` object results in the response `\"Beth\"`."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "However, there can be methods related to a specific class but not suitable for sending message to a specific object of that class. Such **methods that are called using the class instead of a specific instance are called \u003d\u003d_class-level methods_\u003d\u003d**."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The method `getTotalPersons()` is not suitable to send to a specific `Person` object %%because a specific object of the `Person` class should not have to know about the total number of `Person` objects%%."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "**Class-level attributes and methods are collectively called \u003d\u003d_class-level members_\u003d\u003d** (also called _static members_ sometimes because some programming languages use the keyword `static` to identify class-level members). **They are to be accessed using the class name rather than an instance of the class**."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 47
    }
  },
  {
    "path": "oop/classes/what/q-essay-identifyClassesAndObjects.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Identify Classes and Objects\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Consider the following scenario. If you were to simulate this in an OOP program, what are the classes and the objects you would use?"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "A customer (name: John) gave a cheque to the Cashier (name: Peter) to pay for the LoTR and GoT books he bought."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "Class      | Objects"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "---------- | -------"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "`Customer` | `john`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "`Book`     | `LoTR`, `GoT`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "`Cheque`   | `checqueJohnGave`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "`Cashier`  | `peter`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 23
    }
  },
  {
    "path": "oop/classes/what/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eWhat\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain the relationship between classes and objects \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Writing an OOP program is essentially writing instructions that the computer will use to,**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " 1. **create the virtual world of the object network, and**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": " 2. **provide it the inputs to produce the outcome you want.** "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "**A \u003d\u003d_class_\u003d\u003d contains instructions for creating a specific kind of objects**. It turns out sometimes multiple objects keep the same type of data and have the same behavior because they are of the _same kind_. Instructions for creating a \u0027kind\u0027 (or ‘class’) of objects can be done once and that same instructions can be used to \u003ctooltip content\u003d\"i.e. create instances of\"\u003e_instantiate_\u003c/tooltip\u003e objects of that kind. You call such instructions a _Class_."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Classes and objects in an example scenario"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "Consider the example of writing an OOP program to calculate the average age of Adam, Beth, Charlie, and Daisy."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "Instructions for creating objects `Adam`, `Beth`, `Charlie`, and `Daisy` will be very similar because they are all of the same kind: they all represent ‘persons’ with the same interface, the same kind of data (i.e. `name`, `dateOfBrith`, etc.), and the same kind of behavior (i.e. `getAge(Date)`, `getName()`, etc.). Therefore, you can have a class called `Person` containing instructions on how to create `Person` objects and use that class to instantiate objects `Adam`, `Beth`, `Charlie`, and `Daisy`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "Similarly, you need classes `AgeList`, `Calculator`, and `Main` classes to instantiate one each of `AgeList`, `Calculator`, and `Main` objects."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "Class | Objects"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "------|--------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`Person`| objects representing Adam, Beth, Charlie, Daisy"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`AgeList` | an object to represent the age list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "`Calculator` | an object to do the calculations"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "`Main` | an object to represent you (i.e., the one who manages the whole operation)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercisesPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 4,
      "-": 36
    }
  },
  {
    "path": "oop/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Object Oriented Programming\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 5
    }
  },
  {
    "path": "oop/inheritance/abstractClasses/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAbstract classes and methods\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can implement abstract classes\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"definition\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../../../common/definitions.md#def-abstractClass\" /\u003e "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "**You can declare a class as _abstract_ when a class is merely a representation of commonalities among its subclasses** in which case it does not make sense to instantiate objects of that class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The `Animal` class that exist as a generalization of its subclasses `Cat`, `Dog`, `Horse`, `Tiger` etc. can be declared as abstract because it does not make sense to instantiate an `Animal` object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"definition\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../../../common/definitions.md#def-abstractMethod\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The `move` method of the `Animal` class is likely to be an abstract method as it is not possible to implement a `move` method at the `Animal` class level to fit all subclasses %%because each animal type can move in a different way%%."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "**A class that has an abstract method becomes an abstract class** because the class definition is incomplete (due to the missing method body) and it is not possible to create objects using an incomplete class definition."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 39
    }
  },
  {
    "path": "oop/inheritance/dynamicAndStaticBinding/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain dynamic and static binding\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eDynamic and static binding\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"definition\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../../../common/definitions.md#def-dynamic-binding\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "**\u003ctrigger trigger\u003d\"click\" for\u003d\"modal:dynamicAndStatic-overriding\"\u003eOverridden methods\u003c/trigger\u003e are resolved using dynamic binding, and therefore resolves to the implementation in the actual type of the object.**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmodal large header\u003d\"Textbook {{ icon_embedding }}\" id\u003d\"modal:dynamicAndStatic-overriding\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../overriding/unit-inElsewhere-asFlat.md\" boilerplate/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/modal\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Consider the code below. The declared type of `s` is `Staff` and it appears as if the `adjustSalary(int)` operation of the `Staff` class is invoked. "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "void adjustSalary(int byPercent) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    for (Staff s: staff) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        s.adjustSalary(byPercent);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "However, at runtime `s` can receive an object of any subclass of `Staff`. That means the `adjustSalary(int)` operation of the actual subclass object will be called. If the subclass does not override that operation, the operation defined in the superclass (in this case, `Staff` class) will be called."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"definition\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../../../common/definitions.md#def-static-binding\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "**In contrast, \u003ctrigger trigger\u003d\"click\" for\u003d\"modal:dynamicAndStatic-overloading\"\u003eoverloaded\u003c/trigger\u003e methods are resolved using static binding.**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmodal large header\u003d\"Textbook {{ icon_embedding }}\" id\u003d\"modal:dynamicAndStatic-overloading\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../overloading/unit-inElsewhere-asFlat.md\" boilerplate/\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/modal\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Note how the constructor is overloaded in the class below. The method call `new Account()` is bound to the first constructor at compile time."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "class Account {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    Account () {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        // Signature: ()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        ..."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    Account (String name, String number, double balance) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        // Signature: (String, String, double)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        ..."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Similarly, the `calcuateGrade` method is overloaded in the code below and a method call `calculateGrade(\"A1213232\")` is bound to the second implementation, at compile time."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "void calculateGrade (int[] averages) { ... }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "void calculateGrade (String matric) { ... }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 73
    }
  },
  {
    "path": "oop/introduction/what/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eWhat\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can describe OOP at a higher level\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Object-Oriented Programming (OOP) is a _programming paradigm_.** A programming paradigm guides programmers to analyze programming problems, and structure programming solutions, in a specific way. "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e Programming languages have traditionally divided the world into two parts—data and operations on data. Data is static and immutable, except as the operations may change it. The procedures and functions that operate on data have no lasting state of their own; they’re useful only in their ability to affect data."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003e This division is, of course, grounded in the way computers work, so it’s not one that you can easily ignore or push aside. Like the equally pervasive distinctions between matter and energy and between nouns and verbs, it forms the background against which you work. At some point, all programmers—even object-oriented programmers—must lay out the data structures that their programs will use and define the functions that will act on the data."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e With a procedural programming language like C, that’s about all there is to it. The language may offer various kinds of support for organizing data and functions, but it won’t divide the world any differently. Functions and data structures are the basic elements of design."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e Object-oriented programming doesn’t so much dispute this view of the world as restructure it at a higher level. It groups operations and data into modular units called objects and lets you combine objects into structured networks to form a complete program. In an object-oriented programming language, objects and object interactions are the basic elements of design."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e \u003csub\u003e-- [Object-Oriented Programming with Objective-C](https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/OOP_ObjC/), Apple\u003c/sub\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "Some other examples of programming paradigms are:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "Paradigm | Programming Languages"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "-------- | ---------------------"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "[_Procedural Programming_ paradigm](https://en.wikipedia.org/wiki/Procedural_programming)| C"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "[_Functional Programming_ paradigm](https://en.wikipedia.org/wiki/Functional_programming)| F#, Haskel, Scala"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "[_Logic Programming_ paradigm](https://en.wikipedia.org/wiki/Logic_programming) | Prolog"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "**Some programming languages support multiple paradigms.**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Java is primarily an OOP language but it supports limited forms of functional programming and it can be used to (although not recommended) write procedural code. %%e.g. [se-edu/addressbook-level1](https://github.com/se-edu/addressbook-level1)%%"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} JavaScript and Python support functional, procedural, and OOP programming."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 44
    }
  },
  {
    "path": "oop/more/review/q-radio-abstractionEncapsulation.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} In the context of OOP, what is the relationship between abstraction and encapsulation?\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"%%Prerequisites%%\" expandable expanded\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../objects/encapsulation/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"OOP: Objects: Encapsulation\" /\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../objects/abstraction/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"OOP: Objects: Abstraction\" /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "In the context of OOP, what is the relationship between abstraction and encapsulation?"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) a. They are the same thing"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) b. They are opposites"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) c. Encapsulation strengthens abstraction"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) d. Abstraction strengthens encapsulation"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "c"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "Explanation: We can have abstraction without encapsulation. For example, we can *think* in terms of student entities when we code in C (a procedural language). But when we use a language that has encapsulation too (e.g., in Java/C++/C#), we can package all student related data and functions into one construct (i.e. a class). This makes the ‘student’ abstraction stronger because now we can not only think in terms of students, the program can perform actions using objects that represent student entities."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 26
    }
  },
  {
    "path": "oop/more/review/q-radio-fourMainPrinciples.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Which of these do not belong to four main OO principles?\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"%%Prerequisites%%\" expandable expanded\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../objects/abstraction/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"OOP: Objects: Abstraction\" /\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../objects/encapsulation/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"OOP: Objects: Encapsulation\" /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../inheritance/what/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"OOP: Inheritance: Basic\" /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../inheritance/substitutability/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"OOP: Inheritance: Substitutability\" /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../../polymorphism/what/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"OOP: Polymorphism: Introduction\" /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "Which of these do not belong to four main OO principles?"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) a. Abstraction"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) b. Encapsulation"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) c. Inheritance"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) d. Substitutability"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) e. Polymorphism"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 28
    }
  },
  {
    "path": "oop/objects/abstraction/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eObjects as abstractions\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain the abstraction aspect of OOP\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "The concept of **_Objects_ in OOP is an \u003ctrigger trigger\u003d\"click\" for\u003d\"modal:objectsAsAbstractions-abstraction\"\u003eabstraction\u003c/trigger\u003e mechanism because it allows us to abstract away the lower level details and work with bigger granularity entities** i.e. ignore details of data formats and the method implementation details and work at the level of objects."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmodal large header\u003d\"Definition: Abstraction\" id\u003d\"modal:objectsAsAbstractions-abstraction\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../../../common/definitions.md#def-abstraction\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/modal\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} We can deal with a `Person` object that represents the person Adam and query the object for Adam\u0027s age instead of dealing with details such as Adam’s date of birth (DoB), in what format the DoB is stored, the algorithm used to calculate the age from the DoB, etc."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 23
    }
  },
  {
    "path": "oop/objects/encapsulation/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eEncapsulation of objects\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain the encapsulation aspect of OOP\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e Encapsulation protects an implementation from unintended actions and from inadvertent access.\u003cbr\u003e \u003csub\u003e-- [Object-Oriented Programming with Objective-C](https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/OOP_ObjC/), Apple \u003c/sub\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "**An object is an _encapsulation_ of some data and related behavior in terms of two aspects:**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "**1. The _packaging_ aspect:** An object packages data and related behavior together into one self-contained unit."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "**2. The _information hiding_ aspect:** The data in an object is hidden from the outside world and are only accessible using the object\u0027s interface."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 22
    }
  },
  {
    "path": "principles/brooksLaw/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eBrooks\u0027 law\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain Brooks\u0027 law\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"definition\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../../common/definitions.md#def-brooks-law\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Explanation: The additional communication overhead will outweigh the benefit of adding extra manpower, especially if done near to a deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 20
    }
  },
  {
    "path": "principles/dependencyInversionPrinciple/q-tick-dip.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Which of these statements is true about the Dependency Inversion Principle.\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Which of these statements is true about the Dependency Inversion Principle."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] a. It can complicate the design/implementation by introducing extra abstractions, but it has some benefits."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] b. It is often used during testing, to replace dependencies with mocks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] c. It reduces dependencies in a design."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] d. It advocates making higher level classes to depend on lower level classes."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "a"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "Explanation: Replacing dependencies with mocks is Dependency Injection, not DIP. DIP does not reduce dependencies, rather, it changes the direction of dependencies. Yes, it can introduce extra abstractions but often the benefit can outweigh the extra complications."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 18
    }
  },
  {
    "path": "principles/dependencyInversionPrinciple/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain dependency inversion principle (DIP)\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eDependency inversion principle\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"definition\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../../common/definitions.md#def-dependency-inversion-principle\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/principles/dependencyInversionPrinciple/images/payrollEmployee.png\" height\u003d\"130\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "In design (a), the higher level class `Payroll` depends on the lower level class `Employee`, a violation of DIP. In design (b), both `Payroll` and `Employee` depends on the Payee interface (note that inheritance is a dependency)."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "Design (b) is more flexible (and less coupled) because now the `Payroll` class need not change when the `Employee` class changes."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 31
    }
  },
  {
    "path": "principles/dryPrinciple/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eDRY principle\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain DRY principle\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"definition\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../../common/definitions.md#def-dry-principle\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "This principle guards against duplication of information. "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The functionality implemented twice is a violation of the DRY principle even if the two implementations are different."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The value a system-wide timeout being defined in multiple places is a violation of DRY."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 27
    }
  },
  {
    "path": "principles/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Principles\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "pageNav: 4"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 5
    }
  },
  {
    "path": "principles/interfaceSegregationPrinciple/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eInterface segregation principle\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain interface segregation principle\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"definition\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../../common/definitions.md#def-interface-segregation-principle\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The `Payroll` class should not depend on the `AdminStaff` class because it does not use the `arrangeMeeting()` method. Instead, it should depend on the `SalariedStaff` interface."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class Payroll {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    //...    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private void adjustSalaries(AdminStaff adminStaff){ //violates ISP"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        //..."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "public class Payroll {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    //...    "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private void adjustSalaries(SalariedStaff staff){ //does not violate ISP"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        //..."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/principles/interfaceSegregationPrinciple/images/payroll.png\" height\u003d\"200\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 45
    }
  },
  {
    "path": "principles/liskovSubstitutionPrinciple/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eLiskov substitution principle\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain Liskov Substitution Principle\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"definition\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../../common/definitions.md#def-liskov-substitution-principle\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "LSP sounds same as \u003ctrigger large trigger\u003d\"click\" for\u003d\"modal:lsp-substitutability\"\u003esubstitutability\u003c/trigger\u003e but it goes beyond substitutability; **LSP implies that a subclass should not be more restrictive than the behavior specified by the superclass.** As we know, Java has language support for substitutability. However, if LSP is not followed, substituting a subclass object for a superclass object can break the functionality of the code."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmodal large header\u003d\"Textbook {{ icon_embedding }}\" id\u003d\"modal:lsp-substitutability\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../../oop/inheritance/substitutability/unit-inElsewhere-asFlat.md\" boilerplate/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/modal\u003e "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Suppose the `Payroll` class depends on the `adjustMySalary(int percent)` method of the `Staff` class. Furthermore, the `Staff` class states that the `adjustMySalary` method will work for all positive percent values. Both `Admin` and `Academic` classes override the `adjustMySalary` method."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/principles/liskovSubstitutionPrinciple/images/payroll.png\" height\u003d\"200\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "Now consider the following:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "* `Admin#adjustMySalary` method works for both negative and positive percent values."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "* `Academic#adjustMySalary` method works for percent values `1..100` only."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "In the above scenario,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "* `Admin` class follows LSP because it fulfills `Payroll`’s expectation of `Staff` objects (i.e. it works for all positive values). Substituting `Admin` objects for Staff objects will not break the `Payroll` class functionality."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "* `Academic` class violates LSP because it will not work for percent values over `100` as expected by the `Payroll` class. Substituting `Academic` objects for `Staff` objects can potentially break the `Payroll` class functionality."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" header\u003d\"%%Another example%%\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The `Rectangle#resize()` can take any integers for `height` and `width`. This contract is violated by the subclass `Square#resize()` because it does not accept a `height` that is different from the `width`. "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/principles/liskovSubstitutionPrinciple/images/rectangleSquare.png\" height\u003d\"120\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "class Rectangle {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    ..."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    /** sets the size to given height and width*/"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    void resize(int height, int width){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        ..."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "class Square extends Rectangle {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    void resize(int height, int width){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        if (height !\u003d width) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            //error"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "       }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "Now consider the following method that is written to work with the `Rectangle` class."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "void makeSameSize(Rectangle original, Rectangle toResize){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    toResize.resize(original.getHeight(), original.getWidth());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "This code will fail if it is called as `maekSameSize(new Rectangle(12,8), new Square(4, 4))` That is, `Square` class is not substitutable for the `Rectangle` class."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 79
    }
  },
  {
    "path": "principles/openClosedPrinciple/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eOpen-closed principle\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain open-closed principle (OCP)\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**The Open-Close Principle aims to make a code entity easy to adapt and reuse without needing to modify the code entity itself.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"definition\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../../common/definitions.md#def-open-closed-principle\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "In object-oriented programming, OCP can be achieved in various ways. This often requires separating the _specification (i.e. interface)_ of a module from its _implementation_."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} In the design given below, the behavior of the `CommandQueue` class can be altered by adding more concrete `Command` subclasses. For example, by including a `Delete` class alongside `List`, `Sort`, and `Reset`, the `CommandQueue` can now perform delete commands without modifying its code at all. That is, its behavior was extended without having to modify its code. Hence, it was open to extensions, but closed to modification."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/principles/openClosedPrinciple/images/commandQueue.png\" height\u003d\"170\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The behavior of a Java generic class can be altered by passing it a different class as a parameter. In the code below, the `ArrayList` class behaves as a container of `Students` in one instance and as a container of `Admin` objects in the other instance, without having to change its code. That is, the behavior of the `ArrayList` class is extended without modifying its code."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "ArrayList students \u003d new ArrayList\u003cStudent\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "ArrayList admins \u003d new ArrayList\u003cAdmin\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 41
    }
  },
  {
    "path": "principles/review/q-radio-oddOneOut.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Pick the odd one out.\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"%%Prerequisites%%\" expandable expanded\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../separationOfConcernsPrinciple/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"Principles: Separation of Concerns Principle\" /\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel src\u003d\"../solidPrinciples/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"Principles: SOLID Principles\" /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "Pick the odd one out."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) a. Separation of Concerns Principle."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) b. Open Closed Principle."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) c. Liskov Substitution Principle."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) d. Interface Segregation Principle."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) e. Dependency Inversion Principle."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "a"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "Explanation: These five principles make up the SOLID principles, but only if SCP is replaced by SRP."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 26
    }
  },
  {
    "path": "principles/separationOfConcernsPrinciple/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eSeparation of concerns principle\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain separation of concerns principle\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"definition\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../../common/definitions.md#def-separation-concerns-principle\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "A _concern_ in this context is a set of information that affects the code of a computer program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Examples for _concerns_:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "*\tA specific feature, such as the code related to `add employee` feature"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "*\tA specific aspect, such as the code related to `persistence` or `security`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "*\tA specific entity, such as the code related to the `Employee` entity"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "**Applying \u003ctooltip content\u003d\"Separation of Concerns\"\u003eSoC\u003c/tooltip\u003e reduces functional overlaps among code sections and also limits the ripple effect when changes are introduced to a specific part of the system.**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} If the code related to _persistence_ is separated from the code related to _security_, a change to how the data are persisted will not need changes to how the security is implemented."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "**This principle can be applied at the class level, as well as on higher levels.** "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The \u003ctrigger trigger\u003d\"click\" for\u003d\"modal:soc-nTier\"\u003en-tier architecture\u003c/trigger\u003e utilizes this principle. Each layer in the architecture has a well-defined functionality that has no functional overlap with each other. "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmodal header\u003d\"TextBook {{ icon_embedding }}\" id\u003d\"modal:soc-nTier\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u003cinclude src\u003d\"../../architecture/architecturalStyles/nTier/what/unit-inElsewhere-asPanelBody.md\" boilerplate/\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/modal\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "**This principle should lead to higher \u003ctrigger trigger\u003d\"click\" for\u003d\"soc-cohesion\"\u003ecohesion\u003c/trigger\u003e and lower \u003ctrigger trigger\u003d\"click\" for\u003d\"soc-coupling\"\u003ecoupling\u003c/trigger\u003e.**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmodal header\u003d\"TextBook {{ icon_embedding }}\" id\u003d\"soc-coupling\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u003cinclude src\u003d\"../../designFundamentals/coupling/what/unit-inElsewhere-asPanelBody.md\" boilerplate/\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/modal\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmodal header\u003d\"TextBook {{ icon_embedding }}\" id\u003d\"soc-cohesion\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  \u003cinclude src\u003d\"../../designFundamentals/cohesion/what/unit-inElsewhere-asPanelBody.md\" boilerplate/\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/modal\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "jamessspanggg": 3,
      "-": 56
    }
  },
  {
    "path": "principles/singleResponsibilityPrinciple/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eSingle responsibility principle\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain single responsibility principle\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"definition\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../../common/definitions.md#def-single-responsibility-principle\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "If a class has only one responsibility, it needs to change only when there is a change to that responsibility."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Consider a `TextUi` class that does parsing of the user commands as well as interacting with the user. That class needs to change when the formatting of the UI changes as well as when the syntax of the user command changes. Hence, such a class does not follow the SRP."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e:fas-quote-left: Gather together the things that change for the same reasons. Separate those things that change for different reasons. \u003csub\u003e―_Agile Software Development, Principles, Patterns, and Practices_ by Robert C. Martin\u003c/sub\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"resources.md\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 28
    }
  },
  {
    "path": "principles/solidPrinciples/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eSOLID principles\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain SOLID Principles\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "The five OOP principles given below are known as _SOLID Principles_ (an acronym made up of the first letter of each principle):"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" header\u003d\"**S**ingle Responsibility Principle (SRP)\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../../principles/singleResponsibilityPrinciple/unit-inElsewhere-asFlat.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" header\u003d\"**O**pen-Closed Principle (OCP)\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../../principles/openClosedPrinciple/unit-inElsewhere-asFlat.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" header\u003d\"**L**iskov Substitution Principle (LSP)\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../../principles/liskovSubstitutionPrinciple/unit-inElsewhere-asFlat.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" header\u003d\"**I**nterface Segregation Principle (ISP)\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../../principles/interfaceSegregationPrinciple/unit-inElsewhere-asFlat.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" header\u003d\"**D**ependency Inversion Principle (DIP)\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../../principles/dependencyInversionPrinciple/unit-inElsewhere-asFlat.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 29
    }
  },
  {
    "path": "principles/yagniPrinciple/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eYAGNI principle\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain YAGNI principle\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"definition\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../../common/definitions.md#def-yagni-principle\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "The principle says that some capability we presume our software needs in the future should not be built now because the chances are \"you aren\u0027t gonna need it\". The rationale is that we do not have perfect information about the future and therefore some of the extra work we do to fulfill a potential future need might go to waste when some of our predictions fail to materialize."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"resources.md\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 22
    }
  },
  {
    "path": "processModels/exampleProcessModels/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eExample process models\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"xp/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"scrum/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"unifiedProcess/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 8
    }
  },
  {
    "path": "processModels/exampleProcessModels/unifiedProcess/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eUnified process\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain the Unified Process\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "The _unified process_ is developed by the Three Amigos - Ivar Jacobson, Grady Booch and James Rumbaugh (the creators of UML)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "The unified process consists of four phases: _inception, elaboration, construction and transition_. The main purpose of each phase can be summarized as follows:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctable class\u003d\"table\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctr\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cth\u003ePhase\u003c/th\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cth\u003eActivities\u003c/th\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cth\u003eTypical Artifacts\u003c/th\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/tr\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctr\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd\u003eInception\u003c/td\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cul\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eUnderstand the problem and requirements\u003c/li\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eCommunicate with customer\u003c/li\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003ePlan the development effort\u003c/li\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ul\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cul\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eBasic use case model\u003c/li\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eRough project plan\u003c/li\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eProject vision and scope\u003c/li\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ul\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/tr\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctr\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd\u003eElaboration\u003c/td\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cul\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eRefines and expands requirements\u003c/li\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eDetermine a high-level design e.g. system architecture\u003c/li\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ul\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cul\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eSystem architecture\u003c/li\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eVarious design models\u003c/li\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003ePrototype\u003c/li\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ul\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/tr\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctr\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd\u003eConstruction\u003c/td\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cul\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eMajor implementation effort to support the use cases identified\u003c/li\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eDesign models are refined and fleshed out\u003c/li\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eTesting of all levels are carried out\u003c/li\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eMultiple releases of the system\u003c/li\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ul\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cul\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eTest cases of all levels\u003c/li\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eSystem release\u003c/li\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ul\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/tr\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctr\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd\u003eTransition\u003c/td\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cul\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eReady the system for actual production use\u003c/li\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eFamiliarize end users with the system\u003c/li\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ul\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cul\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eFinal system release\u003c/li\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eInstruction manual\u003c/li\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ul\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/tr\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/processModels/exampleProcessModels/unifiedProcess/images/diagram.png\" height\u003d\"280\" /\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "Given above is a visualization of a project done using the Unified process (source: Wikipedia). As the diagram shows, a phase can consist of several iterations. Each vertical column (labeled “I1” “E1”, “E2”, “C1”, etc.) represents a single iteration. Each of the iterations consists of a set of ‘workflows’ such as ‘Business modeling’, ‘Requirements’, ‘Analysis \u0026 Design’ etc. The shaded region indicates the amount of resource and effort spent on a particular workflow in a particular iteration."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "**Unified process is a flexible and customizable process model framework rather than a single fixed process.** For example, the number of iterations in each phase, definition of workflows, and the intensity of a given workflow in a given iteration can be adjusted according to the nature of the project. Take the Construction Phase, to develop a simple system, one or two iterations would be sufficient. For a more complicated system, multiple iterations will be more helpful. Therefore, the diagram above simply records a particular application of the UP rather than prescribe how the UP is to be applied. However, this record can be refined and reused for similar future projects."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 96
    }
  },
  {
    "path": "processModels/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"SDLC Process Models\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 5
    }
  },
  {
    "path": "processModels/introduction/agileModels/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAgile models\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain agile process models\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "In 2001, a group of prominent software engineering practitioners met and brainstormed for an alternative to documentation-driven, heavyweight software development processes that were used in most large projects at the time. This resulted in something called the _agile manifesto_ (a vision statement of what they were looking to do). "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003eWe are uncovering better ways of developing software by doing it and helping others do it."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003eThrough this work we have come to value:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e* **Individuals and interactions** over processes and tools"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e* **Working software** over comprehensive documentation"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e* **Customer collaboration** over contract negotiation"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e* **Responding to change** over following a plan"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003eThat is, while there is value in the items on the right, we value the items on the left more.\u003cbr\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e\u003csub\u003eExtract from the [Agile Manifesto](http://agilemanifesto.org/)\u003c/sub\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "Subsequently, some of the signatories of the manifesto went on to create process models that try to follow it. These processes are collectively called agile processes. Some of the key features of agile approaches are:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "* Requirements are prioritized based on the needs of the user, are clarified regularly (at times almost on a daily basis) with the entire project team, and are factored into the development schedule as appropriate."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "* Instead of doing a very elaborate and detailed design and a project plan for the whole project, the team works based on a rough project plan and a high level design that evolves as the project goes on."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "* Strong emphasis on complete transparency and responsibility sharing among the team members. The team is responsible together for the delivery of the product. Team members are accountable, and regularly and openly share progress with each other and with the user.  "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "**There are a number of agile processes in the development world today. _eXtreme Programming (XP)_ and _Scrum_ are two of the well-known ones.** "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 34
    }
  },
  {
    "path": "processModels/introduction/iterativeModels/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eIterative models\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain iterative process models\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**The iterative model (sometimes called _iterative_ and _incremental_) advocates having several _iterations_ of SDLC.** Each of the iterations could potentially go through all the development stages, from requirement gathering to testing \u0026 deployment. Roughly, it appears to be similar to several cycles of the sequential model."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/processModels/introduction/iterativeModels/images/diagram.png\" height\u003d\"300\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "**In this model, each of the iterations produces a new version of the product.** Feedback on the version can then be fed to the next iteration. Taking the Minesweeper game as an example, the iterative model will deliver a fully playable version from the early iterations. However, the first iteration will have primitive functionality, for example, a clumsy text based UI, fixed board size, limited randomization etc. These functionalities will then be improved in later releases."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "**The iterative model can take a _breadth-first_ or a _depth-first_ approach to iteration planning.**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "* **breadth-first**: an iteration evolves all major components in parallel."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "* **depth-first**: an iteration focuses on fleshing out only some components."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "**Most project use a mixture of breadth-first and depth-first iterations.** Hence, the common phrase ‘an iterative and incremental process’."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 24
    }
  },
  {
    "path": "processModels/introduction/sequentialModels/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eSequential models\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain sequential process models\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**The _sequential model_, also called the _waterfall_ model, models software development as a linear process**, in which the project is seen as progressing steadily in one direction through the development stages. The name _waterfall_ stems from how the model is drawn to look like a waterfall (see below)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/processModels/introduction/sequentialModels/images/diagram.png\" height\u003d\"180\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "**When one stage of the process is completed, it should produce some artifacts to be used in the next stage.** For example, upon completion of the requirement stage a comprehensive list of requirements is produced that will see no further modifications. A strict application of the sequential model would require each stage to be completed before starting the next."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "**This could be a useful model when the problem statement that is well-understood and stable.** In such cases, using the sequential model should result in a timely and systematic development effort, provided that all goes well. As each stage has a well-defined outcome, the progress of the project can be tracked with a relative ease."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "**The major problem with this model is that requirements of a real-world project are rarely well-understood at the beginning and keep changing over time.** One reason for this is that users are generally not aware of how a software application can be used without prior experience in using a similar application."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 22
    }
  },
  {
    "path": "processModels/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eSDLC process models\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"introduction/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exampleProcessModels/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"more/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"summary/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 9
    }
  },
  {
    "path": "projectDuke/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Project Duke\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 5
    }
  },
  {
    "path": "projectPlanning/ganttCharts/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eGantt charts\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain GANTT charts\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**A _Gantt chart_ is a 2-D bar-chart, drawn as _time vs tasks_** (represented by horizontal bars)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} A sample Gantt chart:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/projectPlanning/ganttCharts/images/gantt.png\" height\u003d\"360\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "In a Gantt chart, a solid bar represents the main task, which is generally composed of a number of subtasks, shown as grey bars. The diamond shape indicates an important deadline/deliverable/milestone."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 24
    }
  },
  {
    "path": "projectPlanning/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Project Planning\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "pageNav: 4"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 5
    }
  },
  {
    "path": "projectPlanning/issueTrackers/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eIssue trackers\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain issue trackers\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Keeping track of project tasks %%(who is doing what, which tasks are ongoing, which tasks are done etc.)%% is an essential part of project management. In small projects it may be possible to track tasks using simple tools as online spreadsheets or general-purpose/light-weight tasks tracking tools such as Trello. Bigger projects need more sophisticated task tracking tools. "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "**Issue trackers (sometimes called bug trackers) are commonly used to track task assignment and progress.** Most online project management software such as GitHub, SourceForge, and BitBucket come with an integrated issue tracker. "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv v-closeable alt\u003d\"Jira screenshot\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} A screenshot from the Jira Issue tracker software %%(Jira is part of the BitBucket project management tool suite)%%:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "          "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/projectPlanning/issueTrackers/images/xjira.png\" height\u003d\"350\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                 "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 29
    }
  },
  {
    "path": "projectPlanning/pertCharts/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003ePERT charts\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain PERT charts\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**PERT (Program Evaluation Review Technique) chart uses a graphical technique to show the order/sequence of tasks.** It is based on a simple idea of drawing a directed graph in which:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* Node or vertex captures the effort estimation of a task, and"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* Arrow depicts the precedence between tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} an example PERT chart for a simple software project"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/projectPlanning/pertCharts/images/pert.jpg\" height\u003d\"320\" /\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "`md` \u003d man days"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "A PERT chart can help determine the following important information:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "* The order of tasks. %%In the example above, `Final Testing` cannot begin until all coding of individual subsystems have been completed.%%"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "* Which tasks can be done concurrently. %%In the example above, the various subsystem designs can start independently once the `High level design` is completed.%%"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "* The shortest possible completion time. %%In the example above, there is a path (indicated by the shaded boxes) from start to end that determines the shortest possible completion time.%%"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "* The Critical Path. %%In the example above, the shortest possible path is also the critical path%%."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"definition\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "**Critical path** is the path in which any delay can directly affect the project duration. It is important to ensure tasks on the critical path are completed on time."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 38
    }
  },
  {
    "path": "projectPlanning/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eProject planning\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"workBreakdownStructure/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"milestones/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"buffers/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"issueTrackers/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"ganttCharts/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"pertCharts/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 11
    }
  },
  {
    "path": "projectPlanning/workBreakdownStructure/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eWork breakdown structure\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain work breakdown structures\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**A _Work Breakdown Structure (WBS)_ depicts information about tasks and their details in terms of subtasks.** When managing projects it is useful to divide the total work into smaller, well-defined units. Relatively complex tasks can be further split into subtasks.  In complex projects a WBS can also include prerequisite tasks and effort estimates for each task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The high level tasks for a single iteration of a small project could look like the following:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"text-monospace\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "| Task ID | Task                         | Estimated Effort       | Prerequisite Task |"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "| ------- | ---------------------------- | ---------------------- | ----------------- |"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "| A       | Analysis                     | 1 man day              | -                 |"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "| B       | Design                       | 2 man day              | A                 |"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "| C       | Implementation               | 4.5 man day            | B                 |"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "| D       | Testing                      | 1 man day              | C                 |"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "| E       | Planning for next version    | 1 man day              | D                 |"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "**The effort is traditionally measured in _man hour/day/month_** i.e. work that can be done by one person in one hour/day/month. The _Task ID_ is a label for easy reference to a task. Simple labeling is suitable for a small project, while a more informative labeling system can be adopted for bigger projects."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} An example WBS for a project for developing a game."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": " \u003cdiv class\u003d\"text-monospace\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": " \u003ctable class\u003d\"table\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003ctr\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003cth\u003eTask ID\u003c/th\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003cth\u003eTask\u003c/th\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003cth\u003eEstimated Effort\u003c/th\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003cth\u003ePrerequisite Task\u003c/th\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/tr\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003ctr\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003ctd\u003eA\u003c/td\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003ctd\u003eHigh level design\u003c/td\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003ctd\u003e1 man day\u003c/td\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003ctd\u003e-\u003c/td\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/tr\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003ctr\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003ctd\u003eB\u003c/td\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003ctd\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "       Detail design"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "       \u003col\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003cli\u003eUser Interface\u003c/li\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003cli\u003eGame Logic\u003c/li\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003cli\u003ePersistency Support\u003c/li\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "       \u003c/ol\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003c/td\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003ctd\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "       2 man day"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "       \u003cul\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003cli\u003e0.5 man day\u003c/li\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003cli\u003e1 man day\u003c/li\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003cli\u003e0.5 man day\u003c/li\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "       \u003c/ul\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003c/td\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003ctd\u003eA\u003c/td\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/tr\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003ctr\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003ctd\u003eC\u003c/td\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003ctd\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "       Implementation"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "       \u003col\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003cli\u003eUser Interface\u003c/li\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003cli\u003eGame Logic\u003c/li\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003cli\u003ePersistency Support\u003c/li\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "       \u003c/ol\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003c/td\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003ctd\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "       4.5 man day"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "       \u003cul\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003cli\u003e1.5 man day\u003c/li\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003cli\u003e2 man day\u003c/li\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003cli\u003e1 man day\u003c/li\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "       \u003c/ul\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003c/td\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003ctd\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "       \u003cul\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003cli\u003eB.1\u003c/li\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003cli\u003eB.2\u003c/li\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003cli\u003eB.3\u003c/li\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "       \u003c/ul\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003c/td\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/tr\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003ctr\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003ctd\u003eD\u003c/td\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003ctd\u003eSystem Testing\u003c/td\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003ctd\u003e1 man day\u003c/td\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003ctd\u003eC\u003c/td\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/tr\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003ctr\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003ctd\u003eE\u003c/td\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003ctd\u003ePlanning for next version\u003c/td\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003ctd\u003e1 man day\u003c/td\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     \u003ctd\u003eD\u003c/td\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/tr\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": " \u003c/table\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": " \u003c/div\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "**All tasks should be well-defined.** In particular, it should be clear as to when the task will be considered _done_. "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Some examples of ill-defined tasks and their better-defined counterparts:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"text-monospace\"\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "| {{ bad }} | \u003cspan class\u003d\"text-success\"\u003e{{ icon_like }} Better \u003c/span\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "| ------- | ----------------------------"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "| more coding | implement component X"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "| do research on UI testing | find a suitable tool for testing the UI"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 129
    }
  },
  {
    "path": "qualityAssurance/codeReviews/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eCode reviews\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "qualityAssurance/formalVerification/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eFormal verification\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "qualityAssurance/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Quality Assurance\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 5
    }
  },
  {
    "path": "qualityAssurance/staticAnalysis/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eStatic analysis\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "qualityAssurance/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eQuality assurance\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"introduction/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"codeReviews/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"staticAnalysis/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"formalVerification/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 9
    }
  },
  {
    "path": "refactoring/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Refactoring\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 5
    }
  },
  {
    "path": "refactoring/what/q-essay-refactoringAndRegressionTesting.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Do you agree with the following statement? Refactoring and regression testing\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion has-input\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Do you agree with the following statement? Justify your answer."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "Statement: `Whenever you refactor code to fix bugs, you need not do regression testing if the bug fix was minor.`"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"hint\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "There are two flaws in the given statement."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "DISAGREE."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "1. Even a minor change can have major repercussions on the system. You MUST do regression testing after each change, no matter how minor it is."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "2. Fixing bugs is technically not refactoring."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 2,
      "-": 23
    }
  },
  {
    "path": "refactoring/when/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can decide when to apply a given refactoring\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eWhen\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "You know that it is important to refactor frequently so as to avoid the accumulation of ‘messy’ code which might get out of control. But how much refactoring is too much refactoring? **It is too much refactoring when the benefits no longer justify the cost.** The costs and the benefits depend on the context. That is why some refactorings are ‘opposites’ of each other (e.g. [_extract method_](https://refactoring.com/catalog/extractMethod.html) vs [_inline method_](https://refactoring.com/catalog/inlineMethod.html))."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 16
    }
  },
  {
    "path": "requirements/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Requirements\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "pageNav: 4"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 5
    }
  },
  {
    "path": "requirements/nonFunctionalRequirements/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eNon-functional requirements\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain non-functional requirements\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Requirements can be divided into two in the following way:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. **_Functional requirements_ specify what the system should do.**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "2. **_Non-functional requirements_ specify the constraints under which system is developed and operated.** "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Some examples of non-functional requirement categories:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "* Data requirements e.g. size, \u003ctooltip content\u003d\"how often do data change\"\u003evolatility\u003c/tooltip\u003e, \u003ctooltip content\u003d\"saving data permanenetly\"\u003epersistency\u003c/tooltip\u003e etc.,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "* Environment requirements e.g. technical environment in which system would operate or need to be compatible with."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "* Accessibility, Capacity, Compliance with regulations, Documentation, Disaster recovery, Efficiency, Extensibility, Fault tolerance, Interoperability, Maintainability, Privacy, Portability, Quality, Reliability, Response time, Robustness, Scalability, Security, Stability, Testability, and more ..."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" header\u003d\"{{ icon_example }} Some concrete examples of NFRs\" expanded\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "* Business/domain rules:   e.g. the size of the minefield cannot be smaller than five."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "* Constraints: e.g.  the system should be backward compatible with data produced by earlier versions of the system; system testers are available only during the last month of the project; the total project cost should not exceed $1.5 million."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "* Technical requirements: e.g. the system should work on both 32-bit and 64-bit environments."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "* Performance requirements: e.g. the system should respond within two seconds."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "* Quality requirements: e.g. the system should be usable by a novice who has never carried out an online purchase."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "* Process requirements: e.g. the project is expected to adhere to a schedule that delivers a feature set every one month."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "* Notes about project scope: e.g. the product is not required to handle the printing of reports."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "* Any other noteworthy points: e.g. the game should not use images deemed offensive to those injured in real mine clearing activities."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "You may have to spend an extra effort in digging NFRs out as early as possible because,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "1. **NFRs are easier to miss** %%e.g., stakeholders tend to think of functional requirements first%%"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "1. sometimes **NFRs are critical to the success of the software.** %%E.g. A web application that is too slow or that has low security is unlikely to succeed even if it has all the right functionality.%%"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 2,
      "-": 42
    }
  },
  {
    "path": "requirements/prioritizing/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003ePrioritizing requirements\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain prioritizing requirements\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Requirements can be prioritized based the importance and urgency**, while keeping in mind the constraints of schedule, budget, staff resources, quality goals, and other constraints."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "A common approach is to group requirements into priority categories. Note that all such scales are subjective, and stakeholders define the meaning of each level in the scale for the project at hand."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} An example scheme for categorizing requirements:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "* `Essential`:  The product must have this requirement fulfilled or else it does not get user acceptance"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "* `Typical`:  Most similar systems have this feature although the product can survive without it."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "* `Novel`: New features that could differentiate this product from the rest."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Other schemes:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "* `High`, `Medium`, `Low`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "* `Must-have`, `Nice-to-have`, `Unlikely-to-have`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "* `Level 0`, `Level 1`, `Level 2`, ..."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "**Some requirements can be discarded if they are considered ‘out of _\u003ctooltip content\u003d\"the extent to which the software features should go\"\u003escope\u003c/tooltip\u003e_’.**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The requirement given below is for a Calendar application. Stakeholder of the software (e.g. product designers) might decide the following requirement is not in the scope of the software."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003eThe software records the actual time taken by each task and show the difference between the _actual_ and _scheduled_ time for the task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 41
    }
  },
  {
    "path": "requirements/quality/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eQuality of requirements\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain quality of requirements\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Here are some characteristics of well-defined requirements \u003ctrigger for\u003d\"pop:zielczynski\"\u003e\u003csup\u003e[:book: zielczynski]\u003c/sup\u003e\u003c/trigger\u003e:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* Unambiguous"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* Testable (verifiable)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "* Clear (concise, terse, simple, precise)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "* Correct"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "* Understandable"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "* Feasible (realistic, possible)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "* Independent"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003ctooltip content\u003d\"Not divisible any further\"\u003eAtomic\u003c/tooltip\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "* Necessary"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "* Implementation-free (i.e. abstract)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "Besides these criteria for individual requirements, the set of requirements as a whole should be"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "* Consistent"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "* Non-redundant"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "* Complete"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpopover id\u003d\"pop:zielczynski\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv slot\u003d\"content\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cinclude src\u003d\"../../common/references.md#zielczynski\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/popover\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 36
    }
  },
  {
    "path": "reuse/apis/designingAPIs/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can design reasonable quality APIs\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eDesigning APIs\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "An API should be well-designed (i.e. should cater for the needs of its users) and well-documented."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "When you write software consisting of multiple components, you need to define the API of each component."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "One approach is to let the API emerge and evolve over time as you write code."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "Another approach is to define the API up-front. Doing so allows us to develop the components in parallel."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "You can use UML _sequence diagrams_ to analyze the required interactions between components in order to discover the required API. Given below is an example."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/reuse/apis/designingAPIs/images/textLogic.png\" height\u003d\"500\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "As you analyze the interactions between components using sequence diagrams, you discover the API of those components. For example, the diagram above tells us that the MSLogic component API should have the methods:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "* `new()`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "* `getWidth:int`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "* `getHeight():int`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "* `getRemainingMineCount():int`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "More details can be included to increase the precision of the method definitions before coding. Such precision is important to avoid misunderstandings between the developer of the class and developers of other classes that interact with this class."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "* **Operation**: _newGame(): void_"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "* **Description**: Generates a new _WxH_ minefield with _M_ mines. Any existing minefield will be overwritten."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "* **Preconditions**: None"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* **Postconditions**:\tA new minefield is created. Game state is READY."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "Preconditions are the conditions that must be true before calling this operation. Postconditions describe the system after the operation is complete. Note that post conditions do not say what happens during the operation.  Here is another example:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* **Operation**: _clearCellAt(int x, int y): void_"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* **Description**: Records the cell at x,y as cleared."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "* **Parameters**: x, y coordinates of the cell"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "* **Preconditions**: game state is READY or IN_PLAY.  x and y are in 0..(H-1) and 0..(W-1), respectively."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "* **Postconditions**: Cell at x,y changes state to ZERO, ONE, TWO, THREE, …, EIGHT, or INCORRECTLY_CLEARED. Game state changes to IN_PLAY, WON or LOST as appropriate."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 4,
      "-": 49
    }
  },
  {
    "path": "reuse/apis/what/q-tick-trueFalse.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} True or False?\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Defining component APIs early is useful for developing components in parallel."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) True"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) False"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "True"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "Explanation: Yes, once you know the precise behavior expected of each component, you can start developing them in parallel."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 16
    }
  },
  {
    "path": "reuse/apis/what/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eWhat\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain APIs\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**An _Application Programming Interface (API)_ specifies the interface through which other programs can interact with a software component.** It is a contract between the component and its clients."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} A class has an API (e.g., [API of the Java `String` class]({{ java_api }}/java/lang/String.html), [API of the Python `str` class](https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str)) which is a collection of public methods that you can invoke to make use of the class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "{{ icon_example }} The [GitHub API](https://developer.github.com/v3/) is a collection of Web request formats GitHub server accepts and the corresponding responses. You can write a program that interacts with GitHub through that API."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "When developing large systems, if you define the API of each components early, the development team can develop the components in parallel %%because the future behavior of the other components are now more predictable%%. "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 26
    }
  },
  {
    "path": "reuse/cloudComputing/services/q-tick-correctStatement.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Google Calendar in which category?\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Google Calendar belongs to which category of cloud computing services?"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "- ( ) a. IaaS"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "- ( ) b. PaaS"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "- ( ) c. SaaS"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "(c)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "Explanation: It is a _software_ as a service. Instead of installing a calendar software on your desktop, you can use the Google Calendar software that lives ‘on the cloud’."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "jamessspanggg": 3,
      "-": 14
    }
  },
  {
    "path": "reuse/cloudComputing/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eCloud computing\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"services/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 7
    }
  },
  {
    "path": "reuse/frameworks/frameworksVsLibraries/q-tick-correctStatement.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Which are frameworks?\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Which one of these are frameworks ?"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "- [ ] a. JUnit"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "- [ ] b. Eclipse"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "- [ ] c. Drupal"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "- [ ] d. Ruby on Rails"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "(a)(b)(c)(d)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "Explanation: These are frameworks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 4,
      "-": 15
    }
  },
  {
    "path": "reuse/frameworks/frameworksVsLibraries/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eFrameworks versus libraries\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can differentiate between frameworks and libraries\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Although both frameworks and libraries are reuse mechanisms, there are notable differences:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* **Libraries are meant to be used ‘as is’ while frameworks are meant to be customized/extended.**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "%%e.g., writing plugins for Eclipse so that it can be used as an IDE for different languages (C++, PHP, etc.), adding modules and themes to Drupal, and adding test cases to JUnit%%."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "* **Your code calls the library code while the framework code calls your code.**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "**Frameworks use a technique called _inversion of control_, aka the “Hollywood principle”** (i.e. don’t call us, we’ll call you!). That is, you write code that will be called by the framework, %%e.g. writing test methods that will be called by the JUnit framework.%% In the case of libraries, your code calls libraries."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 22
    }
  },
  {
    "path": "reuse/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Reuse\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 5
    }
  },
  {
    "path": "reuse/introduction/when/q-essay-intro.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Using a cool UI framework\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion has-input\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "One of your teammates is proposing to use a recently-released “cool” UI framework for your class project. List the pros and cons of this idea."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "Pros"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "* The potential to create a much better product by reusing the framework."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* Learning a new framework is good for the future job prospects."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Cons"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "* Learning curve may be steep."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "* May not be stable (it was recently released)."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "* May not allow you to do exactly what you want. While frameworks allow customization, such customization can be limited."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "* Performance penalties."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "* Might interfere with learning objectives of the module."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "Note that having more cons does not mean you should not use this framework. Further investigation is required before you can make a final decision."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 2,
      "-": 23
    }
  },
  {
    "path": "revisionControl/centralizedFlow/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eCentralized flow\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003cpanel src\u003d\"../featureBranchFlow/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }} Revision Control → Feature Branch Workflow%%\" popup-url\u003d\"{{ baseUrl }}/revisionControl/featureBranchFlow\" /\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain centralized flow\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**The _centralized workflow_ is similar to the feature branch workflow except all changes are done in the `master` branch.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"resources.md\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 14
    }
  },
  {
    "path": "revisionControl/featureBranchFlow/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eFeature branch flow\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003cpanel src\u003d\"../forkingWorkflow/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }} Revision Control → Forking Workflow%%\" popup-url\u003d\"{{ baseUrl }}/revisionControl/forkingWorkflow\" /\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain feature branch flow\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**_Feature branch_ workflow is similar to forking workflow except there are no forks.** Everyone is pushing/pulling from the same remote repo. The phrase _feature branch_ is used because each new feature (or bug fix, or any other modification) is done in a separate branch and merged to `master` branch when ready."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/revisionControl/featureBranchFlow/images/diagram.png\" height\u003d\"330\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"resources.md\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 17
    }
  },
  {
    "path": "revisionControl/forkingWorkflow/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eForking flow\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain forking workflow\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/revisionControl/forkingWorkflow/images/diagram.png\" height\u003d\"330\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "**In the _forking workflow_, the \u0027official\u0027 version of the software is kept in a remote repo designated as the \u0027main repo\u0027. All team members fork the main repo create pull requests from their fork to the main repo.**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "To illustrate how the workflow goes, let’s assume Jean wants to fix a bug in the code. Here are the steps:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Jean creates a separate branch in her local repo and fixes the bug in that branch."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "2. Jean pushes the branch to her fork."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "3. Jean creates a pull request from that branch in her fork to the main repo."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "4. Other members review Jean’s pull request."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "5. If reviewers suggested any changes, Jean updates the PR accordingly."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "6. When reviewers are satisfied with the PR, one of the members (usually the team lead or a designated \u0027maintainer\u0027 of the main repo) merges the PR, which brings Jean’s code to the main repo."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "7. Other members, realizing there is new code in the upstream repo, sync their forks with the new upstream repo (i.e. the main repo). This is done by pulling the new code to their own local repo and pushing the updated code to their own fork."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"resources.md\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 27
    }
  },
  {
    "path": "revisionControl/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Revision Control\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "pageNav: 4"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 5
    }
  },
  {
    "path": "revisionControl/remoteRepositories/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "title: \"Revision control: Remote repositories\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"unit-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 4
    }
  },
  {
    "path": "revisionControl/remoteRepositories/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain remote repositories\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eRemote repositories\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Remote repositories are copies of a repo that are hosted on remote computers.** They are especially useful for sharing the revision history of a codebase among team members of a multi-person project. %%They can also serve as a remote backup of your code base.%%"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "**You can \u003d\u003d_clone_\u003d\u003d a remote repo onto your computer** which will create a copy of a remote repo on your computer, including the version history as the remote repo."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "**You can \u003d\u003d_push_\u003d\u003d new commits in your clone to the remote repo** which will copy the new commits onto the remote repo. Note that pushing to a remote repo requires you to have write-access to it."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "**You can \u003d\u003d_pull_\u003d\u003d from the remote repos to receive new commits in the remote repo**. Pulling is used to _sync_ your local repo with latest changes to the remote repo."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "While it is possible to set up your own remote repo on a server, an easier option is to use a remote repo hosting service such as GitHub or BitBucket."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "**A \u003d\u003d_fork_\u003d\u003d is a remote copy of a remote repo**. If there is a remote repo that you want to push to but you do not have write access to it, you can fork the remote repo, which gives you your own remote repo that you can push to."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "**A \u003d\u003d_pull request_\u003d\u003d is mechanism for contributing code to a remote repo.** It is a formal request sent to the maintainers of the repo asking them to pull your new code to their repo."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv v-closeable alt\u003d\"slideshow: remote repo scenario\" class\u003d\"non-printable\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "Here is a scenario that includes all the concepts introduced above (click on the slide to advance the animation): "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "@[powerpoint](https://onedrive.live.com/embed?cid\u003dA5AF047C4CAD67AB\u0026resid\u003dA5AF047C4CAD67AB%212290\u0026authkey\u003d\u0026em\u003d2)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 34
    }
  },
  {
    "path": "revisionControl/savingHistory/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain saving history\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eSaving history\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "##### Tracking and ignoring"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "**In a repo, we can specify which files to track and which files to \u003d\u003dignore\u003d\u003d.** Some files such as temporary log files created during the build/test process should not be revision-controlled."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "##### Staging and committing "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctabs\u003e "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctab header\u003d\"{{ icon_text }}\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "**\u003d\u003d_Committing_\u003d\u003d saves a snapshot of the current state of the tracked files in the revision control history. Such a snapshot is also called a _commit_ (i.e. the noun).**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "**When ready to commit, we first \u003d\u003d_stage_\u003d\u003d the specific changes we want to commit.** This intermediate step allows us to commit only some changes while saving other changes for a later commit."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/tab\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctab header\u003d\"{{ icon_video }}\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "@[youtube](7exFDGHgQcw)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/tab\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/tabs\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "##### Identifying points in history"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "**Each commit in a repo is a recorded point in the history of the project that is uniquely identified by an auto-generated \u003d\u003dhash\u003d\u003d** e.g. `a16043703f28e5b3dab95915f5c5e5bf4fdc5fc1`. "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "**We can \u003d\u003dtag\u003d\u003d a specific commit with a more easily identifiable name** e.g. `v1.0.2`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 4,
      "-": 35
    }
  },
  {
    "path": "revisionControl/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eRevision control\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"repositories/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"savingHistory/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"usingHistory/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"remoteRepositories/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"branching/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"drcsVsCrcs/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"forkingWorkflow/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"featureBranchFlow/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"centralizedFlow/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 15
    }
  },
  {
    "path": "revisionControl/usingHistory/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain using history\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eUsing history\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**\u003ctrigger for\u003d\"pop:rcs\"\u003eRCS\u003c/trigger\u003e tools store the history of the working directory as a series of commits.** This means we should commit after each change that we want the RCS to \u0027remember\u0027 for us."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "**To see what changed between two points of the history, you can ask the RCS tool to  \u003d\u003d_diff_\u003d\u003d the two commits in concern.**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "**To restore the state of the working directory at a point in the past, you can \u003d\u003d_checkout_\u003d\u003d the commit in concern.** i.e., we can traverse the history of the working directory simply by checking out the commits we are interested in."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../../common/popOvers.md#rcs\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 19
    }
  },
  {
    "path": "softwareEngineering/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Software Engineering\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 5
    }
  },
  {
    "path": "softwareEngineering/introduction/prosAndCons/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain pros and cons of software engineering\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003ePros and cons\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"definition\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../../../common/definitions.md#def-se\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "The following description of the _Joys of the Programming Craft_ was taken from Chapter 1 of the famous book \u003ctrigger for\u003d\"modal:mmm\" trigger\u003d\"click\"\u003e_The Mythical Man-Month_, by Frederick P. Brooks\u003c/trigger\u003e."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e **Why is programming fun? What delights may its practitioner expect as his reward?**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e First is the sheer joy of making things. As the child delights in his mud pie, so the adult enjoys building things,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e especially things of his own design. I think this delight must be an image of God\u0027s delight in making things,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e a delight shown in the distinctness and newness of each leaf and each snowflake."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003e Second is the pleasure of making things that are useful to other people. Deep within, you want others to use your work and"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e to find it helpful. In this respect the programming system is not essentially different from the child\u0027s"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e first clay pencil holder \"for Daddy\u0027s office.\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e Third is the fascination of fashioning complex puzzle-like objects of interlocking moving parts and watching them"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e work in subtle cycles, playing out the consequences of principles built in from the beginning. The programmed computer"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e has all the fascination of the pinball machine or the jukebox mechanism, carried to the ultimate."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e Fourth is the joy of always learning, which springs from the nonrepeating nature of the task. In one way or another"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e the problem is ever new, and its solver learns something: sometimes practical, sometimes theoretical, and sometimes both."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e Finally, there is the delight of working in such a tractable medium. The programmer, like the poet,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e works only slightly removed from pure thought-stuff. He builds his castles in the air, from air, creating by the exertion of"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e the imagination. Few media of creation are so flexible, so easy to polish and rework, so readily capable of realizing grand"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e conceptual structures...."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e Yet the program construct, unlike the poet\u0027s words, is real in the sense that it moves and works, producing"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e visible outputs separate from the construct itself. It prints results, draws pictures, produces sounds, moves arms."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e The magic of myth and legend has come true in our time. One types the correct incantation on a keyboard, and a display screen comes to life,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e showing things that never were nor could be."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003e Programming then is fun because it gratifies creative longings built deep within us and delights sensibilities you have in common with all men.  "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e **Not all is delight, however, and knowing the inherent woes makes it easier to bear them when they appear.**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e First, one must perform perfectly. The computer resembles the magic of legend in this respect, too. If one character,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e one pause, of the incantation is not strictly in proper form, the magic doesn\u0027t work. Human beings are not accustomed to being perfect,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e and few areas of human activity demand it. Adjusting to the requirement for perfection is, I think, the most difficult part of learning to program."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e Next, other people set one\u0027s objectives, provide one\u0027s resources, and furnish one\u0027s information. One rarely controls the"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e circumstances of his work, or even its goal. In management terms, one\u0027s authority is not sufficient for his responsibility."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e It seems that in all fields, however, the jobs where things get done never have formal authority commensurate with responsibility."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e In practice, actual (as opposed to formal) authority is acquired from the very momentum of accomplishment."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e The dependence upon others has a particular case that is especially painful for the system programmer. He depends upon other"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e people\u0027s programs. These are often maldesigned, poorly implemented, incompletely delivered (no source code or test cases),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e and poorly documented. So he must spend hours studying and fixing things that in an ideal world would be complete, available, and usable."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e The next woe is that designing grand concepts is fun; finding nitty little bugs is just work. With any creative activity"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e come dreary hours of tedious, painstaking labor, and programming is no exception."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e Next, one finds that debugging has a linear convergence, or worse, where one somehow expects a quadratic sort of approach to the end."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e So testing drags on and on, the last difficult bugs taking more time to find than the first."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e The last woe, and sometimes the last straw, is that the product over which one has labored so long appears to be"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e obsolete upon (or before) completion. Already colleagues and competitors are in hot pursuit of new and better ideas."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e Already the displacement of one\u0027s thought-child is not only conceived, but scheduled."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e This always seems worse than it really is. The new and better product is generally not available when one completes his own;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e it is only talked about. It, too, will require months of development. The real tiger is never a match for the paper one,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e unless actual use is wanted. Then the virtues of reality have a satisfaction all their own."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e Of course the technological base on which one builds is always advancing. As soon as one freezes a design,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e it becomes obsolete in terms of its concepts. But implementation of real products demands phasing and quantizing."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e The obsolescence of an implementation must be measured against other existing implementations, not against unrealized concepts."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e The challenge and the mission are to find real solutions to real problems on actual schedules with available resources."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e This then is programming, both a tar pit in which many efforts have floundered and a creative activity with joys"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e  and woes all its own. For many, the joys far outweigh the woes....  "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmodal header\u003d\"**:book: The Mythical Man-Month: Essays on Software Engineering**\" id\u003d\"modal:mmm\"\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctable\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctd\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"https://upload.wikimedia.org/wikipedia/en/f/fd/Mythical_man-month_%28book_cover%29.jpg\" height\u003d\"250\" /\u003e "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctd\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Fred_Brooks.jpg/800px-Fred_Brooks.jpg\" height\u003d\"250\" /\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctd\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csub\u003e[[Text and book cover source: Wikipedia](https://en.wikipedia.org/wiki/The_Mythical_Man-Month)]\u003c/sub\u003e "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctd\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csub\u003e[[Fred Brooks photo source](https://commons.wikimedia.org/wiki/File:Fred_Brooks.jpg)]\u003c/sub\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/td\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/tr\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "_The Mythical Man-Month: Essays on Software Engineering_ is a book on software engineering and project management by Fred Brooks, whose central theme is that \"adding manpower to a late software project makes it later\". This idea is known as Brooks\u0027s law, and is presented along with the second-system effect and advocacy of prototyping. "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/modal\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 3,
      "-": 113
    }
  },
  {
    "path": "specifyingRequirements/featureList/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eFeature lists\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "specifyingRequirements/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Specifying Requirements\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 5
    }
  },
  {
    "path": "specifyingRequirements/supplementaryRequirements/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eSupplementary requirements\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "specifyingRequirements/useCases/details/inclusions.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/css/common.css\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**A use case can \u003d\u003dinclude\u003d\u003d another use case.** ++Underlined text++ is commonly used to show an inclusion of a use case."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} This use case includes two other use cases, one in step 1 and one in step 2."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"text-monospace\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* Software System: LearnSys"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* Use case:  UC01 - Conduct Survey"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "* Actors: Staff, Student"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "* MSS:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  1. Staff \u003d\u003d++creates the survey (UC44)++\u003d\u003d."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  1. Student \u003d\u003d++completes the survey (UC50)++\u003d\u003d."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  1. Staff views the survey results.\u003cbr\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     Use case ends."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "Inclusions are useful,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "* when you don\u0027t want to clutter a use case with too many low-level steps."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "* when a set of steps is repeated in multiple use cases."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "You use a dotted arrow and a `\u003c\u003cinclude\u003e\u003e` annotation to show use case inclusions in a use case diagram. Note how the arrow direction is different from the `\u003c\u003cextend\u003e\u003e` arrows."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/specifyingRequirements/useCases/details/images/inclusion.png\" height\u003d\"250\" /\u003e\u003cp/\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 27
    }
  },
  {
    "path": "specifyingRequirements/useCases/details/preconditions.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/css/common.css\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "**\u003d\u003d_Preconditions_\u003d\u003d specify the specific state you expect the system to be in before the use case starts.**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"text-monospace\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "Software System: Online Banking System\u003cbr\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Use case:  UC23 - Transfer Money\u003cbr\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "Actor: User\u003cbr\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003dPreconditions: User is logged in\u003d\u003d\u003cbr\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "MSS:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "1. User chooses to transfer money."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. OBS requests for details for the transfer.\u003cbr\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   ..."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 18
    }
  },
  {
    "path": "specifyingRequirements/useCases/identifying/q-use-case-diagram-qa-system.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Use case diagram for QA system\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion has-input\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "A software house wishes to automate its Quality Assurance division."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "The system is to be used by Testers, Programmers and System Administrators. Only an administrator can create new users and assign tasks to programmers. Any tester can create a bug report, as well as set the status of a bug report as ‘closed’. Only a programmer can set the state of a bug report to ‘fixed’, but a programmer cannot set the status of a bug report to ‘closed’. Each tester is assigned just one task at a time. A task involves testing of a particular component for a particular customer. Tester must document the bugs they find. Each bug is given a unique identifier. Other information recorded about the bug is component id, severity, date and time reported, programmer who is assigned to fix it, date fixed, date retested and date closed. The system keeps track of which bugs are assigned to which programmer at any given time. It should be able to generate reports on the number of bugs found, fixed and closed e.g. number of bugs per component and per customer; number of bugs found by a particular tester ; number of bugs awaiting to be fixed; number of bugs awaiting to be retested; number of bugs awaiting to be assigned to programmers etc."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "**Develop a use case diagram to capture their requirements given below.**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/specifyingRequirements/useCases/identifying/images/qaSystem.jpg\" width\u003d\"400\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "**Explanation**: The given description contains information not relevant to use case modeling. Furthermore, the description is not enough to complete the use case diagram All these are realities of real projects. However, the process of trying to create this use case diagram prompts us to investigate issues such as:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "*\tIs ‘edit bug report’ a use case or editing the bug report is covered by other use cases such as those for setting the status of bug reports? If it is indeed a separate use case, who are the actors of that use case?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "*\tDoes ‘assign task’ simply means ‘assign bug report’ or is there any other type of tasks?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "*\tThere was some mention about Customers and Components. Does the system have to support use cases for creating and maintaining details about those entities? For example, should we have a ‘create customer record’ use case?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "*\tWhich actors can perform the ‘generate report’ use case? Are reports generated automatically by the system at a specific time or generated ‘on demand’ when users request to view them? Do we have to treat different types of reports as different use cases (in case some types of reports are restricted to some types of users)? The above diagram assumes (just for illustration) that the report is generated on demand and only the system admin can generate any report."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 25
    }
  },
  {
    "path": "specifyingRequirements/useCases/identifying/q-use-case-diagram-ticket-machine.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Use case diagram for a ticket vending machine\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion has-input\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Consider a simple movie ticket vending machine application. Every week, the theatre staff will enter the weekly schedule as well as ticket price for each show.  A customer sees the schedule and the ticket price displayed at the machine. There is a slot to insert money, a keypad to enter a code for a movie, a code for the show time, and the number of tickets.  A display shows the customer\u0027s balance inside the machine.  A customer may choose to cancel a transaction before pressing the “buy” button. Printed tickets can be collected from a slot at the bottom of the machine.  The machine also displays messages such as \"Please enter more money”, “Request fewer tickets\" or \"SOLD OUT!”.  Finally, a \"Return Change\" button allows the customer to get back his unspent money."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "**Draw a use case diagram for the above requirements.**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/specifyingRequirements/useCases/identifying/images/ticketMachine.png\" width\u003d\"300\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "Note that most of the details in the description are better given as part of the use case description rather than as low-level use cases in the diagram."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 17
    }
  },
  {
    "path": "specifyingRequirements/useCases/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eUse cases\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"introduction/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"identifying/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"details/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"usage/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 9
    }
  },
  {
    "path": "specifyingRequirements/useCases/usage/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eUsage\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can optimize the use of use cases\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**You can use actor generalization in use case diagrams** using a symbol similar to that of UML notation for inheritance. "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} In this example, actor `Blogger` can do all the use cases the actor `Guest` can do, as a result of the actor generalization relationship given in the diagram."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/specifyingRequirements/useCases/usage/images/actorGeneralisation.png\" height\u003d\"250\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_tip }} Do not over-complicate use case diagrams by trying to include everything possible. A use case diagram is a brief summary of the use cases that is used as a starting point. Details of the use cases can be given in the use case descriptions."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "**Some include ‘System’ as an actor to indicate that something is done by the system itself without being initiated by a user or an external system.** "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The diagram below can be used to indicate that the system generates daily reports at midnight."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/specifyingRequirements/useCases/usage/images/systemAsActor.jpg\" height\u003d\"200\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "However, others argue that only use cases providing value to an external user/system should be shown in the use case diagram. For example, they argue that ‘view daily report’ should be the use case and  `generate daily report` is not to be shown in the use case diagram because it is simply something the system has to do to support the `view daily report` use case."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "You are recommended to follow the latter view (i.e. not to use System as a user). Limit use cases for modeling behaviors that involve an external actor."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "**UML is not very specific about the text contents of a use case.** Hence, there are many styles for writing use cases. For example, the steps can be written as a continuous paragraph."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "Use cases should be easy to read. Note that there is no strict rule about writing all details of all steps or a need to use all the elements of a use case."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "**There are some advantages of documenting system requirements as use cases:**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "* Because they use a simple notation and plain English descriptions, they are easy for users to understand and give feedback."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "* They decouple user intention from mechanism (note that use cases should not include UI-specific details), allowing the system designers more freedom to optimize how a functionality is provided to a user."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* Identifying all possible extensions encourages us to consider all situations that a software product might face during its operation."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* Separating typical scenarios from special cases encourages us to optimize the typical scenarios."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "**One of the main disadvantages of use cases is that they are not good for capturing requirements that does not involve a user interacting with the system.** Hence, they should not be used as the sole means to specify requirements."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 52
    }
  },
  {
    "path": "specifyingRequirements/userStories/details/q-tick-correctStatement.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Correct statements about user stories\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Choose the correct statements"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] a. User stories are short and written in a formal notation."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] b. User stories is another name for use cases."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] c. User stories describes past experiences users had with similar systems. These are helpful in developing the new system."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] d. User stories are not detailed enough to tell us exact details of the product."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "d "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "Explanation: User stories are short and written in natural language, NOT in a formal language. They are used for estimation and scheduling purposes but do not contain enough details to form a complete system specification."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 19
    }
  },
  {
    "path": "specifyingRequirements/userStories/introduction/q-essay-critiqueUserStory.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} What\u0027s wrong with this user story?\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion has-input\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Critique the following user story taken from a software project to build an e-commerce website. "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "`As a developer, I want to use Python to implement the software, so that we can resue existing Python modules.`"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"hint\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the definition of a user story."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../../../common/definitions.md#def-user-story\" inline/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "This user story is not written from the perspective of the user/customer."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 20
    }
  },
  {
    "path": "specifyingRequirements/userStories/introduction/q-essay-hrUserStories.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Extract user stories from customer statement\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion has-input\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Bill wants you to build a Human Resource Management (HRM) system. He mentions that _the system will help employees to view their own \u003cpopover content\u003d\"The number of leave days not yet taken\"\u003eleave balance\u003c/popover\u003e_. What are the user stories you can extract from that statement?"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"hint\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "Remember to follow the correct format when writing user stories."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../../../common/definitions.md#def-user-story-format\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "`As an employee, I can view my leave balance, so that I can know how many leave days I have left.`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "%%Note: the `{benefit}` part may vary as it is not specifically mentioned in the question.%%"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 19
    }
  },
  {
    "path": "specifyingRequirements/userStories/introduction/q-tick-correctStatementsAboutUserStories.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Which of these are true about user stories?\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] a. They are based on stories users tell about similar systems"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] b. They are written from the user/customer perspective"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] c. They are always written in some physical medium such as index cards or sticky notes"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] a. Reason: Despite the name, user stories are not related to \u0027stories\u0027 about the software."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "- [x] b. "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] c. Reason: It is possible to use software to record user stories. When the team members are not co-located this may be the only option."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 16
    }
  },
  {
    "path": "specifyingRequirements/userStories/introduction/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can write simple user stories\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eIntroduction\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"definition\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../../../common/definitions.md#def-user-story\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "**A common format** for writing user stories is:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox type\u003d\"definition\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../../../common/definitions.md#def-user-story-format\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Examples (from a _Learning Management System_):"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"text-monospace\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "1. %%As a%% student, %%I can%% download files uploaded by lecturers, %%so that%% I can get my own copy of the files"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "2. %%As a%% lecturer, %%I can%% create discussion forums, %%so that%% students can discuss things online"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "3. %%As a%% tutor, %%I can%% print attendance sheets, %%so that%% I can take attendance during the class"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "**You can write user stories on** index cards or sticky notes, and arrange on walls or tables, to facilitate planning and discussion. Alternatively, you can use a software (e.g., [GitHub Project Boards](https://help.github.com/articles/about-project-boards/), Trello, Google Docs, ...) to manage user stories digitally."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"%%User stories in use%%\" class\u003d\"non-printable\" expanded\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"With sticky notes\" type\u003d\"seamless\" expanded\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/specifyingRequirements/userStories/introduction/images/workingWithStories.jpg\" height\u003d\"400\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%%\u003csup\u003e[credit: https://www.flickr.com/photos/jakuza/2682466984/]\u003c/sup\u003e%%"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"With paper\" type\u003d\"seamless\" expanded\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/specifyingRequirements/userStories/introduction/images/userStoriesOnTable.jpg\" height\u003d\"400\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "%%\u003csup\u003e[credit: https://www.flickr.com/photos/jakuza/with/2726048607/]\u003c/sup\u003e%%"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"With software\" type\u003d\"seamless\" expanded\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/specifyingRequirements/userStories/introduction/images/userStoriesWithSoftware.png\" height\u003d\"400\" /\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "%%\u003csup\u003e[credit: https://commons.wikimedia.org/wiki/File:User_Story_Map_in_Action.png]\u003c/sup\u003e%%"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 64
    }
  },
  {
    "path": "specifyingRequirements/userStories/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eUser stories\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"introduction/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"details/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"usage/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 8
    }
  },
  {
    "path": "teamwork/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Teamwork\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "pageNav: 4"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 5
    }
  },
  {
    "path": "teamwork/teamStructures/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eTeam structures\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain common team structures\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Given below are three commonly used team structures in software development. Irrespective of the team structure, it is a good practice to assign roles and responsibilities to different team members so that someone is clearly in charge of each aspect of the project. In comparison, the ‘everybody is responsible for everything’ approach can result in more chaos and hence slower progress."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/teamwork/teamStructures/images/diagram.png\" height\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "**Egoless team**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "In this structure, **every team member is equal in terms of responsibility and accountability**. When any decision is required, consensus must be reached. This team structure is also known as a _democratic_ team structure.  This team structure usually finds a good solution to a relatively hard problem as all team members contribute ideas."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "However, the democratic nature of the team structure bears a higher risk of falling apart due to the absence of an authority figure to manage the team and resolve conflicts."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "**Chief programmer team**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "Frederick Brooks proposed that software engineers learn from the medical surgical team in an operating room. In such a team, there is always a chief surgeon, assisted by experts in other areas. Similarly, in a chief programmer team structure, **there is a single authoritative figure, the chief programmer**. Major decisions, e.g. system architecture, are made solely by him/her and obeyed by all other team members. The chief programmer directs and coordinates the effort of other team members. When necessary, the chief will be assisted by domain specialists e.g. business specialists, database expert, network technology expert, etc. This allows individual group members to concentrate solely on the areas where they have sound knowledge and expertise."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "The success of such a team structure relies heavily on the chief programmer. Not only must he be a superb technical hand, he also needs good managerial skills. Under a suitably qualified leader, such a team structure is known to produce successful work. ."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "**Strict hierarchy team**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "In the opposite extreme of an egoless team, a strict hierarchy team has **a strictly defined organization among the team members**, reminiscent of the military or bureaucratic government. Each team member only works on his assigned tasks and reports to a single “boss”."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "In a large, resource-intensive, complex project, this could be a good team structure to reduce communication overhead."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 37
    }
  },
  {
    "path": "testCaseDesign/boundaryValueAnalysis/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eBoundary value analysis\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"how/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 7
    }
  },
  {
    "path": "testCaseDesign/combiningTestInputs/combinationStrategies/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eTest input combination strategies\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain some basic test input combination strategies\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Given below are some basic strategies for generating a set of test cases by combining multiple test input combination strategies."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Let\u0027s assume the SUT has the following three inputs and you have selected the given values for testing:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "SUT: `foo(p1 char, p2 int, p3 boolean)`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "Values to test:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "| Input   | Values      |"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "| :-----: | :---------: |"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "| p1      | a, b, c     |"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "| p2      | 1, 2, 3     |"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "| p3      | T, F        |  "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "**The _all combinations_ strategy generates test cases for each unique combination of test inputs.**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} the strategy generates 3x3x2\u003d18 test cases"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "| Test Case   | p1      | p2      | p3      |"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "| :---------: | :-----: | :-----: | :-----: |"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "| 1           | a       | 1       | T       |"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "| 2           | a       | 1       | F       |"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "| 3           | a       | 2       | T       |"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "| ...         | ...     | ...     | ...     |"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "| 18          | c       | 3       | F       |"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "**The _at least once_ strategy includes each test input at least once.**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} this strategy generates 3 test cases."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "| Test Case   | p1      | p2      | p3      |"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "| :---------: | :-----: | :-----: | :-----: |"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "| 1           | a       | 1       | T       |"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "| 2           | b       | 2       | F       |"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "| 3           | c       | 3       | VV/IV   |"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "VV/IV \u003d Any Valid Value / Any Invalid Value"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "**The _all pairs_ strategy creates test cases so that for any given pair of inputs, all combinations between them are tested.** It is based on the observations that a bug is rarely the result of more than two interacting factors. The resulting number of test cases is lower than the _all combinations_ strategy, but higher than the _at least once_ approach."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} this strategy generates 9 test cases:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" header\u003d\"see steps\"\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s first consider inputs p1 and p2:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "| Input   | Values      |"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "| :-----: | :---------: |"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "| p1      | a, b, c     |"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "| p2      | 1, 2, 3     |"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "These values can generate \u003ctooltip content\u003d\"(a,1)(a,2)(a,3)(b,1)(b,2),...\"\u003e3x3\u003d9 combinations\u003c/tooltip\u003e, and the test cases should cover all of them."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "Next, let\u0027s consider p1 and p3."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "| Input   | Values      |"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "| :-----: | :---------: |"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "| p1      | a, b, c     |"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "| p3      | T, F        |"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "These values can generate \u003ctooltip content\u003d\"(a,T)(a,F)(b,T)(b,F),...\"\u003e3x2\u003d6 combinations\u003c/tooltip\u003e, and the test cases should cover all of them."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "Similarly, inputs p2 and p3 generates another 6 combinations. "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "The 9 test cases given below covers all those 9+6+6 combinations."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "| Test Case   | p1      | p2      | p3      |"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "| :---------: | :-----: | :-----: | :-----: |"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "| 1           | a       | 1       | T       |"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "| 2           | a       | 2       | T       |"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "| 3           | a       | 3       | F       |"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "| 4           | b       | 1       | F       |"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "| 5           | b       | 2       | T       |"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "| 6           | b       | 3       | F       |"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "| 7           | c       | 1       | T       |"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "| 8           | c       | 2       | F       |"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "| 9           | c       | 3       | T       |"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "A variation of this strategy is to test all pairs of inputs but only for inputs that could influence each other."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Testing all pairs between p1 and p3 only while ensuring all p2 values are tested at least once:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "| Test Case   | p1      | p2      | p3      |"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "| :---------: | :-----: | :-----: | :-----: |"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "| 1           | a       | 1       | T       |"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "| 2           | a       | 2       | F       |"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "| 3           | b       | 3       | T       |"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "| 4           | b       | VV/IV   | F       |"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "| 5           | c       | VV/IV   | T       |"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "| 6           | c       | VV/IV   | F       |"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "**The _random_ strategy generates test cases using one of the other strategies and then pick a subset randomly** (presumably because the original set of test cases is too big)."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "**There are other strategies that can be used too.**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 128
    }
  },
  {
    "path": "testCaseDesign/combiningTestInputs/heuristicInvalid/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003cpanel src\u003d\"../heuristicValid/unit-inElsewhere-asFlat.md\" boilerplate header\u003d\"%%{{ icon_prereq }} Quality Assurance → Test Case Design → Combining Test Inputs → Heuristic: Each Valid Input at Least Once in a Positive Test Case%%\" popup-url\u003d\"{{ baseUrl }}/testCaseDesign/combiningTestInputs/heuristicValid\" /\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can apply heuristic ‘no more than one invalid input in a test case’\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eHeuristic: No more than one invalid input in a test case\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Consider the \u003ctrigger for\u003d\"modal:heuristic-valid-test-case\" trigger\u003d\"click\"\u003etest cases designed in [Heuristic: each valid input at least once in a positive test case]\u003c/trigger\u003e."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmodal large header\u003d\"**Extract from Quality Assurance → Test Case Design → Combining Test Inputs → Heuristic: each valid input at least once in a positive test case**\" id\u003d\"modal:heuristic-valid-test-case\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../heuristicValid/text.md#heuristic-valid-test-case\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/modal\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "After running these test cases can you be sure that the error message “invalid price” is shown for negative prices?"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "* Answer: No."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "* Reason: `-1`  -- the only input that is a negative price -– is in a test case that produces the error message “invalid fruit”."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "In this case a useful heuristic to apply is **no more than one invalid input in a test case**. After applying that, we get the following test cases."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "| Case   | fruitName  | unitPrice  | Expected                       |"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "| :----: | :--------: | :--------: | :----------------------------: |"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "| 1      | Apple      | 1          | Print round label              |"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "| 2      | Banana     | 20         | Print oval label               |"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "| 2.1    | Cherry     | VV         | Print square label             |"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "| 3      | VV         | ++0++      | Error message “invalid price”  |"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "| 4      | VV         | ++-1++     | Error message “invalid price\"  |"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "| 4.1    | ++Dog++    | VV         | Error message “invalid fruit\"  |"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "VV/IV \u003d Any Invalid or Valid Value VV\u003dAny Valid Value"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 39
    }
  },
  {
    "path": "testCaseDesign/combiningTestInputs/heuristicValid/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eHeuristic: Each valid input at least once in a positive test case\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can apply heuristic ‘each valid input at least once in a positive test case’\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Consider the following scenario."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "SUT:  `printLabel(fruitName String, unitPrice int)`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "**Selected values for** `fruitName` (invalid values are ++underlined++ ):"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "Values\t| Explanation"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "------- | -----------"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "Apple   | Label format is round"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "Banana  | Label format is oval"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "Cherry  | Label format is square"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "++Dog++ | Not a valid fruit"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "**Selected values for** `unitPrice`:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "Values\t| Explanation"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "------- | -----------"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "1       | Only one digit"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "20      | Two digits"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "++0++   | Invalid because 0 is not a valid price"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "++-1++  | Invalid because negative prices are not allowed"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "Suppose these are the test cases being considered."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "| Case   | fruitName  | unitPrice  | Expected                       |"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "| :----: | :--------: | :--------: | :----------------------------: |"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "| 1      | Apple      | 1          | Print label                    |"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "| 2      | Banana     | 20         | Print label                    |"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "| 3      | Cherry     | ++0++      | Error message “invalid price”  |"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "| 4      | ++Dog++    | ++-1++     | Error message “invalid fruit\"  |"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "It looks like the test cases were created using the _at least once_ strategy. After running these tests can we confirm that square-format label printing is done correctly?"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "* Answer: No."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "* Reason: `Cherry` -- the only input that can produce a square-format label -- is in a negative test case which produces an error message instead of a label. If there is a bug in the code that prints labels in square-format, these tests cases will not trigger that bug."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "In this case a useful heuristic to apply is **each valid input must appear at least once in a positive test case**. `Cherry` is a valid test input and we must ensure that it appears at least once in a positive test case. Here are the updated test cases after applying that heuristic."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"heuristic-valid-test-case\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "| Case   | fruitName  | unitPrice  | Expected                       |"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "| :----: | :--------: | :--------: | :----------------------------: |"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "| 1      | Apple      | 1          | Print round label              |"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "| 2      | Banana     | 20         | Print oval label               |"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "| 2.1    | Cherry     | VV         | Print square label             |"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "| 3      | VV         | ++0++      | Error message “invalid price”  |"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "| 4      | ++Dog++    | ++-1++     | Error message “invalid fruit\"  |"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "VV/IV \u003d Any Invalid or Valid Value VV\u003dAny Valid Value"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 74
    }
  },
  {
    "path": "testCaseDesign/combiningTestInputs/mix/q-tick-correctStatement.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} statements about test input combinations\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Which of these contradict the heuristics recommended when creating test cases with multiple inputs?"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) a. All invalid test inputs must be tested together."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) b. It is ok to combine valid values for different inputs."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) c. No more than one invalid test input should be in a given test case."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) d. Each valid test input should appear at least once in a test case that doesn’t have any invalid inputs."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "a"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "Explanation: If you test all invalid test inputs together, you will not know if each one of the invalid inputs are handled correctly by the SUT. This is because most SUTs return an error message upon encountering the first invalid input. "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 18
    }
  },
  {
    "path": "testCaseDesign/combiningTestInputs/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eCombining test inputs\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"why/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"combinationStrategies/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"heuristicValid/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"heuristicInvalid/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"mix/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 10
    }
  },
  {
    "path": "testCaseDesign/equivalencePartitions/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eEquivalence partitions\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"basic/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"intermediate/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 8
    }
  },
  {
    "path": "testCaseDesign/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Test Case Design\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 5
    }
  },
  {
    "path": "testCaseDesign/introduction/blackVsGlass/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eBlack box versus glass box\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain black box and glass box test case design\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Test case design can be of three types, based on how much of SUT internal details are considered when designing test cases:**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* **_Black-box_ (aka _specification-based or responsibility-based_) approach**: test cases are designed exclusively based on the SUT’s specified external behavior."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "* **_White-box_ (aka _glass-box or structured or implementation-based_) approach**: test cases are designed based on what is known about the SUT’s implementation, i.e. the code."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "* **_Gray-box_ approach**: test case design uses _some_ important information about the implementation. For example, if the implementation of a sort operation uses different algorithms to sort lists shorter than 1000 items and lists longer than 1000 items, more meaningful test cases can then be added to verify the correctness of both algorithms."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel type\u003d\"seamless\" header\u003d\"{{ icon_video }} %%Black-box and white-box testing%%\"\u003e "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csub\u003eNote: these videos are from the [Udacity course _Software Development Process_ by Georgia Tech](https://www.udacity.com/course/software-development-process--ud805)\u003c/sub\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctabs\u003e "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctab header\u003d\"{{ icon_video }} Black-box vs White-box testing\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "@[youtube](jRwwb7iaRsU)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/tab\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctab header\u003d\"{{ icon_video }} Black-box testing example\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "@[youtube](6pbB37nFUZw)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/tab\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctab header\u003d\"{{ icon_video }} White-box testing example\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@[youtube](KIAkoae6_jE)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/tab\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/tabs\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 44
    }
  },
  {
    "path": "testCaseDesign/introduction/positiveVsNegative/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003ePositive versus negative test cases\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain positive and negative test cases\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**A _positive test case_ is when the test is designed to produce an expected/valid behavior. A negative test case is designed to produce a behavior that indicates an invalid/unexpected situation, such as an error message.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Consider testing of the method `print(Integer i)` which prints the value of `i`."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "* A positive test case: `i \u003d\u003d new Integer(50)`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "* A negative test case: `i \u003d\u003d null;`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 22
    }
  },
  {
    "path": "testCaseDesign/more/testingUseCases/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eTesting based on use cases\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain test case design for use case based testing\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Use cases can be used for system testing and acceptance testing**. For example, the main success scenario can be one test case while each variation (due to extensions) can form another test case. However, note that use cases do not specify the exact data entered into the system. Instead, it might say something like `user enters his personal data into the system`. Therefore, the tester has to choose data by considering equivalence partitions and boundary values. The combinations of these could result in one use case producing many test cases."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "To increase \u003ctrigger trigger\u003d\"click\" for\u003d\"modal:usebaseBased-EandE\"\u003eE\u0026E of testing\u003c/trigger\u003e, high-priority use cases are given more attention. For example, a \u003ctrigger trigger\u003d\"click\" for\u003d\"modal:usecaseBased-scripted\"\u003escripted approach\u003c/trigger\u003e can be used to test high priority test cases, while an exploratory approach is used to test other areas of concern that could emerge during testing."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmodal large header\u003d\"Quality Assurance → Test Case Design → Introduction → (extract) E\u0026E of testing\" id\u003d\"modal:usebaseBased-EandE\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../../introduction/what/text.md#e-and-e\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/modal\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmodal large header\u003d\"Textbook {{ icon_embedding }}\" id\u003d\"modal:usecaseBased-scripted\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"../../../testing/testingTypes/exploratoryVsScriptedTesting/what/unit-inElsewhere-asFlat.md\" boilerplate/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/modal\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 23
    }
  },
  {
    "path": "testCaseDesign/summary/exercises/q-tick-preRelease.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Pre-Release Game\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "If you download a pre-release version of a new game (executable file) to do a test drive and submit bug reports, you would be doing"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] a. white-box exploratory testing"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] b. gray-box beta testing"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] c. black-box exploratory testing"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "- [ ] d. black-box scripted testing"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "c"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "Explanation: Since it is an executable only, you are unlikely to have a knowledge of its internal workings. Therefore, your testing is most likely to be black-box testing. A ‘test drive’ sounds like exploratory testing rather than scripted testing. "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 18
    }
  },
  {
    "path": "testCaseDesign/summary/exercises/q-tick-trueFalse.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} True or False?\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "We can apply equivalence partitioning technique in white-box fashion."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "- ( ) True"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "- ( ) False"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "True"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Explanation: In fact, when we know about how the SUT is implemented, we can make more informed decisions about partitioning test input into equivalence partitions. White-box equivalence partitioning is less speculative than black-box equivalence partitioning.  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 3,
      "-": 14
    }
  },
  {
    "path": "testCaseDesign/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eTest case design\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"introduction/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"equivalencePartitions/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"boundaryValueAnalysis/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"combiningTestInputs/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"more/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"summary/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 11
    }
  },
  {
    "path": "testing/dependencyInjection/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eDependency injection\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"how/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 7
    }
  },
  {
    "path": "testing/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Testing\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 5
    }
  },
  {
    "path": "testing/tdd/what/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eWhat\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain TDD\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "**_Test-Driven Development(TDD)_ advocates writing the tests before writing the SUT, while evolving functionality and tests in small increments**. In TDD you first define the precise behavior of the SUT using test cases, and then write the SUT to match the specified behavior. While TDD has its fair share of detractors, there are many who consider it a good way to reduce defects. One big advantage of TDD is that it guarantees the code is testable."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 16
    }
  },
  {
    "path": "testing/testAutomation/testingGuis/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAutomated testing of GUIs\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain automated GUI testing\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "If a software product has a GUI(Graphical User Interface) component, all product-level testing (i.e. the types of testing mentioned above) need to be done using the GUI. However, **testing the GUI is much harder than testing the CLI (command line interface) or API**, for the following reasons:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* Most GUIs can support a large number of different operations, many of which can be performed in any arbitrary order."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* GUI operations are more difficult to automate than API testing. Reliably automating GUI operations and automatically verifying whether the GUI behaves as expected is harder than calling an operation and comparing its return value with an expected value. Therefore, automated regression testing of GUIs is rather difficult. "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "* The appearance of a GUI (and sometimes even behavior) can be different across platforms and even environments. For example, a GUI can behave differently based on whether it is minimized or maximized, in focus or out of focus, and in a high resolution display or a low resolution display."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/testing/testAutomation/testingGuis/images/diagram.png\" height\u003d\"120\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "**Moving as much logic as possible out of the GUI can make the GUI testing easier.** That way, you can bypass the GUI to test the rest of the system using automated API testing. While this still requires the GUI to be tested, the number of such test cases can be reduced as most of the system has been tested using automated API testing."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "**There are testing tools that can automate GUI testing.** "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Some tools used for automated GUI testing:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "* **TestFx** can do automated testing of JavaFX GUIs\u003cbr\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "* **VisualStudio** supports ‘record replay’ type of GUI test automation."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "* [**Selenium**](http://seleniumhq.org/) can be used to automate testing of Web application UIs\u003cbr\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpanel type\u003d\"seamless\" header\u003d\"{{ icon_video }} demo video of automated testing of a Web application\" class\u003d\"non-printable\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  This video shows automated testing of the [TEAMMATES](http://github.com/teammates/teammates) Web app using Selenium"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  @[youtube](ihst69Zq1xM)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/panel\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 2,
      "-": 44
    }
  },
  {
    "path": "testing/testAutomation/testingTextUis/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can semi-automate testing of CLIs\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAutomated testing of CLI applications\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**A simple way to semi-automate testing of a CLI(Command Line Interface) app is by using input/output re-direction.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* First, we feed the app with a sequence of test inputs that is stored in a file while redirecting the output to another file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* Next, we compare the actual output file with another file containing the expected output."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "Let us assume we are testing a CLI app called `AddressBook`. Here are the detailed steps:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Store the test input in the text file `input.txt`. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cpanel header\u003d\"%%{{ icon_example }} Example `input.txt`%%\" type\u003d\"seamless\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   add Valid Name p/12345 valid@email.butNoPrefix"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   add Valid Name 12345 e/valid@email.butPhonePrefixMissing"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/panel\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "1. Store the output we expect from the SUT in another text file `expected.txt`. "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cpanel header\u003d\"%%{{ icon_example }} Example `expected.txt`%%\" type\u003d\"seamless\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   Command: || [add Valid Name p/12345 valid@email.butNoPrefix]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   Invalid command format: add "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   Command: || [add Valid Name 12345 e/valid@email.butPhonePrefixMissing]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   Invalid command format: add "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/panel\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "1. Run the program as given below, which will redirect the text in `input.txt` as the input to `AddressBook` and similarly, will redirect the output of AddressBook to a text file `output.txt`. %%Note that this does not require any code changes to `AddressBook`.%%"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "   ```sh{.no-line-numbers}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "   java AddressBook \u003c input.txt \u003e output.txt"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   * {{ icon_tip }} The way to run a CLI program differs based on the language.\u003cbr\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     e.g., In Python, assuming the code is in `AddressBook.py` file, use the command\u003cbr\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      `python AddressBook.py \u003c input.txt \u003e output.txt`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "   * {{ icon_tip }} If you are using Windows, use a normal command window to run the app, not a Power Shell window."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cpanel header\u003d\"\" minimized \u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cspan slot\u003d\"header\" class\u003d\"card-title\"\u003e\u003cmd\u003eMore on the `\u003e` operator and the `\u003c` operator {{ icon_extra }}\u003c/md\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "   A CLI program takes input from the keyboard and outputs to the console. That is because those two are default input and output streams, respectively. But you can change that behavior using ` \u003c ` and ` \u003e ` operators. For example, if you run `AddressBook` in a command window, the output will be shown in the console, but if you run it like this,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "   ```sh{.no-line-numbers}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "   java AddressBook \u003e output.txt "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "   the Operating System then creates a file `output.txt` and stores the output in that file instead of displaying it in the console. No file I/O coding is required. Similarly, adding ` \u003c input.txt ` (or any other filename) makes the OS redirect the contents of the file as input to the program, as if the user typed the content of the file one line at a time."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cbox\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "   {{ icon_resource }} Resources:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "   * [Using command redirection operators in Windows](http://technet.microsoft.com/en-us/library/bb490982.aspx)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/box\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/panel\u003e\u003cp/\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "1. Next, we compare `output.txt` with the `expected.txt`. This can be done using a utility such as Windows `FC` (i.e. File Compare) command, Unix `diff` command, or a GUI tool such as _WinMerge_. "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "   ```{.no-line-numbers}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "   FC output.txt expected.txt"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "Note that the above technique is only suitable when testing CLI apps, and only if the exact output can be predetermined. %%If the output varies from one run to the other (e.g. it contains a time stamp), this technique will not work. In those cases we need more sophisticated ways of automating tests.%%"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"../../../common/popOvers.md#cli\" /\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 84
    }
  },
  {
    "path": "testing/testAutomation/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eTest automation\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"testingTextUis/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"usingTestDrivers/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"tools/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"testingGuis/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 10
    }
  },
  {
    "path": "testing/testAutomation/tools/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain test automation tools\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eTest automation tools\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**JUnit is a tool for automated testing of Java programs.** Similar tools are available for other languages and for automating different types of testing."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} This an automated test for a `Payroll` class, written using JUnit libraries."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "@Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public void testTotalSalary(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    Payroll p \u003d new Payroll();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    //test case 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    p.setEmployees(new String[]{\"E001\", \"E002\"});"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    assertEquals(6400, p.totalSalary());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    //test case 2"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    p.setEmployees(new String[]{\"E001\"});"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    assertEquals(2300, p.totalSalary());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    //more tests..."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "Most modern IDEs has integrated support for testing tools. The figure below shows the JUnit output when running some JUnit tests using the Eclipse IDE."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/testing/testAutomation/tools/images/junit.png\" height\u003d\"190\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 40
    }
  },
  {
    "path": "testing/testAutomation/usingTestDrivers/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eTest automation using test drivers\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain test drivers\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**A test driver is the code that ‘drives’ the \u003ctooltip content\u003d\"Software Under Test\"\u003eSUT\u003c/tooltip\u003e for the purpose of testing** i.e. invoking the SUT with test inputs and verifying the behavior is as expected. "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} `PayrollTest` ‘drives’ the `Payroll` class by sending it test inputs and verifies if the output is as expected."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class PayrollTestDriver {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        //test setup"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        Payroll p \u003d new Payroll();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        //test case 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        p.setEmployees(new String[]{\"E001\", \"E002\"});"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        // automatically verify the response"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        if (p.totalSalary() !\u003d 6400) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new Error(\"case 1 failed \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        //test case 2"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        p.setEmployees(new String[]{\"E001\"});"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        if (p.totalSalary() !\u003d 2300) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new Error(\"case 2 failed \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        //more tests..."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"All tests passed\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 45
    }
  },
  {
    "path": "testing/testCoverage/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eTest coverage\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"how/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 7
    }
  },
  {
    "path": "testing/testingTypes/acceptanceTesting/acceptanceVsSystemTesting/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAcceptance versus system testing\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can explain the differences between system testing and acceptance testing\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Acceptance testing comes after system testing. Similar to system testing, acceptance testing involves testing the whole system."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "Some differences between system testing and acceptance testing:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "| System Testing | Acceptance Testing |"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "| :------------- | :----------------- |"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "| Done against the system specification | Done against the requirements specification |"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "| Done by testers of the project team | Done by a team that represents the customer |"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "| Done on the development environment or a test bed | Done on the deployment site or on a close simulation of the deployment site |"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "| Both negative and positive test cases | More focus on positive test cases |"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "%%Note: _negative_ test cases: cases where the SUT is not expected to work normally e.g. incorrect inputs; _positive_ test cases: cases where the SUT is expected to work normally%%"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "**Requirement specification versus system specification**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "The requirement specification need not be the same as the system specification. Some example differences:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "| Requirements specification | System specification |"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "| :------------------------- | :------------------- |"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "| limited to how the system behaves in normal working conditions | can also include details on how it will fail gracefully when pushed beyond limits, how to recover, etc. specification"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "| written in terms of problems that need to be solved (e.g. provide a method to locate an email quickly)| written in terms of how the system solve those problems (e.g. explain the email search feature) |"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "| specifies the interface available for intended end-users | could contain additional APIs not available for end-users (for the use of developers/testers) |"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "However, **in many cases one document serves as both a requirement specification and a system specification.**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "**Passing system tests does not necessarily mean passing acceptance testing.** Some examples:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* The system might work on the testbed environments but might not work the same way in the deployment environment, due to subtle differences between the two environments."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "* The system might conform to the system specification but could fail to solve the problem it was supposed to solve for the user, due to flaws in the system design."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 3,
      "-": 46
    }
  },
  {
    "path": "testing/testingTypes/acceptanceTesting/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAcceptance testing\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"acceptanceVsSystemTesting/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 7
    }
  },
  {
    "path": "testing/testingTypes/alphaBetaTesting/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAlpha and beta testing\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "testing/testingTypes/developerTesting/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eDeveloper testing\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"why/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 7
    }
  },
  {
    "path": "testing/testingTypes/exploratoryVsScriptedTesting/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eExploratory versus scripted testing\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"when/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 7
    }
  },
  {
    "path": "testing/testingTypes/exploratoryVsScriptedTesting/what/q-tick-trueFalse.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} statements about exploratory and scripted testing\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Scripted testing requires tests to be written in a scripting language; Manual testing is called exploratory testing."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) True"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) False"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "False"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Explanation: “Scripted” means test cases are predetermined. They need not be an executable script. However, exploratory testing is usually manual."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 16
    }
  },
  {
    "path": "testing/testingTypes/exploratoryVsScriptedTesting/when/q-tick-trueFalse.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Which is better?\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Scripted testing is better than exploratory testing."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) True"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "- ( ) False"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "False"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Explanation: Each has pros and cons. Relying on only one is not recommended. A combination is better."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 1,
      "-": 16
    }
  },
  {
    "path": "testing/testingTypes/integrationTesting/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eIntegration testing\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"how/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 7
    }
  },
  {
    "path": "testing/testingTypes/regressionTesting/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eRegression testing\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "testing/testingTypes/systemTesting/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eSystem testing\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "testing/testingTypes/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eTesting types\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"unitTesting/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"integrationTesting/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"systemTesting/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"alphaBetaTesting/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"dogfooding/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"developerTesting/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exploratoryVsScriptedTesting/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"acceptanceTesting/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"regressionTesting/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 14
    }
  },
  {
    "path": "testing/testingTypes/unitTesting/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eUnit testing\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"stubs/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 7
    }
  },
  {
    "path": "uml/activityDiagrams/basicNotations/alternatePaths/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAlternate paths\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can interpret alternate paths in activity diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**A _branch node_ shows the start of alternate paths.** Each control flow exiting a branch node has a _guard condition_ : a boolean condition that should be true for execution to take that path. Only one of the guard condition can be true at any time."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "**A _merge node_ shows the end of alternate paths.** "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Both branch nodes and merge nodes are \u003d\u003ddiamond shapes\u003d\u003d. Guard conditions must be in \u003d\u003dsquare brackets\u003d\u003d."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/activityDiagrams/basicNotations/alternatePaths/images/notation.png\" height\u003d\"180\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The AD below shows alternate paths involved in the workflow of the activity _shop for product_:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/activityDiagrams/basicNotations/alternatePaths/images/example.png\" height\u003d\"240\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 29
    }
  },
  {
    "path": "uml/activityDiagrams/basicNotations/linearPaths/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eLinear paths\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can interpret linear paths in activity diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "An activity diagram (AD) captures an _activity_ of _actions_ and _control flows_ that makes up the activity. "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "* An _action_ is a single step in an activity. It is shown as a rectangle with \u003d\u003drounded corners\u003d\u003d. "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* A _control flow_ shows the flow of control from one action to the next. It is shown by drawing a line with an arrow-head to show the direction of the flow."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/activityDiagrams/basicNotations/linearPaths/images/notation.png\" height\u003d\"180\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "Note the slight difference between the _start node_ and the _end node_ which represent the start and the end of the activity, respectively."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} This activity diagram shows the action sequence of the activity _a passenger rides the bus_:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/activityDiagrams/basicNotations/linearPaths/images/example.png\" width\u003d\"450\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 29
    }
  },
  {
    "path": "uml/activityDiagrams/basicNotations/parallelPaths/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eParallel paths\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can interpret parallel paths in activity diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**_Fork_ nodes indicate the start of \u003ctooltip content\u003d\"parallel\"\u003econcurrent\u003c/tooltip\u003e flows of control.** "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "**_Join_ nodes indicate the end of parallel paths.**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Both have the same notation: a bar.   "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "In a \u003ctooltip content\u003d\"paths within a matching fork-join pair\"\u003eset of parallel paths\u003c/tooltip\u003e, execution along **all parallel paths should be complete before the execution can start on the outgoing control flow of the _join_.**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/activityDiagrams/basicNotations/parallelPaths/images/notation.png\" height\u003d\"130\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} In this activity diagram (from an online shop website) the actions _User browsers products_ and _System records browsing data_ happen in parallel. Both of them need to finish before the _log out_ action can take place."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/activityDiagrams/basicNotations/parallelPaths/images/example.png\" width\u003d\"260\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 30
    }
  },
  {
    "path": "uml/activityDiagrams/basicNotations/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eBasic notations\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"linearPaths/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"alternatePaths/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"parallelPaths/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"rakes/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"swimlanes/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 10
    }
  },
  {
    "path": "uml/activityDiagrams/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eActivity diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"introduction/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"basicNotations/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 7
    }
  },
  {
    "path": "uml/classDiagrams/abstractClasses/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAbstract classes\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "uml/classDiagrams/associationClasses/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAssociation classes\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "uml/classDiagrams/associationClasses/what/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAssociation classes\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can interpret association classes in class diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Association classes are denoted as a connection to an association link using a dashed line as shown below.  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/classDiagrams/associationClasses/what/images/notation.png\" height\u003d\"100\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} In this example `Loan` is an association class because it stores information about the `borrows` association between the `User` and the `Book`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/classDiagrams/associationClasses/what/images/bookLoan.png\" height\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 24
    }
  },
  {
    "path": "uml/classDiagrams/associationsAsAttributes/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAssociations as attributes\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "uml/classDiagrams/associationsAsAttributes/what/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAssociations as attributes\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can show an association as an attribute\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**An association can be shown as an attribute instead of a line.** "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "Association multiplicities and the default value too can be shown as part of the attribute using the following notation. Both are optional. "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "`name: type [multiplicity]  \u003d default value`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The diagram below depicts a multi-player _Square Game_ being played on a board comprising of 100 squares. Each of the squares may be occupied with any number of pieces, each belonging to a certain player. "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "A `Piece` may or may not be on a `Square`.  Note how that association can be replaced by an `isOn` attribute of the `Piece` class. The `isOn` attribute can either be `null` or hold a reference to a `Square` object, matching the `0..1` multiplicity of the association it replaces. The default value is `null`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/classDiagrams/associationsAsAttributes/what/images/squareMultiplicity.png\" width\u003d\"600\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "The association that a `Board` has 100 `Square`s can be shown in either of these two ways:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/classDiagrams/associationsAsAttributes/what/images/board.png\" height\u003d\"70\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_important_big_red }} Show each association as **either an attribute or a line but not both**. A line is preferred is it is easier to spot."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 35
    }
  },
  {
    "path": "uml/classDiagrams/classInheritance/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eClass inheritance\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "uml/classDiagrams/classLevelMembers/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eClass-level members\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"what/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 6
    }
  },
  {
    "path": "uml/classDiagrams/classLevelMembers/what/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eClass-level members\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can interpret class-level members in class diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "In UML class diagrams, **underlines denote class-level attributes and variables.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} In the class below, `totalStudents` attribute and the `getTotalStudents` method are class-level."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/classDiagrams/classLevelMembers/what/images/student.png\" height\u003d\"120\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 22
    }
  },
  {
    "path": "uml/classDiagrams/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eClass diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"introduction/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"classes/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"associations/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"dependencies/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"associationsAsAttributes/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"enumerations/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"classLevelMembers/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"associationClasses/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"composition/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"aggregation/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"classInheritance/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"interfaces/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"abstractClasses/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"combine/container-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 19
    }
  },
  {
    "path": "uml/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfrontmatter\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"UML\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "pageNav: 3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/frontmatter\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"container-inPage-asFlat.md\" boilerplate /\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 5
    }
  },
  {
    "path": "uml/miscellaneous/objectVsClassDiagrams/q-tick-correctStatement.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpanel header\u003d\"{{ icon_Q_A }} Which class diagrams match object diagram?\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cquestion\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Which of these class diagrams match the given object diagram?"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/miscellaneous/objectVsClassDiagrams/images/exerciseDiagram.png\" height\u003d\"330\" /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "- [ ] 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "- [ ] 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv slot\u003d\"answer\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "(1) (2)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "Explanation: Both class diagrams allow one `Unit` object to be linked to one `Item` object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/question\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/panel\u003e"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 3,
      "-": 17
    }
  },
  {
    "path": "uml/miscellaneous/objectVsClassDiagrams/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eObject versus class diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can distinguish between class diagrams and object diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Compared to the notation for a class diagrams, object diagrams differ in the following ways:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "* Shows objects instead of classes:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  * Instance name may be shown"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  * There is a `:` before the class name"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  * Instance and class names are underlined"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "* Methods are omitted"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "* Multiplicities are omitted"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "Furthermore, **multiple object diagrams can correspond to a single class diagram**."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Both object diagrams are derived from the same class diagram shown earlier. In other words, each of these object diagrams shows ‘an instance of’ the same class diagram."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/miscellaneous/objectVsClassDiagrams/images/professorStudentAdmin.png\" height\u003d\"85\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/miscellaneous/objectVsClassDiagrams/images/professorStudent.png\" height\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"exercises.md\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 36
    }
  },
  {
    "path": "uml/objectDiagrams/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eObject diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"introduction/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"objects/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"associations/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 8
    }
  },
  {
    "path": "uml/sequenceDiagrams/alternativePaths/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eAlternative paths\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can interpret sequence diagrams with alternative paths\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**UML uses `alt` frames to indicate alternative paths.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "Notation:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/sequenceDiagrams/alternativePaths/images/notation.png\" height\u003d\"100\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} `Minefield` calls the `Cell#setMine` if the cell is supposed to be a mined cell, and calls the `Cell:setMineCount(...)` method otherwise."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/sequenceDiagrams/alternativePaths/images/minefieldCell.png\" height\u003d\"180\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 27
    }
  },
  {
    "path": "uml/sequenceDiagrams/minimalNotation/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eMinimal notation\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can interpret sequence diagrams with minimal notation\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "To reduce clutter, **activation bars and return arrows may be omitted** if they do not result in ambiguities or loss of information. Informal operation descriptions such as those given in the example below can be used, if more precise details are not required for the task at hand."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} A minimal sequence diagram"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c!-- TODO: add a more detailed version of the SD for comparison --\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/sequenceDiagrams/minimalNotation/images/textLogic.png\" height\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 24
    }
  },
  {
    "path": "uml/sequenceDiagrams/objectCreation/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eObject creation\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can interpret sequence diagrams with object creation\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Notation:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/sequenceDiagrams/objectCreation/images/notation.png\" height\u003d\"180\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "* The arrow that represents the constructor arrives at the side of the box representing the instance."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "* The activation bar represents the period the constructor is active."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The `Logic` object creates a `Minefield` object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/sequenceDiagrams/objectCreation/images/logicMinefield.png\" height\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 28
    }
  },
  {
    "path": "uml/sequenceDiagrams/objectDeletion/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eObject deletion\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can interpret sequence diagrams with object deletion\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**UML uses an `X` at the end of the lifeline of an object to show it\u0027s deletion.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_tip }} Although object deletion is not that important in languages such as Java that support automatic memory management, you can still show object deletion in UML diagrams to indicate the point at which the object ceases to be used."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "Notation:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/sequenceDiagrams/objectDeletion/images/notation.png\" height\u003d\"100\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} Note how the diagrams shows the deletion of the `Minefield` object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/sequenceDiagrams/objectDeletion/images/logicMinefield.png\" height\u003d\"120\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 33
    }
  },
  {
    "path": "uml/sequenceDiagrams/optionalPaths/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eOptional paths\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can interpret sequence diagrams with optional paths\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**UML uses `opt` frames to indicate optional paths.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "Notation:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/sequenceDiagrams/optionalPaths/images/notation.png\" height\u003d\"50\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} `Logic#markCellAt(...)` calls `Timer#start()` only if it is the first move of the player. "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/sequenceDiagrams/optionalPaths/images/logicTimer.png\" height\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 27
    }
  },
  {
    "path": "uml/sequenceDiagrams/parallelPaths/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can interpret sequence diagrams with parallel paths\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eParallel paths\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**UML uses `par` frames to indicate parallel paths.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "Notation:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/sequenceDiagrams/parallelPaths/images/notation.png\" height\u003d\"100\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} `Logic` is calling methods `CloudServer#poll()` and `LocalServer#poll()` in parallel."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/sequenceDiagrams/parallelPaths/images/logicServerData.png\" height\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_tip }} If you show parallel paths in a sequence diagram, the corresponding Java implementation is likely to be _multi-threaded_ %%because a normal Java program cannot do multiple things at the same time%%."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 33
    }
  },
  {
    "path": "uml/sequenceDiagrams/referenceFrames/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eReference frames\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can interpret sequence diagrams with reference frames\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**UML uses _ref frame_ to allow a segment of the interaction to be omitted and shown as a separate sequence diagram.** Reference frames help us to break complicated sequence diagrams into multiple parts or simply to omit details we are not interested in showing."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "Notation:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/sequenceDiagrams/referenceFrames/images/notation.png\" height\u003d\"100\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The details of the `get minefield appearance` interactions have been omitted from the diagram."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/sequenceDiagrams/referenceFrames/images/playerTextLogic.png\" height\u003d\"250\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "Those details are shown in a separate sequence diagram given below.\u003cbr\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/sequenceDiagrams/referenceFrames/images/textLogic.png\" height\u003d\"170\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 31
    }
  },
  {
    "path": "uml/sequenceDiagrams/selfInvocation/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eSelf invocation\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can interpret sequence diagrams with self invocation\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**UML can show a method of an object calling another of its own methods.**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "Notation:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/sequenceDiagrams/selfInvocation/images/notation.png\" height\u003d\"120\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} The `markCellAt(...)` method of a `Logic` object is calling its own `updateState(...)` method."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/sequenceDiagrams/selfInvocation/images/logic.png\" height\u003d\"100\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} In this variation, the `Book#write()` method is calling the `Chapter#getText()` method which in turn does a _call back_ by calling the `getAuthor()` method of the calling object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"{{baseUrl}}/uml/sequenceDiagrams/selfInvocation/images/callBack.png\" height\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 32
    }
  },
  {
    "path": "uml/sequenceDiagrams/staticMethods/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eCalls to static methods\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"prereqs\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan id\u003d\"outcomes\"\u003e{{ icon_outcome }} Can show calls to static methods\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Method calls to `static` i.e., class-level method are received by the class itself, not an instance of that class. We can use the `\u003c\u003cclass\u003e\u003e` to show that a participant is the class itself. "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbox\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{{ icon_example }} In this example, `m` calls the static method `Person.getMaxAge()` and also the `setAge()` method of a `Person` object `p`."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpuml src\u003d\"images/staticMethodCall.puml\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "Here is the `Person` class, for reference:\u003cbr\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cpuml src\u003d\"images/personClass.puml\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/box\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"extras\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 24
    }
  },
  {
    "path": "uml/sequenceDiagrams/text.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejas2805"
        },
        "content": "\u003cspan id\u003d\"title\"\u003eSequence diagrams\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv id\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"introduction/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"basic/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"objectCreation/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"objectDeletion/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"loops/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"selfInvocation/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"alternativePaths/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"optionalPaths/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"parallelPaths/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"referenceFrames/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"minimalNotation/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cinclude src\u003d\"staticMethods/unit-inParent-asPanel.md\" boilerplate /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Tejas2805": 1,
      "-": 17
    }
  }
]

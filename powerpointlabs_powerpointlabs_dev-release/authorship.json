[{"path":"PowerPointLabs/PowerPointLabs/ActionFramework/EffectsLab/BlurMenuContent/EffectsLabBlurrinessActionHandler.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using Microsoft.Office.Interop.PowerPoint;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Attribute;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Extension;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Interface;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Log;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"using PowerPointLabs.EffectsLab;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"using PowerPointLabs.TextCollection;"},{"lineNumber":9,"author":{"gitId":"iskandarzulkarnaien"},"content":"using PowerPointLabs.Utils;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.ActionFramework.EffectsLab"},{"lineNumber":12,"author":{"gitId":"-"},"content":"{"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    [ExportActionRibbonId(EffectsLabText.BlurrinessTag)]"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    class EffectsLabBlurrinessActionHandler : ActionHandler"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        protected override void ExecuteAction(string ribbonId)"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            this.StartNewUndoEntry();"},{"lineNumber":19,"author":{"gitId":"iskandarzulkarnaien"},"content":"            Models.PowerPointPresentation pres \u003d this.GetCurrentPresentation();"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"            bool isButton \u003d false;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            bool isCustom \u003d ribbonId.Contains(EffectsLabText.BlurrinessCustom);"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            int keywordIndex;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"            if (ribbonId.Contains(CommonText.DynamicMenuButtonId))"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                isButton \u003d true;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                keywordIndex \u003d ribbonId.IndexOf(CommonText.DynamicMenuButtonId);"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                keywordIndex \u003d ribbonId.IndexOf(CommonText.DynamicMenuOptionId);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"            string feature \u003d ribbonId.Substring(0, keywordIndex);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            Selection selection \u003d this.GetCurrentSelection();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            Models.PowerPointSlide slide \u003d this.GetCurrentSlide();"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"            if (isButton)"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                EffectsLabSettings.ShowBlurSettingsDialog(feature);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                this.GetRibbonUi().RefreshRibbonControl(feature + CommonText.DynamicMenuOptionId + EffectsLabText.BlurrinessCustom);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                int startIndex \u003d keywordIndex + CommonText.DynamicMenuOptionId.Length;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                int percentage \u003d isCustom ? GetCustomPercentage(feature) : int.Parse(ribbonId.Substring(startIndex, ribbonId.Length - startIndex));"},{"lineNumber":48,"author":{"gitId":"iskandarzulkarnaien"},"content":"                ExecuteBlurAction(feature, selection, pres, slide, percentage);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        private int GetCustomPercentage(string feature)"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            switch (feature)"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                case EffectsLabText.BlurrinessFeatureSelected:"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                    return EffectsLabSettings.CustomPercentageSelected;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                case EffectsLabText.BlurrinessFeatureRemainder:"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                    return EffectsLabSettings.CustomPercentageRemainder;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                case EffectsLabText.BlurrinessFeatureBackground:"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                    return EffectsLabSettings.CustomPercentageBackground;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                default:"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    Logger.Log(feature + \" does not exist!\", Common.Logger.LogType.Error);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    return -1;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"iskandarzulkarnaien"},"content":"        private void ExecuteBlurAction(string feature, Selection selection, Models.PowerPointPresentation pres, Models.PowerPointSlide slide, int percentage)"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":70,"author":{"gitId":"iskandarzulkarnaien"},"content":"            ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                switch (feature)"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                    case EffectsLabText.BlurrinessFeatureSelected:"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                        EffectsLabBlur.ExecuteBlurSelected(slide, selection, percentage);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                        break;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                    case EffectsLabText.BlurrinessFeatureRemainder:"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                        EffectsLabBlur.ExecuteBlurRemainder(slide, selection, percentage);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                        break;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                    case EffectsLabText.BlurrinessFeatureBackground:"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                        EffectsLabBlur.ExecuteBlurBackground(slide, selection, percentage);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                        break;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                    default:"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        Logger.Log(feature + \" does not exist!\", Common.Logger.LogType.Error);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                        break;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":87,"author":{"gitId":"iskandarzulkarnaien"},"content":"                return ClipboardUtil.ClipboardRestoreSuccess;"},{"lineNumber":88,"author":{"gitId":"iskandarzulkarnaien"},"content":"            }, pres, slide);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"iskandarzulkarnaien":7,"-":84}},{"path":"PowerPointLabs/PowerPointLabs/ActionFramework/EffectsLab/RecolorMenuContent/EffectsLabRecolorActionHandler.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using Microsoft.Office.Interop.PowerPoint;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Attribute;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Extension;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Interface;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Log;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"using PowerPointLabs.EffectsLab;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"using PowerPointLabs.Models;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"using PowerPointLabs.TextCollection;"},{"lineNumber":10,"author":{"gitId":"iskandarzulkarnaien"},"content":"using PowerPointLabs.Utils;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.ActionFramework.EffectsLab"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    [ExportActionRibbonId(EffectsLabText.RecolorTag)]"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    class EffectsLabRecolorActionHandler : ActionHandler"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        protected override void ExecuteAction(string ribbonId)"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            this.StartNewUndoEntry();"},{"lineNumber":20,"author":{"gitId":"iskandarzulkarnaien"},"content":"            PowerPointPresentation pres \u003d this.GetCurrentPresentation();"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            PowerPointSlide curSlide \u003d this.GetCurrentSlide();"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Selection selection \u003d this.GetCurrentSelection();"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"iskandarzulkarnaien"},"content":"            ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                if (ribbonId.Contains(EffectsLabText.RecolorRemainderMenuId))"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    if (ribbonId.Contains(EffectsLabText.GrayScaleTag))"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                        EffectsLabRecolor.GrayScaleRemainderEffect(curSlide, selection);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    else if (ribbonId.Contains(EffectsLabText.BlackWhiteTag))"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                        EffectsLabRecolor.BlackWhiteRemainderEffect(curSlide, selection);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    else if (ribbonId.Contains(EffectsLabText.GothamTag))"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                        EffectsLabRecolor.GothamRemainderEffect(curSlide, selection);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    else if (ribbonId.Contains(EffectsLabText.SepiaTag))"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                        EffectsLabRecolor.SepiaRemainderEffect(curSlide, selection);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    else"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                        Logger.Log(ribbonId + \" does not exist!\", Common.Logger.LogType.Error);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                else if (ribbonId.Contains(EffectsLabText.RecolorBackgroundMenuId))"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                    if (ribbonId.Contains(EffectsLabText.GrayScaleTag))"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                        EffectsLabRecolor.GrayScaleBackgroundEffect(curSlide, selection);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                    else if (ribbonId.Contains(EffectsLabText.BlackWhiteTag))"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                        EffectsLabRecolor.BlackWhiteBackgroundEffect(curSlide, selection);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                    else if (ribbonId.Contains(EffectsLabText.GothamTag))"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                        EffectsLabRecolor.GothamBackgroundEffect(curSlide, selection);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    else if (ribbonId.Contains(EffectsLabText.SepiaTag))"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                        EffectsLabRecolor.SepiaBackgroundEffect(curSlide, selection);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                    else"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                        Logger.Log(ribbonId + \" does not exist!\", Common.Logger.LogType.Error);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                    Logger.Log(ribbonId + \" does not exist!\", Common.Logger.LogType.Error);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":76,"author":{"gitId":"iskandarzulkarnaien"},"content":"                return ClipboardUtil.ClipboardRestoreSuccess;"},{"lineNumber":77,"author":{"gitId":"iskandarzulkarnaien"},"content":"            }, pres, curSlide);"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"iskandarzulkarnaien":5,"-":75}},{"path":"PowerPointLabs/PowerPointLabs/ActionFramework/EffectsLab/Spotlight/AddSpotlight/AddSpotlightActionHandler.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using PowerPointLabs.ActionFramework.Common.Attribute;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Extension;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Interface;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"using PowerPointLabs.EffectsLab;"},{"lineNumber":5,"author":{"gitId":"iskandarzulkarnaien"},"content":"using PowerPointLabs.Models;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"using PowerPointLabs.TextCollection;"},{"lineNumber":7,"author":{"gitId":"iskandarzulkarnaien"},"content":"using PowerPointLabs.Utils;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.ActionFramework.EffectsLab"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    [ExportActionRibbonId(EffectsLabText.AddSpotlightTag)]"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    class AddSpotlightActionHandler : ActionHandler"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        protected override void ExecuteAction(string ribbonId)"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            if (this.GetAddIn().Application.ActiveWindow.Selection.Type !\u003d"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                Microsoft.Office.Interop.PowerPoint.PpSelectionType.ppSelectionShapes)"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"            this.StartNewUndoEntry();"},{"lineNumber":23,"author":{"gitId":"iskandarzulkarnaien"},"content":"            PowerPointPresentation pres \u003d this.GetCurrentPresentation();"},{"lineNumber":24,"author":{"gitId":"iskandarzulkarnaien"},"content":"            PowerPointSlide slide \u003d this.GetCurrentSlide();"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"iskandarzulkarnaien"},"content":"            ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"},{"lineNumber":27,"author":{"gitId":"iskandarzulkarnaien"},"content":"            {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                Spotlight.AddSpotlightEffect();"},{"lineNumber":29,"author":{"gitId":"iskandarzulkarnaien"},"content":"                return ClipboardUtil.ClipboardRestoreSuccess;"},{"lineNumber":30,"author":{"gitId":"iskandarzulkarnaien"},"content":"            }, pres, slide);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"iskandarzulkarnaien":8,"-":25}},{"path":"PowerPointLabs/PowerPointLabs/ActionFramework/PasteLab/PasteIntoGroup/PasteIntoGroupActionHandler.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using System.Windows;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"using Microsoft.Office.Interop.PowerPoint;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Attribute;"},{"lineNumber":6,"author":{"gitId":"iskandarzulkarnaien"},"content":"using PowerPointLabs.ActionFramework.Common.Extension;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Log;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"using PowerPointLabs.Models;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"using PowerPointLabs.PasteLab;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"using PowerPointLabs.TextCollection;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"using PowerPointLabs.Utils;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.ActionFramework.PasteLab"},{"lineNumber":14,"author":{"gitId":"-"},"content":"{"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    [ExportActionRibbonId(PasteLabText.PasteIntoGroupTag)]"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    class PasteIntoGroupActionHandler : PasteLabActionHandler"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        protected override ShapeRange ExecutePasteAction(string ribbonId, PowerPointPresentation presentation, PowerPointSlide slide,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                                                        ShapeRange selectedShapes, ShapeRange selectedChildShapes)"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            if (selectedShapes.Count \u003c\u003d 0)"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                Logger.Log(\"PasteIntoGroup failed. No valid shape is selected.\");"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                return null;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"            if (selectedShapes.Count \u003d\u003d 1 \u0026\u0026 !selectedShapes[1].IsAGroup())"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                Logger.Log(\"PasteIntoGroup failed. Selection is only a single shape.\");"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                return null;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"iskandarzulkarnaien"},"content":"            this.StartNewUndoEntry();"},{"lineNumber":34,"author":{"gitId":"iskandarzulkarnaien"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"            ShapeRange pastingShapes \u003d ClipboardUtil.PasteShapesFromClipboard(presentation, slide);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            if (pastingShapes \u003d\u003d null)"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                Logger.Log(\"PasteLab: Could not paste clipboard contents.\");"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                MessageBox.Show(PasteLabText.ErrorPaste, PasteLabText.ErrorDialogTitle);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                return null;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return PasteIntoGroup.Execute(presentation, slide, selectedShapes, pastingShapes);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"iskandarzulkarnaien":3,"-":43}},{"path":"PowerPointLabs/PowerPointLabs/ActionFramework/PasteLab/ReplaceWithClipboard/ReplaceWithClipboardActionHandler.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using System.Windows.Forms;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"using Microsoft.Office.Interop.PowerPoint;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Attribute;"},{"lineNumber":6,"author":{"gitId":"iskandarzulkarnaien"},"content":"using PowerPointLabs.ActionFramework.Common.Extension;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Log;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"using PowerPointLabs.Models;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"using PowerPointLabs.PasteLab;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"using PowerPointLabs.TextCollection;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"using PowerPointLabs.Utils;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.ActionFramework.PasteLab"},{"lineNumber":14,"author":{"gitId":"-"},"content":"{"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    [ExportActionRibbonId(PasteLabText.ReplaceWithClipboardTag)]"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    class ReplaceWithClipboardActionHandler : PasteLabActionHandler"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        protected override ShapeRange ExecutePasteAction(string ribbonId, PowerPointPresentation presentation, PowerPointSlide slide,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                                                        ShapeRange selectedShapes, ShapeRange selectedChildShapes)"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            if (selectedShapes.Count \u003c\u003d 0)"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                MessageBox.Show(TextCollection.PasteLabText.ReplaceWithClipboardActionHandlerReminderText, TextCollection.CommonText.ErrorTitle);"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                return null;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"iskandarzulkarnaien"},"content":"            this.StartNewUndoEntry();"},{"lineNumber":28,"author":{"gitId":"iskandarzulkarnaien"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"            ShapeRange pastingShapes \u003d ClipboardUtil.PasteShapesFromClipboard(presentation, slide);"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            if (pastingShapes \u003d\u003d null)"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                Logger.Log(\"PasteLab: Could not paste clipboard contents.\");"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                MessageBox.Show(PasteLabText.ErrorPaste, PasteLabText.ErrorDialogTitle);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                return null;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return ReplaceWithClipboard.Execute(presentation, slide, selectedShapes, selectedChildShapes, pastingShapes);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"iskandarzulkarnaien":3,"-":37}},{"path":"PowerPointLabs/PowerPointLabs/ActionFramework/ZoomLab/DrillDown/DrillDownActionHandler.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using PowerPointLabs.ActionFramework.Common.Attribute;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Extension;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Interface;"},{"lineNumber":4,"author":{"gitId":"iskandarzulkarnaien"},"content":"using PowerPointLabs.Models;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"using PowerPointLabs.TextCollection;"},{"lineNumber":6,"author":{"gitId":"iskandarzulkarnaien"},"content":"using PowerPointLabs.Utils;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"using PowerPointLabs.ZoomLab;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.ActionFramework.ZoomLab"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    [ExportActionRibbonId(ZoomLabText.DrillDownTag)]"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    class DrillDownActionHandler : ActionHandler"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        protected override void ExecuteAction(string ribbonId)"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            this.StartNewUndoEntry();"},{"lineNumber":17,"author":{"gitId":"iskandarzulkarnaien"},"content":"            PowerPointPresentation pres \u003d this.GetCurrentPresentation();"},{"lineNumber":18,"author":{"gitId":"iskandarzulkarnaien"},"content":"            PowerPointSlide slide \u003d this.GetCurrentSlide();"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"iskandarzulkarnaien"},"content":"            AutoZoom.AddDrillDownAnimation(pres, slide);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"iskandarzulkarnaien":5,"-":18}},{"path":"PowerPointLabs/PowerPointLabs/ActionFramework/ZoomLab/StepBack/StepBackActionHandler.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using PowerPointLabs.ActionFramework.Common.Attribute;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Extension;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Interface;"},{"lineNumber":4,"author":{"gitId":"iskandarzulkarnaien"},"content":"using PowerPointLabs.Models;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"using PowerPointLabs.TextCollection;"},{"lineNumber":6,"author":{"gitId":"iskandarzulkarnaien"},"content":"using PowerPointLabs.Utils;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"using PowerPointLabs.ZoomLab;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.ActionFramework.ZoomLab"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    [ExportActionRibbonId(ZoomLabText.StepBackTag)]"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    class StepBackActionHandler : ActionHandler"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        protected override void ExecuteAction(string ribbonId)"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            this.StartNewUndoEntry();"},{"lineNumber":17,"author":{"gitId":"iskandarzulkarnaien"},"content":"            PowerPointPresentation pres \u003d this.GetCurrentPresentation();"},{"lineNumber":18,"author":{"gitId":"iskandarzulkarnaien"},"content":"            PowerPointSlide slide \u003d this.GetCurrentSlide();"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"iskandarzulkarnaien"},"content":"            AutoZoom.AddStepBackAnimation(pres, slide);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"iskandarzulkarnaien":5,"-":18}},{"path":"PowerPointLabs/PowerPointLabs/ActionFramework/ZoomLab/ZoomToArea/ZoomToAreaActionHandler.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using PowerPointLabs.ActionFramework.Common.Attribute;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Extension;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Interface;"},{"lineNumber":4,"author":{"gitId":"iskandarzulkarnaien"},"content":"using PowerPointLabs.Models;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"using PowerPointLabs.TextCollection;"},{"lineNumber":6,"author":{"gitId":"iskandarzulkarnaien"},"content":"using PowerPointLabs.Utils;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"using PowerPointLabs.ZoomLab;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.ActionFramework.ZoomLab"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    [ExportActionRibbonId(ZoomLabText.ZoomToAreaTag)]"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    class ZoomToAreaActionHandler : ActionHandler"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        protected override void ExecuteAction(string ribbonId)"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            this.StartNewUndoEntry();"},{"lineNumber":17,"author":{"gitId":"iskandarzulkarnaien"},"content":"            PowerPointPresentation pres \u003d this.GetCurrentPresentation();"},{"lineNumber":18,"author":{"gitId":"iskandarzulkarnaien"},"content":"            PowerPointSlide slide \u003d this.GetCurrentSlide();"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"iskandarzulkarnaien"},"content":"            ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"},{"lineNumber":21,"author":{"gitId":"iskandarzulkarnaien"},"content":"            {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                ZoomToArea.AddZoomToArea();"},{"lineNumber":23,"author":{"gitId":"iskandarzulkarnaien"},"content":"                return ClipboardUtil.ClipboardRestoreSuccess;"},{"lineNumber":24,"author":{"gitId":"iskandarzulkarnaien"},"content":"            }, pres, slide);"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"iskandarzulkarnaien":8,"-":19}},{"path":"PowerPointLabs/PowerPointLabs/AgendaLab/AgendaLabMain.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using System;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"using System.Collections.Generic;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"using System.Drawing;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"using System.Linq;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"using System.Runtime.InteropServices;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"using System.Windows.Forms;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"using Microsoft.Office.Core;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"using Microsoft.Office.Interop.PowerPoint;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Extension;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"using PowerPointLabs.AgendaLab.Templates;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"using PowerPointLabs.ColorThemes.Extensions;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"using PowerPointLabs.FunctionalTestInterface.Impl;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"using PowerPointLabs.Models;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"using PowerPointLabs.TextCollection;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"using PowerPointLabs.Utils;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"using PowerPointLabs.Views;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"using GraphicsUtil \u003d PowerPointLabs.Utils.GraphicsUtil;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.AgendaLab"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /// \u003csummary\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /// The sections should not change during generation / syncing."},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /// \u003c/summary\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    internal static partial class AgendaLabMain"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"#pragma warning disable 0618"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        private static LoadingDialogBox _loadDialog \u003d new LoadingDialogBox();"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"        private const int SectionNameMaxLength \u003d 180;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"        #region Bullet Formats"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        private struct BulletFormats"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            public readonly TextRange2 Visited;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            public readonly TextRange2 Highlighted;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            public readonly TextRange2 Unvisited;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"            private BulletFormats(TextRange2 visited, TextRange2 highlighted, TextRange2 unvisited)"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                Visited \u003d visited;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                Highlighted \u003d highlighted;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                Unvisited \u003d unvisited;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"            /// \u003csummary\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            /// Assumes the number of paragraphs \u003e\u003d 3."},{"lineNumber":51,"author":{"gitId":"-"},"content":"            /// The check should have been done before this function is called."},{"lineNumber":52,"author":{"gitId":"-"},"content":"            /// \u003c/summary\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            public static BulletFormats ExtractFormats(Shape contentShape)"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                List\u003cTextRange2\u003e paragraphs \u003d contentShape.TextFrame2.TextRange.Paragraphs.Cast\u003cTextRange2\u003e().ToList();"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                return new BulletFormats(paragraphs[0],"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                                        paragraphs[1],"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                                        paragraphs[2]);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        #region Beam Formats"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        private struct BeamFormats"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            public readonly TextRange2 Highlighted;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            public readonly TextRange2 Regular;"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"            private BeamFormats(TextRange2 highlighted, TextRange2 regular)"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                Highlighted \u003d highlighted;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                Regular \u003d regular;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"            /// \u003csummary\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            /// Assumes that a \"Highlighted Format\" textbox exists,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            /// and that there is at last one regular textbox."},{"lineNumber":78,"author":{"gitId":"-"},"content":"            /// \u003c/summary\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            public static BeamFormats ExtractFormats(Shape beamShape)"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                Shape beamText \u003d GetShapeWithPurpose(beamShape, ShapePurpose.BeamShapeHighlightedText);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                Shape regularText \u003d GetShapeWithPurpose(beamShape, ShapePurpose.BeamShapeText);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                return new BeamFormats(beamText.TextFrame2.TextRange, regularText.TextFrame2.TextRange);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"            public static Shape GetShapeWithPurpose(Shape beamShape, ShapePurpose purpose)"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                return beamShape.GroupItems.Cast\u003cShape\u003e().FirstOrDefault(AgendaShape.WithPurpose(purpose));"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"            public static List\u003cShape\u003e GetAllShapesWithPurpose(Shape beamShape, ShapePurpose purpose)"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                return beamShape.GroupItems.Cast\u003cShape\u003e().Where(AgendaShape.WithPurpose(purpose)).ToList();"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"        #region API"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public static void GenerateAgenda(Type type)"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            bool dialogOpen \u003d false;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            DocumentWindow currentWindow \u003d Globals.ThisAddIn.Application.ActiveWindow;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            PpViewType oldViewType \u003d currentWindow.ViewType;"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                SlideSelectionTracker slideTracker \u003d new SlideSelectionTracker(SelectedSlides, CurrentSlide);"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"                if (AgendaPresent())"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                    DialogResult confirm \u003d MessageBox.Show(AgendaLabText.ErrorAgendaExist,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                                  AgendaLabText.ErrorAgendaExistTitle,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                                                  MessageBoxButtons.OKCancel);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                    if (confirm !\u003d DialogResult.OK)"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        return;"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"                    RemoveAllAgendaItems(slideTracker);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"                if (!ValidSections())"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    return;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"                // The process should not abort (return) anytime past this point. Changes will start being made past this point."},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"                slideTracker.DeleteAcknowledgementSlideAndTrack();"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"                dialogOpen \u003d DisplayLoadingDialog(AgendaLabText.GeneratingDialogTitle,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                                                    AgendaLabText.GeneratingDialogContent);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                currentWindow.ViewType \u003d PpViewType.ppViewNormal;"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"iskandarzulkarnaien"},"content":"                PowerPointPresentation pres \u003d PowerPointPresentation.Current;"},{"lineNumber":136,"author":{"gitId":"iskandarzulkarnaien"},"content":"                PowerPointSlide slide \u003d PowerPointCurrentPresentationInfo.CurrentSlide;"},{"lineNumber":137,"author":{"gitId":"iskandarzulkarnaien"},"content":""},{"lineNumber":138,"author":{"gitId":"iskandarzulkarnaien"},"content":"                ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                    switch (type)"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                        case Type.Beam:"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                            CreateBeamAgenda(slideTracker);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                            break;"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                        case Type.Bullet:"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                            CreateBulletAgenda(slideTracker);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                            break;"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                        case Type.Visual:"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                            CreateVisualAgenda(slideTracker);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                            break;"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":152,"author":{"gitId":"iskandarzulkarnaien"},"content":"                    return ClipboardUtil.ClipboardRestoreSuccess;"},{"lineNumber":153,"author":{"gitId":"iskandarzulkarnaien"},"content":"                }, pres, slide);"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"iskandarzulkarnaien"},"content":"                pres.AddAckSlide();"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                SelectOriginalSlide(slideTracker.UserCurrentSlide, PowerPointPresentation.Current.FirstSlide);"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            finally"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                if (dialogOpen)"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                    DisposeLoadingDialog();"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                currentWindow.ViewType \u003d oldViewType;"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public static void RemoveAgenda()"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            DocumentWindow currentWindow \u003d Globals.ThisAddIn.Application.ActiveWindow;"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            PpViewType oldViewType \u003d currentWindow.ViewType;"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                SlideSelectionTracker slideTracker \u003d new SlideSelectionTracker(SelectedSlides, CurrentSlide);"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"                if (!AgendaPresent())"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                    ShowErrorMessage(AgendaLabText.ErrorNoAgenda);"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                    return;"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"                // The process should not abort (return) anytime past this point. Changes will start being made past this point."},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"                currentWindow.ViewType \u003d PpViewType.ppViewNormal;"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"                RemoveAllAgendaItems(slideTracker);"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"                SelectOriginalSlide(slideTracker.UserCurrentSlide, PowerPointPresentation.Current.FirstSlide);"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            finally"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                currentWindow.ViewType \u003d oldViewType;"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public static void SynchronizeAgenda()"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            bool dialogOpen \u003d false;"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            DocumentWindow currentWindow \u003d Globals.ThisAddIn.Application.ActiveWindow;"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            PpViewType oldViewType \u003d currentWindow.ViewType;"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                SlideSelectionTracker slideTracker \u003d new SlideSelectionTracker(SelectedSlides, CurrentSlide);"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                PowerPointSlide refSlide \u003d FindReferenceSlide();"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                Type type \u003d GetReferenceSlideType();"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                bool usingNewReferenceSlide \u003d false;"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"                if (refSlide \u003d\u003d null)"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                    type \u003d GetAnyAgendaSlideType();"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                    refSlide \u003d TryFindSuitableRefSlide(type);"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                    usingNewReferenceSlide \u003d true;"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"                if (!ValidAgenda(refSlide, type))"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                    return;"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"-"},"content":"                if (!ValidSections())"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    return;"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":"                // The process should not abort (return) anytime past this point. Changes will start being made past this point."},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"                if (usingNewReferenceSlide)"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                    SetAsReferenceSlide(refSlide, type);"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":233,"author":{"gitId":"-"},"content":""},{"lineNumber":234,"author":{"gitId":"-"},"content":"                slideTracker.DeleteAcknowledgementSlideAndTrack();"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                dialogOpen \u003d DisplayLoadingDialog(AgendaLabText.SynchronizingDialogTitle,"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                                                    AgendaLabText.SynchronizingDialogContent);"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                currentWindow.ViewType \u003d PpViewType.ppViewNormal;"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"                BringToFront(refSlide);"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                "},{"lineNumber":241,"author":{"gitId":"-"},"content":"                SlideUtil.CopyToDesign(\"Agenda Template\", refSlide);"},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"iskandarzulkarnaien"},"content":"                PowerPointPresentation pres \u003d PowerPointPresentation.Current;"},{"lineNumber":244,"author":{"gitId":"iskandarzulkarnaien"},"content":"                PowerPointSlide slide \u003d PowerPointCurrentPresentationInfo.CurrentSlide;"},{"lineNumber":245,"author":{"gitId":"iskandarzulkarnaien"},"content":""},{"lineNumber":246,"author":{"gitId":"iskandarzulkarnaien"},"content":"                ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                    switch (type)"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                        case Type.Beam:"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                            SyncBeamAgenda(slideTracker, refSlide);"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                            break;"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                        case Type.Bullet:"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                            SyncBulletAgenda(slideTracker, refSlide);"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                            break;"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                        case Type.Visual:"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                            SyncVisualAgenda(slideTracker, refSlide);"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                            break;"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":260,"author":{"gitId":"iskandarzulkarnaien"},"content":"                    return ClipboardUtil.ClipboardRestoreSuccess;"},{"lineNumber":261,"author":{"gitId":"iskandarzulkarnaien"},"content":"                }, pres, slide);"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"iskandarzulkarnaien"},"content":"                pres.AddAckSlide();"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                SelectOriginalSlide(slideTracker.UserCurrentSlide, PowerPointPresentation.Current.FirstSlide);"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            finally"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                if (dialogOpen)"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                    DisposeLoadingDialog();"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                currentWindow.ViewType \u003d oldViewType;"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"-"},"content":"        #region Actions - Creation"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        /// Assumption: no reference slide exists"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        private static void CreateBulletAgenda(SlideSelectionTracker slideTracker)"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            PowerPointSlide refSlide \u003d CreateBulletReferenceSlide();"},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"-"},"content":"            // here we invoke sync logic, since it\u0027s the same behavior as sync"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            SyncBulletAgendaSlides(slideTracker, refSlide);"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":291,"author":{"gitId":"-"},"content":""},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        /// Assumption: no reference slide exists"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        private static void CreateVisualAgenda(SlideSelectionTracker slideTracker)"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            PowerPointSlide refSlide \u003d CreateVisualReferenceSlide();"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"            // here we invoke sync logic, since it\u0027s the same behavior as sync"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            SyncVisualAgendaSlides(slideTracker, refSlide);"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        /// Assumption: no reference slide exists"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        private static void CreateBeamAgenda(SlideSelectionTracker slideTracker)"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            PowerPointSlide refSlide \u003d CreateBeamReferenceSlide();"},{"lineNumber":311,"author":{"gitId":"-"},"content":""},{"lineNumber":312,"author":{"gitId":"-"},"content":"            List\u003cPowerPointSlide\u003e targetSlides \u003d slideTracker.SelectedSlides;"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            if (targetSlides.Count \u003d\u003d 0)"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                // If no slides selected, generate on all slides."},{"lineNumber":316,"author":{"gitId":"-"},"content":"                targetSlides \u003d AllSlidesAfterFirstSection();"},{"lineNumber":317,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":318,"author":{"gitId":"-"},"content":"            else if (targetSlides.Count \u003d\u003d 1)"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                // If only one slide selected, ask whether the user wants to generate on all slides."},{"lineNumber":321,"author":{"gitId":"-"},"content":"                DialogResult confirmResult \u003d MessageBox.Show(new Form { TopMost \u003d true },"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                                                    AgendaLabText.BeamGenerateSingleSlideDialogContent,"},{"lineNumber":323,"author":{"gitId":"-"},"content":"                                                    AgendaLabText.BeamGenerateSingleSlideDialogTitle,"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                                                    MessageBoxButtons.YesNo);"},{"lineNumber":325,"author":{"gitId":"-"},"content":"                if (confirmResult \u003d\u003d DialogResult.Yes)"},{"lineNumber":326,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":327,"author":{"gitId":"-"},"content":"                    targetSlides \u003d AllSlidesAfterFirstSection();"},{"lineNumber":328,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":329,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"            // here we invoke sync logic, since it\u0027s the same behavior as sync"},{"lineNumber":332,"author":{"gitId":"-"},"content":"            SyncBeamOnSlides(targetSlides, refSlide);"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":336,"author":{"gitId":"-"},"content":""},{"lineNumber":337,"author":{"gitId":"-"},"content":""},{"lineNumber":338,"author":{"gitId":"-"},"content":"        #region Reference Slide Creation - Beam"},{"lineNumber":339,"author":{"gitId":"-"},"content":""},{"lineNumber":340,"author":{"gitId":"-"},"content":"        private static PowerPointSlide CreateBeamReferenceSlide()"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":342,"author":{"gitId":"-"},"content":"            PowerPointSlide refSlide \u003d PowerPointSlide.FromSlideFactory(PowerPointPresentation.Current"},{"lineNumber":343,"author":{"gitId":"-"},"content":"                                                            .Presentation"},{"lineNumber":344,"author":{"gitId":"-"},"content":"                                                            .Slides"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                                                            .Add(1, PpSlideLayout.ppLayoutBlank));"},{"lineNumber":346,"author":{"gitId":"-"},"content":""},{"lineNumber":347,"author":{"gitId":"-"},"content":"            CreateBeamAgendaShapes(refSlide);"},{"lineNumber":348,"author":{"gitId":"-"},"content":""},{"lineNumber":349,"author":{"gitId":"-"},"content":"            AgendaSlide.SetAsReferenceSlideName(refSlide, Type.Beam);"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            refSlide.AddTemplateSlideMarker();"},{"lineNumber":351,"author":{"gitId":"-"},"content":"            refSlide.Hidden \u003d true;"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"-"},"content":"            SlideUtil.CopyToDesign(\"Agenda Template\", refSlide);"},{"lineNumber":354,"author":{"gitId":"-"},"content":""},{"lineNumber":355,"author":{"gitId":"-"},"content":"            return refSlide;"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":357,"author":{"gitId":"-"},"content":""},{"lineNumber":358,"author":{"gitId":"-"},"content":"        private static void CreateBeamAgendaShapes(PowerPointSlide refSlide, Direction beamDirection \u003d Direction.Top)"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":360,"author":{"gitId":"-"},"content":"            List\u003cAgendaSection\u003e sections \u003d GetAllButFirstSection();"},{"lineNumber":361,"author":{"gitId":"-"},"content":""},{"lineNumber":362,"author":{"gitId":"-"},"content":"            Shape background \u003d PrepareBeamAgendaBackground(refSlide);"},{"lineNumber":363,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e textBoxes \u003d CreateBeamAgendaTextBoxes(refSlide, sections);"},{"lineNumber":364,"author":{"gitId":"-"},"content":"            Shape highlightedTextBox \u003d CreateHighlightedTextBox(refSlide);"},{"lineNumber":365,"author":{"gitId":"-"},"content":"            SetupBeamTextBoxPositions(textBoxes, highlightedTextBox, background);"},{"lineNumber":366,"author":{"gitId":"-"},"content":"            MatchColor(highlightedTextBox, background);"},{"lineNumber":367,"author":{"gitId":"-"},"content":""},{"lineNumber":368,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e beamShapeItems \u003d new List\u003cShape\u003e();"},{"lineNumber":369,"author":{"gitId":"-"},"content":"            beamShapeItems.Add(background);"},{"lineNumber":370,"author":{"gitId":"-"},"content":"            beamShapeItems.Add(highlightedTextBox);"},{"lineNumber":371,"author":{"gitId":"-"},"content":"            beamShapeItems.AddRange(textBoxes);"},{"lineNumber":372,"author":{"gitId":"-"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"            Shape group \u003d refSlide.GroupShapes(beamShapeItems);"},{"lineNumber":374,"author":{"gitId":"-"},"content":"            AgendaShape.SetShapeName(group, ShapePurpose.BeamShapeMainGroup, AgendaSection.None);"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":376,"author":{"gitId":"-"},"content":""},{"lineNumber":377,"author":{"gitId":"-"},"content":"        private static List\u003cShape\u003e CreateBeamAgendaTextBoxes(PowerPointSlide refSlide, List\u003cAgendaSection\u003e sections)"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":379,"author":{"gitId":"-"},"content":"            return sections.Select(section \u003d\u003e PrepareBeamAgendaBeamItem(refSlide, section)).ToList();"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"-"},"content":"        private static void SetupBeamTextBoxPositions(List\u003cShape\u003e textBoxes, Shape highlightedTextBox, Shape background \u003d null)"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":384,"author":{"gitId":"-"},"content":"            float slideWidth \u003d PowerPointPresentation.Current.SlideWidth;"},{"lineNumber":385,"author":{"gitId":"-"},"content":"            Single slideHeight \u003d PowerPointPresentation.Current.SlideHeight;"},{"lineNumber":386,"author":{"gitId":"-"},"content":"            float itemWidth \u003d textBoxes.Select(textBox \u003d\u003e textBox.Width).Max();"},{"lineNumber":387,"author":{"gitId":"-"},"content":"            float itemHeight \u003d textBoxes.Select(textBox \u003d\u003e textBox.Height).Max();"},{"lineNumber":388,"author":{"gitId":"-"},"content":""},{"lineNumber":389,"author":{"gitId":"-"},"content":"            float spacing \u003d Math.Max(itemWidth, slideWidth/textBoxes.Count);"},{"lineNumber":390,"author":{"gitId":"-"},"content":"            int columnCount \u003d (int) (slideWidth/spacing + 0.01f); // +0.01f to cater to rounding errors."},{"lineNumber":391,"author":{"gitId":"-"},"content":"            int rowCount \u003d CommonUtil.CeilingDivide(textBoxes.Count, columnCount);"},{"lineNumber":392,"author":{"gitId":"-"},"content":""},{"lineNumber":393,"author":{"gitId":"-"},"content":"            float left \u003d 0f;"},{"lineNumber":394,"author":{"gitId":"-"},"content":"            float leftOffset \u003d (slideWidth - columnCount*spacing)/2;"},{"lineNumber":395,"author":{"gitId":"-"},"content":"            Single top \u003d 0f;"},{"lineNumber":396,"author":{"gitId":"-"},"content":""},{"lineNumber":397,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c textBoxes.Count; ++i)"},{"lineNumber":398,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":399,"author":{"gitId":"-"},"content":"                int x \u003d i%columnCount;"},{"lineNumber":400,"author":{"gitId":"-"},"content":"                int y \u003d i/columnCount;"},{"lineNumber":401,"author":{"gitId":"-"},"content":""},{"lineNumber":402,"author":{"gitId":"-"},"content":"                Shape textBox \u003d textBoxes[i];"},{"lineNumber":403,"author":{"gitId":"-"},"content":"                textBox.Left \u003d left + leftOffset + x*spacing + (spacing - textBox.Width)/2;"},{"lineNumber":404,"author":{"gitId":"-"},"content":"                textBox.Top \u003d top + y*itemHeight;"},{"lineNumber":405,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":406,"author":{"gitId":"-"},"content":""},{"lineNumber":407,"author":{"gitId":"-"},"content":"            if (background !\u003d null)"},{"lineNumber":408,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":409,"author":{"gitId":"-"},"content":"                background.Left \u003d 0f;"},{"lineNumber":410,"author":{"gitId":"-"},"content":"                background.Top \u003d 0f;"},{"lineNumber":411,"author":{"gitId":"-"},"content":"                background.Height \u003d rowCount*itemHeight;"},{"lineNumber":412,"author":{"gitId":"-"},"content":"                background.Width \u003d slideWidth;"},{"lineNumber":413,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":414,"author":{"gitId":"-"},"content":""},{"lineNumber":415,"author":{"gitId":"-"},"content":"            highlightedTextBox.Top \u003d rowCount*itemHeight;"},{"lineNumber":416,"author":{"gitId":"-"},"content":"            highlightedTextBox.Left \u003d (slideWidth - highlightedTextBox.Width)/2;"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":418,"author":{"gitId":"-"},"content":""},{"lineNumber":419,"author":{"gitId":"-"},"content":"        private static void MatchColor(Shape highlightedTextBox, Shape background)"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":421,"author":{"gitId":"-"},"content":"            if (background \u003d\u003d null)"},{"lineNumber":422,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":423,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":424,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":425,"author":{"gitId":"-"},"content":""},{"lineNumber":426,"author":{"gitId":"-"},"content":"            highlightedTextBox.Fill.ForeColor.RGB \u003d background.Fill.ForeColor.RGB;"},{"lineNumber":427,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"        private static Shape CreateHighlightedTextBox(PowerPointSlide slide)"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":431,"author":{"gitId":"-"},"content":"            Shape textBox \u003d slide.Shapes.AddTextbox(MsoTextOrientation.msoTextOrientationHorizontal,"},{"lineNumber":432,"author":{"gitId":"-"},"content":"                                                  0, 0, 0, 0);"},{"lineNumber":433,"author":{"gitId":"-"},"content":""},{"lineNumber":434,"author":{"gitId":"-"},"content":"            AgendaShape.SetShapeName(textBox, ShapePurpose.BeamShapeHighlightedText, AgendaSection.None);"},{"lineNumber":435,"author":{"gitId":"-"},"content":"            textBox.TextFrame.AutoSize \u003d PpAutoSize.ppAutoSizeShapeToFitText;"},{"lineNumber":436,"author":{"gitId":"-"},"content":"            textBox.TextFrame.WordWrap \u003d MsoTriState.msoFalse;"},{"lineNumber":437,"author":{"gitId":"-"},"content":"            textBox.TextFrame.TextRange.Text \u003d AgendaLabText.BeamHighlightedText;"},{"lineNumber":438,"author":{"gitId":"-"},"content":"            textBox.TextFrame.TextRange.Font.Color.RGB \u003d GraphicsUtil.ConvertColorToRgb(Color.Yellow);"},{"lineNumber":439,"author":{"gitId":"-"},"content":""},{"lineNumber":440,"author":{"gitId":"-"},"content":"            return textBox;"},{"lineNumber":441,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":442,"author":{"gitId":"-"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"        private static Shape PrepareBeamAgendaBackground(PowerPointSlide slide)"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":445,"author":{"gitId":"-"},"content":"            Shape background \u003d slide.Shapes.AddShape(MsoAutoShapeType.msoShapeRectangle, 0, 0, 0, 0);"},{"lineNumber":446,"author":{"gitId":"-"},"content":""},{"lineNumber":447,"author":{"gitId":"-"},"content":"            AgendaShape.SetShapeName(background, ShapePurpose.BeamShapeBackground, AgendaSection.None);"},{"lineNumber":448,"author":{"gitId":"-"},"content":"            background.Line.Visible \u003d MsoTriState.msoFalse;"},{"lineNumber":449,"author":{"gitId":"-"},"content":"            background.Fill.ForeColor.RGB \u003d GraphicsUtil.ConvertColorToRgb(Color.Black);"},{"lineNumber":450,"author":{"gitId":"-"},"content":"            background.Width \u003d PowerPointPresentation.Current.SlideWidth;"},{"lineNumber":451,"author":{"gitId":"-"},"content":""},{"lineNumber":452,"author":{"gitId":"-"},"content":"            return background;"},{"lineNumber":453,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":454,"author":{"gitId":"-"},"content":""},{"lineNumber":455,"author":{"gitId":"-"},"content":"        private static Shape PrepareBeamAgendaBeamItem(PowerPointSlide slide, AgendaSection section)"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":457,"author":{"gitId":"-"},"content":"            Shape textBox \u003d slide.Shapes.AddTextbox(MsoTextOrientation.msoTextOrientationHorizontal, 0, 0, 0, 0);"},{"lineNumber":458,"author":{"gitId":"-"},"content":""},{"lineNumber":459,"author":{"gitId":"-"},"content":"            AgendaShape.SetShapeName(textBox, ShapePurpose.BeamShapeText, section);"},{"lineNumber":460,"author":{"gitId":"-"},"content":"            textBox.TextFrame.AutoSize \u003d PpAutoSize.ppAutoSizeShapeToFitText;"},{"lineNumber":461,"author":{"gitId":"-"},"content":"            textBox.TextFrame.WordWrap \u003d MsoTriState.msoFalse;"},{"lineNumber":462,"author":{"gitId":"-"},"content":"            textBox.TextFrame.TextRange.Text \u003d section.Name;"},{"lineNumber":463,"author":{"gitId":"-"},"content":"            textBox.TextFrame.TextRange.Font.Color.RGB \u003d GraphicsUtil.ConvertColorToRgb(Color.White);"},{"lineNumber":464,"author":{"gitId":"-"},"content":""},{"lineNumber":465,"author":{"gitId":"-"},"content":"            return textBox;"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":467,"author":{"gitId":"-"},"content":""},{"lineNumber":468,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":469,"author":{"gitId":"-"},"content":""},{"lineNumber":470,"author":{"gitId":"-"},"content":""},{"lineNumber":471,"author":{"gitId":"-"},"content":"        #region Reference Slide Creation - Bullet"},{"lineNumber":472,"author":{"gitId":"-"},"content":""},{"lineNumber":473,"author":{"gitId":"-"},"content":"        private static PowerPointSlide CreateBulletReferenceSlide()"},{"lineNumber":474,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":475,"author":{"gitId":"-"},"content":"            PowerPointSlide refSlide \u003d PowerPointSlide.FromSlideFactory(PowerPointPresentation.Current"},{"lineNumber":476,"author":{"gitId":"-"},"content":"                                                            .Presentation"},{"lineNumber":477,"author":{"gitId":"-"},"content":"                                                            .Slides"},{"lineNumber":478,"author":{"gitId":"-"},"content":"                                                            .Add(1, PpSlideLayout.ppLayoutText));"},{"lineNumber":479,"author":{"gitId":"-"},"content":""},{"lineNumber":480,"author":{"gitId":"-"},"content":"            refSlide.Transition.EntryEffect \u003d PpEntryEffect.ppEffectPushUp;"},{"lineNumber":481,"author":{"gitId":"-"},"content":"            refSlide.Transition.Duration \u003d 0.8f;"},{"lineNumber":482,"author":{"gitId":"-"},"content":""},{"lineNumber":483,"author":{"gitId":"-"},"content":"            Shape titleShape \u003d refSlide.Shapes.Placeholders[1];"},{"lineNumber":484,"author":{"gitId":"-"},"content":"            Shape contentShape \u003d refSlide.Shapes.Placeholders[2];"},{"lineNumber":485,"author":{"gitId":"-"},"content":"            AgendaShape.SetShapeName(contentShape, ShapePurpose.ContentShape, AgendaSection.None);"},{"lineNumber":486,"author":{"gitId":"-"},"content":""},{"lineNumber":487,"author":{"gitId":"-"},"content":"            titleShape.SetText(AgendaLabText.TitleContent);"},{"lineNumber":488,"author":{"gitId":"-"},"content":"            contentShape.SetText(AgendaLabText.BulletVisitedContent,"},{"lineNumber":489,"author":{"gitId":"-"},"content":"                                 AgendaLabText.BulletHighlightedContent,"},{"lineNumber":490,"author":{"gitId":"-"},"content":"                                 AgendaLabText.BulletUnvisitedContent);"},{"lineNumber":491,"author":{"gitId":"-"},"content":""},{"lineNumber":492,"author":{"gitId":"-"},"content":"            List\u003cTextRange2\u003e paragraphs \u003d contentShape.GetParagraphs();"},{"lineNumber":493,"author":{"gitId":"-"},"content":"            paragraphs[0].Font.Fill.ForeColor.RGB \u003d GraphicsUtil.ConvertColorToRgb(Color.Gray);"},{"lineNumber":494,"author":{"gitId":"-"},"content":"            paragraphs[1].Font.Fill.ForeColor.RGB \u003d GraphicsUtil.ConvertColorToRgb(Color.Red);"},{"lineNumber":495,"author":{"gitId":"-"},"content":"            paragraphs[2].Font.Fill.ForeColor.RGB \u003d GraphicsUtil.ConvertColorToRgb(Color.Black);"},{"lineNumber":496,"author":{"gitId":"-"},"content":""},{"lineNumber":497,"author":{"gitId":"-"},"content":"            AgendaSlide.SetAsReferenceSlideName(refSlide, Type.Bullet);"},{"lineNumber":498,"author":{"gitId":"-"},"content":"            refSlide.AddTemplateSlideMarker();"},{"lineNumber":499,"author":{"gitId":"-"},"content":"            refSlide.Hidden \u003d true;"},{"lineNumber":500,"author":{"gitId":"-"},"content":""},{"lineNumber":501,"author":{"gitId":"-"},"content":"            SlideUtil.CopyToDesign(\"Agenda Template\", refSlide);"},{"lineNumber":502,"author":{"gitId":"-"},"content":""},{"lineNumber":503,"author":{"gitId":"-"},"content":"            return refSlide;"},{"lineNumber":504,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":505,"author":{"gitId":"-"},"content":""},{"lineNumber":506,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":507,"author":{"gitId":"-"},"content":""},{"lineNumber":508,"author":{"gitId":"-"},"content":""},{"lineNumber":509,"author":{"gitId":"-"},"content":"        #region Reference Slide Creation - Visual"},{"lineNumber":510,"author":{"gitId":"-"},"content":""},{"lineNumber":511,"author":{"gitId":"-"},"content":"        private static PowerPointSlide CreateVisualReferenceSlide()"},{"lineNumber":512,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":513,"author":{"gitId":"-"},"content":"            PowerPointSlide refSlide \u003d PowerPointSlide.FromSlideFactory(PowerPointPresentation.Current"},{"lineNumber":514,"author":{"gitId":"-"},"content":"                                                            .Presentation"},{"lineNumber":515,"author":{"gitId":"-"},"content":"                                                            .Slides"},{"lineNumber":516,"author":{"gitId":"-"},"content":"                                                            .Add(1, PpSlideLayout.ppLayoutTitleOnly));"},{"lineNumber":517,"author":{"gitId":"-"},"content":""},{"lineNumber":518,"author":{"gitId":"-"},"content":"            Shape titleBar \u003d refSlide.Shapes.Placeholders[1];"},{"lineNumber":519,"author":{"gitId":"-"},"content":"            titleBar.SetText(AgendaLabText.TitleContent);"},{"lineNumber":520,"author":{"gitId":"-"},"content":""},{"lineNumber":521,"author":{"gitId":"-"},"content":"            InsertVisualAgendaSectionImages(refSlide);"},{"lineNumber":522,"author":{"gitId":"-"},"content":""},{"lineNumber":523,"author":{"gitId":"-"},"content":"            AgendaSlide.SetAsReferenceSlideName(refSlide, Type.Visual);"},{"lineNumber":524,"author":{"gitId":"-"},"content":"            refSlide.AddTemplateSlideMarker();"},{"lineNumber":525,"author":{"gitId":"-"},"content":"            refSlide.Hidden \u003d true;"},{"lineNumber":526,"author":{"gitId":"-"},"content":""},{"lineNumber":527,"author":{"gitId":"-"},"content":"            SlideUtil.CopyToDesign(\"Agenda Template\", refSlide);"},{"lineNumber":528,"author":{"gitId":"-"},"content":""},{"lineNumber":529,"author":{"gitId":"-"},"content":"            return refSlide;"},{"lineNumber":530,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":531,"author":{"gitId":"-"},"content":""},{"lineNumber":532,"author":{"gitId":"-"},"content":""},{"lineNumber":533,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":534,"author":{"gitId":"-"},"content":"        /// Inserts the section images into the reference slide in a nice square pattern and names them appropriately."},{"lineNumber":535,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":536,"author":{"gitId":"-"},"content":"        private static void InsertVisualAgendaSectionImages(PowerPointSlide refSlide)"},{"lineNumber":537,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":538,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e sectionImages \u003d CreateSectionImagesForAllSections(refSlide);"},{"lineNumber":539,"author":{"gitId":"-"},"content":"            ArrangeInGrid(sectionImages);"},{"lineNumber":540,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":541,"author":{"gitId":"-"},"content":""},{"lineNumber":542,"author":{"gitId":"-"},"content":"        private static void ArrangeInGrid(List\u003cShape\u003e sectionImages)"},{"lineNumber":543,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":544,"author":{"gitId":"-"},"content":"            float slideWidth \u003d PowerPointPresentation.Current.SlideWidth;"},{"lineNumber":545,"author":{"gitId":"-"},"content":"            float slideHeight \u003d PowerPointPresentation.Current.SlideHeight;"},{"lineNumber":546,"author":{"gitId":"-"},"content":"            float aspectRatio \u003d slideWidth/slideHeight;"},{"lineNumber":547,"author":{"gitId":"-"},"content":""},{"lineNumber":548,"author":{"gitId":"-"},"content":"            // These numbers can be tweaked."},{"lineNumber":549,"author":{"gitId":"-"},"content":"            float panelFillRatio \u003d 0.9f;"},{"lineNumber":550,"author":{"gitId":"-"},"content":"            float canvasTop \u003d slideHeight*0.25f;"},{"lineNumber":551,"author":{"gitId":"-"},"content":"            float canvasBottom \u003d slideHeight*0.85f;"},{"lineNumber":552,"author":{"gitId":"-"},"content":""},{"lineNumber":553,"author":{"gitId":"-"},"content":"            float canvasHeight \u003d canvasBottom - canvasTop;"},{"lineNumber":554,"author":{"gitId":"-"},"content":"            float canvasWidth \u003d aspectRatio*canvasHeight;"},{"lineNumber":555,"author":{"gitId":"-"},"content":"            float canvasLeft \u003d (slideWidth - canvasWidth)/2;"},{"lineNumber":556,"author":{"gitId":"-"},"content":""},{"lineNumber":557,"author":{"gitId":"-"},"content":"            int columnCount \u003d (int) Math.Ceiling(Math.Sqrt(sectionImages.Count));"},{"lineNumber":558,"author":{"gitId":"-"},"content":"            int rowCount \u003d CommonUtil.CeilingDivide(sectionImages.Count, columnCount);"},{"lineNumber":559,"author":{"gitId":"-"},"content":"            float panelWidth \u003d canvasWidth/columnCount;"},{"lineNumber":560,"author":{"gitId":"-"},"content":"            float panelHeight \u003d panelWidth/aspectRatio;"},{"lineNumber":561,"author":{"gitId":"-"},"content":""},{"lineNumber":562,"author":{"gitId":"-"},"content":"            float pictureWidth \u003d panelFillRatio*panelWidth;"},{"lineNumber":563,"author":{"gitId":"-"},"content":"            float pictureHeight \u003d panelFillRatio*panelHeight;"},{"lineNumber":564,"author":{"gitId":"-"},"content":"            float pictureXOffset \u003d canvasLeft + (panelWidth - pictureWidth)/2;"},{"lineNumber":565,"author":{"gitId":"-"},"content":"            float pictureYOffset \u003d canvasTop + (canvasHeight - rowCount*panelHeight)/2 + (panelHeight - pictureHeight)/2;"},{"lineNumber":566,"author":{"gitId":"-"},"content":""},{"lineNumber":567,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c sectionImages.Count; ++i)"},{"lineNumber":568,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":569,"author":{"gitId":"-"},"content":"                Shape sectionImage \u003d sectionImages[i];"},{"lineNumber":570,"author":{"gitId":"-"},"content":"                int xPosition \u003d i%columnCount;"},{"lineNumber":571,"author":{"gitId":"-"},"content":"                int yPosition \u003d i/columnCount;"},{"lineNumber":572,"author":{"gitId":"-"},"content":""},{"lineNumber":573,"author":{"gitId":"-"},"content":"                sectionImage.Left \u003d pictureXOffset + xPosition*panelWidth;"},{"lineNumber":574,"author":{"gitId":"-"},"content":"                sectionImage.Top \u003d pictureYOffset + yPosition*panelHeight;"},{"lineNumber":575,"author":{"gitId":"-"},"content":"                sectionImage.Width \u003d pictureWidth;"},{"lineNumber":576,"author":{"gitId":"-"},"content":"                sectionImage.Height \u003d pictureHeight;"},{"lineNumber":577,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":578,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":579,"author":{"gitId":"-"},"content":""},{"lineNumber":580,"author":{"gitId":"-"},"content":"        private static List\u003cShape\u003e CreateSectionImagesForAllSections(PowerPointSlide refSlide)"},{"lineNumber":581,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":582,"author":{"gitId":"-"},"content":"            List\u003cAgendaSection\u003e sections \u003d GetAllButFirstSection();"},{"lineNumber":583,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e sectionImages \u003d new List\u003cShape\u003e();"},{"lineNumber":584,"author":{"gitId":"-"},"content":"            foreach (AgendaSection section in sections)"},{"lineNumber":585,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":586,"author":{"gitId":"-"},"content":"                Shape sectionImage \u003d CreateSectionImage(refSlide, section);"},{"lineNumber":587,"author":{"gitId":"-"},"content":"                sectionImages.Add(sectionImage);"},{"lineNumber":588,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":589,"author":{"gitId":"-"},"content":"            return sectionImages;"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":591,"author":{"gitId":"-"},"content":"        "},{"lineNumber":592,"author":{"gitId":"-"},"content":""},{"lineNumber":593,"author":{"gitId":"-"},"content":"        private static Shape CreateSectionImage(PowerPointSlide refSlide, AgendaSection section)"},{"lineNumber":594,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":595,"author":{"gitId":"-"},"content":"            PowerPointSlide sectionFirstSlide \u003d FindSectionFirstNonAgendaSlide(section.Index);"},{"lineNumber":596,"author":{"gitId":"-"},"content":"            Shape shape \u003d refSlide.InsertEntrySnapshotOfSlide(sectionFirstSlide);"},{"lineNumber":597,"author":{"gitId":"-"},"content":"            AgendaShape.SetShapeName(shape, ShapePurpose.VisualAgendaImage, section);"},{"lineNumber":598,"author":{"gitId":"-"},"content":"            return shape;"},{"lineNumber":599,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":600,"author":{"gitId":"-"},"content":""},{"lineNumber":601,"author":{"gitId":"-"},"content":""},{"lineNumber":602,"author":{"gitId":"-"},"content":"        private static void UpdateSectionImage(PowerPointSlide refSlide, AgendaSection section, Shape previousImageShape)"},{"lineNumber":603,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":604,"author":{"gitId":"-"},"content":"            Shape snapshotShape \u003d CreateSectionImage(refSlide, section);"},{"lineNumber":605,"author":{"gitId":"-"},"content":"            ShapeUtil.SyncShape(previousImageShape, snapshotShape, pickupShapeFormat: true, pickupTextContent: false, pickupTextFormat: false);"},{"lineNumber":606,"author":{"gitId":"-"},"content":"            previousImageShape.SafeDelete();"},{"lineNumber":607,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":608,"author":{"gitId":"-"},"content":"        "},{"lineNumber":609,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":610,"author":{"gitId":"-"},"content":""},{"lineNumber":611,"author":{"gitId":"-"},"content":""},{"lineNumber":612,"author":{"gitId":"-"},"content":"        #region Actions - Removal"},{"lineNumber":613,"author":{"gitId":"-"},"content":""},{"lineNumber":614,"author":{"gitId":"-"},"content":"        private static void RemoveAllAgendaItems(SlideSelectionTracker slideTracker \u003d null)"},{"lineNumber":615,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":616,"author":{"gitId":"-"},"content":"            if (slideTracker \u003d\u003d null)"},{"lineNumber":617,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":618,"author":{"gitId":"-"},"content":"                slideTracker \u003d SlideSelectionTracker.CreateInactiveTracker();"},{"lineNumber":619,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":620,"author":{"gitId":"-"},"content":""},{"lineNumber":621,"author":{"gitId":"-"},"content":"            PowerPointPresentation.Current.Slides.Where(AgendaSlide.IsAnyAgendaSlide)"},{"lineNumber":622,"author":{"gitId":"-"},"content":"                                                 .ToList()"},{"lineNumber":623,"author":{"gitId":"-"},"content":"                                                 .ForEach(slideTracker.DeleteSlideAndTrack);"},{"lineNumber":624,"author":{"gitId":"-"},"content":""},{"lineNumber":625,"author":{"gitId":"-"},"content":"            PowerPointPresentation.Current.Slides.ToList()"},{"lineNumber":626,"author":{"gitId":"-"},"content":"                                                 .ForEach(RemoveBeamAgendaFromSlide);"},{"lineNumber":627,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":628,"author":{"gitId":"-"},"content":""},{"lineNumber":629,"author":{"gitId":"-"},"content":"        private static void RemoveBeamAgendaFromSlide(PowerPointSlide slide)"},{"lineNumber":630,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":631,"author":{"gitId":"-"},"content":"            slide.Shapes.Cast\u003cShape\u003e()"},{"lineNumber":632,"author":{"gitId":"-"},"content":"                        .Where(AgendaShape.WithPurpose(ShapePurpose.BeamShapeMainGroup))"},{"lineNumber":633,"author":{"gitId":"-"},"content":"                        .ToList()"},{"lineNumber":634,"author":{"gitId":"-"},"content":"                        .ForEach(shape \u003d\u003e shape.SafeDelete());"},{"lineNumber":635,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":636,"author":{"gitId":"-"},"content":""},{"lineNumber":637,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":638,"author":{"gitId":"-"},"content":""},{"lineNumber":639,"author":{"gitId":"-"},"content":""},{"lineNumber":640,"author":{"gitId":"-"},"content":"        #region Actions - Synchronize - General"},{"lineNumber":641,"author":{"gitId":"-"},"content":""},{"lineNumber":642,"author":{"gitId":"-"},"content":"        private static void BringToFront(PowerPointSlide slide)"},{"lineNumber":643,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":644,"author":{"gitId":"-"},"content":"            slide.MoveTo(1);"},{"lineNumber":645,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":646,"author":{"gitId":"-"},"content":""},{"lineNumber":647,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":648,"author":{"gitId":"-"},"content":"        /// Scrambles the slide section names to avoid duplicate names later on, which can crash powerpoint."},{"lineNumber":649,"author":{"gitId":"-"},"content":"        /// Use this just before reassigning the slide section names! Don\u0027t keep the slide names this way!"},{"lineNumber":650,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":651,"author":{"gitId":"-"},"content":"        private static void ScrambleSlideSectionNames()"},{"lineNumber":652,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":653,"author":{"gitId":"-"},"content":"            List\u003cPowerPointSlide\u003e slides \u003d PowerPointPresentation.Current.Slides;"},{"lineNumber":654,"author":{"gitId":"-"},"content":"            slides.Where(slide \u003d\u003e AgendaSlide.IsAnyAgendaSlide(slide) \u0026\u0026 AgendaSlide.IsNotReferenceslide(slide))"},{"lineNumber":655,"author":{"gitId":"-"},"content":"                    .ToList()"},{"lineNumber":656,"author":{"gitId":"-"},"content":"                    .ForEach(AgendaSlide.AssignUniqueSectionName);"},{"lineNumber":657,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":658,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":659,"author":{"gitId":"-"},"content":""},{"lineNumber":660,"author":{"gitId":"-"},"content":"        #region Actions - Synchronize - Bullet"},{"lineNumber":661,"author":{"gitId":"-"},"content":""},{"lineNumber":662,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":663,"author":{"gitId":"-"},"content":"        /// Called from the Synchronize action only."},{"lineNumber":664,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":665,"author":{"gitId":"-"},"content":"        private static void SyncBulletAgenda(SlideSelectionTracker slideTracker, PowerPointSlide refSlide)"},{"lineNumber":666,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":667,"author":{"gitId":"-"},"content":"            AdjustBulletReferenceSlideContent(refSlide);"},{"lineNumber":668,"author":{"gitId":"-"},"content":"            SyncBulletAgendaSlides(slideTracker, refSlide);"},{"lineNumber":669,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":670,"author":{"gitId":"-"},"content":""},{"lineNumber":671,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":672,"author":{"gitId":"-"},"content":"        /// Called from both generate and synchronize actions."},{"lineNumber":673,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":674,"author":{"gitId":"-"},"content":"        private static void SyncBulletAgendaSlides(SlideSelectionTracker slideTracker, PowerPointSlide refSlide)"},{"lineNumber":675,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":676,"author":{"gitId":"-"},"content":"            List\u003cAgendaSection\u003e sections \u003d Sections;"},{"lineNumber":677,"author":{"gitId":"-"},"content":"            SynchronizeSlidesUsingTemplate(slideTracker, refSlide, () \u003d\u003e new BulletAgendaTemplate());"},{"lineNumber":678,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":679,"author":{"gitId":"-"},"content":""},{"lineNumber":680,"author":{"gitId":"-"},"content":"        private static void AdjustBulletReferenceSlideContent(PowerPointSlide refSlide)"},{"lineNumber":681,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":682,"author":{"gitId":"-"},"content":"            int numberOfSections \u003d NumberOfSections;"},{"lineNumber":683,"author":{"gitId":"-"},"content":""},{"lineNumber":684,"author":{"gitId":"-"},"content":"            // post process bullet points"},{"lineNumber":685,"author":{"gitId":"-"},"content":"            Shape contentHolder \u003d refSlide.GetShape(AgendaShape.WithPurpose(ShapePurpose.ContentShape));"},{"lineNumber":686,"author":{"gitId":"-"},"content":"            TextRange2 textRange \u003d contentHolder.TextFrame2.TextRange;"},{"lineNumber":687,"author":{"gitId":"-"},"content":""},{"lineNumber":688,"author":{"gitId":"-"},"content":"            while (textRange.Paragraphs.Count \u003c numberOfSections)"},{"lineNumber":689,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":690,"author":{"gitId":"-"},"content":"                textRange.InsertAfter(\"\\r \");"},{"lineNumber":691,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":692,"author":{"gitId":"-"},"content":""},{"lineNumber":693,"author":{"gitId":"-"},"content":"            while (textRange.Paragraphs.Count \u003e 3 \u0026\u0026 textRange.Paragraphs.Count \u003e numberOfSections)"},{"lineNumber":694,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":695,"author":{"gitId":"-"},"content":"                textRange.Paragraphs[textRange.Paragraphs.Count].Delete();"},{"lineNumber":696,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":697,"author":{"gitId":"-"},"content":""},{"lineNumber":698,"author":{"gitId":"-"},"content":"            for (int i \u003d 4; i \u003c\u003d textRange.Paragraphs.Count; i++)"},{"lineNumber":699,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":700,"author":{"gitId":"-"},"content":"                textRange.Paragraphs[i].ParagraphFormat.Bullet.Type \u003d MsoBulletType.msoBulletNone;"},{"lineNumber":701,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":702,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":703,"author":{"gitId":"-"},"content":""},{"lineNumber":704,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":705,"author":{"gitId":"-"},"content":""},{"lineNumber":706,"author":{"gitId":"-"},"content":"        #region Actions - Synchronize - Visual"},{"lineNumber":707,"author":{"gitId":"-"},"content":""},{"lineNumber":708,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":709,"author":{"gitId":"-"},"content":"        /// Called from the Synchronize action only."},{"lineNumber":710,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":711,"author":{"gitId":"-"},"content":"        private static void SyncVisualAgenda(SlideSelectionTracker slideTracker, PowerPointSlide refSlide)"},{"lineNumber":712,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":713,"author":{"gitId":"-"},"content":"            RegenerateReferenceSlideImages(refSlide);"},{"lineNumber":714,"author":{"gitId":"-"},"content":"            SyncVisualAgendaSlides(slideTracker, refSlide);"},{"lineNumber":715,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":716,"author":{"gitId":"-"},"content":""},{"lineNumber":717,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":718,"author":{"gitId":"-"},"content":"        /// Called from both generate and synchronize actions."},{"lineNumber":719,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":720,"author":{"gitId":"-"},"content":"        private static void SyncVisualAgendaSlides(SlideSelectionTracker slideTracker, PowerPointSlide refSlide)"},{"lineNumber":721,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":722,"author":{"gitId":"-"},"content":"            DeleteAllZoomSlides(slideTracker);"},{"lineNumber":723,"author":{"gitId":"-"},"content":"            SynchronizeSlidesUsingTemplate(slideTracker, refSlide, () \u003d\u003e new VisualAgendaTemplate());"},{"lineNumber":724,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":725,"author":{"gitId":"-"},"content":""},{"lineNumber":726,"author":{"gitId":"-"},"content":"        private static void RegenerateReferenceSlideImages(PowerPointSlide refSlide)"},{"lineNumber":727,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":728,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e markedForDeletion;"},{"lineNumber":729,"author":{"gitId":"-"},"content":"            Dictionary\u003cint, Shape\u003e shapeAssignment \u003d GetImageShapeAssignment(refSlide, out markedForDeletion);"},{"lineNumber":730,"author":{"gitId":"-"},"content":""},{"lineNumber":731,"author":{"gitId":"-"},"content":"            List\u003cAgendaSection\u003e sections \u003d GetAllButFirstSection();"},{"lineNumber":732,"author":{"gitId":"-"},"content":"            HashSet\u003cint\u003e assignedOldIndexes \u003d new HashSet\u003cint\u003e();"},{"lineNumber":733,"author":{"gitId":"-"},"content":"            List\u003cAgendaSection\u003e unassignedNewSections \u003d new List\u003cAgendaSection\u003e();"},{"lineNumber":734,"author":{"gitId":"-"},"content":""},{"lineNumber":735,"author":{"gitId":"-"},"content":""},{"lineNumber":736,"author":{"gitId":"-"},"content":"            float existingImageWidth \u003d -1;"},{"lineNumber":737,"author":{"gitId":"-"},"content":"            float existingImageHeight \u003d -1;"},{"lineNumber":738,"author":{"gitId":"-"},"content":""},{"lineNumber":739,"author":{"gitId":"-"},"content":"            foreach (AgendaSection section in sections)"},{"lineNumber":740,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":741,"author":{"gitId":"-"},"content":"                int oldIndex \u003d IdentifyOldSectionIndex(section);"},{"lineNumber":742,"author":{"gitId":"-"},"content":"                if (oldIndex \u003d\u003d -1 || assignedOldIndexes.Contains(oldIndex))"},{"lineNumber":743,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":744,"author":{"gitId":"-"},"content":"                    unassignedNewSections.Add(section);"},{"lineNumber":745,"author":{"gitId":"-"},"content":"                    continue;"},{"lineNumber":746,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":747,"author":{"gitId":"-"},"content":"                Shape imageShape;"},{"lineNumber":748,"author":{"gitId":"-"},"content":"                bool canFindShape \u003d shapeAssignment.TryGetValue(oldIndex, out imageShape);"},{"lineNumber":749,"author":{"gitId":"-"},"content":"                if (!canFindShape)"},{"lineNumber":750,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":751,"author":{"gitId":"-"},"content":"                    unassignedNewSections.Add(section);"},{"lineNumber":752,"author":{"gitId":"-"},"content":"                    continue;"},{"lineNumber":753,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":754,"author":{"gitId":"-"},"content":""},{"lineNumber":755,"author":{"gitId":"-"},"content":"                existingImageWidth \u003d imageShape.Width;"},{"lineNumber":756,"author":{"gitId":"-"},"content":"                existingImageHeight \u003d imageShape.Height;"},{"lineNumber":757,"author":{"gitId":"-"},"content":""},{"lineNumber":758,"author":{"gitId":"-"},"content":"                UpdateSectionImage(refSlide, section, imageShape);"},{"lineNumber":759,"author":{"gitId":"-"},"content":"                assignedOldIndexes.Add(oldIndex);"},{"lineNumber":760,"author":{"gitId":"-"},"content":"                "},{"lineNumber":761,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":762,"author":{"gitId":"-"},"content":""},{"lineNumber":763,"author":{"gitId":"-"},"content":"            markedForDeletion.AddRange(from entry in shapeAssignment where !assignedOldIndexes.Contains(entry.Key) select entry.Value);"},{"lineNumber":764,"author":{"gitId":"-"},"content":""},{"lineNumber":765,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e newSectionImages \u003d unassignedNewSections.Select(section \u003d\u003e CreateSectionImage(refSlide, section))"},{"lineNumber":766,"author":{"gitId":"-"},"content":"                                                        .ToList();"},{"lineNumber":767,"author":{"gitId":"-"},"content":"            PositionNewImageShapes(newSectionImages, existingImageWidth, existingImageHeight);"},{"lineNumber":768,"author":{"gitId":"-"},"content":""},{"lineNumber":769,"author":{"gitId":"-"},"content":"            markedForDeletion.ForEach(shape \u003d\u003e shape.SafeDelete());"},{"lineNumber":770,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":771,"author":{"gitId":"-"},"content":""},{"lineNumber":772,"author":{"gitId":"-"},"content":"        private static Dictionary\u003cint, Shape\u003e GetImageShapeAssignment(PowerPointSlide inSlide, out List\u003cShape\u003e unassignedShapes)"},{"lineNumber":773,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":774,"author":{"gitId":"-"},"content":"            IEnumerable\u003cShape\u003e shapes \u003d inSlide.Shapes.Cast\u003cShape\u003e();"},{"lineNumber":775,"author":{"gitId":"-"},"content":""},{"lineNumber":776,"author":{"gitId":"-"},"content":"            unassignedShapes \u003d new List\u003cShape\u003e();"},{"lineNumber":777,"author":{"gitId":"-"},"content":"            Dictionary\u003cint, Shape\u003e shapeAssignment \u003d new Dictionary\u003cint, Shape\u003e();"},{"lineNumber":778,"author":{"gitId":"-"},"content":""},{"lineNumber":779,"author":{"gitId":"-"},"content":"            foreach (Shape shape in shapes)"},{"lineNumber":780,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":781,"author":{"gitId":"-"},"content":"                AgendaShape agendaShape \u003d AgendaShape.Decode(shape);"},{"lineNumber":782,"author":{"gitId":"-"},"content":"                if (agendaShape \u003d\u003d null || agendaShape.ShapePurpose !\u003d ShapePurpose.VisualAgendaImage)"},{"lineNumber":783,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":784,"author":{"gitId":"-"},"content":"                    continue;"},{"lineNumber":785,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":786,"author":{"gitId":"-"},"content":""},{"lineNumber":787,"author":{"gitId":"-"},"content":"                int index \u003d agendaShape.Section.Index;"},{"lineNumber":788,"author":{"gitId":"-"},"content":"                if (shapeAssignment.ContainsKey(index))"},{"lineNumber":789,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":790,"author":{"gitId":"-"},"content":"                    unassignedShapes.Add(shape);"},{"lineNumber":791,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":792,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":793,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":794,"author":{"gitId":"-"},"content":"                    shapeAssignment.Add(index, shape);"},{"lineNumber":795,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":796,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":797,"author":{"gitId":"-"},"content":""},{"lineNumber":798,"author":{"gitId":"-"},"content":"            return shapeAssignment;"},{"lineNumber":799,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":800,"author":{"gitId":"-"},"content":""},{"lineNumber":801,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":802,"author":{"gitId":"-"},"content":"        /// Places the newly generated image shapes in some alignment that makes them easy to drag around."},{"lineNumber":803,"author":{"gitId":"-"},"content":"        /// Resizes image shapes to match the sizes of the existing image shapes."},{"lineNumber":804,"author":{"gitId":"-"},"content":"        /// If existingImageWidth less or equal to 0 or existingImageHeight less or equal to 0, it means "},{"lineNumber":805,"author":{"gitId":"-"},"content":"        /// there are no already existing image shapes."},{"lineNumber":806,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e "},{"lineNumber":807,"author":{"gitId":"-"},"content":"        private static void PositionNewImageShapes(List\u003cShape\u003e shapes, float existingImageWidth, float existingImageHeight)"},{"lineNumber":808,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":809,"author":{"gitId":"-"},"content":"            if (shapes.Count \u003d\u003d 0)"},{"lineNumber":810,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":811,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":812,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":813,"author":{"gitId":"-"},"content":""},{"lineNumber":814,"author":{"gitId":"-"},"content":"            ArrangeInGrid(shapes);"},{"lineNumber":815,"author":{"gitId":"-"},"content":"            if (existingImageWidth \u003c\u003d 0 || existingImageHeight \u003c\u003d 0)"},{"lineNumber":816,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":817,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":818,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":819,"author":{"gitId":"-"},"content":""},{"lineNumber":820,"author":{"gitId":"-"},"content":"            foreach (Shape shape in shapes)"},{"lineNumber":821,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":822,"author":{"gitId":"-"},"content":"                shape.Width \u003d existingImageWidth;"},{"lineNumber":823,"author":{"gitId":"-"},"content":"                shape.Height \u003d existingImageHeight;"},{"lineNumber":824,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":825,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":826,"author":{"gitId":"-"},"content":""},{"lineNumber":827,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":828,"author":{"gitId":"-"},"content":"        /// Identifies the previous section index of a section by looking at the generated agenda slides in the section."},{"lineNumber":829,"author":{"gitId":"-"},"content":"        /// The identified section is the section index of the first generated agenda slide found."},{"lineNumber":830,"author":{"gitId":"-"},"content":"        /// Returns -1 when old section index is not found."},{"lineNumber":831,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":832,"author":{"gitId":"-"},"content":"        private static int IdentifyOldSectionIndex(AgendaSection section)"},{"lineNumber":833,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":834,"author":{"gitId":"-"},"content":"            List\u003cPowerPointSlide\u003e sectionSlides \u003d GetSectionSlides(section);"},{"lineNumber":835,"author":{"gitId":"-"},"content":"            foreach (PowerPointSlide slide in sectionSlides)"},{"lineNumber":836,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":837,"author":{"gitId":"-"},"content":"                AgendaSlide agendaSlide \u003d AgendaSlide.Decode(slide);"},{"lineNumber":838,"author":{"gitId":"-"},"content":"                if (agendaSlide !\u003d null)"},{"lineNumber":839,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":840,"author":{"gitId":"-"},"content":"                    return agendaSlide.Section.Index;"},{"lineNumber":841,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":842,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":843,"author":{"gitId":"-"},"content":"            return -1;"},{"lineNumber":844,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":845,"author":{"gitId":"-"},"content":""},{"lineNumber":846,"author":{"gitId":"-"},"content":"        private static void DeleteAllZoomSlides(SlideSelectionTracker slideTracker)"},{"lineNumber":847,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":848,"author":{"gitId":"-"},"content":"            PowerPointPresentation.Current.Slides"},{"lineNumber":849,"author":{"gitId":"-"},"content":"                                        .Where(AgendaSlide.MeetsConditions(slide \u003d\u003e slide.SlidePurpose \u003d\u003d SlidePurpose.ZoomIn ||"},{"lineNumber":850,"author":{"gitId":"-"},"content":"                                                                                    slide.SlidePurpose \u003d\u003d SlidePurpose.ZoomOut ||"},{"lineNumber":851,"author":{"gitId":"-"},"content":"                                                                                    slide.SlidePurpose \u003d\u003d SlidePurpose.FinalZoomOut))"},{"lineNumber":852,"author":{"gitId":"-"},"content":"                                        .ToList()"},{"lineNumber":853,"author":{"gitId":"-"},"content":"                                        .ForEach(slideTracker.DeleteSlideAndTrack);"},{"lineNumber":854,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":855,"author":{"gitId":"-"},"content":""},{"lineNumber":856,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":857,"author":{"gitId":"-"},"content":""},{"lineNumber":858,"author":{"gitId":"-"},"content":"        #region Actions - Synchronize - Beam"},{"lineNumber":859,"author":{"gitId":"-"},"content":""},{"lineNumber":860,"author":{"gitId":"-"},"content":"        private static void SyncBeamAgenda(SlideSelectionTracker slideTracker, PowerPointSlide refSlide)"},{"lineNumber":861,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":862,"author":{"gitId":"-"},"content":"            UpdateBeamReferenceSlide(refSlide);"},{"lineNumber":863,"author":{"gitId":"-"},"content":""},{"lineNumber":864,"author":{"gitId":"-"},"content":"            SyncBeamOnSlides(slideTracker.SelectedSlides, refSlide);"},{"lineNumber":865,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":866,"author":{"gitId":"-"},"content":""},{"lineNumber":867,"author":{"gitId":"-"},"content":"        private static void UpdateBeamReferenceSlide(PowerPointSlide refSlide)"},{"lineNumber":868,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":869,"author":{"gitId":"-"},"content":"            Shape beamShape \u003d FindBeamShape(refSlide);"},{"lineNumber":870,"author":{"gitId":"-"},"content":"            List\u003cAgendaSection\u003e currentSections \u003d ExtractAgendaSectionsFromBeam(beamShape);"},{"lineNumber":871,"author":{"gitId":"-"},"content":"            List\u003cAgendaSection\u003e newSections \u003d GetAllButFirstSection();"},{"lineNumber":872,"author":{"gitId":"-"},"content":""},{"lineNumber":873,"author":{"gitId":"-"},"content":"            BeamFormats beamFormats \u003d BeamFormats.ExtractFormats(beamShape);"},{"lineNumber":874,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e oldTextBoxes \u003d BeamFormats.GetAllShapesWithPurpose(beamShape, ShapePurpose.BeamShapeText);"},{"lineNumber":875,"author":{"gitId":"-"},"content":"            Shape highlightedTextBox \u003d BeamFormats.GetShapeWithPurpose(beamShape, ShapePurpose.BeamShapeHighlightedText);"},{"lineNumber":876,"author":{"gitId":"-"},"content":"            Shape background \u003d BeamFormats.GetShapeWithPurpose(beamShape, ShapePurpose.BeamShapeBackground);"},{"lineNumber":877,"author":{"gitId":"-"},"content":""},{"lineNumber":878,"author":{"gitId":"-"},"content":"            MatchColor(highlightedTextBox, background);"},{"lineNumber":879,"author":{"gitId":"-"},"content":""},{"lineNumber":880,"author":{"gitId":"-"},"content":"            if (SectionsMatch(currentSections, newSections))"},{"lineNumber":881,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":882,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":883,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":884,"author":{"gitId":"-"},"content":""},{"lineNumber":885,"author":{"gitId":"-"},"content":""},{"lineNumber":886,"author":{"gitId":"-"},"content":"            DialogResult confirmResult \u003d MessageBox.Show(new Form() { TopMost \u003d true },"},{"lineNumber":887,"author":{"gitId":"-"},"content":"                                                AgendaLabText.ReorganiseSidebarContent,"},{"lineNumber":888,"author":{"gitId":"-"},"content":"                                                AgendaLabText.ReorganiseSidebarTitle,"},{"lineNumber":889,"author":{"gitId":"-"},"content":"                                                MessageBoxButtons.YesNo);"},{"lineNumber":890,"author":{"gitId":"-"},"content":"            if (confirmResult \u003d\u003d DialogResult.Yes)"},{"lineNumber":891,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":892,"author":{"gitId":"-"},"content":"                ReorganiseBeam(refSlide, newSections, highlightedTextBox, background, beamFormats, oldTextBoxes, beamShape);"},{"lineNumber":893,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":894,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":895,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":896,"author":{"gitId":"-"},"content":"                UpdateBeamItems(refSlide, newSections, highlightedTextBox, background, beamFormats, oldTextBoxes, beamShape);"},{"lineNumber":897,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":898,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":899,"author":{"gitId":"-"},"content":""},{"lineNumber":900,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":901,"author":{"gitId":"-"},"content":"        /// Does not reogranise the positions of the text boxes in the beam. Instead, it only deletes text boxes"},{"lineNumber":902,"author":{"gitId":"-"},"content":"        /// that no longer correspond to a section, and creates new text boxes for the new sections."},{"lineNumber":903,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":904,"author":{"gitId":"-"},"content":"        private static void UpdateBeamItems(PowerPointSlide refSlide, List\u003cAgendaSection\u003e newSections, Shape highlightedTextBox,"},{"lineNumber":905,"author":{"gitId":"-"},"content":"                Shape background, BeamFormats beamFormats, List\u003cShape\u003e oldTextBoxes, Shape beamShape)"},{"lineNumber":906,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":907,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e markedForDeletion;"},{"lineNumber":908,"author":{"gitId":"-"},"content":"            Dictionary\u003cint, Shape\u003e textboxAssignment \u003d GetBeamTextboxAssignment(oldTextBoxes, out markedForDeletion);"},{"lineNumber":909,"author":{"gitId":"-"},"content":""},{"lineNumber":910,"author":{"gitId":"-"},"content":"            HashSet\u003cint\u003e reassignedTextboxIndexes \u003d new HashSet\u003cint\u003e();"},{"lineNumber":911,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e newTextboxes \u003d new List\u003cShape\u003e();"},{"lineNumber":912,"author":{"gitId":"-"},"content":""},{"lineNumber":913,"author":{"gitId":"-"},"content":"            foreach (AgendaSection section in newSections)"},{"lineNumber":914,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":915,"author":{"gitId":"-"},"content":"                int index \u003d section.Index;"},{"lineNumber":916,"author":{"gitId":"-"},"content":"                if (textboxAssignment.ContainsKey(index))"},{"lineNumber":917,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":918,"author":{"gitId":"-"},"content":"                    // Reuse old textbox"},{"lineNumber":919,"author":{"gitId":"-"},"content":"                    Shape textbox \u003d textboxAssignment[index];"},{"lineNumber":920,"author":{"gitId":"-"},"content":"                    textbox.SetText(section.Name);"},{"lineNumber":921,"author":{"gitId":"-"},"content":"                    AgendaShape.SetShapeName(textbox, ShapePurpose.BeamShapeText, section);"},{"lineNumber":922,"author":{"gitId":"-"},"content":"                    reassignedTextboxIndexes.Add(index);"},{"lineNumber":923,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":924,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":925,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":926,"author":{"gitId":"-"},"content":"                    // Create new textbox"},{"lineNumber":927,"author":{"gitId":"-"},"content":"                    Shape textbox \u003d PrepareBeamAgendaBeamItem(refSlide, section);"},{"lineNumber":928,"author":{"gitId":"-"},"content":"                    TextRange2 referenceTextFormat \u003d beamFormats.Regular;"},{"lineNumber":929,"author":{"gitId":"-"},"content":"                    ShapeUtil.SyncTextRange(referenceTextFormat, textbox.TextFrame2.TextRange, pickupTextContent: false);"},{"lineNumber":930,"author":{"gitId":"-"},"content":"                    newTextboxes.Add(textbox);"},{"lineNumber":931,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":932,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":933,"author":{"gitId":"-"},"content":"            "},{"lineNumber":934,"author":{"gitId":"-"},"content":"            markedForDeletion.AddRange(from entry in textboxAssignment where !reassignedTextboxIndexes.Contains(entry.Key) select entry.Value);"},{"lineNumber":935,"author":{"gitId":"-"},"content":"            markedForDeletion.ForEach(shape \u003d\u003e shape.SafeDelete());"},{"lineNumber":936,"author":{"gitId":"-"},"content":""},{"lineNumber":937,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e beamShapeShapes \u003d beamShape.Ungroup().Cast\u003cShape\u003e().ToList();"},{"lineNumber":938,"author":{"gitId":"-"},"content":"            beamShapeShapes.AddRange(newTextboxes);"},{"lineNumber":939,"author":{"gitId":"-"},"content":"            beamShape \u003d refSlide.GroupShapes(beamShapeShapes);"},{"lineNumber":940,"author":{"gitId":"-"},"content":"            AgendaShape.SetShapeName(beamShape, ShapePurpose.BeamShapeMainGroup, AgendaSection.None);"},{"lineNumber":941,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":942,"author":{"gitId":"-"},"content":""},{"lineNumber":943,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":944,"author":{"gitId":"-"},"content":"        /// Assumes that all shapes in textboxes are beam shape textboxes."},{"lineNumber":945,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":946,"author":{"gitId":"-"},"content":"        private static Dictionary\u003cint, Shape\u003e GetBeamTextboxAssignment(IEnumerable\u003cShape\u003e textboxes, out List\u003cShape\u003e unassignedShapes)"},{"lineNumber":947,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":948,"author":{"gitId":"-"},"content":"            unassignedShapes \u003d new List\u003cShape\u003e();"},{"lineNumber":949,"author":{"gitId":"-"},"content":"            Dictionary\u003cint, Shape\u003e shapeAssignment \u003d new Dictionary\u003cint, Shape\u003e();"},{"lineNumber":950,"author":{"gitId":"-"},"content":""},{"lineNumber":951,"author":{"gitId":"-"},"content":"            foreach (Shape shape in textboxes)"},{"lineNumber":952,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":953,"author":{"gitId":"-"},"content":"                AgendaShape agendaShape \u003d AgendaShape.Decode(shape);"},{"lineNumber":954,"author":{"gitId":"-"},"content":"                "},{"lineNumber":955,"author":{"gitId":"-"},"content":"                int index \u003d agendaShape.Section.Index;"},{"lineNumber":956,"author":{"gitId":"-"},"content":"                if (shapeAssignment.ContainsKey(index))"},{"lineNumber":957,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":958,"author":{"gitId":"-"},"content":"                    unassignedShapes.Add(shape);"},{"lineNumber":959,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":960,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":961,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":962,"author":{"gitId":"-"},"content":"                    shapeAssignment.Add(index, shape);"},{"lineNumber":963,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":964,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":965,"author":{"gitId":"-"},"content":""},{"lineNumber":966,"author":{"gitId":"-"},"content":"            return shapeAssignment;"},{"lineNumber":967,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":968,"author":{"gitId":"-"},"content":""},{"lineNumber":969,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":970,"author":{"gitId":"-"},"content":"        /// Reorganises the positions of all the text boxes in the beam."},{"lineNumber":971,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":972,"author":{"gitId":"-"},"content":"        private static void ReorganiseBeam(PowerPointSlide refSlide, List\u003cAgendaSection\u003e newSections, Shape highlightedTextBox,"},{"lineNumber":973,"author":{"gitId":"-"},"content":"            Shape background, BeamFormats beamFormats, List\u003cShape\u003e oldTextBoxes, Shape beamShape)"},{"lineNumber":974,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":975,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e newTextBoxes \u003d CreateBeamAgendaTextBoxes(refSlide, newSections);"},{"lineNumber":976,"author":{"gitId":"-"},"content":"            SetupBeamTextBoxPositions(newTextBoxes, highlightedTextBox, background);"},{"lineNumber":977,"author":{"gitId":"-"},"content":""},{"lineNumber":978,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c newTextBoxes.Count; ++i)"},{"lineNumber":979,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":980,"author":{"gitId":"-"},"content":"                TextRange2 referenceTextFormat \u003d beamFormats.Regular;"},{"lineNumber":981,"author":{"gitId":"-"},"content":"                if (i \u003c oldTextBoxes.Count)"},{"lineNumber":982,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":983,"author":{"gitId":"-"},"content":"                    referenceTextFormat \u003d oldTextBoxes[i].TextFrame2.TextRange;"},{"lineNumber":984,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":985,"author":{"gitId":"-"},"content":""},{"lineNumber":986,"author":{"gitId":"-"},"content":"                ShapeUtil.SyncTextRange(referenceTextFormat, newTextBoxes[i].TextFrame2.TextRange, pickupTextContent: false);"},{"lineNumber":987,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":988,"author":{"gitId":"-"},"content":""},{"lineNumber":989,"author":{"gitId":"-"},"content":"            oldTextBoxes.ForEach(shape \u003d\u003e shape.SafeDelete());"},{"lineNumber":990,"author":{"gitId":"-"},"content":""},{"lineNumber":991,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e beamShapeShapes \u003d beamShape.Ungroup().Cast\u003cShape\u003e().ToList();"},{"lineNumber":992,"author":{"gitId":"-"},"content":"            beamShapeShapes.AddRange(newTextBoxes);"},{"lineNumber":993,"author":{"gitId":"-"},"content":"            beamShape \u003d refSlide.GroupShapes(beamShapeShapes);"},{"lineNumber":994,"author":{"gitId":"-"},"content":"            AgendaShape.SetShapeName(beamShape, ShapePurpose.BeamShapeMainGroup, AgendaSection.None);"},{"lineNumber":995,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":996,"author":{"gitId":"-"},"content":""},{"lineNumber":997,"author":{"gitId":"-"},"content":"        private static bool SectionsMatch(List\u003cAgendaSection\u003e currentSections, List\u003cAgendaSection\u003e newSections)"},{"lineNumber":998,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":999,"author":{"gitId":"-"},"content":"            if (currentSections \u003d\u003d null)"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"            if (currentSections.Count !\u003d newSections.Count)"},{"lineNumber":1004,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1007,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c currentSections.Count; ++i)"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"                AgendaSection currentSection \u003d currentSections[i];"},{"lineNumber":1010,"author":{"gitId":"-"},"content":"                AgendaSection newSection \u003d newSections[i];"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"                if (currentSection.Index !\u003d newSection.Index || currentSection.Name !\u003d newSection.Name)"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"                    return false;"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1018,"author":{"gitId":"-"},"content":""},{"lineNumber":1019,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":1020,"author":{"gitId":"-"},"content":"        /// Extracts a list of the current sections from textboxes of the beamshape."},{"lineNumber":1021,"author":{"gitId":"-"},"content":"        /// If the textboxes are not consistent (e.g. repeated or missing section), returns null instead."},{"lineNumber":1022,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"        private static List\u003cAgendaSection\u003e ExtractAgendaSectionsFromBeam(Shape beamShape)"},{"lineNumber":1024,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1025,"author":{"gitId":"-"},"content":"            List\u003cAgendaSection\u003e agendaSections \u003d beamShape.GroupItems.Cast\u003cShape\u003e()"},{"lineNumber":1026,"author":{"gitId":"-"},"content":"                                                    .Where(AgendaShape.WithPurpose(ShapePurpose.BeamShapeText))"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"                                                    .Select(shape \u003d\u003e AgendaShape.Decode(shape).Section)"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"                                                    .ToList();"},{"lineNumber":1029,"author":{"gitId":"-"},"content":""},{"lineNumber":1030,"author":{"gitId":"-"},"content":"            agendaSections.Sort((s1, s2) \u003d\u003e s1.Index - s2.Index);"},{"lineNumber":1031,"author":{"gitId":"-"},"content":""},{"lineNumber":1032,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c agendaSections.Count; ++i)"},{"lineNumber":1033,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1034,"author":{"gitId":"-"},"content":"                if (agendaSections[i].Index !\u003d i + 2)"},{"lineNumber":1035,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1036,"author":{"gitId":"-"},"content":"                    return null;"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1038,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"            return agendaSections;"},{"lineNumber":1040,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1041,"author":{"gitId":"-"},"content":""},{"lineNumber":1042,"author":{"gitId":"-"},"content":""},{"lineNumber":1043,"author":{"gitId":"-"},"content":"        private static void SyncBeamOnSlides(List\u003cPowerPointSlide\u003e targetSlides, PowerPointSlide refSlide)"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"            List\u003cPowerPointSlide\u003e syncSlides \u003d new List\u003cPowerPointSlide\u003e();"},{"lineNumber":1046,"author":{"gitId":"-"},"content":""},{"lineNumber":1047,"author":{"gitId":"-"},"content":"            // Generate beam agenda for all target slides that do not currently have the beam agenda."},{"lineNumber":1048,"author":{"gitId":"-"},"content":"            if (targetSlides !\u003d null)"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"                IEnumerable\u003cPowerPointSlide\u003e selectedSlidesWithoutBeam \u003d targetSlides.Where(slide \u003d\u003e !HasBeamShape(slide));"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"                syncSlides.AddRange(selectedSlidesWithoutBeam);"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1053,"author":{"gitId":"-"},"content":""},{"lineNumber":1054,"author":{"gitId":"-"},"content":"            // Synchronize agenda for all slides in the presentation that have the beam agenda."},{"lineNumber":1055,"author":{"gitId":"-"},"content":"            Shape refBeamShape \u003d FindBeamShape(refSlide);"},{"lineNumber":1056,"author":{"gitId":"-"},"content":"            IEnumerable\u003cPowerPointSlide\u003e allSlidesWithBeam \u003d PowerPointPresentation.Current.Slides"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"                                                                  .Where(slide \u003d\u003e AgendaSlide.IsNotReferenceslide(slide) \u0026\u0026"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"                                                                                  FindBeamShape(slide) !\u003d null);"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"            syncSlides.AddRange(allSlidesWithBeam);"},{"lineNumber":1060,"author":{"gitId":"-"},"content":""},{"lineNumber":1061,"author":{"gitId":"-"},"content":"            foreach (PowerPointSlide slide in syncSlides)"},{"lineNumber":1062,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"                UpdateBeamOnSlide(slide, refBeamShape);"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1065,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1066,"author":{"gitId":"-"},"content":""},{"lineNumber":1067,"author":{"gitId":"-"},"content":"        private static void UpdateBeamOnSlide(PowerPointSlide slide, Shape refBeamShape)"},{"lineNumber":1068,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1069,"author":{"gitId":"-"},"content":"            RemoveBeamAgendaFromSlide(slide);"},{"lineNumber":1070,"author":{"gitId":"-"},"content":"            Microsoft.Office.Interop.PowerPoint.ShapeRange beamShape \u003d PPLClipboard.Instance.LockAndRelease(() \u003d\u003e"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1072,"author":{"gitId":"-"},"content":"                refBeamShape.Copy();"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"                return slide.Shapes.Paste();"},{"lineNumber":1074,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":1075,"author":{"gitId":"-"},"content":""},{"lineNumber":1076,"author":{"gitId":"-"},"content":"            AgendaSection section \u003d GetSlideSection(slide);"},{"lineNumber":1077,"author":{"gitId":"-"},"content":""},{"lineNumber":1078,"author":{"gitId":"-"},"content":"            beamShape.GroupItems.Cast\u003cShape\u003e()"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"                                .Where(AgendaShape.WithPurpose(ShapePurpose.BeamShapeHighlightedText))"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"                                .ToList()"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"                                .ForEach(shape \u003d\u003e shape.SafeDelete());"},{"lineNumber":1082,"author":{"gitId":"-"},"content":""},{"lineNumber":1083,"author":{"gitId":"-"},"content":"            if (section.Index \u003d\u003d 1)"},{"lineNumber":1084,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":1086,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1087,"author":{"gitId":"-"},"content":""},{"lineNumber":1088,"author":{"gitId":"-"},"content":"            BeamFormats beamFormats \u003d BeamFormats.ExtractFormats(refBeamShape);"},{"lineNumber":1089,"author":{"gitId":"-"},"content":"            Shape currentSectionTextBox \u003d beamShape.GroupItems"},{"lineNumber":1090,"author":{"gitId":"-"},"content":"                                                .Cast\u003cShape\u003e()"},{"lineNumber":1091,"author":{"gitId":"-"},"content":"                                                .Where(AgendaShape.MeetsConditions(shape \u003d\u003e shape.ShapePurpose \u003d\u003d ShapePurpose.BeamShapeText \u0026\u0026"},{"lineNumber":1092,"author":{"gitId":"-"},"content":"                                                                                            shape.Section.Index \u003d\u003d section.Index))"},{"lineNumber":1093,"author":{"gitId":"-"},"content":"                                                .FirstOrDefault();"},{"lineNumber":1094,"author":{"gitId":"-"},"content":"            TextRange2 currentSectionText \u003d currentSectionTextBox.TextFrame2.TextRange;"},{"lineNumber":1095,"author":{"gitId":"-"},"content":""},{"lineNumber":1096,"author":{"gitId":"-"},"content":"            ShapeUtil.SyncTextRange(beamFormats.Highlighted, currentSectionText, pickupTextContent: false);"},{"lineNumber":1097,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1098,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":1099,"author":{"gitId":"-"},"content":""},{"lineNumber":1100,"author":{"gitId":"-"},"content":""},{"lineNumber":1101,"author":{"gitId":"-"},"content":"        #region Actions - General"},{"lineNumber":1102,"author":{"gitId":"-"},"content":""},{"lineNumber":1103,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":1104,"author":{"gitId":"-"},"content":"        /// Assumes that there is no reference slide."},{"lineNumber":1105,"author":{"gitId":"-"},"content":"        /// Takes in a slide, and sets it as the reference slide of the agenda."},{"lineNumber":1106,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":1107,"author":{"gitId":"-"},"content":"        private static void SetAsReferenceSlide(PowerPointSlide refSlide, Type type)"},{"lineNumber":1108,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"            AgendaSlide.SetAsReferenceSlideName(refSlide, type);"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"            refSlide.Hidden \u003d true;"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"            refSlide.AddTemplateSlideMarker();"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"            refSlide.MoveTo(1);"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1114,"author":{"gitId":"-"},"content":""},{"lineNumber":1115,"author":{"gitId":"-"},"content":"        private static void SelectOriginalSlide(PowerPointSlide originalSlide, PowerPointSlide fallbackToSlide)"},{"lineNumber":1116,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1117,"author":{"gitId":"-"},"content":"            if (originalSlide !\u003d null)"},{"lineNumber":1118,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1119,"author":{"gitId":"-"},"content":"                originalSlide.GetNativeSlide().Select();"},{"lineNumber":1120,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":1121,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1122,"author":{"gitId":"-"},"content":"            if (fallbackToSlide !\u003d null)"},{"lineNumber":1123,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1124,"author":{"gitId":"-"},"content":"                fallbackToSlide.GetNativeSlide().Select();"},{"lineNumber":1125,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1126,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1127,"author":{"gitId":"-"},"content":""},{"lineNumber":1128,"author":{"gitId":"-"},"content":"        private static bool DisplayLoadingDialog(string title, string content)"},{"lineNumber":1129,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1130,"author":{"gitId":"-"},"content":"            // make FT run stably"},{"lineNumber":1131,"author":{"gitId":"-"},"content":"            if (PowerPointLabsFT.IsFunctionalTestOn)"},{"lineNumber":1132,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1133,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":1134,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1135,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1137,"author":{"gitId":"-"},"content":"                _loadDialog \u003d new LoadingDialogBox(title, content);"},{"lineNumber":1138,"author":{"gitId":"-"},"content":"                _loadDialog.ShowThematicDialog(false);"},{"lineNumber":1139,"author":{"gitId":"-"},"content":"                return true;"},{"lineNumber":1140,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1141,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1142,"author":{"gitId":"-"},"content":""},{"lineNumber":1143,"author":{"gitId":"-"},"content":"        private static void DisposeLoadingDialog()"},{"lineNumber":1144,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1145,"author":{"gitId":"-"},"content":"            _loadDialog.Close();"},{"lineNumber":1146,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1147,"author":{"gitId":"-"},"content":""},{"lineNumber":1148,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":1149,"author":{"gitId":"-"},"content":""},{"lineNumber":1150,"author":{"gitId":"-"},"content":""},{"lineNumber":1151,"author":{"gitId":"-"},"content":"        #region Conditions on current state"},{"lineNumber":1152,"author":{"gitId":"-"},"content":""},{"lineNumber":1153,"author":{"gitId":"-"},"content":"        private static bool ValidSections()"},{"lineNumber":1154,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1155,"author":{"gitId":"-"},"content":"            List\u003cstring\u003e sections \u003d PowerPointPresentation.Current.Sections;"},{"lineNumber":1156,"author":{"gitId":"-"},"content":""},{"lineNumber":1157,"author":{"gitId":"-"},"content":"            if (sections.Count \u003d\u003d 0)"},{"lineNumber":1158,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1159,"author":{"gitId":"-"},"content":"                ShowErrorMessage(AgendaLabText.ErrorNoSection);"},{"lineNumber":1160,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":1161,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1162,"author":{"gitId":"-"},"content":""},{"lineNumber":1163,"author":{"gitId":"-"},"content":"            if (sections.Count \u003d\u003d 1)"},{"lineNumber":1164,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1165,"author":{"gitId":"-"},"content":"                ShowErrorMessage(AgendaLabText.ErrorSingleSection);"},{"lineNumber":1166,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":1167,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1168,"author":{"gitId":"-"},"content":""},{"lineNumber":1169,"author":{"gitId":"-"},"content":"            if (HasEmptySection())"},{"lineNumber":1170,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1171,"author":{"gitId":"-"},"content":"                ShowErrorMessage(AgendaLabText.ErrorEmptySection);"},{"lineNumber":1172,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":1173,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1174,"author":{"gitId":"-"},"content":""},{"lineNumber":1175,"author":{"gitId":"-"},"content":"            if (HasTooLongSectionName())"},{"lineNumber":1176,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1177,"author":{"gitId":"-"},"content":"                ShowErrorMessage(AgendaLabText.ErrorSectionNameTooLong);"},{"lineNumber":1178,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":1179,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1180,"author":{"gitId":"-"},"content":""},{"lineNumber":1181,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":1182,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1183,"author":{"gitId":"-"},"content":""},{"lineNumber":1184,"author":{"gitId":"-"},"content":"        private static bool HasTooLongSectionName()"},{"lineNumber":1185,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1186,"author":{"gitId":"-"},"content":"            List\u003cAgendaSection\u003e sections \u003d Sections;"},{"lineNumber":1187,"author":{"gitId":"-"},"content":"            return sections.Any(section \u003d\u003e section.Name.Length \u003e SectionNameMaxLength);"},{"lineNumber":1188,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1189,"author":{"gitId":"-"},"content":""},{"lineNumber":1190,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":1191,"author":{"gitId":"-"},"content":"        /// Checks whether there is a section with no slides."},{"lineNumber":1192,"author":{"gitId":"-"},"content":"        /// Agenda slides are not counted."},{"lineNumber":1193,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":1194,"author":{"gitId":"-"},"content":"        private static bool HasEmptySection()"},{"lineNumber":1195,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1196,"author":{"gitId":"-"},"content":"            List\u003cAgendaSection\u003e sections \u003d Sections;"},{"lineNumber":1197,"author":{"gitId":"-"},"content":"            foreach (AgendaSection section in sections)"},{"lineNumber":1198,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1199,"author":{"gitId":"-"},"content":"                List\u003cPowerPointSlide\u003e sectionSlides \u003d GetSectionSlides(section);"},{"lineNumber":1200,"author":{"gitId":"-"},"content":"                if (sectionSlides.All(slide \u003d\u003e AgendaSlide.IsAnyAgendaSlide(slide) || PowerPointAckSlide.IsAckSlide(slide)))"},{"lineNumber":1201,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1202,"author":{"gitId":"-"},"content":"                    return true;"},{"lineNumber":1203,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1204,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1205,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":1206,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1207,"author":{"gitId":"-"},"content":""},{"lineNumber":1208,"author":{"gitId":"-"},"content":"        private static bool AgendaPresent()"},{"lineNumber":1209,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1210,"author":{"gitId":"-"},"content":"            return FindAllAgendaSlides().Count \u003e 0 || FindSlidesWithBeam().Count \u003e 0;"},{"lineNumber":1211,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1212,"author":{"gitId":"-"},"content":""},{"lineNumber":1213,"author":{"gitId":"-"},"content":"        private static bool ValidAgenda(PowerPointSlide refSlide, Type type)"},{"lineNumber":1214,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1215,"author":{"gitId":"-"},"content":"            if (!AgendaPresent())"},{"lineNumber":1216,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1217,"author":{"gitId":"-"},"content":"                ShowErrorMessage(AgendaLabText.ErrorNoAgenda);"},{"lineNumber":1218,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":1219,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1220,"author":{"gitId":"-"},"content":""},{"lineNumber":1221,"author":{"gitId":"-"},"content":"            if (refSlide \u003d\u003d null)"},{"lineNumber":1222,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1223,"author":{"gitId":"-"},"content":"                ShowErrorMessage(AgendaLabText.ErrorNoReferenceSlide);"},{"lineNumber":1224,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":1225,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1226,"author":{"gitId":"-"},"content":""},{"lineNumber":1227,"author":{"gitId":"-"},"content":"            if (InvalidReferenceSlide(type, refSlide))"},{"lineNumber":1228,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1229,"author":{"gitId":"-"},"content":"                ShowErrorMessage(AgendaLabText.ErrorInvalidReferenceSlide);"},{"lineNumber":1230,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":1231,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1232,"author":{"gitId":"-"},"content":""},{"lineNumber":1233,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":1234,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1235,"author":{"gitId":"-"},"content":""},{"lineNumber":1236,"author":{"gitId":"-"},"content":"        private static bool InvalidReferenceSlide(Type type, PowerPointSlide refSlide)"},{"lineNumber":1237,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1238,"author":{"gitId":"-"},"content":"            switch (type)"},{"lineNumber":1239,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1240,"author":{"gitId":"-"},"content":"                case Type.Beam:"},{"lineNumber":1241,"author":{"gitId":"-"},"content":"                    return InvalidBeamAgendaReferenceSlide(refSlide);"},{"lineNumber":1242,"author":{"gitId":"-"},"content":"                case Type.Bullet:"},{"lineNumber":1243,"author":{"gitId":"-"},"content":"                    return InvalidBulletAgendaReferenceSlide(refSlide);"},{"lineNumber":1244,"author":{"gitId":"-"},"content":"                case Type.Visual:"},{"lineNumber":1245,"author":{"gitId":"-"},"content":"                    return InvalidVisualAgendaReferenceSlide(refSlide);"},{"lineNumber":1246,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1247,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":1248,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1249,"author":{"gitId":"-"},"content":""},{"lineNumber":1250,"author":{"gitId":"-"},"content":"        private static bool InvalidBulletAgendaReferenceSlide(PowerPointSlide refSlide)"},{"lineNumber":1251,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1252,"author":{"gitId":"-"},"content":"            Shape contentHolder \u003d refSlide.GetShape(AgendaShape.WithPurpose(ShapePurpose.ContentShape));"},{"lineNumber":1253,"author":{"gitId":"-"},"content":"            return (contentHolder \u003d\u003d null || contentHolder.TextFrame2.TextRange.Paragraphs.Count \u003c 3);"},{"lineNumber":1254,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1255,"author":{"gitId":"-"},"content":""},{"lineNumber":1256,"author":{"gitId":"-"},"content":"        private static bool InvalidBeamAgendaReferenceSlide(PowerPointSlide refSlide)"},{"lineNumber":1257,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1258,"author":{"gitId":"-"},"content":"            Shape beamShape \u003d FindBeamShape(refSlide);"},{"lineNumber":1259,"author":{"gitId":"-"},"content":""},{"lineNumber":1260,"author":{"gitId":"-"},"content":"            if (beamShape \u003d\u003d null)"},{"lineNumber":1261,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1262,"author":{"gitId":"-"},"content":"                return true;"},{"lineNumber":1263,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1264,"author":{"gitId":"-"},"content":""},{"lineNumber":1265,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":1266,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1267,"author":{"gitId":"-"},"content":"                if (BeamFormats.GetShapeWithPurpose(beamShape, ShapePurpose.BeamShapeHighlightedText) \u003d\u003d null)"},{"lineNumber":1268,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1269,"author":{"gitId":"-"},"content":"                    return true;"},{"lineNumber":1270,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1271,"author":{"gitId":"-"},"content":""},{"lineNumber":1272,"author":{"gitId":"-"},"content":"                if (BeamFormats.GetShapeWithPurpose(beamShape, ShapePurpose.BeamShapeText) \u003d\u003d null)"},{"lineNumber":1273,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1274,"author":{"gitId":"-"},"content":"                    return true;"},{"lineNumber":1275,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1276,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1277,"author":{"gitId":"-"},"content":"            catch (COMException)"},{"lineNumber":1278,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1279,"author":{"gitId":"-"},"content":"                // beam shape is not a group"},{"lineNumber":1280,"author":{"gitId":"-"},"content":"                return true;"},{"lineNumber":1281,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1282,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":1283,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1284,"author":{"gitId":"-"},"content":""},{"lineNumber":1285,"author":{"gitId":"-"},"content":"        private static bool InvalidVisualAgendaReferenceSlide(PowerPointSlide refSlide)"},{"lineNumber":1286,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1287,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":1288,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1289,"author":{"gitId":"-"},"content":""},{"lineNumber":1290,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":1291,"author":{"gitId":"-"},"content":""},{"lineNumber":1292,"author":{"gitId":"-"},"content":""},{"lineNumber":1293,"author":{"gitId":"-"},"content":"        private static void ShowErrorMessage(string message)"},{"lineNumber":1294,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1295,"author":{"gitId":"-"},"content":"            MessageBox.Show(message, AgendaLabText.ErrorDialogTitle);"},{"lineNumber":1296,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1297,"author":{"gitId":"-"},"content":""},{"lineNumber":1298,"author":{"gitId":"-"},"content":"        private static string CreateInDocHyperLink(PowerPointSlide slide)"},{"lineNumber":1299,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1300,"author":{"gitId":"-"},"content":"            throw new NotImplementedException();"},{"lineNumber":1301,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1302,"author":{"gitId":"-"},"content":""},{"lineNumber":1303,"author":{"gitId":"-"},"content":""},{"lineNumber":1304,"author":{"gitId":"-"},"content":""},{"lineNumber":1305,"author":{"gitId":"-"},"content":""},{"lineNumber":1306,"author":{"gitId":"-"},"content":"        # region Event Handlers"},{"lineNumber":1307,"author":{"gitId":"-"},"content":"        public static void SlideShowBeginHandler()"},{"lineNumber":1308,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1309,"author":{"gitId":"-"},"content":"            /*var type \u003d CurrentType;"},{"lineNumber":1310,"author":{"gitId":"-"},"content":""},{"lineNumber":1311,"author":{"gitId":"-"},"content":"            if (type !\u003d Type.Bullet) return;"},{"lineNumber":1312,"author":{"gitId":"-"},"content":""},{"lineNumber":1313,"author":{"gitId":"-"},"content":"            var slides \u003d PowerPointPresentation.Current.Slides.Where(AgendaSlide.IsAnyAgendaSlide);"},{"lineNumber":1314,"author":{"gitId":"-"},"content":""},{"lineNumber":1315,"author":{"gitId":"-"},"content":"            foreach (var slide in slides)"},{"lineNumber":1316,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1317,"author":{"gitId":"-"},"content":"                var linkShapes \u003d slide.GetShapesWithPrefix(PptLabsAgendaBulletLinkShape);"},{"lineNumber":1318,"author":{"gitId":"-"},"content":"                var contentHolder \u003d slide.GetShapeWithName(PptLabsAgendaContentShapeName)[0];"},{"lineNumber":1319,"author":{"gitId":"-"},"content":"                var textRange \u003d contentHolder.TextFrame2.TextRange;"},{"lineNumber":1320,"author":{"gitId":"-"},"content":""},{"lineNumber":1321,"author":{"gitId":"-"},"content":"                if (linkShapes.Count \u003d\u003d 0) return;"},{"lineNumber":1322,"author":{"gitId":"-"},"content":""},{"lineNumber":1323,"author":{"gitId":"-"},"content":"                for (var i \u003d 1; i \u003c\u003d textRange.Paragraphs.Count; i++)"},{"lineNumber":1324,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1325,"author":{"gitId":"-"},"content":"                    var shape \u003d linkShapes[i - 1];"},{"lineNumber":1326,"author":{"gitId":"-"},"content":"                    var curPara \u003d textRange.Paragraphs[i];"},{"lineNumber":1327,"author":{"gitId":"-"},"content":""},{"lineNumber":1328,"author":{"gitId":"-"},"content":"                    shape.Left \u003d curPara.BoundLeft;"},{"lineNumber":1329,"author":{"gitId":"-"},"content":"                    shape.Top \u003d curPara.BoundTop;"},{"lineNumber":1330,"author":{"gitId":"-"},"content":"                    shape.Width \u003d curPara.BoundWidth;"},{"lineNumber":1331,"author":{"gitId":"-"},"content":"                    shape.Height \u003d curPara.BoundHeight;"},{"lineNumber":1332,"author":{"gitId":"-"},"content":""},{"lineNumber":1333,"author":{"gitId":"-"},"content":"                    shape.Visible \u003d MsoTriState.msoTrue;"},{"lineNumber":1334,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1335,"author":{"gitId":"-"},"content":"            }*/"},{"lineNumber":1336,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1337,"author":{"gitId":"-"},"content":""},{"lineNumber":1338,"author":{"gitId":"-"},"content":"        public static void SlideShowEndHandler()"},{"lineNumber":1339,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1340,"author":{"gitId":"-"},"content":"            /*var type \u003d CurrentType;"},{"lineNumber":1341,"author":{"gitId":"-"},"content":""},{"lineNumber":1342,"author":{"gitId":"-"},"content":"            if (type !\u003d Type.Bullet) return;"},{"lineNumber":1343,"author":{"gitId":"-"},"content":""},{"lineNumber":1344,"author":{"gitId":"-"},"content":"            var slides \u003d PowerPointPresentation.Current.Slides.Where(AgendaSlide.IsAnyAgendaSlide);"},{"lineNumber":1345,"author":{"gitId":"-"},"content":""},{"lineNumber":1346,"author":{"gitId":"-"},"content":"            foreach (var slide in slides)"},{"lineNumber":1347,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1348,"author":{"gitId":"-"},"content":"                var linkShapes \u003d slide.GetShapesWithPrefix(PptLabsAgendaBulletLinkShape);"},{"lineNumber":1349,"author":{"gitId":"-"},"content":""},{"lineNumber":1350,"author":{"gitId":"-"},"content":"                foreach (var linkShape in linkShapes)"},{"lineNumber":1351,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1352,"author":{"gitId":"-"},"content":"                    linkShape.Visible \u003d MsoTriState.msoFalse;"},{"lineNumber":1353,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1354,"author":{"gitId":"-"},"content":"            }*/"},{"lineNumber":1355,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1356,"author":{"gitId":"-"},"content":"        # endregion"},{"lineNumber":1357,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1358,"author":{"gitId":"-"},"content":""},{"lineNumber":1359,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"iskandarzulkarnaien":14,"-":1345}},{"path":"PowerPointLabs/PowerPointLabs/ColorTheme/BaseStylesDictionary.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"xantho09"},"content":"﻿using System;"},{"lineNumber":2,"author":{"gitId":"xantho09"},"content":"using System.Collections.Generic;"},{"lineNumber":3,"author":{"gitId":"xantho09"},"content":"using System.ComponentModel;"},{"lineNumber":4,"author":{"gitId":"xantho09"},"content":"using System.Linq;"},{"lineNumber":5,"author":{"gitId":"xantho09"},"content":"using System.Text;"},{"lineNumber":6,"author":{"gitId":"xantho09"},"content":"using System.Threading.Tasks;"},{"lineNumber":7,"author":{"gitId":"xantho09"},"content":"using System.Windows;"},{"lineNumber":8,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":9,"author":{"gitId":"xantho09"},"content":"namespace PowerPointLabs.ColorThemes"},{"lineNumber":10,"author":{"gitId":"xantho09"},"content":"{"},{"lineNumber":11,"author":{"gitId":"xantho09"},"content":"    /// \u003csummary\u003e"},{"lineNumber":12,"author":{"gitId":"xantho09"},"content":"    /// The BaseStylesDictionary class is a ResourceDictionary that contains all of the base"},{"lineNumber":13,"author":{"gitId":"xantho09"},"content":"    /// styles of Controls."},{"lineNumber":14,"author":{"gitId":"xantho09"},"content":"    /// \u003c/summary\u003e"},{"lineNumber":15,"author":{"gitId":"xantho09"},"content":"    /// \u003cremarks\u003e"},{"lineNumber":16,"author":{"gitId":"xantho09"},"content":"    /// The main purpose of this class is to be able to design styles that are based off of"},{"lineNumber":17,"author":{"gitId":"xantho09"},"content":"    /// the base styles defined in the Resources/Themes folder. This allows them to maintain"},{"lineNumber":18,"author":{"gitId":"xantho09"},"content":"    /// the colour changing properties upon the ColorTheme being changed."},{"lineNumber":19,"author":{"gitId":"xantho09"},"content":"    /// "},{"lineNumber":20,"author":{"gitId":"xantho09"},"content":"    /// That said, the main reason of creating this helper class is so that the path to the"},{"lineNumber":21,"author":{"gitId":"xantho09"},"content":"    /// Resources/Themes folder doesn\u0027t have to be written out every time."},{"lineNumber":22,"author":{"gitId":"xantho09"},"content":"    /// "},{"lineNumber":23,"author":{"gitId":"xantho09"},"content":"    /// \u003ccode\u003e"},{"lineNumber":24,"author":{"gitId":"xantho09"},"content":"    /// \u003cUserControl "},{"lineNumber":25,"author":{"gitId":"xantho09"},"content":"    ///     x:Class\u003d\"...\""},{"lineNumber":26,"author":{"gitId":"xantho09"},"content":"    ///     xmlns\u003d\"...\""},{"lineNumber":27,"author":{"gitId":"xantho09"},"content":"    ///     xmlns:theme\u003d\"clr-namespace:PowerPointLabs.ColorThemes\"\u003e"},{"lineNumber":28,"author":{"gitId":"xantho09"},"content":"    ///     \u003cUserControl.Resources\u003e"},{"lineNumber":29,"author":{"gitId":"xantho09"},"content":"    ///         \u003cResourceDictionary\u003e"},{"lineNumber":30,"author":{"gitId":"xantho09"},"content":"    ///             \u003cResourceDictionary.MergedDictionaries\u003e"},{"lineNumber":31,"author":{"gitId":"xantho09"},"content":"    ///                 \u003ctheme:TemplateStyleDictionary/\u003e"},{"lineNumber":32,"author":{"gitId":"xantho09"},"content":"    ///             \u003c/ResourceDictionary.MergedDictionaries\u003e    "},{"lineNumber":33,"author":{"gitId":"xantho09"},"content":"    ///         \u003c/ResourceDictionary\u003e"},{"lineNumber":34,"author":{"gitId":"xantho09"},"content":"    ///     \u003c/UserControl.Resources\u003e"},{"lineNumber":35,"author":{"gitId":"xantho09"},"content":"    ///     \u003cButton\u003e"},{"lineNumber":36,"author":{"gitId":"xantho09"},"content":"    ///         \u003cButton.Style\u003e"},{"lineNumber":37,"author":{"gitId":"xantho09"},"content":"    ///             \u003cStyle TargetType\u003d\"{x:Type Button}\" BasedOn\u003d\"{StaticResource BaseButtonStyle}\"\u003e"},{"lineNumber":38,"author":{"gitId":"xantho09"},"content":"    ///                 \u003cStyle.Triggers\u003e"},{"lineNumber":39,"author":{"gitId":"xantho09"},"content":"    ///                     \u003cTrigger Property\u003d\"IsEnabled\" Value\u003d\"False\"\u003e"},{"lineNumber":40,"author":{"gitId":"xantho09"},"content":"    ///                         \u003cSetter Property\u003d\"Opacity\" Value\u003d\"0.3\"/\u003e"},{"lineNumber":41,"author":{"gitId":"xantho09"},"content":"    ///                     \u003c/Trigger\u003e"},{"lineNumber":42,"author":{"gitId":"xantho09"},"content":"    ///                 \u003c/Style.Triggers\u003e"},{"lineNumber":43,"author":{"gitId":"xantho09"},"content":"    ///             \u003c/Style\u003e"},{"lineNumber":44,"author":{"gitId":"xantho09"},"content":"    ///         \u003c/Button.Style\u003e"},{"lineNumber":45,"author":{"gitId":"xantho09"},"content":"    ///     \u003c/Button\u003e"},{"lineNumber":46,"author":{"gitId":"xantho09"},"content":"    /// \u003c/UserControl\u003e"},{"lineNumber":47,"author":{"gitId":"xantho09"},"content":"    /// \u003c/code\u003e"},{"lineNumber":48,"author":{"gitId":"xantho09"},"content":"    /// \u003c/remarks\u003e"},{"lineNumber":49,"author":{"gitId":"xantho09"},"content":"    public class BaseStylesDictionary : ResourceDictionary"},{"lineNumber":50,"author":{"gitId":"xantho09"},"content":"    {"},{"lineNumber":51,"author":{"gitId":"xantho09"},"content":"        public static readonly string PathToThemesFolder \u003d \"pack://application:,,,/PowerPointLabs;component/Resources/Themes/\";"},{"lineNumber":52,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":53,"author":{"gitId":"xantho09"},"content":"        public BaseStylesDictionary()"},{"lineNumber":54,"author":{"gitId":"xantho09"},"content":"        {"},{"lineNumber":55,"author":{"gitId":"xantho09"},"content":"            Source \u003d new Uri(PathToThemesFolder + \"TemplateStyles.xaml\", UriKind.RelativeOrAbsolute);"},{"lineNumber":56,"author":{"gitId":"xantho09"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"xantho09"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"xantho09"},"content":"}"}],"authorContributionMap":{"xantho09":58}},{"path":"PowerPointLabs/PowerPointLabs/ColorTheme/ColorTheme.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using System.Windows.Media;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.ColorThemes"},{"lineNumber":4,"author":{"gitId":"-"},"content":"{"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public struct ColorTheme"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        public const int COLORFUL \u003d 0;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        public const int LIGHT_GRAY \u003d 1;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        public const int DARK_GRAY_ALT \u003d 2;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        public const int DARK_GRAY \u003d 3;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        public const int BLACK \u003d 4;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        public const int WHITE \u003d 5;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"xantho09"},"content":"        public int ThemeId;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":15,"xantho09":1}},{"path":"PowerPointLabs/PowerPointLabs/ColorTheme/DesignTheme.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"xantho09"},"content":"﻿using System;"},{"lineNumber":2,"author":{"gitId":"xantho09"},"content":"using System.Collections.Generic;"},{"lineNumber":3,"author":{"gitId":"xantho09"},"content":"using System.ComponentModel;"},{"lineNumber":4,"author":{"gitId":"xantho09"},"content":"using System.Linq;"},{"lineNumber":5,"author":{"gitId":"xantho09"},"content":"using System.Text;"},{"lineNumber":6,"author":{"gitId":"xantho09"},"content":"using System.Threading.Tasks;"},{"lineNumber":7,"author":{"gitId":"xantho09"},"content":"using System.Windows;"},{"lineNumber":8,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":9,"author":{"gitId":"xantho09"},"content":"namespace PowerPointLabs.ColorThemes"},{"lineNumber":10,"author":{"gitId":"xantho09"},"content":"{"},{"lineNumber":11,"author":{"gitId":"xantho09"},"content":"    /// \u003csummary\u003e"},{"lineNumber":12,"author":{"gitId":"xantho09"},"content":"    /// The DesignTheme class is a ResourceDictionary for use in the Designer in Visual Studio."},{"lineNumber":13,"author":{"gitId":"xantho09"},"content":"    /// \u003c/summary\u003e"},{"lineNumber":14,"author":{"gitId":"xantho09"},"content":"    /// \u003cremarks\u003e"},{"lineNumber":15,"author":{"gitId":"xantho09"},"content":"    /// This class will apply the specified theme in the Designer preview, allowing the programmer"},{"lineNumber":16,"author":{"gitId":"xantho09"},"content":"    /// to design Windows or User Control .xaml files while being able to freely change the themes."},{"lineNumber":17,"author":{"gitId":"xantho09"},"content":"    /// This ResourceDictionary will have no effect during runtime."},{"lineNumber":18,"author":{"gitId":"xantho09"},"content":"    /// "},{"lineNumber":19,"author":{"gitId":"xantho09"},"content":"    /// To use this class in a Control, simply place this class in the Resources\u0027 Merged Dictionary."},{"lineNumber":20,"author":{"gitId":"xantho09"},"content":"    /// For example, to use it in a UserControl,"},{"lineNumber":21,"author":{"gitId":"xantho09"},"content":"    /// "},{"lineNumber":22,"author":{"gitId":"xantho09"},"content":"    /// \u003ccode\u003e"},{"lineNumber":23,"author":{"gitId":"xantho09"},"content":"    /// \u003cUserControl "},{"lineNumber":24,"author":{"gitId":"xantho09"},"content":"    ///     x:Class\u003d\"...\""},{"lineNumber":25,"author":{"gitId":"xantho09"},"content":"    ///     xmlns\u003d\"...\""},{"lineNumber":26,"author":{"gitId":"xantho09"},"content":"    ///     xmlns:theme\u003d\"clr-namespace:PowerPointLabs.ColorThemes\"\u003e"},{"lineNumber":27,"author":{"gitId":"xantho09"},"content":"    ///     \u003cUserControl.Resources\u003e"},{"lineNumber":28,"author":{"gitId":"xantho09"},"content":"    ///         \u003cResourceDictionary\u003e"},{"lineNumber":29,"author":{"gitId":"xantho09"},"content":"    ///             \u003cResourceDictionary.MergedDictionaries\u003e"},{"lineNumber":30,"author":{"gitId":"xantho09"},"content":"    ///                 \u003ctheme:DesignTheme Theme\u003d\"Black\"/\u003e"},{"lineNumber":31,"author":{"gitId":"xantho09"},"content":"    ///             \u003c/ResourceDictionary.MergedDictionaries\u003e    "},{"lineNumber":32,"author":{"gitId":"xantho09"},"content":"    ///         \u003c/ResourceDictionary\u003e"},{"lineNumber":33,"author":{"gitId":"xantho09"},"content":"    ///     \u003c/UserControl.Resources\u003e"},{"lineNumber":34,"author":{"gitId":"xantho09"},"content":"    /// \u003c/UserControl\u003e"},{"lineNumber":35,"author":{"gitId":"xantho09"},"content":"    /// \u003c/code\u003e"},{"lineNumber":36,"author":{"gitId":"xantho09"},"content":"    /// \u003c/remarks\u003e"},{"lineNumber":37,"author":{"gitId":"xantho09"},"content":"    public class DesignTheme : ResourceDictionary"},{"lineNumber":38,"author":{"gitId":"xantho09"},"content":"    {"},{"lineNumber":39,"author":{"gitId":"xantho09"},"content":"        public static readonly string PathToThemesFolder \u003d \"pack://application:,,,/PowerPointLabs;component/Resources/Themes/\";"},{"lineNumber":40,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":41,"author":{"gitId":"xantho09"},"content":"        private string theme;"},{"lineNumber":42,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":43,"author":{"gitId":"xantho09"},"content":"        /// \u003csummary\u003e"},{"lineNumber":44,"author":{"gitId":"xantho09"},"content":"        /// The theme to apply. Valid values are \"Colorful\", \"Black\", \"White\" and \"Dark Gray\"."},{"lineNumber":45,"author":{"gitId":"xantho09"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":46,"author":{"gitId":"xantho09"},"content":"        public string Theme"},{"lineNumber":47,"author":{"gitId":"xantho09"},"content":"        {"},{"lineNumber":48,"author":{"gitId":"xantho09"},"content":"            get \u003d\u003e theme;"},{"lineNumber":49,"author":{"gitId":"xantho09"},"content":"            set"},{"lineNumber":50,"author":{"gitId":"xantho09"},"content":"            {"},{"lineNumber":51,"author":{"gitId":"xantho09"},"content":"                theme \u003d value;"},{"lineNumber":52,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":53,"author":{"gitId":"xantho09"},"content":"                // Set the Source of the Resource Dictionary only when in Designer mode(and not runtime)."},{"lineNumber":54,"author":{"gitId":"xantho09"},"content":"                if ((bool)DesignerProperties.IsInDesignModeProperty.GetMetadata(typeof(DependencyObject)).DefaultValue)"},{"lineNumber":55,"author":{"gitId":"xantho09"},"content":"                {"},{"lineNumber":56,"author":{"gitId":"xantho09"},"content":"                    var themeUri \u003d PathToThemesFolder + theme + \"Theme.xaml\";"},{"lineNumber":57,"author":{"gitId":"xantho09"},"content":"                    Source \u003d new Uri(themeUri);"},{"lineNumber":58,"author":{"gitId":"xantho09"},"content":"                }"},{"lineNumber":59,"author":{"gitId":"xantho09"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"xantho09"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"xantho09"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"xantho09"},"content":"}"}],"authorContributionMap":{"xantho09":62}},{"path":"PowerPointLabs/PowerPointLabs/ColorTheme/INotifyOnThemeChanged.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"xantho09"},"content":"﻿using System;"},{"lineNumber":2,"author":{"gitId":"xantho09"},"content":"using System.Collections.Generic;"},{"lineNumber":3,"author":{"gitId":"xantho09"},"content":"using System.Linq;"},{"lineNumber":4,"author":{"gitId":"xantho09"},"content":"using System.Text;"},{"lineNumber":5,"author":{"gitId":"xantho09"},"content":"using System.Threading.Tasks;"},{"lineNumber":6,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":7,"author":{"gitId":"xantho09"},"content":"namespace PowerPointLabs.ColorThemes"},{"lineNumber":8,"author":{"gitId":"xantho09"},"content":"{"},{"lineNumber":9,"author":{"gitId":"xantho09"},"content":"    /// \u003csummary\u003e"},{"lineNumber":10,"author":{"gitId":"xantho09"},"content":"    /// The INotifyOnThemeChanged interface is to indicate that the class implementing this interface"},{"lineNumber":11,"author":{"gitId":"xantho09"},"content":"    /// should be notified when the ColorTheme has changed."},{"lineNumber":12,"author":{"gitId":"xantho09"},"content":"    /// \u003c/summary\u003e"},{"lineNumber":13,"author":{"gitId":"xantho09"},"content":"    /// \u003cremarks\u003e"},{"lineNumber":14,"author":{"gitId":"xantho09"},"content":"    /// This interface should only be implemented by classes that are subscribed to the "},{"lineNumber":15,"author":{"gitId":"xantho09"},"content":"    /// \u003csee cref\u003d\"ThemeManager.ColorThemeChanged\"/\u003e event via the"},{"lineNumber":16,"author":{"gitId":"xantho09"},"content":"    /// \u003csee cref\u003d\"Extensions.ThemeExtensions.ApplyTheme(System.Windows.FrameworkElement, object, ColorTheme)\"/\u003e"},{"lineNumber":17,"author":{"gitId":"xantho09"},"content":"    /// method. The \u003csee cref\u003d\"OnThemeChanged(ColorTheme)\"/\u003e method only gets called via that ApplyTheme method."},{"lineNumber":18,"author":{"gitId":"xantho09"},"content":"    /// \u003c/remarks\u003e"},{"lineNumber":19,"author":{"gitId":"xantho09"},"content":"    public interface INotifyOnThemeChanged"},{"lineNumber":20,"author":{"gitId":"xantho09"},"content":"    {"},{"lineNumber":21,"author":{"gitId":"xantho09"},"content":"        /// \u003csummary\u003e"},{"lineNumber":22,"author":{"gitId":"xantho09"},"content":"        /// Notifies the class that the Color Theme has changed."},{"lineNumber":23,"author":{"gitId":"xantho09"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":24,"author":{"gitId":"xantho09"},"content":"        /// \u003cparam name\u003d\"updatedColorTheme\"\u003eThe updated ColorTheme\u003c/param\u003e"},{"lineNumber":25,"author":{"gitId":"xantho09"},"content":"        void OnThemeChanged(ColorTheme updatedColorTheme);"},{"lineNumber":26,"author":{"gitId":"xantho09"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"xantho09"},"content":"}"}],"authorContributionMap":{"xantho09":27}},{"path":"PowerPointLabs/PowerPointLabs/ColorTheme/ThemeExtensions.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using System;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"using System.Collections.Generic;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"using System.Linq;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"using System.Windows;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"using System.Windows.Controls;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"using System.Windows.Controls.Primitives;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"using System.Windows.Input;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"using System.Windows.Media;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"using System.Windows.Media.Media3D;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"using System.Windows.Shapes;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"using PowerPointLabs.ELearningLab.Views;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"using PowerPointLabs.Utils;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.ColorThemes.Extensions"},{"lineNumber":16,"author":{"gitId":"-"},"content":"{"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static class ThemeExtensions"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":19,"author":{"gitId":"xantho09"},"content":"        public static readonly string PathToMahAppsAccents \u003d \"pack://application:,,,/MahApps.Metro;component/Styles/Accents/\";"},{"lineNumber":20,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        /// Shows a thematic dialog and waits for the window to close."},{"lineNumber":23,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"window\"\u003eWindow to display\u003c/param\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"wait\"\u003eWhether to wait for dialog to close\u003c/param\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        /// \u003creturns\u003e\u003c/returns\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        public static bool? ShowThematicDialog(this Window window, bool wait \u003d true)"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            window.Loaded -\u003d window.RefreshVisual;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            window.Loaded +\u003d window.RefreshVisual;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            if (wait)"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                ThemeManager.Instance.ColorThemeChanged +\u003d window.ApplyTheme;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                bool? result \u003d window.ShowDialog();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ThemeManager.Instance.ColorThemeChanged -\u003d window.ApplyTheme;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                return result;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ThemeManager.Instance.ColorThemeChanged +\u003d window.ApplyTheme;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                ThemeManager.Instance.ColorThemeChanged -\u003d window.ApplyTheme;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                window.Show();"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                return null;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":48,"author":{"gitId":"xantho09"},"content":"        /// Applies a theme to the specified FrameworkElement by updating its Resources."},{"lineNumber":49,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":50,"author":{"gitId":"xantho09"},"content":"        /// \u003cparam name\u003d\"element\"\u003eThe WPF FrameworkElement to apply the theme to.\u003c/param\u003e"},{"lineNumber":51,"author":{"gitId":"xantho09"},"content":"        /// \u003cparam name\u003d\"sender\"\u003eThe object that triggered the event.\u003c/param\u003e"},{"lineNumber":52,"author":{"gitId":"xantho09"},"content":"        /// \u003cparam name\u003d\"theme\"\u003eThe ColorTheme to apply.\u003c/param\u003e"},{"lineNumber":53,"author":{"gitId":"xantho09"},"content":"        public static void ApplyTheme(this FrameworkElement element, object sender, ColorTheme theme)"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":55,"author":{"gitId":"xantho09"},"content":"            // Three things to update:"},{"lineNumber":56,"author":{"gitId":"xantho09"},"content":"            // 1. The ThemeResourceDictionary at the front of the element\u0027s Resources."},{"lineNumber":57,"author":{"gitId":"xantho09"},"content":"            // 2. MahApps resource dictionaries if the element has them."},{"lineNumber":58,"author":{"gitId":"xantho09"},"content":"            // 3. Calling the element\u0027s own OnThemeChanged method if it implements INotifyOnThemeChanged."},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"xantho09"},"content":"            element.UpdateThemeResourceDictionary(theme);"},{"lineNumber":61,"author":{"gitId":"xantho09"},"content":"            element.UpdateMahAppsTheme(theme);"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"xantho09"},"content":"            if (element is INotifyOnThemeChanged)"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":65,"author":{"gitId":"xantho09"},"content":"                element.Dispatcher.Invoke(new Action(() \u003d\u003e (element as INotifyOnThemeChanged).OnThemeChanged(theme)));"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":70,"author":{"gitId":"xantho09"},"content":"        /// Removes any existing ThemeResourceDictionary in the specified element\u0027s Merged Dictionaries and"},{"lineNumber":71,"author":{"gitId":"xantho09"},"content":"        /// prepends a ThemeResourceDictionary based on the specified color theme to the Merged Dictionaries"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":73,"author":{"gitId":"xantho09"},"content":"        /// \u003cparam name\u003d\"element\"\u003eThe element whose Merged Dictionaries will be updated\u003c/param\u003e"},{"lineNumber":74,"author":{"gitId":"xantho09"},"content":"        /// \u003cparam name\u003d\"colorTheme\"\u003eThe current ColorTheme of the Application\u003c/param\u003e"},{"lineNumber":75,"author":{"gitId":"xantho09"},"content":"        public static void UpdateThemeResourceDictionary(this FrameworkElement element, ColorTheme colorTheme)"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":77,"author":{"gitId":"xantho09"},"content":"            var mergedDictionaries \u003d element.Resources.MergedDictionaries;"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"xantho09"},"content":"            foreach (var resourceDictionary in mergedDictionaries)"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":81,"author":{"gitId":"xantho09"},"content":"                if (!(resourceDictionary is ThemeResourceDictionary))"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":83,"author":{"gitId":"xantho09"},"content":"                    continue;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":85,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":86,"author":{"gitId":"xantho09"},"content":"                element.Dispatcher.Invoke(new Action(() \u003d\u003e mergedDictionaries.Remove(resourceDictionary)));"},{"lineNumber":87,"author":{"gitId":"xantho09"},"content":"                break;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"xantho09"},"content":"            // We are inserting this Theme at the front of the MergedDictionaries because default styles are applied in"},{"lineNumber":91,"author":{"gitId":"xantho09"},"content":"            // the order in which the Resource Dictionaries appear in the MergedDictionaries. If this were appended to"},{"lineNumber":92,"author":{"gitId":"xantho09"},"content":"            // the back of a Window or Pane which uses the MahApps styles, for example, the styles in this theme will"},{"lineNumber":93,"author":{"gitId":"xantho09"},"content":"            // be applied instead of the MahApps\u0027 styles, which is (usually) undesirable."},{"lineNumber":94,"author":{"gitId":"xantho09"},"content":"            var newThemeDictionary \u003d ThemeResourceDictionary.FromColorTheme(colorTheme);"},{"lineNumber":95,"author":{"gitId":"xantho09"},"content":"            element.Dispatcher.Invoke(new Action(() \u003d\u003e mergedDictionaries.Insert(0, newThemeDictionary)));"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":99,"author":{"gitId":"xantho09"},"content":"        /// Updates the MahApps Theme in the specified FrameworkElement based on the specified colorTheme."},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":101,"author":{"gitId":"xantho09"},"content":"        /// \u003cremarks\u003e"},{"lineNumber":102,"author":{"gitId":"xantho09"},"content":"        /// This method will only set either the BaseDark or the BaseLight theme to the specified element. "},{"lineNumber":103,"author":{"gitId":"xantho09"},"content":"        /// If the FrameworkElement did not contain any MahApps Resource Dictionaries prior to this method\u0027s "},{"lineNumber":104,"author":{"gitId":"xantho09"},"content":"        /// invocation, the FrameworkElement will be left unchanged."},{"lineNumber":105,"author":{"gitId":"xantho09"},"content":"        /// \u003c/remarks\u003e"},{"lineNumber":106,"author":{"gitId":"xantho09"},"content":"        /// \u003cparam name\u003d\"element\"\u003eThe element whose Merged Dictionaries will be updated (if applicable).\u003c/param\u003e"},{"lineNumber":107,"author":{"gitId":"xantho09"},"content":"        /// \u003cparam name\u003d\"colorTheme\"\u003eThe current ColorTheme of the Application\u003c/param\u003e"},{"lineNumber":108,"author":{"gitId":"xantho09"},"content":"        public static void UpdateMahAppsTheme(this FrameworkElement element, ColorTheme colorTheme)"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":110,"author":{"gitId":"xantho09"},"content":"            // Currently, this method will only set the BaseLight or BaseDark accents based on the ColorTheme."},{"lineNumber":111,"author":{"gitId":"xantho09"},"content":"            // Any other accents will be left untouched."},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"xantho09"},"content":"            // First, check if this element\u0027s Resources contains MahApps Accent Dictionaries. If not, exit the method."},{"lineNumber":114,"author":{"gitId":"xantho09"},"content":"            var mergedDictionaries \u003d element.Resources.MergedDictionaries;"},{"lineNumber":115,"author":{"gitId":"xantho09"},"content":"            if (mergedDictionaries.All(dictionary \u003d\u003e !MahApps.Metro.ThemeManager.IsAccentDictionary(dictionary)))"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":117,"author":{"gitId":"xantho09"},"content":"                return;"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"xantho09"},"content":"            // If the element is a Window, we can use methods that already exists in the MahApps.Metro.ThemeManager class."},{"lineNumber":121,"author":{"gitId":"xantho09"},"content":"            if (element is Window)"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":123,"author":{"gitId":"xantho09"},"content":"                var window \u003d element as Window;"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"xantho09"},"content":"                // Obtain the Accent currently being used."},{"lineNumber":126,"author":{"gitId":"xantho09"},"content":"                Tuple\u003cMahApps.Metro.AppTheme, MahApps.Metro.Accent\u003e currentStyle;"},{"lineNumber":127,"author":{"gitId":"xantho09"},"content":"                currentStyle \u003d MahApps.Metro.ThemeManager.DetectAppStyle(window);"},{"lineNumber":128,"author":{"gitId":"xantho09"},"content":"                var currentAccent \u003d currentStyle.Item2;"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"xantho09"},"content":"                // Determine the new theme to apply based on the ColorTheme."},{"lineNumber":131,"author":{"gitId":"xantho09"},"content":"                MahApps.Metro.AppTheme newTheme;"},{"lineNumber":132,"author":{"gitId":"xantho09"},"content":"                switch (colorTheme.ThemeId)"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":134,"author":{"gitId":"xantho09"},"content":"                    case ColorTheme.BLACK:"},{"lineNumber":135,"author":{"gitId":"xantho09"},"content":"                    case ColorTheme.DARK_GRAY:"},{"lineNumber":136,"author":{"gitId":"xantho09"},"content":"                        newTheme \u003d MahApps.Metro.ThemeManager.GetAppTheme(\"BaseDark\");"},{"lineNumber":137,"author":{"gitId":"xantho09"},"content":"                        break;"},{"lineNumber":138,"author":{"gitId":"xantho09"},"content":"                    default:"},{"lineNumber":139,"author":{"gitId":"xantho09"},"content":"                        newTheme \u003d MahApps.Metro.ThemeManager.GetAppTheme(\"BaseLight\");"},{"lineNumber":140,"author":{"gitId":"xantho09"},"content":"                        break;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"xantho09"},"content":"                // Change the style using the built-in methods."},{"lineNumber":144,"author":{"gitId":"xantho09"},"content":"                MahApps.Metro.ThemeManager.ChangeAppStyle(window, currentAccent, newTheme);"},{"lineNumber":145,"author":{"gitId":"xantho09"},"content":"                return;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"xantho09"},"content":"            // If the element is not a Window, the dictionaries will be changed manually."},{"lineNumber":149,"author":{"gitId":"xantho09"},"content":"            for (int i \u003d 0; i \u003c mergedDictionaries.Count; ++i)"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":151,"author":{"gitId":"xantho09"},"content":"                var resourceDictionary \u003d mergedDictionaries[i];"},{"lineNumber":152,"author":{"gitId":"xantho09"},"content":"                var source \u003d resourceDictionary.Source?.OriginalString;"},{"lineNumber":153,"author":{"gitId":"xantho09"},"content":"                if (string.IsNullOrEmpty(source))"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":155,"author":{"gitId":"xantho09"},"content":"                    continue;"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"xantho09"},"content":"                // Identify the BaseLight or BaseDark accents by checking the ResourceDictionary\u0027s Source"},{"lineNumber":159,"author":{"gitId":"xantho09"},"content":"                // and seeing if it starts with the path to the MahApps\u0027s Accents folder, followed by \"Base\"."},{"lineNumber":160,"author":{"gitId":"xantho09"},"content":"                //"},{"lineNumber":161,"author":{"gitId":"xantho09"},"content":"                // Developer note: I realise this isn\u0027t the best way to check this. If there is a better method,"},{"lineNumber":162,"author":{"gitId":"xantho09"},"content":"                // do let me know, or go ahead and implement it yourself."},{"lineNumber":163,"author":{"gitId":"xantho09"},"content":"                if (!source.StartsWith(PathToMahAppsAccents + \"Base\", true, null))"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":165,"author":{"gitId":"xantho09"},"content":"                    continue;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"xantho09"},"content":"                string newSource;"},{"lineNumber":169,"author":{"gitId":"xantho09"},"content":"                switch (colorTheme.ThemeId)"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":171,"author":{"gitId":"xantho09"},"content":"                    case ColorTheme.BLACK:"},{"lineNumber":172,"author":{"gitId":"xantho09"},"content":"                    case ColorTheme.DARK_GRAY:"},{"lineNumber":173,"author":{"gitId":"xantho09"},"content":"                        newSource \u003d PathToMahAppsAccents + \"BaseDark.xaml\";"},{"lineNumber":174,"author":{"gitId":"xantho09"},"content":"                        break;"},{"lineNumber":175,"author":{"gitId":"xantho09"},"content":"                    default:"},{"lineNumber":176,"author":{"gitId":"xantho09"},"content":"                        newSource \u003d PathToMahAppsAccents + \"BaseLight.xaml\";"},{"lineNumber":177,"author":{"gitId":"xantho09"},"content":"                        break;"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"xantho09"},"content":"                var newMahAppsDictionary \u003d new ResourceDictionary"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":182,"author":{"gitId":"xantho09"},"content":"                    Source \u003d new Uri(newSource)"},{"lineNumber":183,"author":{"gitId":"xantho09"},"content":"                };"},{"lineNumber":184,"author":{"gitId":"xantho09"},"content":"                // Replace this ResourceDictionary with a new one with the appropriate Base Accent."},{"lineNumber":185,"author":{"gitId":"xantho09"},"content":"                element.Dispatcher.Invoke(new Action(() \u003d\u003e mergedDictionaries[i] \u003d newMahAppsDictionary));"},{"lineNumber":186,"author":{"gitId":"xantho09"},"content":"                break;"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"xantho09"},"content":"        /// \u003csummary\u003e"},{"lineNumber":191,"author":{"gitId":"xantho09"},"content":"        /// Changes the mahApps Accent in the specified framework element."},{"lineNumber":192,"author":{"gitId":"xantho09"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":193,"author":{"gitId":"xantho09"},"content":"        /// \u003cremarks\u003e"},{"lineNumber":194,"author":{"gitId":"xantho09"},"content":"        /// If the specified element did not contain any MahApps Resource Dictionaries prior to this method\u0027s invocation,"},{"lineNumber":195,"author":{"gitId":"xantho09"},"content":"        /// the FrameworkElement will be left unchanged."},{"lineNumber":196,"author":{"gitId":"xantho09"},"content":"        /// \u003c/remarks\u003e"},{"lineNumber":197,"author":{"gitId":"xantho09"},"content":"        /// \u003cparam name\u003d\"element\"\u003eThe element whose accent is to updated.\u003c/param\u003e"},{"lineNumber":198,"author":{"gitId":"xantho09"},"content":"        /// \u003cparam name\u003d\"accentName\"\u003eThe name of the new MahApps Accent.\u003c/param\u003e"},{"lineNumber":199,"author":{"gitId":"xantho09"},"content":"        public static void ChangeMahAppsAccent(this FrameworkElement element, string accentName)"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":201,"author":{"gitId":"xantho09"},"content":"            // First, check if this element\u0027s Resources contains MahApps Accent Dictionaries. If not, exit the method."},{"lineNumber":202,"author":{"gitId":"xantho09"},"content":"            var mergedDictionaries \u003d element.Resources.MergedDictionaries;"},{"lineNumber":203,"author":{"gitId":"xantho09"},"content":"            if (mergedDictionaries.All(dictionary \u003d\u003e !MahApps.Metro.ThemeManager.IsAccentDictionary(dictionary)))"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":205,"author":{"gitId":"xantho09"},"content":"                return;"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"xantho09"},"content":"            // If the element is a Window, we can use methods that already exists in the MahApps.Metro.ThemeManager class."},{"lineNumber":209,"author":{"gitId":"xantho09"},"content":"            if (element is Window)"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":211,"author":{"gitId":"xantho09"},"content":"                var window \u003d element as Window;"},{"lineNumber":212,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":213,"author":{"gitId":"xantho09"},"content":"                // Obtain the Theme currently being used."},{"lineNumber":214,"author":{"gitId":"xantho09"},"content":"                Tuple\u003cMahApps.Metro.AppTheme, MahApps.Metro.Accent\u003e currentStyle;"},{"lineNumber":215,"author":{"gitId":"xantho09"},"content":"                currentStyle \u003d MahApps.Metro.ThemeManager.DetectAppStyle(window);"},{"lineNumber":216,"author":{"gitId":"xantho09"},"content":"                var currentTheme \u003d currentStyle.Item1;"},{"lineNumber":217,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":218,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":219,"author":{"gitId":"xantho09"},"content":"                var newAccent \u003d MahApps.Metro.ThemeManager.GetAccent(accentName);"},{"lineNumber":220,"author":{"gitId":"xantho09"},"content":"                "},{"lineNumber":221,"author":{"gitId":"xantho09"},"content":"                // Change the style using the built-in methods."},{"lineNumber":222,"author":{"gitId":"xantho09"},"content":"                MahApps.Metro.ThemeManager.ChangeAppStyle(window, newAccent, currentTheme);"},{"lineNumber":223,"author":{"gitId":"xantho09"},"content":"                return;"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"xantho09"},"content":"            // If the element is not a Window, the dicionaries will be changed manually"},{"lineNumber":227,"author":{"gitId":"xantho09"},"content":"            for (int i \u003d 0; i \u003c mergedDictionaries.Count; ++i)"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":229,"author":{"gitId":"xantho09"},"content":"                var resourceDictionary \u003d mergedDictionaries[i];"},{"lineNumber":230,"author":{"gitId":"xantho09"},"content":"                var source \u003d resourceDictionary.Source?.OriginalString;"},{"lineNumber":231,"author":{"gitId":"xantho09"},"content":"                if (string.IsNullOrEmpty(source))"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    continue;"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":235,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":236,"author":{"gitId":"xantho09"},"content":"                // The MahApps Colors resource dictionary is also considered an AccentDictionary,"},{"lineNumber":237,"author":{"gitId":"xantho09"},"content":"                // which is why the former check is required."},{"lineNumber":238,"author":{"gitId":"xantho09"},"content":"                if (!source.StartsWith(PathToMahAppsAccents) || !MahApps.Metro.ThemeManager.IsAccentDictionary(resourceDictionary))"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":240,"author":{"gitId":"xantho09"},"content":"                    continue;"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":242,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":243,"author":{"gitId":"xantho09"},"content":"                var newSource \u003d PathToMahAppsAccents + accentName + \".xaml\";"},{"lineNumber":244,"author":{"gitId":"xantho09"},"content":"                var newAccentDictionary \u003d new ResourceDictionary"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":246,"author":{"gitId":"xantho09"},"content":"                    Source \u003d new Uri(newSource)"},{"lineNumber":247,"author":{"gitId":"xantho09"},"content":"                };"},{"lineNumber":248,"author":{"gitId":"xantho09"},"content":"                element.Dispatcher.Invoke(new Action(() \u003d\u003e mergedDictionaries[i] \u003d newAccentDictionary));"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        "},{"lineNumber":252,"author":{"gitId":"xantho09"},"content":"        /// \u003csummary\u003e"},{"lineNumber":253,"author":{"gitId":"xantho09"},"content":"        /// Invalidates the visual of the FrameworkElement."},{"lineNumber":254,"author":{"gitId":"xantho09"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":255,"author":{"gitId":"xantho09"},"content":"        public static void RefreshVisual(this FrameworkElement element, object sender, RoutedEventArgs e)"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":257,"author":{"gitId":"xantho09"},"content":"            element.InvalidateVisual();"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"xantho09"},"content":"        public static Control GetIWpfControl(this object control)"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":262,"author":{"gitId":"xantho09"},"content":"            return (control as IWpfContainer)?.WpfControl;"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":117,"xantho09":148}},{"path":"PowerPointLabs/PowerPointLabs/ColorTheme/ThemeManager.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using System;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"using System.Collections.Generic;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"using System.Windows;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"using System.Windows.Media;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Log;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"using PowerPointLabs.Utils;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.ColorThemes"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /// \u003csummary\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /// A class that manages the changing of colors to match the UI theme."},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /// \u003c/summary\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public class ThemeManager"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        public static ThemeManager Instance"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            get"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                if (_instance \u003d\u003d null)"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                    _instance \u003d new ThemeManager();"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                return _instance;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        public static string ThemeRegistryPath"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            get"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                return String.Format(@\"SOFTWARE\\\\Microsoft\\\\Office\\\\{0}\\\\Common\", Globals.ThisAddIn.Application.Version);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        public readonly string ThemeRegistryKey \u003d \"UI Theme\";"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        public static void TearDown()"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            if (_instance \u003d\u003d null)"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            _instance.themeWatcher.Stop();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            _instance \u003d null;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        private static ThemeManager _instance;"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"        public event EventHandler\u003cColorTheme\u003e ColorThemeChanged"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            add"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                value(this, _colorTheme);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                _ColorThemeChanged +\u003d value;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            remove"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                _ColorThemeChanged -\u003d value;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        public ColorTheme ColorTheme \u003d\u003e _colorTheme;"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        private RegistryWatcher\u003cint\u003e themeWatcher;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        private event EventHandler\u003cColorTheme\u003e _ColorThemeChanged;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        private ColorTheme _colorTheme;"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        private ThemeManager()"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":66,"author":{"gitId":"xantho09"},"content":"            // The ThemeWatcher will have no default keys."},{"lineNumber":67,"author":{"gitId":"xantho09"},"content":"            themeWatcher \u003d new RegistryWatcher\u003cint\u003e(ThemeRegistryPath, ThemeRegistryKey, new List\u003cint\u003e());"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            themeWatcher.ValueChanged +\u003d ThemeChangedHandler;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            themeWatcher.Fire();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            themeWatcher.Start();"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"        private void ThemeChangedHandler(object sender, int newValue)"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            UpdateColorTheme(newValue);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            _ColorThemeChanged(this, _colorTheme);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"        private void UpdateColorTheme(int newValue)"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            switch (newValue)"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":83,"author":{"gitId":"xantho09"},"content":"                case ColorTheme.BLACK:"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                case ColorTheme.COLORFUL:"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                case ColorTheme.DARK_GRAY:"},{"lineNumber":86,"author":{"gitId":"xantho09"},"content":"                case ColorTheme.DARK_GRAY_ALT:"},{"lineNumber":87,"author":{"gitId":"xantho09"},"content":"                case ColorTheme.LIGHT_GRAY:"},{"lineNumber":88,"author":{"gitId":"xantho09"},"content":"                case ColorTheme.WHITE:"},{"lineNumber":89,"author":{"gitId":"xantho09"},"content":"                    _colorTheme.ThemeId \u003d newValue;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                default:"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                    Logger.Log(\"Unknown UI Theme!\");"},{"lineNumber":93,"author":{"gitId":"xantho09"},"content":"                    _colorTheme.ThemeId \u003d ColorTheme.COLORFUL;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":90,"xantho09":8}},{"path":"PowerPointLabs/PowerPointLabs/ColorTheme/ThemeResourceDictionary.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"xantho09"},"content":"﻿using System;"},{"lineNumber":2,"author":{"gitId":"xantho09"},"content":"using System.Collections.Generic;"},{"lineNumber":3,"author":{"gitId":"xantho09"},"content":"using System.Linq;"},{"lineNumber":4,"author":{"gitId":"xantho09"},"content":"using System.Text;"},{"lineNumber":5,"author":{"gitId":"xantho09"},"content":"using System.Threading.Tasks;"},{"lineNumber":6,"author":{"gitId":"xantho09"},"content":"using System.Windows;"},{"lineNumber":7,"author":{"gitId":"xantho09"},"content":"using PowerPointLabs.ActionFramework.Common.Log;"},{"lineNumber":8,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":9,"author":{"gitId":"xantho09"},"content":"namespace PowerPointLabs.ColorThemes"},{"lineNumber":10,"author":{"gitId":"xantho09"},"content":"{"},{"lineNumber":11,"author":{"gitId":"xantho09"},"content":"    /// \u003csummary\u003e"},{"lineNumber":12,"author":{"gitId":"xantho09"},"content":"    /// The ThemeResourceDictionary class is a Resource Dictionary representing a Color Theme, to be added to the"},{"lineNumber":13,"author":{"gitId":"xantho09"},"content":"    /// resources of a \u003csee cref\u003d\"FrameworkElement\"/\u003e."},{"lineNumber":14,"author":{"gitId":"xantho09"},"content":"    /// \u003c/summary\u003e"},{"lineNumber":15,"author":{"gitId":"xantho09"},"content":"    /// \u003cremarks\u003e"},{"lineNumber":16,"author":{"gitId":"xantho09"},"content":"    /// The purpose of this class is to be able to uniquely identify the resource dictionary in a"},{"lineNumber":17,"author":{"gitId":"xantho09"},"content":"    /// \u003csee cref\u003d\"FrameworkElement\"/\u003e\u0027s resources that represents a Color Theme, so that it can be"},{"lineNumber":18,"author":{"gitId":"xantho09"},"content":"    /// replaced when the Application\u0027s Color Theme changes."},{"lineNumber":19,"author":{"gitId":"xantho09"},"content":"    /// \u003c/remarks\u003e"},{"lineNumber":20,"author":{"gitId":"xantho09"},"content":"    public class ThemeResourceDictionary : ResourceDictionary"},{"lineNumber":21,"author":{"gitId":"xantho09"},"content":"    {"},{"lineNumber":22,"author":{"gitId":"xantho09"},"content":"        public static readonly string PathToThemesFolder \u003d \"pack://application:,,,/PowerPointLabs;component/Resources/Themes/\";"},{"lineNumber":23,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":24,"author":{"gitId":"xantho09"},"content":"        public static ThemeResourceDictionary FromColorTheme(ColorTheme colorTheme)"},{"lineNumber":25,"author":{"gitId":"xantho09"},"content":"        {"},{"lineNumber":26,"author":{"gitId":"xantho09"},"content":"            string themeName \u003d \"\";"},{"lineNumber":27,"author":{"gitId":"xantho09"},"content":"            switch (colorTheme.ThemeId)"},{"lineNumber":28,"author":{"gitId":"xantho09"},"content":"            {"},{"lineNumber":29,"author":{"gitId":"xantho09"},"content":"                case ColorTheme.BLACK:"},{"lineNumber":30,"author":{"gitId":"xantho09"},"content":"                    themeName \u003d \"Black\";"},{"lineNumber":31,"author":{"gitId":"xantho09"},"content":"                    break;"},{"lineNumber":32,"author":{"gitId":"xantho09"},"content":"                case ColorTheme.COLORFUL:"},{"lineNumber":33,"author":{"gitId":"xantho09"},"content":"                    themeName \u003d \"Colorful\";"},{"lineNumber":34,"author":{"gitId":"xantho09"},"content":"                    break;"},{"lineNumber":35,"author":{"gitId":"xantho09"},"content":"                case ColorTheme.DARK_GRAY:"},{"lineNumber":36,"author":{"gitId":"xantho09"},"content":"                    themeName \u003d \"DarkGray\";"},{"lineNumber":37,"author":{"gitId":"xantho09"},"content":"                    break;"},{"lineNumber":38,"author":{"gitId":"xantho09"},"content":"                case ColorTheme.WHITE:"},{"lineNumber":39,"author":{"gitId":"xantho09"},"content":"                    themeName \u003d \"White\";"},{"lineNumber":40,"author":{"gitId":"xantho09"},"content":"                    break;"},{"lineNumber":41,"author":{"gitId":"xantho09"},"content":"                default:"},{"lineNumber":42,"author":{"gitId":"xantho09"},"content":"                    Logger.Log(\"Unknown UI Theme!\");"},{"lineNumber":43,"author":{"gitId":"xantho09"},"content":"                    themeName \u003d \"Colorful\";"},{"lineNumber":44,"author":{"gitId":"xantho09"},"content":"                    break;"},{"lineNumber":45,"author":{"gitId":"xantho09"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":47,"author":{"gitId":"xantho09"},"content":"            return new ThemeResourceDictionary"},{"lineNumber":48,"author":{"gitId":"xantho09"},"content":"            {"},{"lineNumber":49,"author":{"gitId":"xantho09"},"content":"                Source \u003d new Uri(PathToThemesFolder + themeName + \"Theme.xaml\", UriKind.RelativeOrAbsolute)"},{"lineNumber":50,"author":{"gitId":"xantho09"},"content":"            };"},{"lineNumber":51,"author":{"gitId":"xantho09"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"xantho09"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"xantho09"},"content":"}"}],"authorContributionMap":{"xantho09":53}},{"path":"PowerPointLabs/PowerPointLabs/ColorsLab/ColorsLabPaneWPF.xaml.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using System;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"using System.Collections.Generic;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"using System.IO;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"using System.Windows;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"using System.Windows.Controls;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"using System.Windows.Input;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"using System.Windows.Media;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"using System.Windows.Threading;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"using Microsoft.Office.Core;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Extension;"},{"lineNumber":13,"author":{"gitId":"xantho09"},"content":"using PowerPointLabs.ColorThemes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"using PowerPointLabs.ColorThemes.Extensions;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"using PowerPointLabs.DataSources;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"using PowerPointLabs.TextCollection;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"using PowerPointLabs.Utils;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"using PowerPointLabs.Views;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"using Color \u003d System.Drawing.Color;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"using Path \u003d System.IO.Path;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"using PowerPoint \u003d Microsoft.Office.Interop.PowerPoint;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.ColorsLab"},{"lineNumber":25,"author":{"gitId":"-"},"content":"{"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /// \u003csummary\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /// Interaction logic for ColorsLabPaneWPF.xaml"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /// \u003c/summary\u003e"},{"lineNumber":30,"author":{"gitId":"xantho09"},"content":"    public partial class ColorsLabPaneWPF : UserControl, INotifyOnThemeChanged"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        #region Functional Test API"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"        public Point GetApplyTextButtonLocationAsPoint()"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            Point locationFromWindow \u003d applyTextColorButton.TranslatePoint(new Point(0, 0), this);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            Point topLeftOfButton \u003d PointToScreen(locationFromWindow);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return new Point("},{"lineNumber":39,"author":{"gitId":"-"},"content":"                topLeftOfButton.X + applyTextColorButton.ActualWidth / 2, "},{"lineNumber":40,"author":{"gitId":"-"},"content":"                topLeftOfButton.Y + applyTextColorButton.ActualHeight / 2);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"        public Point GetApplyLineButtonLocationAsPoint()"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            Point locationFromWindow \u003d applyLineColorButton.TranslatePoint(new Point(0, 0), this);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            Point topLeftOfButton \u003d PointToScreen(locationFromWindow);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return new Point("},{"lineNumber":48,"author":{"gitId":"-"},"content":"                topLeftOfButton.X + applyLineColorButton.ActualWidth / 2,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                topLeftOfButton.Y + applyLineColorButton.ActualHeight / 2);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        public Point GetApplyFillButtonLocationAsPoint()"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Point locationFromWindow \u003d applyFillColorButton.TranslatePoint(new Point(0, 0), this);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Point topLeftOfButton \u003d PointToScreen(locationFromWindow);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new Point("},{"lineNumber":57,"author":{"gitId":"-"},"content":"                topLeftOfButton.X + applyFillColorButton.ActualWidth / 2,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                topLeftOfButton.Y + applyFillColorButton.ActualHeight / 2);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"        public Point GetMainColorRectangleLocationAsPoint()"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            Point locationFromWindow \u003d selectedColorRectangle.TranslatePoint(new Point(0, 0), this);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Point topLeftOfButton \u003d PointToScreen(locationFromWindow);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new Point("},{"lineNumber":66,"author":{"gitId":"-"},"content":"                topLeftOfButton.X + selectedColorRectangle.ActualWidth / 2,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                topLeftOfButton.Y + selectedColorRectangle.ActualHeight / 2);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"        public Point GetEyeDropperButtonLocationAsPoint()"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            Point locationFromWindow \u003d eyeDropperButton.TranslatePoint(new Point(0, 0), this);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            Point topLeftOfButton \u003d PointToScreen(locationFromWindow);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new Point("},{"lineNumber":75,"author":{"gitId":"-"},"content":"                topLeftOfButton.X + eyeDropperButton.ActualWidth / 2,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                topLeftOfButton.Y + eyeDropperButton.ActualHeight / 2);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"        public IList\u003cColor\u003e GetFavoriteColorsPanelAsList()"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            IList\u003cHSLColor\u003e favoriteHslColors \u003d dataSource.GetListOfFavoriteColors();"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            IList\u003cColor\u003e favoriteColors \u003d new List\u003cColor\u003e();"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            foreach (HSLColor favoriteHslColor in favoriteHslColors)"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                favoriteColors.Add(favoriteHslColor);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return favoriteColors;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public void LoadFavoriteColorsFromPath(string filePath)"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            dataSource.LoadFavoriteColorsFromFile(filePath);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public IList\u003cColor\u003e GetRecentColorsPanelAsList()"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            IList\u003cHSLColor\u003e recentHslColors \u003d dataSource.GetListOfRecentColors();"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            IList\u003cColor\u003e recentColors \u003d new List\u003cColor\u003e();"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            foreach (HSLColor recentHslColor in recentHslColors)"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                recentColors.Add(recentHslColor);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return recentColors;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        /// Clear the panel to all white color."},{"lineNumber":108,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void EmptyRecentColorsPanel()"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                if (this.GetCurrentSlide() !\u003d null)"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                    dataSource.ClearRecentColors();"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            catch (Exception e)"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                ErrorDialogBox.ShowDialog(\"Recent Colors Panel Reset Failed\", e.Message, e);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"        #region Private variables"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // To set color mode"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private enum MODE"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            FILL,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            LINE,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            FONT,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            MAIN,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            NONE"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private MODE _eyedropperMode;"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Color _previousFillColor;"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Color _currentEyedroppedColor;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Color _currentSelectedColor;"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private PowerPoint.ShapeRange _selectedShapes;"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private PowerPoint.TextRange _selectedText;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private bool _isEyedropperMode \u003d false;"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private bool _shouldAllowDrag \u003d false;"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // Data-bindings datasource"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        ColorDataSource dataSource \u003d new ColorDataSource();"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // Eyedropper-related"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private const float MAGNIFICATION_FACTOR \u003d 2.5f;"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private Cursor eyeDropperCursor \u003d new Cursor(new MemoryStream(Properties.Resources.EyeDropper));"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private Magnifier magnifier \u003d new Magnifier(MAGNIFICATION_FACTOR);"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private DispatcherTimer eyeDropperTimer;"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private const int CLICK_THRESHOLD \u003d 2;"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private int timer1Ticks;"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // Saving color favorites"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        private string _defaultFavoriteColorDirectory \u003d System.IO.Path.Combine("},{"lineNumber":161,"author":{"gitId":"-"},"content":"            Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments), "},{"lineNumber":162,"author":{"gitId":"-"},"content":"            \"PowerPointLabs.defaultFavoriteColor.thm\");"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        private string _defaultRecentColorDirectory \u003d Path.Combine("},{"lineNumber":164,"author":{"gitId":"-"},"content":"            Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments),"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            \"PowerPointLabs.defaultRecentColor.thm\");"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"        #region Constructor"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public ColorsLabPaneWPF()"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            eyeDropperTimer \u003d new DispatcherTimer(DispatcherPriority.Background, Dispatcher);"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            // Set data context to data source for XAML to reference."},{"lineNumber":175,"author":{"gitId":"-"},"content":"            DataContext \u003d dataSource;"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"            // Do not remove. Default generated code."},{"lineNumber":178,"author":{"gitId":"-"},"content":"            InitializeComponent();"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"            // Setup code"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            SetupImageSources();"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            SetupEyedropperTimer();"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            SetDefaultColor(Color.CornflowerBlue);"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            SetDefaultFavoriteColors();"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            SetRecentColors();"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"            // Hook the mouse process if it has not"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            PPExtraEventHelper.PPMouse.TryStartHook();"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"xantho09"},"content":"        #region INotifyOnThemeChanged Interface methods"},{"lineNumber":194,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":195,"author":{"gitId":"xantho09"},"content":"        /// \u003csummary\u003e"},{"lineNumber":196,"author":{"gitId":"xantho09"},"content":"        /// Changes the MahApps accent of this pane based on the Color Theme."},{"lineNumber":197,"author":{"gitId":"xantho09"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":198,"author":{"gitId":"xantho09"},"content":"        /// \u003cremarks\u003e"},{"lineNumber":199,"author":{"gitId":"xantho09"},"content":"        /// The Steel accent will be used on all themes, except for the DarkGray"},{"lineNumber":200,"author":{"gitId":"xantho09"},"content":"        /// theme, which will use the Teal accent."},{"lineNumber":201,"author":{"gitId":"xantho09"},"content":"        /// \u003c/remarks\u003e"},{"lineNumber":202,"author":{"gitId":"xantho09"},"content":"        /// \u003cparam name\u003d\"updatedColorTheme\"\u003eThe new color theme\u003c/param\u003e"},{"lineNumber":203,"author":{"gitId":"xantho09"},"content":"        public void OnThemeChanged(ColorTheme updatedColorTheme)"},{"lineNumber":204,"author":{"gitId":"xantho09"},"content":"        {"},{"lineNumber":205,"author":{"gitId":"xantho09"},"content":"            // The Steel accent doesn\u0027t look good on the DarkGray background."},{"lineNumber":206,"author":{"gitId":"xantho09"},"content":"            // The closest accent that looks okay is Teal."},{"lineNumber":207,"author":{"gitId":"xantho09"},"content":"            switch (updatedColorTheme.ThemeId)"},{"lineNumber":208,"author":{"gitId":"xantho09"},"content":"            {"},{"lineNumber":209,"author":{"gitId":"xantho09"},"content":"                case ColorTheme.DARK_GRAY:"},{"lineNumber":210,"author":{"gitId":"xantho09"},"content":"                    ThemeExtensions.ChangeMahAppsAccent(this, \"Teal\");"},{"lineNumber":211,"author":{"gitId":"xantho09"},"content":"                    break;"},{"lineNumber":212,"author":{"gitId":"xantho09"},"content":"                default:"},{"lineNumber":213,"author":{"gitId":"xantho09"},"content":"                    ThemeExtensions.ChangeMahAppsAccent(this, \"Steel\");"},{"lineNumber":214,"author":{"gitId":"xantho09"},"content":"                    break;"},{"lineNumber":215,"author":{"gitId":"xantho09"},"content":"            }"},{"lineNumber":216,"author":{"gitId":"xantho09"},"content":"        }"},{"lineNumber":217,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":218,"author":{"gitId":"xantho09"},"content":"        #endregion"},{"lineNumber":219,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"        #region Setup Code"},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        /// Function that handles the setting up of all the images in the pane."},{"lineNumber":224,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        private void SetupImageSources()"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            textColorIcon.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.TextColor_icon);"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"            lineColorIcon.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.LineColor_icon);"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"            fillColorIcon.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.FillColor_icon);"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"            eyeDropperIcon.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.EyeDropper_icon);"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"            brightnessIcon.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.Brightness_icon_25x25);"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"            saturationIcon.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.Saturation_icon_18x18);"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"            saveColorIcon.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.Save_icon);"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"            loadColorIcon.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.Load_icon);"},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"-"},"content":"            reloadColorIcon.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.Reload_icon);"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"            clearColorIcon.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.Clear_icon);"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        /// Set default color upon startup."},{"lineNumber":250,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"color\"\u003e\u003c/param\u003e"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        private void SetDefaultColor(Color color)"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            dataSource.SelectedColor \u003d color;"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        /// Set default favorite colors for favourite colors panel."},{"lineNumber":259,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        private void SetDefaultFavoriteColors()"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            LoadDefaultFavoritePanel();"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        /// Load recent colors into the recent colors pane."},{"lineNumber":267,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        private void SetRecentColors()"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            LoadRecentColorsPanel();"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        /// Setup the timer tick handler."},{"lineNumber":275,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        private void SetupEyedropperTimer()"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            this.eyeDropperTimer.Tick +\u003d new System.EventHandler(this.Timer1_Tick);"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":"        #region Event Handlers"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        "},{"lineNumber":285,"author":{"gitId":"-"},"content":"        #region ColorsLabPane Handlers"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        /// This method handles the loaded ColorsLabPane."},{"lineNumber":289,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        private void ColorsLabPaneWPF_Loaded(object sender, RoutedEventArgs e)"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            Microsoft.Office.Tools.CustomTaskPane colorsLabPane \u003d this.GetAddIn().GetActivePane(typeof(ColorsLabPane));"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            if (colorsLabPane \u003d\u003d null || !(colorsLabPane.Control is ColorsLabPane))"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":297,"author":{"gitId":"-"},"content":"                MessageBox.Show(\"Error: ColorsLabPane not opened.\");"},{"lineNumber":298,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            ColorsLabPane colorsLab \u003d colorsLabPane.Control as ColorsLabPane;"},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"-"},"content":"            // Add handler for closing of ColorsLab"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            colorsLab.HandleDestroyed +\u003d ColorsLab_Closing;"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        /// This handler is called when ColorsLab is destroyed, i.e. when PPTLabs closes."},{"lineNumber":308,"author":{"gitId":"-"},"content":"        /// Current colors in the panel are saved when this happens."},{"lineNumber":309,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        private void ColorsLab_Closing(Object sender, EventArgs e)"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            SaveDefaultColorPaneFavoriteColors();"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            SaveColorPaneRecentColors();"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":319,"author":{"gitId":"-"},"content":""},{"lineNumber":320,"author":{"gitId":"-"},"content":"        #region Button Handlers"},{"lineNumber":321,"author":{"gitId":"-"},"content":""},{"lineNumber":322,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        /// On mouse down, init eyedropper mode."},{"lineNumber":324,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        private void ApplyColorButton_MouseDown(object sender, MouseButtonEventArgs e)"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":329,"author":{"gitId":"-"},"content":"            if (this.GetCurrentSelection().Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionNone)"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":331,"author":{"gitId":"-"},"content":"                MessageBox.Show(ColorsLabText.ErrorNoSelection, ColorsLabText.ErrorDialogTitle);"},{"lineNumber":332,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":333,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"            CaptureMouse();"},{"lineNumber":336,"author":{"gitId":"-"},"content":"            SetEyedropperMode(((Button)sender).Name);"},{"lineNumber":337,"author":{"gitId":"-"},"content":"            BeginEyedropping();"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            this.GetApplication().StartNewUndoEntry();"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":340,"author":{"gitId":"-"},"content":""},{"lineNumber":341,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"        #region Slider Value Changed Handlers"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        /// Updates selected color when brightness slider is moved."},{"lineNumber":347,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        private void BrightnessSlider_ValueChanged(object sender, RoutedPropertyChangedEventArgs\u003cdouble\u003e e)"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":352,"author":{"gitId":"-"},"content":"            double newBrightness \u003d e.NewValue;"},{"lineNumber":353,"author":{"gitId":"-"},"content":"            HSLColor newColor \u003d new HSLColor();"},{"lineNumber":354,"author":{"gitId":"-"},"content":"            newColor.Hue \u003d dataSource.SelectedColor.Hue;"},{"lineNumber":355,"author":{"gitId":"-"},"content":"            newColor.Saturation \u003d dataSource.SelectedColor.Saturation;"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            newColor.Luminosity \u003d newBrightness;"},{"lineNumber":357,"author":{"gitId":"-"},"content":"            dataSource.SelectedColor \u003d newColor;"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        "},{"lineNumber":360,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        /// Updates selected color when saturation slider is moved."},{"lineNumber":362,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        private void SaturationSlider_ValueChanged(object sender, RoutedPropertyChangedEventArgs\u003cdouble\u003e e)"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":367,"author":{"gitId":"-"},"content":"            double newSaturation \u003d e.NewValue;"},{"lineNumber":368,"author":{"gitId":"-"},"content":"            HSLColor newColor \u003d new HSLColor();"},{"lineNumber":369,"author":{"gitId":"-"},"content":"            newColor.Hue \u003d dataSource.SelectedColor.Hue;"},{"lineNumber":370,"author":{"gitId":"-"},"content":"            newColor.Saturation \u003d newSaturation;"},{"lineNumber":371,"author":{"gitId":"-"},"content":"            newColor.Luminosity \u003d dataSource.SelectedColor.Luminosity;"},{"lineNumber":372,"author":{"gitId":"-"},"content":"            dataSource.SelectedColor \u003d newColor;"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":374,"author":{"gitId":"-"},"content":""},{"lineNumber":375,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":376,"author":{"gitId":"-"},"content":""},{"lineNumber":377,"author":{"gitId":"-"},"content":"        #region Color Rectangle Handlers"},{"lineNumber":378,"author":{"gitId":"-"},"content":""},{"lineNumber":379,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        /// Add MouseUp event to rectangle to simulate a click event."},{"lineNumber":381,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        private void SelectedColorRectangle_MouseDown(object sender, MouseButtonEventArgs e)"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":386,"author":{"gitId":"-"},"content":"            if (_isEyedropperMode)"},{"lineNumber":387,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":388,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":389,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":390,"author":{"gitId":"-"},"content":""},{"lineNumber":391,"author":{"gitId":"-"},"content":"            // We remove the MouseUp event first before adding it to ensure that at anytime there\u0027s only"},{"lineNumber":392,"author":{"gitId":"-"},"content":"            // one listener for the MouseUp event."},{"lineNumber":393,"author":{"gitId":"-"},"content":"            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"},{"lineNumber":394,"author":{"gitId":"-"},"content":"            rect.MouseUp -\u003d SelectedColorRectangle_MouseUp;"},{"lineNumber":395,"author":{"gitId":"-"},"content":"            rect.MouseUp +\u003d SelectedColorRectangle_MouseUp;"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":397,"author":{"gitId":"-"},"content":""},{"lineNumber":398,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        /// Opens up a Windows.Forms ColorDialog upon click of the selectedColor rectangle."},{"lineNumber":400,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":401,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"},{"lineNumber":403,"author":{"gitId":"-"},"content":"        private void SelectedColorRectangle_MouseUp(object sender, MouseButtonEventArgs e)"},{"lineNumber":404,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":405,"author":{"gitId":"-"},"content":"            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"},{"lineNumber":406,"author":{"gitId":"-"},"content":"            rect.MouseUp -\u003d SelectedColorRectangle_MouseUp;"},{"lineNumber":407,"author":{"gitId":"-"},"content":""},{"lineNumber":408,"author":{"gitId":"-"},"content":"            System.Windows.Forms.ColorDialog colorPickerDialog \u003d new System.Windows.Forms.ColorDialog();"},{"lineNumber":409,"author":{"gitId":"-"},"content":"            colorPickerDialog.FullOpen \u003d true;"},{"lineNumber":410,"author":{"gitId":"-"},"content":""},{"lineNumber":411,"author":{"gitId":"-"},"content":"            // Sets the initial color select to the current selected color."},{"lineNumber":412,"author":{"gitId":"-"},"content":"            colorPickerDialog.Color \u003d dataSource.SelectedColor;"},{"lineNumber":413,"author":{"gitId":"-"},"content":""},{"lineNumber":414,"author":{"gitId":"-"},"content":"            // Update the selected color if the user clicks OK"},{"lineNumber":415,"author":{"gitId":"-"},"content":"            if (colorPickerDialog.ShowDialog() \u003d\u003d System.Windows.Forms.DialogResult.OK)"},{"lineNumber":416,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":417,"author":{"gitId":"-"},"content":"                dataSource.SelectedColor \u003d colorPickerDialog.Color;"},{"lineNumber":418,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":420,"author":{"gitId":"-"},"content":""},{"lineNumber":421,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":422,"author":{"gitId":"-"},"content":"        /// Handles drag-and-drop functionality for color rects that can be dragged to favourite colors."},{"lineNumber":423,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"},{"lineNumber":426,"author":{"gitId":"-"},"content":"        private void DraggableColorRectangle_MouseMove(object sender, MouseEventArgs e)"},{"lineNumber":427,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":428,"author":{"gitId":"-"},"content":"            if (_isEyedropperMode)"},{"lineNumber":429,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":430,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":431,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":432,"author":{"gitId":"-"},"content":""},{"lineNumber":433,"author":{"gitId":"-"},"content":"            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"},{"lineNumber":434,"author":{"gitId":"-"},"content":""},{"lineNumber":435,"author":{"gitId":"-"},"content":"            if (rect !\u003d null \u0026\u0026 e.LeftButton \u003d\u003d MouseButtonState.Released)"},{"lineNumber":436,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":437,"author":{"gitId":"-"},"content":"                _shouldAllowDrag \u003d true;"},{"lineNumber":438,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":439,"author":{"gitId":"-"},"content":""},{"lineNumber":440,"author":{"gitId":"-"},"content":"            if (rect !\u003d null \u0026\u0026 e.LeftButton \u003d\u003d MouseButtonState.Pressed \u0026\u0026 _shouldAllowDrag)"},{"lineNumber":441,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":442,"author":{"gitId":"-"},"content":"                try"},{"lineNumber":443,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":444,"author":{"gitId":"-"},"content":"                    DragDrop.DoDragDrop(rect, rect.Fill.ToString(), DragDropEffects.Copy);"},{"lineNumber":445,"author":{"gitId":"-"},"content":"                } "},{"lineNumber":446,"author":{"gitId":"-"},"content":"                catch (System.Runtime.InteropServices.COMException)"},{"lineNumber":447,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":448,"author":{"gitId":"-"},"content":"                    // This exception occurs when user tries to drag the color rect to a textbox/shape on the slide."},{"lineNumber":449,"author":{"gitId":"-"},"content":"                    // Due to lack of drag and drop support for some PowerPoint objects, exception will be thrown."},{"lineNumber":450,"author":{"gitId":"-"},"content":"                    // When this is detected, to insert the data to the textbox instead."},{"lineNumber":451,"author":{"gitId":"-"},"content":"                    // More info: https://social.msdn.microsoft.com/Forums/en-US/9925d6c7-e92f-40e7-9467-7b4e69174e9e/vsto-addin-gt-facing-problem-in-implementing-dragdrop-functionality-gt-need-help?forum\u003dvsto"},{"lineNumber":452,"author":{"gitId":"-"},"content":"                    PowerPoint.Selection currSelection \u003d this.GetCurrentSelection();"},{"lineNumber":453,"author":{"gitId":"-"},"content":"                    if (currSelection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes ||"},{"lineNumber":454,"author":{"gitId":"-"},"content":"                        currSelection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionText)"},{"lineNumber":455,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":456,"author":{"gitId":"-"},"content":"                        currSelection.TextRange2.Text \u003d rect.Fill.ToString();"},{"lineNumber":457,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":458,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":459,"author":{"gitId":"-"},"content":"                _shouldAllowDrag \u003d false;"},{"lineNumber":460,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":461,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":462,"author":{"gitId":"-"},"content":""},{"lineNumber":463,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        /// This function prevents user to begin the drag from outside the rectangle."},{"lineNumber":465,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"},{"lineNumber":467,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"},{"lineNumber":468,"author":{"gitId":"-"},"content":"        private void DraggableColorRectangle_MouseLeave(object sender, MouseEventArgs e)"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":470,"author":{"gitId":"-"},"content":"            if (_isEyedropperMode)"},{"lineNumber":471,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":472,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":473,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":474,"author":{"gitId":"-"},"content":""},{"lineNumber":475,"author":{"gitId":"-"},"content":"            _shouldAllowDrag \u003d false;"},{"lineNumber":476,"author":{"gitId":"-"},"content":""},{"lineNumber":477,"author":{"gitId":"-"},"content":"            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"},{"lineNumber":478,"author":{"gitId":"-"},"content":""},{"lineNumber":479,"author":{"gitId":"-"},"content":"            if (rect.Name \u003d\u003d \"selectedColorRectangle\")"},{"lineNumber":480,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":481,"author":{"gitId":"-"},"content":"                rect.MouseUp -\u003d SelectedColorRectangle_MouseUp;"},{"lineNumber":482,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":483,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":484,"author":{"gitId":"-"},"content":""},{"lineNumber":485,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":486,"author":{"gitId":"-"},"content":"        /// Adds a MouseUp listener to the sender object when it detects a MouseDown."},{"lineNumber":487,"author":{"gitId":"-"},"content":"        /// The purpose of this is to simulate a click event on the Rectangle object."},{"lineNumber":488,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"},{"lineNumber":490,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        private void ColorRectangle_MouseDown(object sender, MouseButtonEventArgs e)"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":493,"author":{"gitId":"-"},"content":"            if (_isEyedropperMode)"},{"lineNumber":494,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":495,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":496,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":497,"author":{"gitId":"-"},"content":""},{"lineNumber":498,"author":{"gitId":"-"},"content":"            // We remove the MouseUp event first before adding it to ensure that at anytime there\u0027s only"},{"lineNumber":499,"author":{"gitId":"-"},"content":"            // one listener for the MouseUp event."},{"lineNumber":500,"author":{"gitId":"-"},"content":"            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"},{"lineNumber":501,"author":{"gitId":"-"},"content":"            rect.MouseUp -\u003d ColorRectangle_MouseUp;"},{"lineNumber":502,"author":{"gitId":"-"},"content":"            rect.MouseUp +\u003d ColorRectangle_MouseUp;"},{"lineNumber":503,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":504,"author":{"gitId":"-"},"content":""},{"lineNumber":505,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":506,"author":{"gitId":"-"},"content":"        /// Change the selectedColor to the color of the matching color rect."},{"lineNumber":507,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":508,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"},{"lineNumber":509,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"},{"lineNumber":510,"author":{"gitId":"-"},"content":"        private void ColorRectangle_MouseUp(object sender, MouseButtonEventArgs e)"},{"lineNumber":511,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":512,"author":{"gitId":"-"},"content":"            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"},{"lineNumber":513,"author":{"gitId":"-"},"content":"            rect.MouseUp -\u003d ColorRectangle_MouseUp;"},{"lineNumber":514,"author":{"gitId":"-"},"content":""},{"lineNumber":515,"author":{"gitId":"-"},"content":"            System.Windows.Media.Color color \u003d ((SolidColorBrush)rect.Fill).Color;"},{"lineNumber":516,"author":{"gitId":"-"},"content":"            Color selectedColor \u003d GraphicsUtil.DrawingColorFromMediaColor(color);"},{"lineNumber":517,"author":{"gitId":"-"},"content":"            dataSource.SelectedColor \u003d new HSLColor(selectedColor);"},{"lineNumber":518,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":519,"author":{"gitId":"-"},"content":""},{"lineNumber":520,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":521,"author":{"gitId":"-"},"content":"        /// Handles drag and drop functionality for favourtie color rectangles."},{"lineNumber":522,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":523,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"},{"lineNumber":524,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"},{"lineNumber":525,"author":{"gitId":"-"},"content":"        private void FavoriteRect_DragEnter(object sender, DragEventArgs e)"},{"lineNumber":526,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":527,"author":{"gitId":"-"},"content":"            if (_isEyedropperMode)"},{"lineNumber":528,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":529,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":530,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":531,"author":{"gitId":"-"},"content":""},{"lineNumber":532,"author":{"gitId":"-"},"content":"            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"},{"lineNumber":533,"author":{"gitId":"-"},"content":""},{"lineNumber":534,"author":{"gitId":"-"},"content":"            System.Windows.Media.Color prevMediaColor \u003d ((SolidColorBrush)rect.Fill).Color;"},{"lineNumber":535,"author":{"gitId":"-"},"content":"            _previousFillColor \u003d GraphicsUtil.DrawingColorFromMediaColor(prevMediaColor);"},{"lineNumber":536,"author":{"gitId":"-"},"content":""},{"lineNumber":537,"author":{"gitId":"-"},"content":"            if (rect !\u003d null)"},{"lineNumber":538,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":539,"author":{"gitId":"-"},"content":"                // If the DataObject contains string data, extract it."},{"lineNumber":540,"author":{"gitId":"-"},"content":"                if (e.Data.GetDataPresent(DataFormats.StringFormat))"},{"lineNumber":541,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":542,"author":{"gitId":"-"},"content":"                    string dataString \u003d (string)e.Data.GetData(DataFormats.StringFormat);"},{"lineNumber":543,"author":{"gitId":"-"},"content":""},{"lineNumber":544,"author":{"gitId":"-"},"content":"                    // If the string can be converted into a Color, "},{"lineNumber":545,"author":{"gitId":"-"},"content":"                    // convert it and apply it to the rect."},{"lineNumber":546,"author":{"gitId":"-"},"content":"                    ColorConverter converter \u003d new ColorConverter();"},{"lineNumber":547,"author":{"gitId":"-"},"content":"                    if (converter.IsValid(dataString))"},{"lineNumber":548,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":549,"author":{"gitId":"-"},"content":"                        System.Windows.Media.Color mediaColor \u003d (System.Windows.Media.Color)ColorConverter.ConvertFromString(dataString);"},{"lineNumber":550,"author":{"gitId":"-"},"content":"                        Color color \u003d GraphicsUtil.DrawingColorFromMediaColor(mediaColor);"},{"lineNumber":551,"author":{"gitId":"-"},"content":"                        "},{"lineNumber":552,"author":{"gitId":"-"},"content":"                        SetFavoriteColorRectangle((int)rect.Tag, color);"},{"lineNumber":553,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":554,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":555,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":556,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":557,"author":{"gitId":"-"},"content":""},{"lineNumber":558,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":559,"author":{"gitId":"-"},"content":"        /// Handles drag and drop functionality for favourtie color rectangles."},{"lineNumber":560,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":561,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"},{"lineNumber":562,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"},{"lineNumber":563,"author":{"gitId":"-"},"content":"        private void FavoriteRect_DragOver(object sender, DragEventArgs e)"},{"lineNumber":564,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":565,"author":{"gitId":"-"},"content":"            if (_isEyedropperMode)"},{"lineNumber":566,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":567,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":568,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":569,"author":{"gitId":"-"},"content":""},{"lineNumber":570,"author":{"gitId":"-"},"content":"            e.Effects \u003d DragDropEffects.None;"},{"lineNumber":571,"author":{"gitId":"-"},"content":""},{"lineNumber":572,"author":{"gitId":"-"},"content":"            // If the DataObject contains string data, extract it."},{"lineNumber":573,"author":{"gitId":"-"},"content":"            if (e.Data.GetDataPresent(DataFormats.StringFormat))"},{"lineNumber":574,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":575,"author":{"gitId":"-"},"content":"                string dataString \u003d (string)e.Data.GetData(DataFormats.StringFormat);"},{"lineNumber":576,"author":{"gitId":"-"},"content":""},{"lineNumber":577,"author":{"gitId":"-"},"content":"                // If the string can be converted into a Brush, allow copying."},{"lineNumber":578,"author":{"gitId":"-"},"content":"                BrushConverter converter \u003d new BrushConverter();"},{"lineNumber":579,"author":{"gitId":"-"},"content":"                if (converter.IsValid(dataString))"},{"lineNumber":580,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":581,"author":{"gitId":"-"},"content":"                    e.Effects \u003d DragDropEffects.Copy | DragDropEffects.Move;"},{"lineNumber":582,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":583,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":584,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":585,"author":{"gitId":"-"},"content":""},{"lineNumber":586,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":587,"author":{"gitId":"-"},"content":"        /// Handles drag and drop functionality for favourtie color rectangles."},{"lineNumber":588,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":589,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"},{"lineNumber":591,"author":{"gitId":"-"},"content":"        private void FavoriteRect_DragLeave(object sender, DragEventArgs e)"},{"lineNumber":592,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":593,"author":{"gitId":"-"},"content":"            if (_isEyedropperMode)"},{"lineNumber":594,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":595,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":596,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":597,"author":{"gitId":"-"},"content":""},{"lineNumber":598,"author":{"gitId":"-"},"content":"            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"},{"lineNumber":599,"author":{"gitId":"-"},"content":"            if (rect !\u003d null)"},{"lineNumber":600,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":601,"author":{"gitId":"-"},"content":"                SetFavoriteColorRectangle((int)rect.Tag, _previousFillColor);"},{"lineNumber":602,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":603,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":604,"author":{"gitId":"-"},"content":""},{"lineNumber":605,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":606,"author":{"gitId":"-"},"content":"        /// Handles drag and drop functionality for favourtie color rectangles."},{"lineNumber":607,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":608,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"},{"lineNumber":609,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"},{"lineNumber":610,"author":{"gitId":"-"},"content":"        private void FavoriteRect_Drop(object sender, DragEventArgs e)"},{"lineNumber":611,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":612,"author":{"gitId":"-"},"content":"            if (_isEyedropperMode)"},{"lineNumber":613,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":614,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":615,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":616,"author":{"gitId":"-"},"content":""},{"lineNumber":617,"author":{"gitId":"-"},"content":"            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"},{"lineNumber":618,"author":{"gitId":"-"},"content":"            if (rect !\u003d null)"},{"lineNumber":619,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":620,"author":{"gitId":"-"},"content":"                // If the DataObject contains string data, extract it."},{"lineNumber":621,"author":{"gitId":"-"},"content":"                if (e.Data.GetDataPresent(DataFormats.StringFormat))"},{"lineNumber":622,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":623,"author":{"gitId":"-"},"content":"                    string dataString \u003d (string)e.Data.GetData(DataFormats.StringFormat);"},{"lineNumber":624,"author":{"gitId":"-"},"content":""},{"lineNumber":625,"author":{"gitId":"-"},"content":"                    // If the string can be converted into a Color, "},{"lineNumber":626,"author":{"gitId":"-"},"content":"                    // convert it and apply it to the rect."},{"lineNumber":627,"author":{"gitId":"-"},"content":"                    ColorConverter converter \u003d new ColorConverter();"},{"lineNumber":628,"author":{"gitId":"-"},"content":"                    if (converter.IsValid(dataString))"},{"lineNumber":629,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":630,"author":{"gitId":"-"},"content":"                        System.Windows.Media.Color mediaColor \u003d (System.Windows.Media.Color)ColorConverter.ConvertFromString(dataString);"},{"lineNumber":631,"author":{"gitId":"-"},"content":"                        Color color \u003d GraphicsUtil.DrawingColorFromMediaColor(mediaColor);"},{"lineNumber":632,"author":{"gitId":"-"},"content":""},{"lineNumber":633,"author":{"gitId":"-"},"content":"                        SetFavoriteColorRectangle((int)rect.Tag, color);"},{"lineNumber":634,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":635,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":636,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":637,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":638,"author":{"gitId":"-"},"content":""},{"lineNumber":639,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":640,"author":{"gitId":"-"},"content":""},{"lineNumber":641,"author":{"gitId":"-"},"content":"        #region Eye Dropper Event Handlers"},{"lineNumber":642,"author":{"gitId":"-"},"content":""},{"lineNumber":643,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":644,"author":{"gitId":"-"},"content":"        /// Gets the mouse position and pixel color value every tick of the timer."},{"lineNumber":645,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":646,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"},{"lineNumber":647,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"},{"lineNumber":648,"author":{"gitId":"-"},"content":"        private void Timer1_Tick(object sender, EventArgs e)"},{"lineNumber":649,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":650,"author":{"gitId":"-"},"content":"            timer1Ticks++;"},{"lineNumber":651,"author":{"gitId":"-"},"content":""},{"lineNumber":652,"author":{"gitId":"-"},"content":"            // Force the magnifier to update"},{"lineNumber":653,"author":{"gitId":"-"},"content":"            magnifier.Show();"},{"lineNumber":654,"author":{"gitId":"-"},"content":""},{"lineNumber":655,"author":{"gitId":"-"},"content":"            System.Drawing.Point mousePos \u003d System.Windows.Forms.Control.MousePosition;"},{"lineNumber":656,"author":{"gitId":"-"},"content":"            IntPtr deviceContext \u003d PPExtraEventHelper.Native.GetDC(IntPtr.Zero);"},{"lineNumber":657,"author":{"gitId":"-"},"content":""},{"lineNumber":658,"author":{"gitId":"-"},"content":"            Color pickedColor \u003d System.Drawing.ColorTranslator.FromWin32(PPExtraEventHelper.Native.GetPixel(deviceContext, mousePos.X, mousePos.Y));"},{"lineNumber":659,"author":{"gitId":"-"},"content":""},{"lineNumber":660,"author":{"gitId":"-"},"content":"            // If button has not been held long enough to register as a drag, then don\u0027t pick a color."},{"lineNumber":661,"author":{"gitId":"-"},"content":"            if (timer1Ticks \u003c CLICK_THRESHOLD)"},{"lineNumber":662,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":663,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":664,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":665,"author":{"gitId":"-"},"content":""},{"lineNumber":666,"author":{"gitId":"-"},"content":"            if (_eyedropperMode \u003d\u003d MODE.MAIN)"},{"lineNumber":667,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":668,"author":{"gitId":"-"},"content":"                ColorMainColorRect(pickedColor);"},{"lineNumber":669,"author":{"gitId":"-"},"content":"                _currentEyedroppedColor \u003d pickedColor;"},{"lineNumber":670,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":671,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":672,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":673,"author":{"gitId":"-"},"content":"                ColorSelectedShapesWithColor(pickedColor, _eyedropperMode);"},{"lineNumber":674,"author":{"gitId":"-"},"content":"                _currentSelectedColor \u003d pickedColor;"},{"lineNumber":675,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":676,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":677,"author":{"gitId":"-"},"content":""},{"lineNumber":678,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":679,"author":{"gitId":"-"},"content":"        /// Handles the end of eye dropper mode."},{"lineNumber":680,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":681,"author":{"gitId":"-"},"content":"        void LeftMouseButtonUpEventHandler()"},{"lineNumber":682,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":683,"author":{"gitId":"-"},"content":"            PPExtraEventHelper.PPMouse.LeftButtonUp -\u003d LeftMouseButtonUpEventHandler;"},{"lineNumber":684,"author":{"gitId":"-"},"content":"            magnifier.Hide();"},{"lineNumber":685,"author":{"gitId":"-"},"content":"            eyeDropperTimer.Stop();"},{"lineNumber":686,"author":{"gitId":"-"},"content":""},{"lineNumber":687,"author":{"gitId":"-"},"content":"            // Only change the actual datasource selectedColor at the end of eyedropping."},{"lineNumber":688,"author":{"gitId":"-"},"content":"            if (_eyedropperMode \u003d\u003d MODE.MAIN)"},{"lineNumber":689,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":690,"author":{"gitId":"-"},"content":"                selectedColorRectangle.Opacity \u003d 1;"},{"lineNumber":691,"author":{"gitId":"-"},"content":"                if (timer1Ticks \u003e\u003d CLICK_THRESHOLD)"},{"lineNumber":692,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":693,"author":{"gitId":"-"},"content":"                    dataSource.SelectedColor \u003d _currentEyedroppedColor;"},{"lineNumber":694,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":695,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":696,"author":{"gitId":"-"},"content":""},{"lineNumber":697,"author":{"gitId":"-"},"content":"            // Update recent colors if color has been used"},{"lineNumber":698,"author":{"gitId":"-"},"content":"            if (_eyedropperMode \u003d\u003d MODE.FILL || _eyedropperMode \u003d\u003d MODE.FONT || _eyedropperMode \u003d\u003d MODE.LINE)"},{"lineNumber":699,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":700,"author":{"gitId":"-"},"content":"                if (timer1Ticks \u003e\u003d CLICK_THRESHOLD)"},{"lineNumber":701,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":702,"author":{"gitId":"-"},"content":"                    dataSource.AddColorToRecentColors(_currentSelectedColor);"},{"lineNumber":703,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":704,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":705,"author":{"gitId":"-"},"content":""},{"lineNumber":706,"author":{"gitId":"-"},"content":"            _isEyedropperMode \u003d false;"},{"lineNumber":707,"author":{"gitId":"-"},"content":"            _eyedropperMode \u003d MODE.NONE;"},{"lineNumber":708,"author":{"gitId":"-"},"content":"            Mouse.OverrideCursor \u003d null;"},{"lineNumber":709,"author":{"gitId":"-"},"content":"            Mouse.Capture(null);"},{"lineNumber":710,"author":{"gitId":"-"},"content":""},{"lineNumber":711,"author":{"gitId":"-"},"content":"            if (timer1Ticks \u003c CLICK_THRESHOLD)"},{"lineNumber":712,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":713,"author":{"gitId":"-"},"content":"                Dispatcher.CurrentDispatcher.BeginInvoke(DispatcherPriority.Loaded, new Action(delegate"},{"lineNumber":714,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":715,"author":{"gitId":"-"},"content":"                    MessageBox.Show(\"To use this button, click and drag to desired color.\", ColorsLabText.ErrorDialogTitle);"},{"lineNumber":716,"author":{"gitId":"-"},"content":"                }));"},{"lineNumber":717,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":718,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":719,"author":{"gitId":"-"},"content":""},{"lineNumber":720,"author":{"gitId":"-"},"content":"        private void EyeDropperButton_PreviewMouseDown(object sender, MouseButtonEventArgs e)"},{"lineNumber":721,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":722,"author":{"gitId":"-"},"content":"            CaptureMouse();"},{"lineNumber":723,"author":{"gitId":"-"},"content":"            SetEyedropperMode(((Button)sender).Name);"},{"lineNumber":724,"author":{"gitId":"-"},"content":"            BeginEyedropping();"},{"lineNumber":725,"author":{"gitId":"-"},"content":"            this.GetApplication().StartNewUndoEntry();"},{"lineNumber":726,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":727,"author":{"gitId":"-"},"content":""},{"lineNumber":728,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":729,"author":{"gitId":"-"},"content":""},{"lineNumber":730,"author":{"gitId":"-"},"content":"        #region Favourite Colors Button Handlers"},{"lineNumber":731,"author":{"gitId":"-"},"content":""},{"lineNumber":732,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":733,"author":{"gitId":"-"},"content":"        /// Saves the current favorite panel as a custom favorite file."},{"lineNumber":734,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":735,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"},{"lineNumber":736,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"},{"lineNumber":737,"author":{"gitId":"-"},"content":"        private void SaveColorButton_Click(object sender, EventArgs e)"},{"lineNumber":738,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":739,"author":{"gitId":"-"},"content":"            System.Windows.Forms.SaveFileDialog saveFileDialog \u003d new System.Windows.Forms.SaveFileDialog();"},{"lineNumber":740,"author":{"gitId":"-"},"content":"            saveFileDialog.DefaultExt \u003d \"thm\";"},{"lineNumber":741,"author":{"gitId":"-"},"content":"            saveFileDialog.Filter \u003d \"PPTLabsFavorites|*.thm\";"},{"lineNumber":742,"author":{"gitId":"-"},"content":"            saveFileDialog.Title \u003d \"Save Favorite\";"},{"lineNumber":743,"author":{"gitId":"-"},"content":"            "},{"lineNumber":744,"author":{"gitId":"-"},"content":"            System.Windows.Forms.DialogResult result \u003d saveFileDialog.ShowDialog();"},{"lineNumber":745,"author":{"gitId":"-"},"content":""},{"lineNumber":746,"author":{"gitId":"-"},"content":"            if (result \u003d\u003d System.Windows.Forms.DialogResult.OK \u0026\u0026"},{"lineNumber":747,"author":{"gitId":"-"},"content":"                dataSource.SaveFavoriteColorsInFile(saveFileDialog.FileName))"},{"lineNumber":748,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":749,"author":{"gitId":"-"},"content":"                SaveDefaultColorPaneFavoriteColors();"},{"lineNumber":750,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":751,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":752,"author":{"gitId":"-"},"content":""},{"lineNumber":753,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":754,"author":{"gitId":"-"},"content":"        /// Loads a favorite panel from an existing favorite file."},{"lineNumber":755,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":756,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"},{"lineNumber":757,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"},{"lineNumber":758,"author":{"gitId":"-"},"content":"        private void LoadColorButton_Click(object sender, EventArgs e)"},{"lineNumber":759,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":760,"author":{"gitId":"-"},"content":"            System.Windows.Forms.OpenFileDialog openFileDialog \u003d new System.Windows.Forms.OpenFileDialog();"},{"lineNumber":761,"author":{"gitId":"-"},"content":"            openFileDialog.DefaultExt \u003d \"thm\";"},{"lineNumber":762,"author":{"gitId":"-"},"content":"            openFileDialog.Filter \u003d \"PPTLabsFavorite|*.thm\";"},{"lineNumber":763,"author":{"gitId":"-"},"content":"            openFileDialog.Title \u003d \"Load Favorite\";"},{"lineNumber":764,"author":{"gitId":"-"},"content":""},{"lineNumber":765,"author":{"gitId":"-"},"content":"            System.Windows.Forms.DialogResult result \u003d openFileDialog.ShowDialog();"},{"lineNumber":766,"author":{"gitId":"-"},"content":""},{"lineNumber":767,"author":{"gitId":"-"},"content":"            if (result \u003d\u003d System.Windows.Forms.DialogResult.OK \u0026\u0026"},{"lineNumber":768,"author":{"gitId":"-"},"content":"                dataSource.LoadFavoriteColorsFromFile(openFileDialog.FileName))"},{"lineNumber":769,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":770,"author":{"gitId":"-"},"content":"                SaveDefaultColorPaneFavoriteColors();"},{"lineNumber":771,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":772,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":773,"author":{"gitId":"-"},"content":""},{"lineNumber":774,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":775,"author":{"gitId":"-"},"content":"        /// Reset to the last loaded favorite panel."},{"lineNumber":776,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":777,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"},{"lineNumber":778,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"},{"lineNumber":779,"author":{"gitId":"-"},"content":"        private void ReloadColorButton_Click(object sender, EventArgs e)"},{"lineNumber":780,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":781,"author":{"gitId":"-"},"content":"            ResetFavoritePanel();"},{"lineNumber":782,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":783,"author":{"gitId":"-"},"content":""},{"lineNumber":784,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":785,"author":{"gitId":"-"},"content":"        /// Clears the current favorite panel, i.e. set all favourite colors to white."},{"lineNumber":786,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":787,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"},{"lineNumber":788,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"},{"lineNumber":789,"author":{"gitId":"-"},"content":"        private void ClearColorButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":790,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":791,"author":{"gitId":"-"},"content":"            EmptyFavoritePanel();"},{"lineNumber":792,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":793,"author":{"gitId":"-"},"content":""},{"lineNumber":794,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":795,"author":{"gitId":"-"},"content":""},{"lineNumber":796,"author":{"gitId":"-"},"content":"        #region Context Menu Handlers"},{"lineNumber":797,"author":{"gitId":"-"},"content":""},{"lineNumber":798,"author":{"gitId":"-"},"content":"        private void Color_Information_Click(object sender, RoutedEventArgs e)"},{"lineNumber":799,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":800,"author":{"gitId":"-"},"content":"            MenuItem menuItem \u003d sender as MenuItem;"},{"lineNumber":801,"author":{"gitId":"-"},"content":"            if (menuItem \u003d\u003d null)"},{"lineNumber":802,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":803,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":804,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":805,"author":{"gitId":"-"},"content":"            System.Windows.Shapes.Rectangle rect \u003d ((ContextMenu)(menuItem.Parent)).PlacementTarget as System.Windows.Shapes.Rectangle;"},{"lineNumber":806,"author":{"gitId":"-"},"content":"            System.Windows.Media.Color color \u003d ((SolidColorBrush)rect.Fill).Color;"},{"lineNumber":807,"author":{"gitId":"-"},"content":"            Color selectedColor \u003d GraphicsUtil.DrawingColorFromMediaColor(color);"},{"lineNumber":808,"author":{"gitId":"-"},"content":"            ColorInformationDialog dialog \u003d new ColorInformationDialog(selectedColor);"},{"lineNumber":809,"author":{"gitId":"-"},"content":"            dialog.ShowThematicDialog();"},{"lineNumber":810,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":811,"author":{"gitId":"-"},"content":""},{"lineNumber":812,"author":{"gitId":"-"},"content":"        private void Set_Main_Color_Click(object sender, RoutedEventArgs e)"},{"lineNumber":813,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":814,"author":{"gitId":"-"},"content":"            MenuItem menuItem \u003d sender as MenuItem;"},{"lineNumber":815,"author":{"gitId":"-"},"content":"            if (menuItem \u003d\u003d null)"},{"lineNumber":816,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":817,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":818,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":819,"author":{"gitId":"-"},"content":"            System.Windows.Shapes.Rectangle rect \u003d ((ContextMenu)(menuItem.Parent)).PlacementTarget as System.Windows.Shapes.Rectangle;"},{"lineNumber":820,"author":{"gitId":"-"},"content":"            System.Windows.Media.Color color \u003d ((SolidColorBrush)rect.Fill).Color;"},{"lineNumber":821,"author":{"gitId":"-"},"content":"            Color selectedColor \u003d GraphicsUtil.DrawingColorFromMediaColor(color);"},{"lineNumber":822,"author":{"gitId":"-"},"content":"            dataSource.SelectedColor \u003d new HSLColor(selectedColor);"},{"lineNumber":823,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":824,"author":{"gitId":"-"},"content":""},{"lineNumber":825,"author":{"gitId":"-"},"content":"        private void Add_Favorite_Click(object sender, RoutedEventArgs e)"},{"lineNumber":826,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":827,"author":{"gitId":"-"},"content":"            MenuItem menuItem \u003d sender as MenuItem;"},{"lineNumber":828,"author":{"gitId":"-"},"content":"            if (menuItem \u003d\u003d null)"},{"lineNumber":829,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":830,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":831,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":832,"author":{"gitId":"-"},"content":"            System.Windows.Shapes.Rectangle rect \u003d ((ContextMenu)(menuItem.Parent)).PlacementTarget as System.Windows.Shapes.Rectangle;"},{"lineNumber":833,"author":{"gitId":"-"},"content":"            System.Windows.Media.Color color \u003d ((SolidColorBrush)rect.Fill).Color;"},{"lineNumber":834,"author":{"gitId":"-"},"content":"            HSLColor clickedColor \u003d GraphicsUtil.DrawingColorFromMediaColor(color);"},{"lineNumber":835,"author":{"gitId":"-"},"content":"            dataSource.AddColorToFavorites(clickedColor);"},{"lineNumber":836,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":837,"author":{"gitId":"-"},"content":""},{"lineNumber":838,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":839,"author":{"gitId":"-"},"content":""},{"lineNumber":840,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":841,"author":{"gitId":"-"},"content":""},{"lineNumber":842,"author":{"gitId":"-"},"content":"        #region Helpers"},{"lineNumber":843,"author":{"gitId":"-"},"content":""},{"lineNumber":844,"author":{"gitId":"-"},"content":"        #region Apply Colors (Text, Fill, Line)"},{"lineNumber":845,"author":{"gitId":"-"},"content":""},{"lineNumber":846,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":847,"author":{"gitId":"-"},"content":"        /// Color selected shapes with selected color, in the given mode."},{"lineNumber":848,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":849,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"selectedColor\"\u003e\u003c/param\u003e"},{"lineNumber":850,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"colorMode\"\u003e\u003c/param\u003e"},{"lineNumber":851,"author":{"gitId":"-"},"content":"        private void ColorSelectedShapesWithColor(HSLColor selectedColor, MODE colorMode)"},{"lineNumber":852,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":853,"author":{"gitId":"-"},"content":"            SelectShapes();"},{"lineNumber":854,"author":{"gitId":"-"},"content":"            if (_selectedShapes !\u003d null"},{"lineNumber":855,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.GetCurrentSelection().Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes)"},{"lineNumber":856,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":857,"author":{"gitId":"-"},"content":"                foreach (PowerPoint.Shape s in _selectedShapes)"},{"lineNumber":858,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":859,"author":{"gitId":"-"},"content":"                    try"},{"lineNumber":860,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":861,"author":{"gitId":"-"},"content":"                        Byte r \u003d ((Color)selectedColor).R;"},{"lineNumber":862,"author":{"gitId":"-"},"content":"                        Byte g \u003d ((Color)selectedColor).G;"},{"lineNumber":863,"author":{"gitId":"-"},"content":"                        Byte b \u003d ((Color)selectedColor).B;"},{"lineNumber":864,"author":{"gitId":"-"},"content":""},{"lineNumber":865,"author":{"gitId":"-"},"content":"                        int rgb \u003d (b \u003c\u003c 16) | (g \u003c\u003c 8) | (r);"},{"lineNumber":866,"author":{"gitId":"-"},"content":"                        ColorShapeWithColor(s, rgb, colorMode);"},{"lineNumber":867,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":868,"author":{"gitId":"-"},"content":"                    catch (Exception)"},{"lineNumber":869,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":870,"author":{"gitId":"-"},"content":"                        RecreateCorruptedShape(s);"},{"lineNumber":871,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":872,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":873,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":874,"author":{"gitId":"-"},"content":"            if (_selectedText !\u003d null"},{"lineNumber":875,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.GetCurrentSelection().Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionText)"},{"lineNumber":876,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":877,"author":{"gitId":"-"},"content":"                try"},{"lineNumber":878,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":879,"author":{"gitId":"-"},"content":"                    Byte r \u003d ((Color)selectedColor).R;"},{"lineNumber":880,"author":{"gitId":"-"},"content":"                    Byte g \u003d ((Color)selectedColor).G;"},{"lineNumber":881,"author":{"gitId":"-"},"content":"                    Byte b \u003d ((Color)selectedColor).B;"},{"lineNumber":882,"author":{"gitId":"-"},"content":""},{"lineNumber":883,"author":{"gitId":"-"},"content":"                    int rgb \u003d (b \u003c\u003c 16) | (g \u003c\u003c 8) | (r);"},{"lineNumber":884,"author":{"gitId":"-"},"content":"                    ColorTextWithColor(_selectedText, rgb, colorMode);"},{"lineNumber":885,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":886,"author":{"gitId":"-"},"content":"                catch (Exception)"},{"lineNumber":887,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":888,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":889,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":890,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":891,"author":{"gitId":"-"},"content":""},{"lineNumber":892,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":893,"author":{"gitId":"-"},"content":"        /// Retrieves selected shapes or text."},{"lineNumber":894,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":895,"author":{"gitId":"-"},"content":"        private void SelectShapes()"},{"lineNumber":896,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":897,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":898,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":899,"author":{"gitId":"-"},"content":"                PowerPoint.Selection selection \u003d this.GetCurrentSelection();"},{"lineNumber":900,"author":{"gitId":"-"},"content":"                if (selection \u003d\u003d null)"},{"lineNumber":901,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":902,"author":{"gitId":"-"},"content":"                    return;"},{"lineNumber":903,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":904,"author":{"gitId":"-"},"content":""},{"lineNumber":905,"author":{"gitId":"-"},"content":"                if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes)"},{"lineNumber":906,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":907,"author":{"gitId":"-"},"content":"                    _selectedShapes \u003d ShapeUtil.GetShapeRange(selection);"},{"lineNumber":908,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":909,"author":{"gitId":"-"},"content":"                else if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionText)"},{"lineNumber":910,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":911,"author":{"gitId":"-"},"content":"                    _selectedText \u003d selection.TextRange;"},{"lineNumber":912,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":913,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":914,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":915,"author":{"gitId":"-"},"content":"                    _selectedShapes \u003d null;"},{"lineNumber":916,"author":{"gitId":"-"},"content":"                    _selectedText \u003d null;"},{"lineNumber":917,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":918,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":919,"author":{"gitId":"-"},"content":"            catch (Exception)"},{"lineNumber":920,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":921,"author":{"gitId":"-"},"content":"                _selectedShapes \u003d null;"},{"lineNumber":922,"author":{"gitId":"-"},"content":"                _selectedText \u003d null;"},{"lineNumber":923,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":924,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":925,"author":{"gitId":"-"},"content":""},{"lineNumber":926,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":927,"author":{"gitId":"-"},"content":"        /// Colors specified text range with given color."},{"lineNumber":928,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":929,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"text\"\u003e\u003c/param\u003e"},{"lineNumber":930,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"rgb\"\u003e\u003c/param\u003e"},{"lineNumber":931,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"mode\"\u003e\u003c/param\u003e"},{"lineNumber":932,"author":{"gitId":"-"},"content":"        private void ColorTextWithColor(PowerPoint.TextRange text, int rgb, MODE mode)"},{"lineNumber":933,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":934,"author":{"gitId":"-"},"content":"            PowerPoint.TextFrame frame \u003d text.Parent as PowerPoint.TextFrame;"},{"lineNumber":935,"author":{"gitId":"-"},"content":"            PowerPoint.Shape selectedShape \u003d frame.Parent as PowerPoint.Shape;"},{"lineNumber":936,"author":{"gitId":"-"},"content":"            if (mode !\u003d MODE.NONE)"},{"lineNumber":937,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":938,"author":{"gitId":"-"},"content":"                ColorShapeWithColor(selectedShape, rgb, mode);"},{"lineNumber":939,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":940,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":941,"author":{"gitId":"-"},"content":""},{"lineNumber":942,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":943,"author":{"gitId":"-"},"content":"        /// Colors specified shape with color, in the given mode."},{"lineNumber":944,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":945,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"s\"\u003e\u003c/param\u003e"},{"lineNumber":946,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"rgb\"\u003e\u003c/param\u003e"},{"lineNumber":947,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"mode\"\u003e\u003c/param\u003e"},{"lineNumber":948,"author":{"gitId":"-"},"content":"        private void ColorShapeWithColor(PowerPoint.Shape s, int rgb, MODE mode)"},{"lineNumber":949,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":950,"author":{"gitId":"-"},"content":"            switch (mode)"},{"lineNumber":951,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":952,"author":{"gitId":"-"},"content":"                case MODE.FILL:"},{"lineNumber":953,"author":{"gitId":"-"},"content":"                    s.Fill.ForeColor.RGB \u003d rgb;"},{"lineNumber":954,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":955,"author":{"gitId":"-"},"content":"                case MODE.LINE:"},{"lineNumber":956,"author":{"gitId":"-"},"content":"                    s.Line.ForeColor.RGB \u003d rgb;"},{"lineNumber":957,"author":{"gitId":"-"},"content":"                    s.Line.Visible \u003d MsoTriState.msoTrue;"},{"lineNumber":958,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":959,"author":{"gitId":"-"},"content":"                case MODE.FONT:"},{"lineNumber":960,"author":{"gitId":"-"},"content":"                    ColorShapeFontWithColor(s, rgb);"},{"lineNumber":961,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":962,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":963,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":964,"author":{"gitId":"-"},"content":""},{"lineNumber":965,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":966,"author":{"gitId":"-"},"content":"        /// Colors specified shape with color."},{"lineNumber":967,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":968,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"s\"\u003e\u003c/param\u003e"},{"lineNumber":969,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"rgb\"\u003e\u003c/param\u003e"},{"lineNumber":970,"author":{"gitId":"-"},"content":"        private void ColorShapeFontWithColor(PowerPoint.Shape s, int rgb)"},{"lineNumber":971,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":972,"author":{"gitId":"-"},"content":"            if (s.HasTextFrame \u003d\u003d MsoTriState.msoTrue)"},{"lineNumber":973,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":974,"author":{"gitId":"-"},"content":"                PowerPoint.Selection selection \u003d this.GetCurrentSelection();"},{"lineNumber":975,"author":{"gitId":"-"},"content":"                if (selection \u003d\u003d null)"},{"lineNumber":976,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":977,"author":{"gitId":"-"},"content":"                    return;"},{"lineNumber":978,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":979,"author":{"gitId":"-"},"content":""},{"lineNumber":980,"author":{"gitId":"-"},"content":"                if (selection.ShapeRange.HasTextFrame \u003d\u003d MsoTriState.msoTrue)"},{"lineNumber":981,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":982,"author":{"gitId":"-"},"content":"                    if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionText)"},{"lineNumber":983,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":984,"author":{"gitId":"-"},"content":"                        PowerPoint.TextRange selectedText \u003d selection.TextRange.TrimText();"},{"lineNumber":985,"author":{"gitId":"-"},"content":"                        if (selectedText.Text !\u003d \"\" \u0026\u0026 selectedText !\u003d null)"},{"lineNumber":986,"author":{"gitId":"-"},"content":"                        {"},{"lineNumber":987,"author":{"gitId":"-"},"content":"                            selectedText.Font.Color.RGB \u003d rgb;"},{"lineNumber":988,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":989,"author":{"gitId":"-"},"content":"                        else"},{"lineNumber":990,"author":{"gitId":"-"},"content":"                        {"},{"lineNumber":991,"author":{"gitId":"-"},"content":"                            s.TextFrame.TextRange.TrimText().Font.Color.RGB \u003d rgb;"},{"lineNumber":992,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":993,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":994,"author":{"gitId":"-"},"content":"                    else if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes)"},{"lineNumber":995,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":996,"author":{"gitId":"-"},"content":"                        s.TextFrame.TextRange.TrimText().Font.Color.RGB \u003d rgb;"},{"lineNumber":997,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":998,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":999,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1001,"author":{"gitId":"-"},"content":""},{"lineNumber":1002,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"        /// Recreates any specified corrupted shape."},{"lineNumber":1004,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"s\"\u003e\u003c/param\u003e"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"        private void RecreateCorruptedShape(PowerPoint.Shape s)"},{"lineNumber":1007,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"            PowerPoint.Shape newShape \u003d this.GetCurrentSlide().Shapes.SafeCopyPlaceholder(s);"},{"lineNumber":1009,"author":{"gitId":"-"},"content":""},{"lineNumber":1010,"author":{"gitId":"-"},"content":"            newShape.Select();"},{"lineNumber":1011,"author":{"gitId":"-"},"content":""},{"lineNumber":1012,"author":{"gitId":"-"},"content":"            newShape.Name \u003d s.Name;"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"            newShape.Left \u003d s.Left;"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"            newShape.Top \u003d s.Top;"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"            while (newShape.ZOrderPosition \u003e s.ZOrderPosition)"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"                newShape.ZOrder(Microsoft.Office.Core.MsoZOrderCmd.msoSendBackward);"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"            s.SafeDelete();"},{"lineNumber":1020,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1021,"author":{"gitId":"-"},"content":""},{"lineNumber":1022,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"        /// Retrieves color of the selected shape(s)."},{"lineNumber":1024,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":1025,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"mode\"\u003e\u003c/param\u003e"},{"lineNumber":1026,"author":{"gitId":"-"},"content":"        /// \u003creturns\u003e\u003c/returns\u003e"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"        private Color GetSelectedShapeColor(MODE mode)"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"            SelectShapes();"},{"lineNumber":1030,"author":{"gitId":"-"},"content":"            if (_selectedShapes \u003d\u003d null \u0026\u0026 _selectedText \u003d\u003d null)"},{"lineNumber":1031,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1032,"author":{"gitId":"-"},"content":"                return dataSource.SelectedColor;"},{"lineNumber":1033,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1034,"author":{"gitId":"-"},"content":""},{"lineNumber":1035,"author":{"gitId":"-"},"content":"            if (this.GetCurrentSelection().Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes)"},{"lineNumber":1036,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"                return GetSelectedShapeColor(_selectedShapes, mode);"},{"lineNumber":1038,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"            if (this.GetCurrentSelection().Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionText)"},{"lineNumber":1040,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"                PowerPoint.TextFrame frame \u003d _selectedText.Parent as PowerPoint.TextFrame;"},{"lineNumber":1042,"author":{"gitId":"-"},"content":"                PowerPoint.Shape selectedShape \u003d frame.Parent as PowerPoint.Shape;"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"                return GetSelectedShapeColor(selectedShape, mode);"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1045,"author":{"gitId":"-"},"content":""},{"lineNumber":1046,"author":{"gitId":"-"},"content":"            return dataSource.SelectedColor;"},{"lineNumber":1047,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1048,"author":{"gitId":"-"},"content":""},{"lineNumber":1049,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"        /// Retrieves color of the selected shapeRange, "},{"lineNumber":1051,"author":{"gitId":"-"},"content":"        /// returning Black if shapeRange contains shapes with different colors."},{"lineNumber":1052,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":1053,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"selectedShapes\"\u003e\u003c/param\u003e"},{"lineNumber":1054,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"mode\"\u003e\u003c/param\u003e"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"        /// \u003creturns\u003e\u003c/returns\u003e"},{"lineNumber":1056,"author":{"gitId":"-"},"content":"        private Color GetSelectedShapeColor(PowerPoint.ShapeRange selectedShapes, MODE mode)"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"            Color colorToReturn \u003d Color.Empty;"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"            foreach (object selectedShape in selectedShapes)"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"                Color color \u003d GetSelectedShapeColor(selectedShape as PowerPoint.Shape, mode);"},{"lineNumber":1062,"author":{"gitId":"-"},"content":"                if (colorToReturn.Equals(Color.Empty))"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"                    colorToReturn \u003d color;"},{"lineNumber":1065,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1066,"author":{"gitId":"-"},"content":"                else if (!colorToReturn.Equals(color))"},{"lineNumber":1067,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1068,"author":{"gitId":"-"},"content":"                    return Color.Black;"},{"lineNumber":1069,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1070,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"            return colorToReturn;"},{"lineNumber":1072,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1073,"author":{"gitId":"-"},"content":""},{"lineNumber":1074,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":1075,"author":{"gitId":"-"},"content":"        /// Retrieves color of the selected shape."},{"lineNumber":1076,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":1077,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"selectedShape\"\u003e\u003c/param\u003e"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"mode\"\u003e\u003c/param\u003e"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"        /// \u003creturns\u003e\u003c/returns\u003e"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"        private Color GetSelectedShapeColor(PowerPoint.Shape selectedShape, MODE mode)"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"            switch (mode)"},{"lineNumber":1083,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1084,"author":{"gitId":"-"},"content":"                case MODE.FILL:"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"                    return Color.FromArgb(ColorHelper.ReverseRGBToArgb(selectedShape.Fill.ForeColor.RGB));"},{"lineNumber":1086,"author":{"gitId":"-"},"content":"                case MODE.LINE:"},{"lineNumber":1087,"author":{"gitId":"-"},"content":"                    return Color.FromArgb(ColorHelper.ReverseRGBToArgb(selectedShape.Line.ForeColor.RGB));"},{"lineNumber":1088,"author":{"gitId":"-"},"content":"                case MODE.FONT:"},{"lineNumber":1089,"author":{"gitId":"-"},"content":"                    if (selectedShape.HasTextFrame \u003d\u003d MsoTriState.msoTrue"},{"lineNumber":1090,"author":{"gitId":"-"},"content":"                        \u0026\u0026 this.GetApplication().ActiveWindow.Selection.ShapeRange.HasTextFrame"},{"lineNumber":1091,"author":{"gitId":"-"},"content":"                        \u003d\u003d MsoTriState.msoTrue)"},{"lineNumber":1092,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1093,"author":{"gitId":"-"},"content":"                        if (this.GetCurrentSelection().Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionText)"},{"lineNumber":1094,"author":{"gitId":"-"},"content":"                        {"},{"lineNumber":1095,"author":{"gitId":"-"},"content":"                            PowerPoint.TextRange selectedText"},{"lineNumber":1096,"author":{"gitId":"-"},"content":"                                \u003d this.GetApplication().ActiveWindow.Selection.TextRange.TrimText();"},{"lineNumber":1097,"author":{"gitId":"-"},"content":"                            if (selectedText !\u003d null \u0026\u0026 selectedText.Text !\u003d \"\")"},{"lineNumber":1098,"author":{"gitId":"-"},"content":"                            {"},{"lineNumber":1099,"author":{"gitId":"-"},"content":"                                return Color.FromArgb(ColorHelper.ReverseRGBToArgb(selectedText.Font.Color.RGB));"},{"lineNumber":1100,"author":{"gitId":"-"},"content":"                            }"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"                            else"},{"lineNumber":1102,"author":{"gitId":"-"},"content":"                            {"},{"lineNumber":1103,"author":{"gitId":"-"},"content":"                                return"},{"lineNumber":1104,"author":{"gitId":"-"},"content":"                                Color.FromArgb("},{"lineNumber":1105,"author":{"gitId":"-"},"content":"                                    ColorHelper.ReverseRGBToArgb(selectedShape.TextFrame.TextRange.Font.Color.RGB));"},{"lineNumber":1106,"author":{"gitId":"-"},"content":"                            }"},{"lineNumber":1107,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":1108,"author":{"gitId":"-"},"content":"                        else if (this.GetCurrentSelection().Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes)"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"                        {"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"                            return"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"                                Color.FromArgb("},{"lineNumber":1112,"author":{"gitId":"-"},"content":"                                    ColorHelper.ReverseRGBToArgb(selectedShape.TextFrame.TextRange.Font.Color.RGB));"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":1114,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":1116,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1117,"author":{"gitId":"-"},"content":"            return dataSource.SelectedColor;"},{"lineNumber":1118,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1119,"author":{"gitId":"-"},"content":""},{"lineNumber":1120,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":1121,"author":{"gitId":"-"},"content":""},{"lineNumber":1122,"author":{"gitId":"-"},"content":"        #region Eye Dropper"},{"lineNumber":1123,"author":{"gitId":"-"},"content":""},{"lineNumber":1124,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":1125,"author":{"gitId":"-"},"content":"        /// Sets the eyedropper mode given the name of the rectangle."},{"lineNumber":1126,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":1127,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"rectName\"\u003e\u003c/param\u003e"},{"lineNumber":1128,"author":{"gitId":"-"},"content":"        private void SetEyedropperMode(string rectName)"},{"lineNumber":1129,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1130,"author":{"gitId":"-"},"content":"            switch (rectName)"},{"lineNumber":1131,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1132,"author":{"gitId":"-"},"content":"                case \"applyTextColorButton\":"},{"lineNumber":1133,"author":{"gitId":"-"},"content":"                    _eyedropperMode \u003d MODE.FONT;"},{"lineNumber":1134,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":1135,"author":{"gitId":"-"},"content":"                case \"applyLineColorButton\":"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"                    _eyedropperMode \u003d MODE.LINE;"},{"lineNumber":1137,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":1138,"author":{"gitId":"-"},"content":"                case \"applyFillColorButton\":"},{"lineNumber":1139,"author":{"gitId":"-"},"content":"                    _eyedropperMode \u003d MODE.FILL;"},{"lineNumber":1140,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":1141,"author":{"gitId":"-"},"content":"                case \"eyeDropperButton\":"},{"lineNumber":1142,"author":{"gitId":"-"},"content":"                    _eyedropperMode \u003d MODE.MAIN;"},{"lineNumber":1143,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":1144,"author":{"gitId":"-"},"content":"                default:"},{"lineNumber":1145,"author":{"gitId":"-"},"content":"                    _eyedropperMode \u003d MODE.NONE;"},{"lineNumber":1146,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":1147,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1148,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1149,"author":{"gitId":"-"},"content":""},{"lineNumber":1150,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":1151,"author":{"gitId":"-"},"content":"        /// Show magnifier and begin eye dropping."},{"lineNumber":1152,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":1153,"author":{"gitId":"-"},"content":"        private void BeginEyedropping()"},{"lineNumber":1154,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1155,"author":{"gitId":"-"},"content":"            _isEyedropperMode \u003d true;"},{"lineNumber":1156,"author":{"gitId":"-"},"content":"            timer1Ticks \u003d 0;"},{"lineNumber":1157,"author":{"gitId":"-"},"content":"            eyeDropperTimer.Start();"},{"lineNumber":1158,"author":{"gitId":"-"},"content":"            Mouse.OverrideCursor \u003d eyeDropperCursor;"},{"lineNumber":1159,"author":{"gitId":"-"},"content":"            PPExtraEventHelper.PPMouse.LeftButtonUp +\u003d LeftMouseButtonUpEventHandler;"},{"lineNumber":1160,"author":{"gitId":"-"},"content":"            magnifier.Show();"},{"lineNumber":1161,"author":{"gitId":"-"},"content":""},{"lineNumber":1162,"author":{"gitId":"-"},"content":"            if (_eyedropperMode \u003d\u003d MODE.MAIN)"},{"lineNumber":1163,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1164,"author":{"gitId":"-"},"content":"                eyeDropperPreviewRectangle.Fill \u003d selectedColorRectangle.Fill;"},{"lineNumber":1165,"author":{"gitId":"-"},"content":"                selectedColorRectangle.Opacity \u003d 0;"},{"lineNumber":1166,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1167,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1168,"author":{"gitId":"-"},"content":""},{"lineNumber":1169,"author":{"gitId":"-"},"content":"        private void ColorMainColorRect(Color color)"},{"lineNumber":1170,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1171,"author":{"gitId":"-"},"content":"            eyeDropperPreviewRectangle.Dispatcher.Invoke(() \u003d\u003e"},{"lineNumber":1172,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1173,"author":{"gitId":"-"},"content":"               eyeDropperPreviewRectangle.Fill \u003d GraphicsUtil.MediaBrushFromDrawingColor(color);"},{"lineNumber":1174,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":1175,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1176,"author":{"gitId":"-"},"content":""},{"lineNumber":1177,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":1178,"author":{"gitId":"-"},"content":""},{"lineNumber":1179,"author":{"gitId":"-"},"content":"        #region Favourite Colors"},{"lineNumber":1180,"author":{"gitId":"-"},"content":""},{"lineNumber":1181,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":1182,"author":{"gitId":"-"},"content":"        /// Load default panel from default file, or clear the panel if unsuccessful."},{"lineNumber":1183,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":1184,"author":{"gitId":"-"},"content":"        private void LoadDefaultFavoritePanel()"},{"lineNumber":1185,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1186,"author":{"gitId":"-"},"content":"            bool isSuccessful \u003d dataSource.LoadFavoriteColorsFromFile(_defaultFavoriteColorDirectory);"},{"lineNumber":1187,"author":{"gitId":"-"},"content":"            if (!isSuccessful)"},{"lineNumber":1188,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1189,"author":{"gitId":"-"},"content":"                EmptyFavoritePanel();"},{"lineNumber":1190,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1191,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1192,"author":{"gitId":"-"},"content":""},{"lineNumber":1193,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":1194,"author":{"gitId":"-"},"content":"        /// Reset panel to the last loaded favorite panel."},{"lineNumber":1195,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":1196,"author":{"gitId":"-"},"content":"        private void ResetFavoritePanel()"},{"lineNumber":1197,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1198,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":1199,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1200,"author":{"gitId":"-"},"content":"                LoadDefaultFavoritePanel();"},{"lineNumber":1201,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1202,"author":{"gitId":"-"},"content":"            catch (Exception e)"},{"lineNumber":1203,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1204,"author":{"gitId":"-"},"content":"                ErrorDialogBox.ShowDialog(\"Favorite Panel Reset Failed\", e.Message, e);"},{"lineNumber":1205,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1206,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1207,"author":{"gitId":"-"},"content":""},{"lineNumber":1208,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":1209,"author":{"gitId":"-"},"content":"        /// Clear the panel to all white color."},{"lineNumber":1210,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":1211,"author":{"gitId":"-"},"content":"        private void EmptyFavoritePanel()"},{"lineNumber":1212,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1213,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":1214,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1215,"author":{"gitId":"-"},"content":"                if (this.GetCurrentSlide() !\u003d null)"},{"lineNumber":1216,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1217,"author":{"gitId":"-"},"content":"                    dataSource.ClearFavoriteColors();"},{"lineNumber":1218,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1219,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1220,"author":{"gitId":"-"},"content":"            catch (Exception e)"},{"lineNumber":1221,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1222,"author":{"gitId":"-"},"content":"                ErrorDialogBox.ShowDialog(\"Favorite Panel Reset Failed\", e.Message, e);"},{"lineNumber":1223,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1224,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1225,"author":{"gitId":"-"},"content":""},{"lineNumber":1226,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":1227,"author":{"gitId":"-"},"content":"        /// Set the color rect given the name of the rect, and the color to set."},{"lineNumber":1228,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":1229,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"name\"\u003e\u003c/param\u003e"},{"lineNumber":1230,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"color\"\u003e\u003c/param\u003e"},{"lineNumber":1231,"author":{"gitId":"-"},"content":"        private void SetFavoriteColorRectangle(int column, Color color)"},{"lineNumber":1232,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1233,"author":{"gitId":"-"},"content":"            dataSource.SetFavoriteColor(column, color);"},{"lineNumber":1234,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1235,"author":{"gitId":"-"},"content":""},{"lineNumber":1236,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":1237,"author":{"gitId":"-"},"content":"        /// Save current panel as default favorite color."},{"lineNumber":1238,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":1239,"author":{"gitId":"-"},"content":"        private void SaveDefaultColorPaneFavoriteColors()"},{"lineNumber":1240,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1241,"author":{"gitId":"-"},"content":"            dataSource.SaveFavoriteColorsInFile(_defaultFavoriteColorDirectory);"},{"lineNumber":1242,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1243,"author":{"gitId":"-"},"content":""},{"lineNumber":1244,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":1245,"author":{"gitId":"-"},"content":""},{"lineNumber":1246,"author":{"gitId":"-"},"content":"        #region Recent Colors"},{"lineNumber":1247,"author":{"gitId":"-"},"content":"        "},{"lineNumber":1248,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":1249,"author":{"gitId":"-"},"content":"        /// Save current recent colors panel to file."},{"lineNumber":1250,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":1251,"author":{"gitId":"-"},"content":"        private void SaveColorPaneRecentColors()"},{"lineNumber":1252,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1253,"author":{"gitId":"-"},"content":"            dataSource.SaveRecentColorsInFile(_defaultRecentColorDirectory);"},{"lineNumber":1254,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1255,"author":{"gitId":"-"},"content":""},{"lineNumber":1256,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":1257,"author":{"gitId":"-"},"content":"        /// Load recent panel from file, or clear the panel if unsuccessful."},{"lineNumber":1258,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":1259,"author":{"gitId":"-"},"content":"        private void LoadRecentColorsPanel()"},{"lineNumber":1260,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1261,"author":{"gitId":"-"},"content":"            bool isSuccessful \u003d dataSource.LoadRecentColorsFromFile(_defaultRecentColorDirectory);"},{"lineNumber":1262,"author":{"gitId":"-"},"content":"            if (!isSuccessful)"},{"lineNumber":1263,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1264,"author":{"gitId":"-"},"content":"                EmptyRecentColorsPanel();"},{"lineNumber":1265,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1266,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1267,"author":{"gitId":"-"},"content":""},{"lineNumber":1268,"author":{"gitId":"-"},"content":""},{"lineNumber":1269,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":1270,"author":{"gitId":"-"},"content":""},{"lineNumber":1271,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":1272,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1273,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":1244,"xantho09":29}},{"path":"PowerPointLabs/PowerPointLabs/ELearningLab/Converters/ShapeNameWidthConverter.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"daekoon"},"content":"﻿using System;"},{"lineNumber":2,"author":{"gitId":"daekoon"},"content":"using System.Windows;"},{"lineNumber":3,"author":{"gitId":"daekoon"},"content":"using System.Windows.Data;"},{"lineNumber":4,"author":{"gitId":"daekoon"},"content":""},{"lineNumber":5,"author":{"gitId":"daekoon"},"content":"namespace PowerPointLabs.ELearningLab.Converters"},{"lineNumber":6,"author":{"gitId":"daekoon"},"content":"{"},{"lineNumber":7,"author":{"gitId":"daekoon"},"content":"    public class ShapeNameWidthConverter : IValueConverter"},{"lineNumber":8,"author":{"gitId":"daekoon"},"content":"    {"},{"lineNumber":9,"author":{"gitId":"daekoon"},"content":"        private const int leftIconWidth \u003d 45;"},{"lineNumber":10,"author":{"gitId":"daekoon"},"content":"        public object Convert(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)"},{"lineNumber":11,"author":{"gitId":"daekoon"},"content":"        {"},{"lineNumber":12,"author":{"gitId":"daekoon"},"content":"            if (value is double)"},{"lineNumber":13,"author":{"gitId":"daekoon"},"content":"            {"},{"lineNumber":14,"author":{"gitId":"daekoon"},"content":"                return (double)value - leftIconWidth;"},{"lineNumber":15,"author":{"gitId":"daekoon"},"content":"            }"},{"lineNumber":16,"author":{"gitId":"daekoon"},"content":"            return null;"},{"lineNumber":17,"author":{"gitId":"daekoon"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"daekoon"},"content":""},{"lineNumber":19,"author":{"gitId":"daekoon"},"content":"        public object ConvertBack(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)"},{"lineNumber":20,"author":{"gitId":"daekoon"},"content":"        {"},{"lineNumber":21,"author":{"gitId":"daekoon"},"content":"            if (value is double)"},{"lineNumber":22,"author":{"gitId":"daekoon"},"content":"            {"},{"lineNumber":23,"author":{"gitId":"daekoon"},"content":"                return (double)value + leftIconWidth;"},{"lineNumber":24,"author":{"gitId":"daekoon"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"daekoon"},"content":"            return null;"},{"lineNumber":26,"author":{"gitId":"daekoon"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"daekoon"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"daekoon"},"content":"}"}],"authorContributionMap":{"daekoon":28}},{"path":"PowerPointLabs/PowerPointLabs/ELearningLab/Views/AudioSettingsViews/AudioSettingsDialogWindow.xaml.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using System.ComponentModel;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"using System.Windows;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"using System.Windows.Controls;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"using PowerPointLabs.ELearningLab.AudioGenerator;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"using PowerPointLabs.ELearningLab.Views.AudioSettingsViews;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.ELearningLab.Views"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /// \u003csummary\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /// Interaction logic for NarrationsLabSettingsDialogBox.xaml"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /// \u003c/summary\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public partial class AudioSettingsDialogWindow : INotifyPropertyChanged"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        public event PropertyChangedEventHandler PropertyChanged \u003d (sender, e) \u003d\u003e { };"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"        public AudioSettingsWindowDisplayOptions WindowDisplayOption"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            get"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                return windowDisplayOption;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            set"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                windowDisplayOption \u003d value;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                PropertyChanged(this, new PropertyChangedEventArgs(\"WindowDisplayOption\"));"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"        public Page MainPage"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            get"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                return mainPage;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            set"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                mainPage \u003d value;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                PropertyChanged(this, new PropertyChangedEventArgs(\"MainPage\"));"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"        public Page SubAzureLoginPage"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            get"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                return subAzureLoginPage;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            set"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                subAzureLoginPage \u003d value;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                PropertyChanged(this, new PropertyChangedEventArgs(\"SubAzureLoginPage\"));"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"        public Page SubWatsonLoginPage"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            get"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                return subWatsonLoginPage;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            set"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                subWatsonLoginPage \u003d value;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                PropertyChanged(this, new PropertyChangedEventArgs(\"SubWatsonLoginPage\"));"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        private Page mainPage, subAzureLoginPage, subWatsonLoginPage;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        private AudioSettingsWindowDisplayOptions windowDisplayOption;"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        public AudioSettingsDialogWindow(AudioSettingsPage page)"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            InitializeComponent();"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            mainPage \u003d CreatePageFromIndex(page);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            mainPage.DataContext \u003d this;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            subAzureLoginPage \u003d new AzureVoiceLoginPage();"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            subAzureLoginPage.DataContext \u003d this;"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            subWatsonLoginPage \u003d new WatsonVoiceLoginPage();"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            subWatsonLoginPage.DataContext \u003d this;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            windowDisplayOption \u003d AudioSettingsWindowDisplayOptions.GoToMainPage;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            DataContext \u003d this;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            audioSettingsDialogWindow.AllowsTransparency \u003d true;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            audioSettingsDialogWindow.Opacity \u003d 0;"},{"lineNumber":85,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":86,"author":{"gitId":"xantho09"},"content":"            // Add this DialogWindow\u0027s Resources to the MergedDictionaries of the pages so that"},{"lineNumber":87,"author":{"gitId":"xantho09"},"content":"            // when they get updated due to theme changes, the updates get propagated to the pages."},{"lineNumber":88,"author":{"gitId":"xantho09"},"content":"            mainPage.Resources.MergedDictionaries.Add(Resources);"},{"lineNumber":89,"author":{"gitId":"xantho09"},"content":"            subAzureLoginPage.Resources.MergedDictionaries.Add(Resources);"},{"lineNumber":90,"author":{"gitId":"xantho09"},"content":"            subWatsonLoginPage.Resources.MergedDictionaries.Add(Resources);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        protected override void OnRenderSizeChanged(SizeChangedInfo sizeInfo)"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            base.OnRenderSizeChanged(sizeInfo);"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"            //Calculate half of the offset to move the form"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"            if (sizeInfo.HeightChanged)"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                Top +\u003d (sizeInfo.PreviousSize.Height - sizeInfo.NewSize.Height) / 2;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"            if (sizeInfo.WidthChanged)"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Left +\u003d (sizeInfo.PreviousSize.Width - sizeInfo.NewSize.Width) / 2;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"        private void MetroWindow_ContentRendered(object sender, System.EventArgs e)"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            audioSettingsDialogWindow.Opacity \u003d 1;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"        private Page CreatePageFromIndex(AudioSettingsPage index)"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            switch (index)"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                case AudioSettingsPage.MainSettingsPage:"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                    return new AudioMainSettingsPage();"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                case AudioSettingsPage.AzureLoginPage:"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                    AzureVoiceLoginPage loginInstance \u003d new AzureVoiceLoginPage();"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                    loginInstance.key.Text \u003d \"\";"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    loginInstance.endpoint.SelectedIndex \u003d -1;"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    return loginInstance;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                case AudioSettingsPage.AudioPreviewPage:"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    return new AudioPreviewPage();"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                default:"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                    return null;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public enum AudioSettingsWindowDisplayOptions"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        GoToMainPage,"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        GoToAzureLoginPage,"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        GoToWatsonLoginPage"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":134,"xantho09":6}},{"path":"PowerPointLabs/PowerPointLabs/HighlightLab/HighlightBulletsBackground.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using System;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"using System.Collections.Generic;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"using System.Linq;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Extension;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Log;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"using PowerPointLabs.AnimationLab;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"using PowerPointLabs.Models;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"using Office \u003d Microsoft.Office.Core;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"using PowerPoint \u003d Microsoft.Office.Interop.PowerPoint;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.HighlightLab"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    class HighlightBulletsBackground"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"#pragma warning disable 0618"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        public enum HighlightBackgroundSelection { kShapeSelected, kTextSelected, kNoneSelected };"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        public static HighlightBackgroundSelection userSelection \u003d HighlightBackgroundSelection.kNoneSelected;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        public static bool IsHighlightBackgroundEnabled { get; set; } \u003d true;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"        public static void AddHighlightBulletsBackground()"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                PowerPointSlide currentSlide \u003d PowerPointCurrentPresentationInfo.CurrentSlide as PowerPointSlide;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                currentSlide.Name \u003d \"PPTLabsHighlightBulletsSlide\" + DateTime.Now.ToString(\"yyyyMMddHHmmssffff\");"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"                PowerPoint.ShapeRange selectedShapes \u003d null;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                Office.TextRange2 selectedText \u003d null;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"                //Get shapes to consider for animation"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                List\u003cPowerPoint.Shape\u003e shapesToUse \u003d null;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                switch (userSelection)"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    case HighlightBackgroundSelection.kShapeSelected:"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                        selectedShapes \u003d Globals.ThisAddIn.Application.ActiveWindow.Selection.ShapeRange;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                        shapesToUse \u003d GetShapesToUse(currentSlide, selectedShapes);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                        break;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    case HighlightBackgroundSelection.kTextSelected:"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                        selectedShapes \u003d Globals.ThisAddIn.Application.ActiveWindow.Selection.ShapeRange;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                        selectedText \u003d Globals.ThisAddIn.Application.ActiveWindow.Selection.TextRange2.TrimText();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                        shapesToUse \u003d GetShapesToUse(currentSlide, selectedShapes);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                        break;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    case HighlightBackgroundSelection.kNoneSelected:"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                        currentSlide.DeleteIndicator();"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                        shapesToUse \u003d GetAllUsableShapesInSlide(currentSlide);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                        break;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    default:"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                        break;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"                Globals.ThisAddIn.Application.ActiveWindow.Selection.Unselect();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                Globals.ThisAddIn.Application.ActiveWindow.View.GotoSlide(currentSlide.Index);"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"                if (shapesToUse \u003d\u003d null || shapesToUse.Count \u003d\u003d 0)"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                    return;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"                SelectOldShapesToAnimate(currentSlide, shapesToUse);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                bool newShapesAdded \u003d AddNewShapesToAnimate(currentSlide, shapesToUse, selectedText);"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"                if (newShapesAdded)"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                    bool oldValue \u003d AnimationLabSettings.IsUseFrameAnimation;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                    AnimationLabSettings.IsUseFrameAnimation \u003d false;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                    AnimateInSlide.AddAnimationInSlide(isHighlightBullets: true);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                    AnimationLabSettings.IsUseFrameAnimation \u003d oldValue;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                    PowerPointPresentation.Current.AddAckSlide();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"ccyccyccy"},"content":""},{"lineNumber":72,"author":{"gitId":"ccyccyccy"},"content":"                if (currentSlide.HasAnimationForClick(clickNumber: 1))"},{"lineNumber":73,"author":{"gitId":"ccyccyccy"},"content":"                {"},{"lineNumber":74,"author":{"gitId":"ccyccyccy"},"content":"                    Globals.ThisAddIn.Application.CommandBars.ExecuteMso(\"AnimationPreview\");"},{"lineNumber":75,"author":{"gitId":"ccyccyccy"},"content":"                }"},{"lineNumber":76,"author":{"gitId":"ccyccyccy"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"                Globals.ThisAddIn.Application.ActiveWindow.Selection.Unselect();"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            catch (Exception e)"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                Logger.LogException(e, \"AddHighlightBulletsBackground\");"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                throw;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"        //Add highlight shape for paragraphs within selected shape which have bullets or with text selected by user"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        private static bool AddNewShapesToAnimate(PowerPointSlide currentSlide, List\u003cPowerPoint.Shape\u003e shapesToUse, Office.TextRange2 selectedText)"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            bool anySelected \u003d false;"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"            foreach (PowerPoint.Shape sh in shapesToUse)"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                sh.Name \u003d \"HighlightBackgroundShape\" + Guid.NewGuid();"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"            if (userSelection \u003d\u003d HighlightBackgroundSelection.kTextSelected)"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                foreach (PowerPoint.Shape sh in shapesToUse)"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    foreach (Office.TextRange2 paragraph in sh.TextFrame2.TextRange.Paragraphs)"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                        if (paragraph.Start \u003c\u003d selectedText.Start + selectedText.Length"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                            \u0026\u0026 selectedText.Start \u003c\u003d paragraph.Start + paragraph.Length - 1"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                            \u0026\u0026 paragraph.TrimText().Length \u003e 0)"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                        {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                            GenerateHighlightShape(currentSlide, paragraph, sh);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                            anySelected \u003d true;"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                foreach (PowerPoint.Shape sh in shapesToUse)"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                    bool anySelectedForShape \u003d false;"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                    foreach (Office.TextRange2 paragraph in sh.TextFrame2.TextRange.Paragraphs)"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                        if (paragraph.ParagraphFormat.Bullet.Visible \u003d\u003d Office.MsoTriState.msoTrue"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                            \u0026\u0026 paragraph.TrimText().Length \u003e 0)"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                        {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                            GenerateHighlightShape(currentSlide, paragraph, sh);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                            anySelected \u003d true;"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                            anySelectedForShape \u003d true;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                    if (anySelectedForShape)"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                        continue;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    foreach (Office.TextRange2 paragraph in sh.TextFrame2.TextRange.Paragraphs)"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                        if (paragraph.TrimText().Length \u003e 0)"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                        {"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                            GenerateHighlightShape(currentSlide, paragraph, sh);"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                            anySelected \u003d true;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return anySelected;"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private static void GenerateHighlightShape(PowerPointSlide currentSlide, Office.TextRange2 paragraph, PowerPoint.Shape sh)"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            PowerPoint.Shape highlightShape \u003d currentSlide.Shapes.AddShape(Office.MsoAutoShapeType.msoShapeRoundedRectangle,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                                                            paragraph.BoundLeft,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                                                            paragraph.BoundTop,"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                                                            paragraph.BoundWidth,"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                                                            paragraph.BoundHeight);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            highlightShape.Adjustments[1] \u003d 0.25f;"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            highlightShape.Fill.ForeColor.RGB \u003d Utils.GraphicsUtil.ConvertColorToRgb(HighlightLabSettings.bulletsBackgroundColor);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            highlightShape.Fill.Transparency \u003d 0.50f;"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            highlightShape.Line.Visible \u003d Office.MsoTriState.msoFalse;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            Utils.ShapeUtil.MoveZToJustBehind(highlightShape, sh);"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            highlightShape.Name \u003d \"PPTLabsHighlightBackgroundShape\" + DateTime.Now.ToString(\"yyyyMMddHHmmssffff\");"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            highlightShape.Tags.Add(\"HighlightBackground\", sh.Name);"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            highlightShape.Select(Office.MsoTriState.msoFalse);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private static void SelectOldShapesToAnimate(PowerPointSlide currentSlide, List\u003cPowerPoint.Shape\u003e shapesToUse)"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            List\u003cPowerPoint.Shape\u003e shapesToDelete \u003d new List\u003cPowerPoint.Shape\u003e();"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            bool shouldSelect;"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"            List\u003cPowerPoint.Shape\u003e shapes \u003d currentSlide.GetShapesOrderedByTimeline();"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            foreach (PowerPoint.Shape sh in shapes)"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                shouldSelect \u003d true; //We should not select existing highlight shapes. Instead they should be deleted"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                if (sh.Name.Contains(\"PPTLabsHighlightBackgroundShape\"))"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                    if (userSelection !\u003d HighlightBackgroundSelection.kTextSelected)"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                        foreach (PowerPoint.Shape tmp in shapesToUse)"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                        {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                            //Each highlight shape stores a tag of the shape it is associated with"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                            if (sh.Tags[\"HighlightBackground\"].Equals(tmp.Name))"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                            {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                                shapesToDelete.Add(sh);"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                                shouldSelect \u003d false;"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                                break;"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                            }"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                    if (shouldSelect)"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                        currentSlide.DeleteShapeAnimations(sh);"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                        sh.Select(Office.MsoTriState.msoFalse);"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (shapesToDelete.Count \u003e 0)"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                foreach (PowerPoint.Shape sh in shapesToDelete)"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                    sh.SafeDelete();"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        /// Get shapes to use for animation."},{"lineNumber":204,"author":{"gitId":"-"},"content":"        /// If user does not select anything: Select shapes which have bullet points"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        /// If user selects some shapes: Keep shapes from user selection which have bullet points"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        /// If user selects some text: Keep shapes used to store text"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        private static List\u003cPowerPoint.Shape\u003e GetShapesToUse(PowerPointSlide currentSlide, PowerPoint.ShapeRange shapes)"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            List\u003cPowerPoint.Shape\u003e shapesToUse \u003d shapes.Cast\u003cPowerPoint.Shape\u003e()"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                                    .Where(sh \u003d\u003e !sh.Name.Contains(\"PPTLabsHighlightBackgroundShape\")"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                                                    \u0026\u0026 HasText(sh))"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                                    .ToList();"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return shapesToUse;"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        /// Get all shapes in slide to use for animation."},{"lineNumber":219,"author":{"gitId":"-"},"content":"        /// If there are text boxes with bullet points, returns only the text boxes with bullet points."},{"lineNumber":220,"author":{"gitId":"-"},"content":"        /// If there are no text boxes with bullet points, returns everything."},{"lineNumber":221,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        private static List\u003cPowerPoint.Shape\u003e GetAllUsableShapesInSlide(PowerPointSlide currentSlide)"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            PowerPoint.Shape[] selectedShapes \u003d currentSlide.Shapes.Range().Cast\u003cPowerPoint.Shape\u003e().ToArray();"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"            List\u003cPowerPoint.Shape\u003e usableShapesWithBullets \u003d selectedShapes"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                                            .Where(sh \u003d\u003e !sh.Name.Contains(\"PPTLabsHighlightBackgroundShape\")"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                                                        \u0026\u0026 HasText(sh)"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                                                        \u0026\u0026 HasBullets(sh))"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                                            .ToList();"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"            List\u003cPowerPoint.Shape\u003e allUsableShapes \u003d selectedShapes"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                                    .Where(sh \u003d\u003e !sh.Name.Contains(\"PPTLabsHighlightBackgroundShape\")"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                                                    \u0026\u0026 HasText(sh))"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                                    .ToList();"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"            if (usableShapesWithBullets.Count \u003d\u003d 0)"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                return allUsableShapes;"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                return usableShapesWithBullets;"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        /// Returns true iff shape (assuming has text) has bullet points."},{"lineNumber":249,"author":{"gitId":"-"},"content":"        /// Duplicate method in HighlightBulletsText.cs"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        private static bool HasBullets(PowerPoint.Shape shape)"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            return shape.TextFrame2.TextRange.ParagraphFormat.Bullet.Visible \u003d\u003d Office.MsoTriState.msoTrue \u0026\u0026"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                   shape.TextFrame2.TextRange.ParagraphFormat.Bullet.Type !\u003d Office.MsoBulletType.msoBulletNone;"},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        /// Returns true iff shape has a text frame."},{"lineNumber":260,"author":{"gitId":"-"},"content":"        /// Duplicate method in HighlightBulletsText.cs"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        private static bool HasText(PowerPoint.Shape shape)"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            return shape.HasTextFrame \u003d\u003d Office.MsoTriState.msoTrue \u0026\u0026"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                   shape.TextFrame2.HasText \u003d\u003d Office.MsoTriState.msoTrue;"},{"lineNumber":266,"author":{"gitId":"-"},"content":""},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ccyccyccy":6,"-":263}},{"path":"PowerPointLabs/PowerPointLabs/Models/PowerPointShapeGalleryPresentation.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using System;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"using System.Collections.Generic;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"using System.Diagnostics;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"using System.IO;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"using System.Linq;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"using System.Text.RegularExpressions;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"using System.Windows.Forms;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"using Microsoft.Office.Interop.PowerPoint;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Extension;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"using PowerPointLabs.TextCollection;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"using PowerPointLabs.Utils;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"using Office \u003d Microsoft.Office.Core;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.Models"},{"lineNumber":17,"author":{"gitId":"-"},"content":"{"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    class PowerPointShapeGalleryPresentation : PowerPointPresentation"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        /************************************************************************"},{"lineNumber":21,"author":{"gitId":"-"},"content":"         * Some General Concerns"},{"lineNumber":22,"author":{"gitId":"-"},"content":"         * "},{"lineNumber":23,"author":{"gitId":"-"},"content":"         * 1. Be careful when using PowerPointPresentation.Slides property. The"},{"lineNumber":24,"author":{"gitId":"-"},"content":"         * implementation requires O(n) time to access an item, instead of O(1)."},{"lineNumber":25,"author":{"gitId":"-"},"content":"         * Therefore, when features in PowerPointSlide is not required, access"},{"lineNumber":26,"author":{"gitId":"-"},"content":"         * slides via PowerPointPresentation.Presentation.Slides;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"         ************************************************************************/"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        private const string CategoryNameBoxSearchPattern \u003d \"[Cc]ategory: *([^\u003c\u003e:\\\"/\\\\\\\\|?*]+)\";"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        private const string CategoryNameFormat \u003d \"Category: {0}\";"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        private const string DefaultSlideNameSearchPattern \u003d @\"[Ss]lide ?\\d+\";"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        private const string DuplicateShapeSuffixFormat \u003d \"(duplicate shape {0})\";"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        private const string GroupSelectionNameFormat \u003d \"Group {0} Seq_{1}\";"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        private const string GroupSelectionNamePattern \u003d @\"^Group ([\\w\\s]+) Seq_(\\d+)$\";"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        private const string NameSearchPattern \u003d @\"^Group {0} Seq_(\\d+)$|^{1}$\";"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        private const string NameExtractionPatternFormat \u003d @\"^Group ({0}(?: \\d+)*) Seq_\\d+$|^({1}(?: \\d+)*)$\";"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        private const string ShapeGalleryFileExtension \u003d \".pptlabsshapes\";"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        private const string UntitledCategoryNameFormat \u003d \"Untitled Category {0}\";"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        private const int MaxUndoAmount \u003d 20;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        "},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private PowerPointSlide _defaultCategory;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        private readonly List\u003cShape\u003e _categoryNameBoxCollection \u003d new List\u003cShape\u003e();"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        # region Properties"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        public List\u003cstring\u003e Categories { get; private set; }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"        public string DefaultCategory"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            get"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                if (_defaultCategory \u003d\u003d null)"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                    return null;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"                return _defaultCategory.Name;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            set"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                FindCategoryIndex(value, true);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        public string ImportToCategory { get; set; }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        public bool IsImportedFile { get; set; }"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        # endregion"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        # region Constructor"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        public PowerPointShapeGalleryPresentation(string path, string name) : base(path, name)"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            Categories \u003d new List\u003cstring\u003e();"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        public PowerPointShapeGalleryPresentation(Presentation presentation) : base(presentation)"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            Categories \u003d new List\u003cstring\u003e();"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        # endregion"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"        # region API"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        /// Remember to lock/release clipboard when using from clipboard!"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void AddCategory(string name, bool setAsDefault \u003d true, bool fromClipBoard \u003d false)"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            int index \u003d FindCategoryIndex(name, setAsDefault);"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"            // the category already exists"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            if (index !\u003d -1)"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"            // ppLayoutBlank causes an error, so we use ppLayoutText instead and manually remove the"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            // place holders"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            PowerPointSlide newSlide \u003d AddSlide(name: name);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            newSlide.DeleteAllShapes();"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Shape categoryNameBox;"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"            if (fromClipBoard)"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                if (!PPLClipboard.Instance.IsLocked)"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                    throw new Exception(\"Clipboard is not locked before pasting!\");"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                newSlide.Shapes.Paste();"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                categoryNameBox \u003d RetrieveCategoryNameBox(newSlide);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                categoryNameBox \u003d newSlide.Shapes.AddTextbox(Office.MsoTextOrientation.msoTextOrientationHorizontal, 0, 0,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                                                             SlideWidth, 0);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                categoryNameBox.TextFrame.TextRange.Text \u003d string.Format(CategoryNameFormat, name);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"            Categories.Add(name);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            _categoryNameBoxCollection.Add(categoryNameBox);"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (setAsDefault)"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                _defaultCategory \u003d newSlide;"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"            Save();"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            FlushUndoHistory();"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public string AddShape(PowerPointPresentation pres, PowerPointSlide origSlide, ShapeRange shapeRange, string name, string category \u003d \"\", bool fromClipBoard \u003d false)"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            if (!fromClipBoard)"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                return ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                    return PPLClipboard.Instance.LockAndRelease(() \u003d\u003e"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                        shapeRange.Copy();"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                        return AddShape(name, category);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                    });"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                }, pres, origSlide);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                if (!PPLClipboard.Instance.IsLocked)"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                    throw new Exception(\"Clipboard is not locked before copying!\");"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"                return AddShape(name, category);"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public override void Close()"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            base.Close();"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"            RetrieveShapeGalleryFile();"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void CopyCategory(string name)"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            if (!PPLClipboard.Instance.IsLocked)"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                throw new Exception(\"Clipboard is not locked before copying!\");"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            int index \u003d FindCategoryIndex(name);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            Presentation.Slides[index].Shapes.Range().Copy();"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void CopyShape()"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            if (!PPLClipboard.Instance.IsLocked)"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                throw new Exception(\"Clipboard is not locked before copying!\");"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            _defaultCategory.Shapes.Range().Copy();"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public void CopyShape(string name)"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            if (!PPLClipboard.Instance.IsLocked)"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                throw new Exception(\"Clipboard is not locked before copying!\");"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e shapes \u003d _defaultCategory.GetShapesWithRule(GenerateNameSearchPattern(name));"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"            _defaultCategory.Shapes.Range(shapes.Select(item \u003d\u003e item.Name).ToArray()).Copy();"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public void CopyShape(IEnumerable\u003cstring\u003e nameList)"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            if (!PPLClipboard.Instance.IsLocked)"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                throw new Exception(\"Clipboard is not locked before copying!\");"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            List\u003cstring\u003e fullList \u003d new List\u003cstring\u003e();"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"            foreach (string name in nameList)"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                fullList.AddRange(_defaultCategory.GetShapesWithRule(GenerateNameSearchPattern(name))"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                                                  .Select(item \u003d\u003e item.Name));"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"            _defaultCategory.Shapes.Range(fullList.ToArray()).Copy();"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public void CopyShapeToCategory(PowerPointPresentation pres, PowerPointSlide origSlide, string name, string categoryName)"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            int index \u003d FindCategoryIndex(categoryName);"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"            if (index \u003d\u003d -1)"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"            // copy a shape with name from default category to another category"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e shapes \u003d _defaultCategory.GetShapesWithRule(GenerateNameSearchPattern(name));"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            PowerPointSlide destCategory \u003d Slides[index - 1];"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"            ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                ShapeRange result \u003d PPLClipboard.Instance.LockAndRelease(() \u003d\u003e"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    _defaultCategory.Shapes.Range(shapes.Select(item \u003d\u003e item.Name).ToArray()).Copy();"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    return destCategory.Shapes.Paste();"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                });"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                return result;"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            }, pres, origSlide);"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"            Save();"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            FlushUndoHistory();"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":233,"author":{"gitId":"-"},"content":""},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public bool HasCategory(string name)"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            return Slides.Any(category \u003d\u003e category.Name \u003d\u003d name);"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public void MoveShapeToCategory(PowerPointPresentation pres, PowerPointSlide origSlide, string name, string categoryName)"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            int index \u003d FindCategoryIndex(categoryName);"},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"-"},"content":"            if (index \u003d\u003d -1)"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"            // move a shape with name from default category to another category"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e shapes \u003d _defaultCategory.GetShapesWithRule(GenerateNameSearchPattern(name));"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            PowerPointSlide destCategory \u003d Slides[index - 1];"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"            ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                ShapeRange result \u003d PPLClipboard.Instance.LockAndRelease(() \u003d\u003e"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                    _defaultCategory.Shapes.Range(shapes.Select(item \u003d\u003e item.Name).ToArray()).Cut();"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                    return destCategory.Shapes.Paste();"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                });"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                return result;"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            }, pres, origSlide);"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"            Save();"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            FlushUndoHistory();"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public override bool Open(bool readOnly \u003d false, bool untitled \u003d false,"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                                  bool withWindow \u003d true, bool focus \u003d true)"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            RetrievePptxFile();"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"            // if we can\u0027t even open the file, return false"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            if (!base.Open(readOnly, untitled, withWindow, focus))"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"            if (!ConsistencyCheck())"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":281,"author":{"gitId":"-"},"content":""},{"lineNumber":282,"author":{"gitId":"-"},"content":"            // set default category to be the first slide, but do nothing if the presentation"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            // has no slide, i.e. it\u0027s a newly created presentation"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            if (Presentation.Slides.Count \u003e 0)"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                _defaultCategory \u003d PowerPointSlide.FromSlideFactory(Presentation.Slides[1]);  "},{"lineNumber":287,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":291,"author":{"gitId":"-"},"content":""},{"lineNumber":292,"author":{"gitId":"-"},"content":"        public void RemoveCategory()"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            // we need to change the index to 0-based in order to remove from Categories"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            int index \u003d FindCategoryIndex(_defaultCategory.Name) - 1;"},{"lineNumber":296,"author":{"gitId":"-"},"content":""},{"lineNumber":297,"author":{"gitId":"-"},"content":"            _defaultCategory \u003d null;"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            "},{"lineNumber":299,"author":{"gitId":"-"},"content":"            Categories.RemoveAt(index);"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            _categoryNameBoxCollection.RemoveAt(index);"},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"-"},"content":"            RemoveSlide(index);"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"            Save();"},{"lineNumber":305,"author":{"gitId":"-"},"content":"            FlushUndoHistory();"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":307,"author":{"gitId":"-"},"content":""},{"lineNumber":308,"author":{"gitId":"-"},"content":"        public void RemoveShape(string name)"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            _defaultCategory.DeleteShapeWithRule(GenerateNameSearchPattern(name));"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            "},{"lineNumber":312,"author":{"gitId":"-"},"content":"            Save();"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            FlushUndoHistory();"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"        public void RenameShape(string oldName, string newName)"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":318,"author":{"gitId":"-"},"content":"            Regex nameRegex \u003d GenerateNameSearchPattern(oldName);"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            Regex replaceRegex \u003d new Regex(oldName);"},{"lineNumber":320,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e shapes \u003d _defaultCategory.GetShapesWithRule(nameRegex);"},{"lineNumber":321,"author":{"gitId":"-"},"content":""},{"lineNumber":322,"author":{"gitId":"-"},"content":"            foreach (Shape shape in shapes)"},{"lineNumber":323,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                shape.Name \u003d replaceRegex.Replace(shape.Name, newName);"},{"lineNumber":325,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"            Save();"},{"lineNumber":328,"author":{"gitId":"-"},"content":"            FlushUndoHistory();"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"        public void RenameCategory(string newName)"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":333,"author":{"gitId":"-"},"content":"            Categories[_defaultCategory.Index - 1] \u003d newName;"},{"lineNumber":334,"author":{"gitId":"-"},"content":"            _defaultCategory.Name \u003d newName;"},{"lineNumber":335,"author":{"gitId":"-"},"content":""},{"lineNumber":336,"author":{"gitId":"-"},"content":"            Shape categoryNameBox \u003d _categoryNameBoxCollection[_defaultCategory.Index - 1];"},{"lineNumber":337,"author":{"gitId":"-"},"content":"            categoryNameBox.TextFrame.TextRange.Text \u003d string.Format(CategoryNameFormat, newName);"},{"lineNumber":338,"author":{"gitId":"-"},"content":""},{"lineNumber":339,"author":{"gitId":"-"},"content":"            Save();"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            FlushUndoHistory();"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        # endregion"},{"lineNumber":343,"author":{"gitId":"-"},"content":""},{"lineNumber":344,"author":{"gitId":"-"},"content":"        # region Helper Function"},{"lineNumber":345,"author":{"gitId":"-"},"content":""},{"lineNumber":346,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        /// Flushes the undo history with a dummy action."},{"lineNumber":348,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        private void FlushUndoHistory()"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":351,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c MaxUndoAmount; i++)"},{"lineNumber":352,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":353,"author":{"gitId":"-"},"content":"                Presentation.Slides[1].Background.Fill.BackColor \u003d Presentation.Slides[1].Background.Fill.BackColor;"},{"lineNumber":354,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":356,"author":{"gitId":"-"},"content":""},{"lineNumber":357,"author":{"gitId":"-"},"content":"        private bool ConsistencyCheck()"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":359,"author":{"gitId":"-"},"content":"            // if the opening ShapeGallery is a single shape file, or if there\u0027s no slide,"},{"lineNumber":360,"author":{"gitId":"-"},"content":"            // the file is always valid"},{"lineNumber":361,"author":{"gitId":"-"},"content":"            return (IsImportedFile \u0026\u0026 !string.IsNullOrEmpty(ImportToCategory)) ||"},{"lineNumber":362,"author":{"gitId":"-"},"content":"                   SlideCount \u003c 1 ||"},{"lineNumber":363,"author":{"gitId":"-"},"content":"                   InitCategories();"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"        private Shape ConsistencyCheckCategoryNameBox(PowerPointSlide category, ref int untitledCategoryCnt)"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":368,"author":{"gitId":"-"},"content":"            Shape categoryNameBox \u003d RetrieveCategoryNameBox(category);"},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"-"},"content":"            if (categoryNameBox !\u003d null)"},{"lineNumber":371,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":372,"author":{"gitId":"-"},"content":"                category.Name \u003d RetrieveCategoryName(categoryNameBox);"},{"lineNumber":373,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":374,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":375,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":376,"author":{"gitId":"-"},"content":"                // if we do not have a name box inside, we have 3 cases:"},{"lineNumber":377,"author":{"gitId":"-"},"content":"                // 1. slide.Name has been configured (old ShapeGallery file);"},{"lineNumber":378,"author":{"gitId":"-"},"content":"                // 2. slide.Name is default (user didn\u0027t specify a name)."},{"lineNumber":379,"author":{"gitId":"-"},"content":""},{"lineNumber":380,"author":{"gitId":"-"},"content":"                // for case 1 \u0026 2, we need to add a new text box into the slie."},{"lineNumber":381,"author":{"gitId":"-"},"content":"                // For case 1, the text of category box should be slide.Name;"},{"lineNumber":382,"author":{"gitId":"-"},"content":"                // For case 2, the text of category box should be next untitled name;"},{"lineNumber":383,"author":{"gitId":"-"},"content":"                categoryNameBox \u003d category.Shapes.AddTextbox(Office.MsoTextOrientation.msoTextOrientationHorizontal, 0, 0,"},{"lineNumber":384,"author":{"gitId":"-"},"content":"                                                             SlideWidth, 0);"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"                Regex defaultSlideNameRegex \u003d new Regex(DefaultSlideNameSearchPattern);"},{"lineNumber":387,"author":{"gitId":"-"},"content":""},{"lineNumber":388,"author":{"gitId":"-"},"content":"                if (defaultSlideNameRegex.IsMatch(category.Name))"},{"lineNumber":389,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":390,"author":{"gitId":"-"},"content":"                    untitledCategoryCnt++;"},{"lineNumber":391,"author":{"gitId":"-"},"content":"                    "},{"lineNumber":392,"author":{"gitId":"-"},"content":"                    string untitledName \u003d string.Format(UntitledCategoryNameFormat, untitledCategoryCnt);"},{"lineNumber":393,"author":{"gitId":"-"},"content":"                    category.Name \u003d untitledName;"},{"lineNumber":394,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"-"},"content":"                categoryNameBox.TextFrame.TextRange.Text \u003d string.Format(CategoryNameFormat, category.Name);"},{"lineNumber":397,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":398,"author":{"gitId":"-"},"content":""},{"lineNumber":399,"author":{"gitId":"-"},"content":"            _categoryNameBoxCollection.Add(categoryNameBox);"},{"lineNumber":400,"author":{"gitId":"-"},"content":"            "},{"lineNumber":401,"author":{"gitId":"-"},"content":"            return categoryNameBox;"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":403,"author":{"gitId":"-"},"content":""},{"lineNumber":404,"author":{"gitId":"-"},"content":"        private bool ConsistencyCheckCategoryLocalToSlide()"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":406,"author":{"gitId":"-"},"content":"            List\u003cstring\u003e categoriesOnDisk \u003d Directory.EnumerateDirectories(Path).ToList();"},{"lineNumber":407,"author":{"gitId":"-"},"content":"            bool categoryLost \u003d false;"},{"lineNumber":408,"author":{"gitId":"-"},"content":""},{"lineNumber":409,"author":{"gitId":"-"},"content":"            foreach (string categoryPath in categoriesOnDisk)"},{"lineNumber":410,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":411,"author":{"gitId":"-"},"content":"                string categoryName \u003d new DirectoryInfo(categoryPath).Name;"},{"lineNumber":412,"author":{"gitId":"-"},"content":""},{"lineNumber":413,"author":{"gitId":"-"},"content":"                if (Slides.All(category \u003d\u003e category.Name.ToLower() !\u003d categoryName.ToLower()))"},{"lineNumber":414,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":415,"author":{"gitId":"-"},"content":"                    categoryLost \u003d true;"},{"lineNumber":416,"author":{"gitId":"ccyccyccy"},"content":"                    AddCategory(categoryName, false, false);"},{"lineNumber":417,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":418,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":419,"author":{"gitId":"-"},"content":""},{"lineNumber":420,"author":{"gitId":"-"},"content":"            return categoryLost;"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":422,"author":{"gitId":"-"},"content":""},{"lineNumber":423,"author":{"gitId":"-"},"content":"        private string ConsistencyCheckCategorySlideToLocal(PowerPointSlide category)"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":425,"author":{"gitId":"-"},"content":"            string categoryFolderPath \u003d System.IO.Path.Combine(Path, category.Name);"},{"lineNumber":426,"author":{"gitId":"-"},"content":"            string newCategoryPath \u003d categoryFolderPath;"},{"lineNumber":427,"author":{"gitId":"-"},"content":""},{"lineNumber":428,"author":{"gitId":"-"},"content":"            // the category is some how lost on the disk, regenerate the category"},{"lineNumber":429,"author":{"gitId":"-"},"content":"            if (!Directory.Exists(categoryFolderPath))"},{"lineNumber":430,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":431,"author":{"gitId":"-"},"content":"                // create the directory, since shape reconstruction will be taken care"},{"lineNumber":432,"author":{"gitId":"-"},"content":"                // of during ConsistencyCheckShapeToPng(), we do not need to generate"},{"lineNumber":433,"author":{"gitId":"-"},"content":"                // the shapes here"},{"lineNumber":434,"author":{"gitId":"-"},"content":"                Directory.CreateDirectory(categoryFolderPath);"},{"lineNumber":435,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":436,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":437,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":438,"author":{"gitId":"-"},"content":"                // in case some of categories to be imported have the same name as those"},{"lineNumber":439,"author":{"gitId":"-"},"content":"                // already exist categories"},{"lineNumber":440,"author":{"gitId":"-"},"content":"                if (IsImportedFile)"},{"lineNumber":441,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":442,"author":{"gitId":"-"},"content":"                    int duplicateCnt \u003d 1;"},{"lineNumber":443,"author":{"gitId":"-"},"content":"                    string oriCategoryName \u003d newCategoryPath;"},{"lineNumber":444,"author":{"gitId":"-"},"content":""},{"lineNumber":445,"author":{"gitId":"-"},"content":"                    while (Directory.Exists(newCategoryPath))"},{"lineNumber":446,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":447,"author":{"gitId":"-"},"content":"                        newCategoryPath \u003d oriCategoryName + \" \" + duplicateCnt;"},{"lineNumber":448,"author":{"gitId":"-"},"content":"                        duplicateCnt++;"},{"lineNumber":449,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":450,"author":{"gitId":"-"},"content":""},{"lineNumber":451,"author":{"gitId":"-"},"content":"                    Directory.CreateDirectory(newCategoryPath);"},{"lineNumber":452,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":453,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":454,"author":{"gitId":"-"},"content":""},{"lineNumber":455,"author":{"gitId":"-"},"content":"            return newCategoryPath;"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":457,"author":{"gitId":"-"},"content":""},{"lineNumber":458,"author":{"gitId":"-"},"content":"        private bool ConsistencyCheckPngToShape(IEnumerable\u003cstring\u003e pngShapes, PowerPointSlide category)"},{"lineNumber":459,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":460,"author":{"gitId":"-"},"content":"            // if some png could not be found in shape gallery, we will delete it"},{"lineNumber":461,"author":{"gitId":"-"},"content":"            // to save space"},{"lineNumber":462,"author":{"gitId":"-"},"content":"            bool shapeLost \u003d false;"},{"lineNumber":463,"author":{"gitId":"-"},"content":""},{"lineNumber":464,"author":{"gitId":"-"},"content":"            foreach (string pngShape in pngShapes)"},{"lineNumber":465,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":466,"author":{"gitId":"-"},"content":"                string shapeName \u003d System.IO.Path.GetFileNameWithoutExtension(pngShape);"},{"lineNumber":467,"author":{"gitId":"-"},"content":"                Regex searchPattern \u003d GenerateNameSearchPattern(shapeName);"},{"lineNumber":468,"author":{"gitId":"-"},"content":"                bool found \u003d category.HasShapeWithRule(searchPattern);"},{"lineNumber":469,"author":{"gitId":"-"},"content":""},{"lineNumber":470,"author":{"gitId":"-"},"content":"                if (!found)"},{"lineNumber":471,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":472,"author":{"gitId":"-"},"content":"                    shapeLost \u003d true;"},{"lineNumber":473,"author":{"gitId":"-"},"content":"                    File.Delete(pngShape);"},{"lineNumber":474,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":475,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":476,"author":{"gitId":"-"},"content":""},{"lineNumber":477,"author":{"gitId":"-"},"content":"            return shapeLost;"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":479,"author":{"gitId":"-"},"content":""},{"lineNumber":480,"author":{"gitId":"-"},"content":"        private bool ConsistencyCheckSelf()"},{"lineNumber":481,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":482,"author":{"gitId":"-"},"content":"            bool shapeDuplicate \u003d false;"},{"lineNumber":483,"author":{"gitId":"-"},"content":""},{"lineNumber":484,"author":{"gitId":"-"},"content":"            // we have 3 cases here:"},{"lineNumber":485,"author":{"gitId":"-"},"content":"            // 1. Open ShapeGallery;"},{"lineNumber":486,"author":{"gitId":"-"},"content":"            // 2. Open a ShapeGallery via ImportCategory;"},{"lineNumber":487,"author":{"gitId":"-"},"content":""},{"lineNumber":488,"author":{"gitId":"-"},"content":"            // For both cases, if inconsistency is found, we keep all the shapes but"},{"lineNumber":489,"author":{"gitId":"-"},"content":"            // append \"(recovered shape X)\" to the shape name, X is the relative index"},{"lineNumber":490,"author":{"gitId":"-"},"content":"            // Note: point 2 is not needed, becuase all no-png shapes will be exported"},{"lineNumber":491,"author":{"gitId":"-"},"content":"            // during ConsistencyCheckShapeToPng, and pngs without a corresponding shape"},{"lineNumber":492,"author":{"gitId":"-"},"content":"            // will be deleted during ConsistencyCheckPngToShape."},{"lineNumber":493,"author":{"gitId":"-"},"content":"            foreach (PowerPointSlide category in Slides)"},{"lineNumber":494,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":495,"author":{"gitId":"-"},"content":"                Dictionary\u003cstring, int\u003e shapeHash \u003d new Dictionary\u003cstring, int\u003e();"},{"lineNumber":496,"author":{"gitId":"-"},"content":"                List\u003cShape\u003e shapes \u003d category.Shapes.Cast\u003cShape\u003e().ToList();"},{"lineNumber":497,"author":{"gitId":"-"},"content":"                List\u003cstring\u003e duplicateShapeNames \u003d new List\u003cstring\u003e();"},{"lineNumber":498,"author":{"gitId":"-"},"content":""},{"lineNumber":499,"author":{"gitId":"-"},"content":"                foreach (Shape shape in shapes)"},{"lineNumber":500,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":501,"author":{"gitId":"-"},"content":"                    if (shapeHash.Count \u003d\u003d 0 ||"},{"lineNumber":502,"author":{"gitId":"-"},"content":"                        !shapeHash.ContainsKey(shape.Name))"},{"lineNumber":503,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":504,"author":{"gitId":"-"},"content":"                        shapeHash[shape.Name] \u003d 1;"},{"lineNumber":505,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":506,"author":{"gitId":"-"},"content":"                    else"},{"lineNumber":507,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":508,"author":{"gitId":"-"},"content":"                        int index \u003d (shapeHash[shape.Name] +\u003d 1);"},{"lineNumber":509,"author":{"gitId":"-"},"content":""},{"lineNumber":510,"author":{"gitId":"-"},"content":"                        // add to collection only if this shape is the first duplicate shape"},{"lineNumber":511,"author":{"gitId":"-"},"content":"                        if (index \u003d\u003d 2)"},{"lineNumber":512,"author":{"gitId":"-"},"content":"                        {"},{"lineNumber":513,"author":{"gitId":"-"},"content":"                            duplicateShapeNames.Add(shape.Name);"},{"lineNumber":514,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":515,"author":{"gitId":"-"},"content":""},{"lineNumber":516,"author":{"gitId":"-"},"content":"                        shape.Name +\u003d string.Format(DuplicateShapeSuffixFormat, index);"},{"lineNumber":517,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":518,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":519,"author":{"gitId":"-"},"content":""},{"lineNumber":520,"author":{"gitId":"-"},"content":"                shapeDuplicate \u003d duplicateShapeNames.Count \u003e 0;"},{"lineNumber":521,"author":{"gitId":"-"},"content":""},{"lineNumber":522,"author":{"gitId":"-"},"content":"                foreach (string lastShapeName in duplicateShapeNames)"},{"lineNumber":523,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":524,"author":{"gitId":"-"},"content":"                    Shape lastShape \u003d category.GetShapeWithName(lastShapeName)[0];"},{"lineNumber":525,"author":{"gitId":"-"},"content":""},{"lineNumber":526,"author":{"gitId":"-"},"content":"                    lastShape.Name +\u003d string.Format(DuplicateShapeSuffixFormat, 1);"},{"lineNumber":527,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":528,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":529,"author":{"gitId":"-"},"content":""},{"lineNumber":530,"author":{"gitId":"-"},"content":"            return shapeDuplicate;"},{"lineNumber":531,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":532,"author":{"gitId":"-"},"content":""},{"lineNumber":533,"author":{"gitId":"-"},"content":"        private bool ConsistencyCheckShapeToPng(List\u003cstring\u003e pngShapes, PowerPointSlide category, string shapeFolderPath)"},{"lineNumber":534,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":535,"author":{"gitId":"-"},"content":"            // if inconsistency is found, we export the extra shape to .png"},{"lineNumber":536,"author":{"gitId":"-"},"content":"            bool shapeLost \u003d false;"},{"lineNumber":537,"author":{"gitId":"-"},"content":"            Regex groupSelectNamePattern \u003d new Regex(GroupSelectionNamePattern);"},{"lineNumber":538,"author":{"gitId":"-"},"content":""},{"lineNumber":539,"author":{"gitId":"-"},"content":"            // this is to handle 2 cases:"},{"lineNumber":540,"author":{"gitId":"-"},"content":"            // 1. user deleted the .png shape accidentally;"},{"lineNumber":541,"author":{"gitId":"-"},"content":"            // 2. the file is imported"},{"lineNumber":542,"author":{"gitId":"-"},"content":"            foreach (Shape shape in category.Shapes)"},{"lineNumber":543,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":544,"author":{"gitId":"-"},"content":"                // skip category name box"},{"lineNumber":545,"author":{"gitId":"-"},"content":"                if (shape.Type \u003d\u003d Office.MsoShapeType.msoTextBox \u0026\u0026"},{"lineNumber":546,"author":{"gitId":"-"},"content":"                    _categoryNameBoxCollection.Contains(shape))"},{"lineNumber":547,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":548,"author":{"gitId":"-"},"content":"                    continue;"},{"lineNumber":549,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":550,"author":{"gitId":"-"},"content":""},{"lineNumber":551,"author":{"gitId":"-"},"content":"                string name \u003d shape.Name;"},{"lineNumber":552,"author":{"gitId":"-"},"content":""},{"lineNumber":553,"author":{"gitId":"-"},"content":"                //check for sequence grouped shape"},{"lineNumber":554,"author":{"gitId":"-"},"content":"                if (groupSelectNamePattern.IsMatch(name))"},{"lineNumber":555,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":556,"author":{"gitId":"-"},"content":"                    name \u003d groupSelectNamePattern.Match(name).Groups[1].Value;"},{"lineNumber":557,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":558,"author":{"gitId":"-"},"content":""},{"lineNumber":559,"author":{"gitId":"-"},"content":"                string shapePath \u003d shapeFolderPath + @\"\\\" + name + \".png\";"},{"lineNumber":560,"author":{"gitId":"-"},"content":""},{"lineNumber":561,"author":{"gitId":"-"},"content":"                if (!pngShapes.Contains(shapePath))"},{"lineNumber":562,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":563,"author":{"gitId":"-"},"content":"                    GraphicsUtil.ExportShape(shape, shapePath);"},{"lineNumber":564,"author":{"gitId":"-"},"content":"                    shapeLost \u003d true;"},{"lineNumber":565,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":566,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":567,"author":{"gitId":"-"},"content":""},{"lineNumber":568,"author":{"gitId":"-"},"content":"            return shapeLost;"},{"lineNumber":569,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":570,"author":{"gitId":"-"},"content":""},{"lineNumber":571,"author":{"gitId":"-"},"content":"        private int FindCategoryIndex(string categoryName, bool setAsDefault \u003d false)"},{"lineNumber":572,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":573,"author":{"gitId":"-"},"content":"            int index \u003d -1;"},{"lineNumber":574,"author":{"gitId":"-"},"content":""},{"lineNumber":575,"author":{"gitId":"-"},"content":"            foreach (PowerPointSlide category in Slides)"},{"lineNumber":576,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":577,"author":{"gitId":"-"},"content":"                if (category.Name \u003d\u003d categoryName)"},{"lineNumber":578,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":579,"author":{"gitId":"-"},"content":"                    index \u003d category.Index;"},{"lineNumber":580,"author":{"gitId":"-"},"content":""},{"lineNumber":581,"author":{"gitId":"-"},"content":"                    if (setAsDefault)"},{"lineNumber":582,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":583,"author":{"gitId":"-"},"content":"                        _defaultCategory \u003d category;"},{"lineNumber":584,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":585,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":586,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":587,"author":{"gitId":"-"},"content":""},{"lineNumber":588,"author":{"gitId":"-"},"content":"            return index;"},{"lineNumber":589,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":590,"author":{"gitId":"-"},"content":""},{"lineNumber":591,"author":{"gitId":"-"},"content":"        private Regex GenerateNameSearchPattern(string name)"},{"lineNumber":592,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":593,"author":{"gitId":"-"},"content":"            string skippedName \u003d CommonUtil.SkipRegexCharacter(name);"},{"lineNumber":594,"author":{"gitId":"-"},"content":"            string searchPattern \u003d string.Format(NameSearchPattern, skippedName, skippedName);"},{"lineNumber":595,"author":{"gitId":"-"},"content":"            return new Regex(searchPattern);"},{"lineNumber":596,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":597,"author":{"gitId":"-"},"content":""},{"lineNumber":598,"author":{"gitId":"-"},"content":"        private bool InitCategories()"},{"lineNumber":599,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":600,"author":{"gitId":"-"},"content":"            // here we need to check 3 cases:"},{"lineNumber":601,"author":{"gitId":"-"},"content":"            // 1. self consistency check (if there are any duplicate names);"},{"lineNumber":602,"author":{"gitId":"-"},"content":"            // 2. more png than shapes inside pptx (shapes for short);"},{"lineNumber":603,"author":{"gitId":"-"},"content":"            // 3. more shapes than png."},{"lineNumber":604,"author":{"gitId":"-"},"content":""},{"lineNumber":605,"author":{"gitId":"-"},"content":"            bool shapeDuplicate \u003d ConsistencyCheckSelf();"},{"lineNumber":606,"author":{"gitId":"-"},"content":"            bool shapeLost \u003d false;"},{"lineNumber":607,"author":{"gitId":"-"},"content":"            bool pngLost \u003d false;"},{"lineNumber":608,"author":{"gitId":"-"},"content":"            int untitledCategoryCnt \u003d 0;"},{"lineNumber":609,"author":{"gitId":"-"},"content":"            List\u003cPowerPointSlide\u003e slides \u003d Slides;"},{"lineNumber":610,"author":{"gitId":"-"},"content":""},{"lineNumber":611,"author":{"gitId":"-"},"content":"            for (int i \u003d Slides.Count - 1; i \u003e\u003d 0; i--)"},{"lineNumber":612,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":613,"author":{"gitId":"-"},"content":"                PowerPointSlide category \u003d Slides[i];"},{"lineNumber":614,"author":{"gitId":"-"},"content":"                Shape categoryNameBox \u003d ConsistencyCheckCategoryNameBox(category, ref untitledCategoryCnt);"},{"lineNumber":615,"author":{"gitId":"-"},"content":""},{"lineNumber":616,"author":{"gitId":"-"},"content":"                // check if we have a corresponding category directory in the Path"},{"lineNumber":617,"author":{"gitId":"-"},"content":"                string shapeFolderPath;"},{"lineNumber":618,"author":{"gitId":"-"},"content":"                try"},{"lineNumber":619,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":620,"author":{"gitId":"-"},"content":"                    shapeFolderPath \u003d ConsistencyCheckCategorySlideToLocal(category);"},{"lineNumber":621,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":622,"author":{"gitId":"-"},"content":"                catch (Exception)"},{"lineNumber":623,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":624,"author":{"gitId":"-"},"content":"                    // Unable to get shape folder path. Store the problematic category and continue"},{"lineNumber":625,"author":{"gitId":"-"},"content":"                    // Actual slide index starts from 1, but is accounted for in PowerPointPresentation.removeSlide(int)."},{"lineNumber":626,"author":{"gitId":"-"},"content":"                    RemoveSlide(i);"},{"lineNumber":627,"author":{"gitId":"-"},"content":"                    continue;"},{"lineNumber":628,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":629,"author":{"gitId":"-"},"content":"                string finalCategoryName \u003d new DirectoryInfo(shapeFolderPath).Name;"},{"lineNumber":630,"author":{"gitId":"-"},"content":""},{"lineNumber":631,"author":{"gitId":"-"},"content":"                List\u003cstring\u003e pngShapes \u003d Directory.EnumerateFiles(shapeFolderPath, \"*.png\").ToList();"},{"lineNumber":632,"author":{"gitId":"-"},"content":""},{"lineNumber":633,"author":{"gitId":"-"},"content":"                // critical: OR with itself at the end to avoid early termination"},{"lineNumber":634,"author":{"gitId":"-"},"content":"                shapeLost \u003d ConsistencyCheckShapeToPng(pngShapes, category, shapeFolderPath) || shapeLost;"},{"lineNumber":635,"author":{"gitId":"-"},"content":"                pngLost \u003d ConsistencyCheckPngToShape(pngShapes, category) || pngLost;"},{"lineNumber":636,"author":{"gitId":"-"},"content":""},{"lineNumber":637,"author":{"gitId":"-"},"content":"                // update names only when the name gets changed"},{"lineNumber":638,"author":{"gitId":"-"},"content":"                if (category.Name !\u003d finalCategoryName)"},{"lineNumber":639,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":640,"author":{"gitId":"-"},"content":"                    category.Name \u003d finalCategoryName;"},{"lineNumber":641,"author":{"gitId":"-"},"content":"                    categoryNameBox.TextFrame.TextRange.Text \u003d string.Format(CategoryNameFormat, finalCategoryName);"},{"lineNumber":642,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":643,"author":{"gitId":"-"},"content":""},{"lineNumber":644,"author":{"gitId":"-"},"content":"                Categories.Add(finalCategoryName);"},{"lineNumber":645,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":646,"author":{"gitId":"-"},"content":""},{"lineNumber":647,"author":{"gitId":"-"},"content":"            bool categoryInShapeGalleryLost \u003d ConsistencyCheckCategoryLocalToSlide();"},{"lineNumber":648,"author":{"gitId":"-"},"content":""},{"lineNumber":649,"author":{"gitId":"-"},"content":"            Save();"},{"lineNumber":650,"author":{"gitId":"-"},"content":""},{"lineNumber":651,"author":{"gitId":"-"},"content":"            if ((shapeDuplicate || shapeLost || categoryInShapeGalleryLost || pngLost) \u0026\u0026"},{"lineNumber":652,"author":{"gitId":"-"},"content":"                !IsImportedFile)"},{"lineNumber":653,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":654,"author":{"gitId":"-"},"content":"                MessageBox.Show(ShapesLabText.ErrorShapeCorrupted);"},{"lineNumber":655,"author":{"gitId":"-"},"content":""},{"lineNumber":656,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":657,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":658,"author":{"gitId":"-"},"content":""},{"lineNumber":659,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":660,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":661,"author":{"gitId":"-"},"content":""},{"lineNumber":662,"author":{"gitId":"-"},"content":"        private string RetrieveCategoryName(Shape categoryNameBox)"},{"lineNumber":663,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":664,"author":{"gitId":"-"},"content":"            Regex categoryNamePattern \u003d new Regex(CategoryNameBoxSearchPattern);"},{"lineNumber":665,"author":{"gitId":"-"},"content":"            Match namePatternMatch \u003d categoryNamePattern.Match(categoryNameBox.TextFrame.TextRange.Text);"},{"lineNumber":666,"author":{"gitId":"-"},"content":"            string categoryName \u003d namePatternMatch.Groups[1].Value;"},{"lineNumber":667,"author":{"gitId":"-"},"content":""},{"lineNumber":668,"author":{"gitId":"-"},"content":"            return categoryName;"},{"lineNumber":669,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":670,"author":{"gitId":"-"},"content":""},{"lineNumber":671,"author":{"gitId":"-"},"content":"        private Shape RetrieveCategoryNameBox(PowerPointSlide slide)"},{"lineNumber":672,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":673,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e nameBoxCandidate \u003d slide.GetShapesWithTypeAndRule(Office.MsoShapeType.msoTextBox, new Regex(\".+\"));"},{"lineNumber":674,"author":{"gitId":"-"},"content":""},{"lineNumber":675,"author":{"gitId":"-"},"content":"            if (nameBoxCandidate.Count \u003d\u003d 0)"},{"lineNumber":676,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":677,"author":{"gitId":"-"},"content":"                return null;"},{"lineNumber":678,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":679,"author":{"gitId":"-"},"content":""},{"lineNumber":680,"author":{"gitId":"-"},"content":"            Regex categoryNamePattern \u003d new Regex(CategoryNameBoxSearchPattern);"},{"lineNumber":681,"author":{"gitId":"-"},"content":""},{"lineNumber":682,"author":{"gitId":"-"},"content":"            // return the first match name box"},{"lineNumber":683,"author":{"gitId":"-"},"content":"            return nameBoxCandidate.FirstOrDefault(x \u003d\u003e categoryNamePattern.IsMatch(x.TextFrame.TextRange.Text));"},{"lineNumber":684,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":685,"author":{"gitId":"-"},"content":""},{"lineNumber":686,"author":{"gitId":"-"},"content":"        private void RetrievePptxFile()"},{"lineNumber":687,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":688,"author":{"gitId":"-"},"content":"            string shapeGalleryFileName \u003d FullName.Replace(\".pptx\", ShapeGalleryFileExtension);"},{"lineNumber":689,"author":{"gitId":"-"},"content":""},{"lineNumber":690,"author":{"gitId":"-"},"content":"            if (File.Exists(shapeGalleryFileName))"},{"lineNumber":691,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":692,"author":{"gitId":"-"},"content":"                File.SetAttributes(shapeGalleryFileName, FileAttributes.Normal);"},{"lineNumber":693,"author":{"gitId":"-"},"content":"                // To ensure that the file fullName does not exist before attempting to move"},{"lineNumber":694,"author":{"gitId":"-"},"content":"                if (!File.Exists(FullName))"},{"lineNumber":695,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":696,"author":{"gitId":"-"},"content":"                    File.Move(shapeGalleryFileName, FullName);"},{"lineNumber":697,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":698,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":699,"author":{"gitId":"-"},"content":""},{"lineNumber":700,"author":{"gitId":"-"},"content":"            if (File.Exists(FullName))"},{"lineNumber":701,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":702,"author":{"gitId":"-"},"content":"                // to reduce the chance that user opens the shape gallery file, we make the pptx file hidden"},{"lineNumber":703,"author":{"gitId":"-"},"content":"                File.SetAttributes(FullName, FileAttributes.Normal);"},{"lineNumber":704,"author":{"gitId":"-"},"content":"                File.SetAttributes(FullName, FileAttributes.Hidden);"},{"lineNumber":705,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":706,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":707,"author":{"gitId":"-"},"content":""},{"lineNumber":708,"author":{"gitId":"-"},"content":"        private void RetrieveShapeGalleryFile()"},{"lineNumber":709,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":710,"author":{"gitId":"-"},"content":"            // set the file as a visible readonly .pptlabsshapes file."},{"lineNumber":711,"author":{"gitId":"-"},"content":"            string shapeGalleryFileName \u003d FullName.Replace(\".pptx\", ShapeGalleryFileExtension);"},{"lineNumber":712,"author":{"gitId":"-"},"content":""},{"lineNumber":713,"author":{"gitId":"-"},"content":"            Trace.TraceInformation(\"FullName \u003d \" + FullName + \", Name \u003d \" + shapeGalleryFileName);"},{"lineNumber":714,"author":{"gitId":"-"},"content":""},{"lineNumber":715,"author":{"gitId":"-"},"content":"            File.Move(FullName, shapeGalleryFileName);"},{"lineNumber":716,"author":{"gitId":"-"},"content":""},{"lineNumber":717,"author":{"gitId":"-"},"content":"            File.SetAttributes(shapeGalleryFileName, FileAttributes.Normal);"},{"lineNumber":718,"author":{"gitId":"-"},"content":"            File.SetAttributes(shapeGalleryFileName, FileAttributes.ReadOnly);"},{"lineNumber":719,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":720,"author":{"gitId":"-"},"content":""},{"lineNumber":721,"author":{"gitId":"-"},"content":"        private string AddShape(string name, string category) "},{"lineNumber":722,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":723,"author":{"gitId":"-"},"content":"            PowerPointSlide categorySlide \u003d _defaultCategory;"},{"lineNumber":724,"author":{"gitId":"-"},"content":""},{"lineNumber":725,"author":{"gitId":"-"},"content":"            if (!string.IsNullOrEmpty(category))"},{"lineNumber":726,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":727,"author":{"gitId":"-"},"content":"                int categoryIndex \u003d FindCategoryIndex(category);"},{"lineNumber":728,"author":{"gitId":"-"},"content":""},{"lineNumber":729,"author":{"gitId":"-"},"content":"                if (categoryIndex \u003d\u003d -1)"},{"lineNumber":730,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":731,"author":{"gitId":"-"},"content":"                    return string.Empty;"},{"lineNumber":732,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":733,"author":{"gitId":"-"},"content":""},{"lineNumber":734,"author":{"gitId":"-"},"content":"                categorySlide \u003d Slides[categoryIndex - 1];"},{"lineNumber":735,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":736,"author":{"gitId":"-"},"content":""},{"lineNumber":737,"author":{"gitId":"-"},"content":"            // check if the name has been used, if used, name it to the next available name"},{"lineNumber":738,"author":{"gitId":"-"},"content":"            if (categorySlide.HasShapeWithRule(GenerateNameSearchPattern(name)))"},{"lineNumber":739,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":740,"author":{"gitId":"-"},"content":"                Regex nameExtractionRegex \u003d new Regex(string.Format(NameExtractionPatternFormat, name, name));"},{"lineNumber":741,"author":{"gitId":"-"},"content":"                List\u003cstring\u003e nameList \u003d categorySlide.GetShapesWithRule(nameExtractionRegex)"},{"lineNumber":742,"author":{"gitId":"-"},"content":"                                            .Select(item \u003d\u003e nameExtractionRegex.Match(item.Name))"},{"lineNumber":743,"author":{"gitId":"-"},"content":"                                            .Select(match \u003d\u003e !string.IsNullOrEmpty(match.Groups[1].Value)"},{"lineNumber":744,"author":{"gitId":"-"},"content":"                                                             ? match.Groups[1].Value"},{"lineNumber":745,"author":{"gitId":"-"},"content":"                                                             : match.Groups[2].Value)"},{"lineNumber":746,"author":{"gitId":"-"},"content":"                                            .Distinct()"},{"lineNumber":747,"author":{"gitId":"-"},"content":"                                            .ToList();"},{"lineNumber":748,"author":{"gitId":"-"},"content":""},{"lineNumber":749,"author":{"gitId":"-"},"content":"                name \u003d CommonUtil.NextAvailableName(nameList, name);"},{"lineNumber":750,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":751,"author":{"gitId":"-"},"content":""},{"lineNumber":752,"author":{"gitId":"-"},"content":"            ShapeRange pastedShapeRange \u003d categorySlide.Shapes.Paste();"},{"lineNumber":753,"author":{"gitId":"-"},"content":""},{"lineNumber":754,"author":{"gitId":"-"},"content":"            if (pastedShapeRange.Count \u003e 1)"},{"lineNumber":755,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":756,"author":{"gitId":"-"},"content":"                for (int nameCount \u003d 1; nameCount \u003c\u003d pastedShapeRange.Count; nameCount++)"},{"lineNumber":757,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":758,"author":{"gitId":"-"},"content":"                    Shape shape \u003d pastedShapeRange[nameCount];"},{"lineNumber":759,"author":{"gitId":"-"},"content":""},{"lineNumber":760,"author":{"gitId":"-"},"content":"                    shape.Name \u003d string.Format(GroupSelectionNameFormat, name, nameCount);"},{"lineNumber":761,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":762,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":763,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":764,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":765,"author":{"gitId":"-"},"content":"                pastedShapeRange[1].Name \u003d name;"},{"lineNumber":766,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":767,"author":{"gitId":"-"},"content":""},{"lineNumber":768,"author":{"gitId":"-"},"content":"            Save();"},{"lineNumber":769,"author":{"gitId":"-"},"content":"            FlushUndoHistory();"},{"lineNumber":770,"author":{"gitId":"-"},"content":""},{"lineNumber":771,"author":{"gitId":"-"},"content":"            return name;"},{"lineNumber":772,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":773,"author":{"gitId":"-"},"content":"        # endregion"},{"lineNumber":774,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":775,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ccyccyccy":1,"-":774}},{"path":"PowerPointLabs/PowerPointLabs/Models/PowerPointSlide.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using System;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"using System.Collections.Generic;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"using System.Globalization;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"using System.IO;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"using System.Linq;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"using System.Runtime.InteropServices;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"using System.Text.RegularExpressions;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"using System.Windows.Forms;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"using Microsoft.Office.Core;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"using Microsoft.Office.Interop.PowerPoint;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Extension;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"using PowerPointLabs.ELearningLab.Service;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"using PowerPointLabs.ELearningLab.Utility;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"using PowerPointLabs.TextCollection;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"using PowerPointLabs.Utils;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"using Office \u003d Microsoft.Office.Core;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"using ShapeRange \u003d Microsoft.Office.Interop.PowerPoint.ShapeRange;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"using Shapes \u003d Microsoft.Office.Interop.PowerPoint.Shapes;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.Models"},{"lineNumber":25,"author":{"gitId":"-"},"content":"{"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public class PowerPointSlide"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"#pragma warning disable 0618"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        public const string PptLabsIndicatorShapeName \u003d \"PPTIndicator\";"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"        protected readonly Slide _slide;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"        private const string PptLabsTemplateMarkerShapeName \u003d \"PPTTemplateMarker\";"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        private const string UnnamedShapeName \u003d \"Unnamed Shape \";"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"        private List\u003cMsoAnimEffect\u003e entryEffects \u003d new List\u003cMsoAnimEffect\u003e()"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            MsoAnimEffect.msoAnimEffectAscend,"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"            MsoAnimEffect.msoAnimEffectAppear, MsoAnimEffect.msoAnimEffectBlinds, MsoAnimEffect.msoAnimEffectBox,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            MsoAnimEffect.msoAnimEffectCheckerboard, MsoAnimEffect.msoAnimEffectCircle, MsoAnimEffect.msoAnimEffectDiamond,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            MsoAnimEffect.msoAnimEffectDissolve, MsoAnimEffect.msoAnimEffectFly, MsoAnimEffect.msoAnimEffectPeek, "},{"lineNumber":43,"author":{"gitId":"-"},"content":"            MsoAnimEffect.msoAnimEffectPlus, MsoAnimEffect.msoAnimEffectRandomBars, MsoAnimEffect.msoAnimEffectSplit,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            MsoAnimEffect.msoAnimEffectStrips, MsoAnimEffect.msoAnimEffectWedge, MsoAnimEffect.msoAnimEffectWheel,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            MsoAnimEffect.msoAnimEffectWipe, MsoAnimEffect.msoAnimEffectExpand, MsoAnimEffect.msoAnimEffectFade,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            MsoAnimEffect.msoAnimEffectFadedSwivel, MsoAnimEffect.msoAnimEffectFadedZoom, MsoAnimEffect.msoAnimEffectZoom,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            MsoAnimEffect.msoAnimEffectCenterRevolve, MsoAnimEffect.msoAnimEffectFloat, MsoAnimEffect.msoAnimEffectGrowAndTurn,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            MsoAnimEffect.msoAnimEffectRiseUp, MsoAnimEffect.msoAnimEffectSpinner, MsoAnimEffect.msoAnimEffectSwivel,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            MsoAnimEffect.msoAnimEffectBoomerang, MsoAnimEffect.msoAnimEffectBounce, MsoAnimEffect.msoAnimEffectCredits,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            MsoAnimEffect.msoAnimEffectFlip, MsoAnimEffect.msoAnimEffectFloat, MsoAnimEffect.msoAnimEffectPinwheel,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            MsoAnimEffect.msoAnimEffectSpiral, MsoAnimEffect.msoAnimEffectWhip"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"        protected PowerPointSlide(Slide slide)"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            _slide \u003d slide;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        public Slide GetNativeSlide()"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return _slide;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        public static PowerPointSlide FromSlideFactory(Slide slide, bool includeIndicator \u003d false)"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            if (slide \u003d\u003d null)"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                return null;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"            PowerPointSlide powerPointSlide;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            if (slide.Name.Contains(\"PPTLabsSpotlight\"))"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                powerPointSlide \u003d PowerPointSpotlightSlide.FromSlideFactory(slide);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            else if (PowerPointAckSlide.IsAckSlide(slide))"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                powerPointSlide \u003d PowerPointAckSlide.FromSlideFactory(slide);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                powerPointSlide \u003d new PowerPointSlide(slide);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"            if (includeIndicator)"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                powerPointSlide.AddPowerPointLabsIndicator();"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return powerPointSlide;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public String NotesPageText"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            get"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                if (_slide \u003d\u003d null || _slide.HasNotesPage \u003d\u003d MsoTriState.msoFalse)"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                    return String.Empty;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"                IEnumerable\u003cShape\u003e notesPagePlaceholders \u003d _slide.NotesPage.Shapes.Placeholders.Cast\u003cShape\u003e();"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                Shape notesPageBody \u003d notesPagePlaceholders.FirstOrDefault(shape \u003d\u003e shape.PlaceholderFormat.Type \u003d\u003d PpPlaceholderType.ppPlaceholderBody);"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"                String notesText \u003d notesPageBody !\u003d null ? notesPageBody.TextFrame.TextRange.Text : String.Empty;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                return notesText;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"            set"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                if (_slide \u003d\u003d null)"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                    return;"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"                IEnumerable\u003cShape\u003e notesPagePlaceholders \u003d _slide.NotesPage.Shapes.Placeholders.Cast\u003cShape\u003e();"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                Shape notesPageBody \u003d notesPagePlaceholders.FirstOrDefault(shape \u003d\u003e shape.PlaceholderFormat.Type \u003d\u003d PpPlaceholderType.ppPlaceholderBody);"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"                if (notesPageBody !\u003d null)"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                    notesPageBody.TextFrame.TextRange.Text \u003d value;"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        /// TODO: escape newlines so that they can be stored properly?"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /// TODO: It is a known problem that if you store a string with newlines in NotesPageText, the retrieved string may be slightly different."},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public void StoreDataInNotes(string data)"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            NotesPageText \u003d CommonText.NotesPageStorageText + data;"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public string RetrieveDataFromNotes()"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            string text \u003d NotesPageText;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            if (!text.StartsWith(CommonText.NotesPageStorageText))"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                return \"\";"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return text.Substring(CommonText.NotesPageStorageText.Length);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public Shapes Shapes"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            get { return _slide.Shapes; }"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public int ID"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            get { return _slide.SlideID; }"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public int Index"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            get { return _slide.SlideIndex; }"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public Design Design"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            get { return _slide.Design; }"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            set { _slide.Design \u003d value; }"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public PpSlideLayout Layout"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            get { return _slide.Layout; }"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            set { _slide.Layout \u003d value; }"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        /// It only copies the background color for now. Is there really no way to copy over background in general?"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public void CopyBackgroundColorFrom(PowerPointSlide refSlide)"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            Microsoft.Office.Interop.PowerPoint.FillFormat myFill \u003d _slide.Background[1].Fill;"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            Microsoft.Office.Interop.PowerPoint.FillFormat refFill \u003d refSlide._slide.Background[1].Fill;"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"            if (refFill.Type \u003d\u003d MsoFillType.msoFillSolid)"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                _slide.FollowMasterBackground \u003d MsoTriState.msoFalse;"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                myFill.ForeColor.RGB \u003d refFill.ForeColor.RGB;"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                myFill.BackColor.RGB \u003d refFill.BackColor.RGB;"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public SlideShowTransition Transition"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            get { return _slide.SlideShowTransition; }"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            set"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                // deep copy set-able fields"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                _slide.SlideShowTransition.AdvanceOnClick \u003d value.AdvanceOnClick;"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                _slide.SlideShowTransition.AdvanceOnTime \u003d value.AdvanceOnTime;"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                _slide.SlideShowTransition.AdvanceTime \u003d value.AdvanceTime;"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                _slide.SlideShowTransition.Duration \u003d value.Duration;"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                _slide.SlideShowTransition.EntryEffect \u003d value.EntryEffect;"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                _slide.SlideShowTransition.Hidden \u003d value.Hidden;"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                _slide.SlideShowTransition.Speed \u003d value.Speed;"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public TimeLine TimeLine"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            get { return _slide.TimeLine; }"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public string Name"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            get { return _slide.Name; }"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            set { _slide.Name \u003d value; }"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public bool Hidden"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            get { return Transition.Hidden \u003d\u003d MsoTriState.msoTrue; }"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            set { Transition.Hidden \u003d value ? MsoTriState.msoTrue : MsoTriState.msoFalse; }"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public void Delete()"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            _slide.Delete();"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public void Copy()"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            _slide.Copy();"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public void MoveTo(int index)"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            _slide.MoveTo(index);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public PowerPointSlide Duplicate()"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            Slide duplicatedSlide \u003d _slide.Duplicate()[1];"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return FromSlideFactory(duplicatedSlide);"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public bool HasAnimationForClick(int clickNumber)"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            Sequence mainSequence \u003d _slide.TimeLine.MainSequence;"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            Effect effect \u003d mainSequence.FindFirstAnimationForClick(clickNumber);"},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"-"},"content":"            return effect !\u003d null;"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public void DeleteShapesWithPrefixTimelineInvariant(string prefix)"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            Sequence mainSequence \u003d _slide.TimeLine.MainSequence;"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            int effectCnt \u003d 1;"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"            while (effectCnt \u003c\u003d mainSequence.Count)"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                Effect effect \u003d mainSequence[effectCnt];"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"                if (effect.Shape.Name.StartsWith(prefix))"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                    // if the shape is triggered on click, delete this may cause problem if the next"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                    // effect is triggered with previous and we want the time sequence to be time"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                    // invariant. To handle it, we need to set the on_prev event to be on_click."},{"lineNumber":264,"author":{"gitId":"-"},"content":"                    if (effect.Timing.TriggerType \u003d\u003d MsoAnimTriggerType.msoAnimTriggerOnPageClick \u0026\u0026"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                        effect.Index + 1 \u003c\u003d mainSequence.Count)"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                        Effect nextEffect \u003d mainSequence[effect.Index + 1];"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"                        if (nextEffect.Timing.TriggerType \u003d\u003d MsoAnimTriggerType.msoAnimTriggerWithPrevious)"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                        {"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                            nextEffect.Timing.TriggerType \u003d MsoAnimTriggerType.msoAnimTriggerOnPageClick;"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"                    effect.Delete();"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                    effectCnt++;"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":"            DeleteShapesWithPrefix(prefix);"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":285,"author":{"gitId":"-"},"content":""},{"lineNumber":286,"author":{"gitId":"-"},"content":"        public void DeleteShapesWithPrefix(string prefix)"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().ToList();"},{"lineNumber":289,"author":{"gitId":"-"},"content":""},{"lineNumber":290,"author":{"gitId":"-"},"content":"            IEnumerable\u003cShape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e current.Name.StartsWith(prefix));"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            "},{"lineNumber":292,"author":{"gitId":"-"},"content":"            foreach (Shape s in matchingShapes)"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                s.SafeDelete();"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"        public void DeleteShapeWithRule(Regex regex)"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().ToList();"},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"-"},"content":"            IEnumerable\u003cShape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e regex.IsMatch(current.Name));"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            foreach (Shape s in matchingShapes)"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                s.SafeDelete();"},{"lineNumber":306,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"-"},"content":"        public void DeleteShapeWithName(string name)"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().ToList();"},{"lineNumber":312,"author":{"gitId":"-"},"content":"            IEnumerable\u003cShape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e current.Name \u003d\u003d name);"},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":"            foreach (Shape s in matchingShapes)"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                s.SafeDelete();"},{"lineNumber":317,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":319,"author":{"gitId":"-"},"content":""},{"lineNumber":320,"author":{"gitId":"-"},"content":"        public void DeleteHiddenShapes()"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":322,"author":{"gitId":"-"},"content":"            _slide.Shapes"},{"lineNumber":323,"author":{"gitId":"-"},"content":"                .Cast\u003cShape\u003e()"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                .Where(sh \u003d\u003e sh.Visible \u003d\u003d MsoTriState.msoFalse)"},{"lineNumber":325,"author":{"gitId":"-"},"content":"                .ToList()"},{"lineNumber":326,"author":{"gitId":"-"},"content":"                .ForEach(sh \u003d\u003e sh.SafeDelete());"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":328,"author":{"gitId":"-"},"content":""},{"lineNumber":329,"author":{"gitId":"-"},"content":"        public void DeleteEntryAnimationShapes()"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":331,"author":{"gitId":"-"},"content":"            IEnumerable\u003cEffect\u003e sequence \u003d _slide.TimeLine.MainSequence"},{"lineNumber":332,"author":{"gitId":"-"},"content":"                .Cast\u003cEffect\u003e().Where(effect \u003d\u003e"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":334,"author":{"gitId":"-"},"content":"                    return IsEntryEffect(effect);"},{"lineNumber":335,"author":{"gitId":"-"},"content":"                });"},{"lineNumber":336,"author":{"gitId":"-"},"content":"            foreach (Effect effect in sequence)"},{"lineNumber":337,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":338,"author":{"gitId":"-"},"content":"                // TODO: Support TextRange entry animations"},{"lineNumber":339,"author":{"gitId":"-"},"content":"                effect.Shape.Visible \u003d MsoTriState.msoFalse;"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"        public void DeleteAllShapes()"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":345,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().ToList();"},{"lineNumber":346,"author":{"gitId":"-"},"content":""},{"lineNumber":347,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e matchingShapes \u003d shapes;"},{"lineNumber":348,"author":{"gitId":"-"},"content":"            foreach (Shape s in matchingShapes)"},{"lineNumber":349,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                s.SafeDelete();"},{"lineNumber":351,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"-"},"content":"        public void SetShapeAsAutoplay(Shape shape)"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            Sequence mainSequence \u003d _slide.TimeLine.MainSequence;"},{"lineNumber":357,"author":{"gitId":"-"},"content":""},{"lineNumber":358,"author":{"gitId":"-"},"content":"            Effect firstClickEvent \u003d mainSequence.FindFirstAnimationForClick(1);"},{"lineNumber":359,"author":{"gitId":"-"},"content":"            bool hasNoClicksOnSlide \u003d firstClickEvent \u003d\u003d null;"},{"lineNumber":360,"author":{"gitId":"-"},"content":""},{"lineNumber":361,"author":{"gitId":"-"},"content":"            if (hasNoClicksOnSlide)"},{"lineNumber":362,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":363,"author":{"gitId":"-"},"content":"                AddShapeAsLastAutoplaying(shape, MsoAnimEffect.msoAnimEffectFade);"},{"lineNumber":364,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":365,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":366,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":367,"author":{"gitId":"-"},"content":"                InsertAnimationBeforeExisting(shape, firstClickEvent, MsoAnimEffect.msoAnimEffectFade);"},{"lineNumber":368,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":369,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":370,"author":{"gitId":"-"},"content":""},{"lineNumber":371,"author":{"gitId":"-"},"content":"        public void SetAudioAsAutoplay(Shape shape)"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":373,"author":{"gitId":"-"},"content":"            Sequence mainSequence \u003d _slide.TimeLine.MainSequence;"},{"lineNumber":374,"author":{"gitId":"-"},"content":""},{"lineNumber":375,"author":{"gitId":"-"},"content":"            Effect firstClickEvent \u003d mainSequence.FindFirstAnimationForClick(1);"},{"lineNumber":376,"author":{"gitId":"-"},"content":"            bool hasNoClicksOnSlide \u003d firstClickEvent \u003d\u003d null;"},{"lineNumber":377,"author":{"gitId":"-"},"content":""},{"lineNumber":378,"author":{"gitId":"-"},"content":"            if (hasNoClicksOnSlide)"},{"lineNumber":379,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"                AddShapeAsLastAutoplaying(shape, MsoAnimEffect.msoAnimEffectMediaPlay);"},{"lineNumber":381,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":382,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":383,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":384,"author":{"gitId":"-"},"content":"                InsertAnimationBeforeExisting(shape, firstClickEvent, MsoAnimEffect.msoAnimEffectMediaPlay);"},{"lineNumber":385,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":387,"author":{"gitId":"-"},"content":""},{"lineNumber":388,"author":{"gitId":"-"},"content":"        public void InsertPicture(string fileName, MsoTriState linkToFile, MsoTriState saveWithDoc,"},{"lineNumber":389,"author":{"gitId":"-"},"content":"                                  Tuple\u003cSingle, Single\u003e leftTopCorner)"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":391,"author":{"gitId":"-"},"content":"            _slide.Shapes.AddPicture(fileName, linkToFile, saveWithDoc, leftTopCorner.Item1, leftTopCorner.Item2).Select();"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":393,"author":{"gitId":"-"},"content":""},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        /// Creates a snapshot of snapshotSlide before entry animations and places an image of the slide in this slide"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        /// Returns the image shape."},{"lineNumber":398,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        public Shape InsertEntrySnapshotOfSlide(PowerPointSlide snapshotSlide)"},{"lineNumber":400,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":401,"author":{"gitId":"-"},"content":"            PowerPointSlide nextSlideCopy \u003d snapshotSlide.Duplicate();"},{"lineNumber":402,"author":{"gitId":"-"},"content":"            nextSlideCopy.Shapes"},{"lineNumber":403,"author":{"gitId":"-"},"content":"                            .Cast\u003cShape\u003e()"},{"lineNumber":404,"author":{"gitId":"-"},"content":"                            .Where(shape \u003d\u003e nextSlideCopy.HasEntryAnimation(shape))"},{"lineNumber":405,"author":{"gitId":"-"},"content":"                            .ToList()"},{"lineNumber":406,"author":{"gitId":"-"},"content":"                            .ForEach(shape \u003d\u003e shape.SafeDelete());"},{"lineNumber":407,"author":{"gitId":"-"},"content":""},{"lineNumber":408,"author":{"gitId":"-"},"content":"            Shape slidePicture \u003d _slide.Shapes.SafeCopySlide(nextSlideCopy);"},{"lineNumber":409,"author":{"gitId":"-"},"content":"            nextSlideCopy.Delete();"},{"lineNumber":410,"author":{"gitId":"-"},"content":"            return slidePicture;"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":412,"author":{"gitId":"-"},"content":""},{"lineNumber":413,"author":{"gitId":"-"},"content":""},{"lineNumber":414,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        /// Creates a snapshot of snapshotSlide after exit animations and places an image of the slide in this slide"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        /// Returns the image shape."},{"lineNumber":417,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":418,"author":{"gitId":"-"},"content":"        public Shape InsertExitSnapshotOfSlide(PowerPointSlide snapshotSlide)"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":420,"author":{"gitId":"-"},"content":"            PowerPointSlide previousSlideCopy \u003d snapshotSlide.Duplicate();"},{"lineNumber":421,"author":{"gitId":"-"},"content":"            previousSlideCopy.Shapes"},{"lineNumber":422,"author":{"gitId":"-"},"content":"                            .Cast\u003cShape\u003e()"},{"lineNumber":423,"author":{"gitId":"-"},"content":"                            .Where(shape \u003d\u003e previousSlideCopy.HasExitAnimation(shape))"},{"lineNumber":424,"author":{"gitId":"-"},"content":"                            .ToList()"},{"lineNumber":425,"author":{"gitId":"-"},"content":"                            .ForEach(shape \u003d\u003e shape.SafeDelete());"},{"lineNumber":426,"author":{"gitId":"-"},"content":""},{"lineNumber":427,"author":{"gitId":"-"},"content":"            Shape slidePicture \u003d _slide.Shapes.SafeCopySlide(previousSlideCopy);"},{"lineNumber":428,"author":{"gitId":"-"},"content":"            previousSlideCopy.Delete();"},{"lineNumber":429,"author":{"gitId":"-"},"content":"            return slidePicture;"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":431,"author":{"gitId":"-"},"content":""},{"lineNumber":432,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":433,"author":{"gitId":"-"},"content":"        /// Create animation effect for shape at `clickNumber`"},{"lineNumber":434,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":435,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"shape\"\u003eThe shape to be animated\u003c/param\u003e"},{"lineNumber":436,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"clickNumber\"\u003eMin value is -1, this occurs when we want to set "},{"lineNumber":437,"author":{"gitId":"-"},"content":"        /// a selfExplanationClickItem at ClickNo \u003d -1 as an independent animation block\u003c/param\u003e"},{"lineNumber":438,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"effect\"\u003e\u003c/param\u003e"},{"lineNumber":439,"author":{"gitId":"-"},"content":"        /// \u003creturns\u003e\u003c/returns\u003e"},{"lineNumber":440,"author":{"gitId":"-"},"content":"        public Effect SetShapeAsClickTriggered(Shape shape, int clickNumber, MsoAnimEffect effect)"},{"lineNumber":441,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":442,"author":{"gitId":"-"},"content":"            Effect addedEffect;"},{"lineNumber":443,"author":{"gitId":"-"},"content":""},{"lineNumber":444,"author":{"gitId":"-"},"content":"            Sequence mainSequence \u003d _slide.TimeLine.MainSequence;"},{"lineNumber":445,"author":{"gitId":"-"},"content":"            Effect nextClickEffect \u003d mainSequence.FindFirstAnimationForClick(clickNumber + 1);"},{"lineNumber":446,"author":{"gitId":"-"},"content":"            Effect previousClickEffect \u003d mainSequence.FindFirstAnimationForClick(clickNumber);"},{"lineNumber":447,"author":{"gitId":"-"},"content":"            Effect nextNextClickEffect \u003d mainSequence.FindFirstAnimationForClick(clickNumber + 2);"},{"lineNumber":448,"author":{"gitId":"-"},"content":"            // In the case when clickNumber \u003d -1, "},{"lineNumber":449,"author":{"gitId":"-"},"content":"            // we need to check effects for clickNumer + 1 and clickNumer + 2 to conclude whether there is "},{"lineNumber":450,"author":{"gitId":"-"},"content":"            // animations after it."},{"lineNumber":451,"author":{"gitId":"-"},"content":"            bool hasClicksAfter \u003d nextClickEffect !\u003d null || nextNextClickEffect !\u003d null;"},{"lineNumber":452,"author":{"gitId":"-"},"content":"            bool hasClickBefore \u003d previousClickEffect !\u003d null;"},{"lineNumber":453,"author":{"gitId":"-"},"content":""},{"lineNumber":454,"author":{"gitId":"-"},"content":"            if (hasClicksAfter)"},{"lineNumber":455,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":456,"author":{"gitId":"-"},"content":"                Effect nextEffect \u003d nextClickEffect !\u003d null ? nextClickEffect : nextNextClickEffect;"},{"lineNumber":457,"author":{"gitId":"-"},"content":"                addedEffect \u003d InsertAnimationBeforeExisting(shape, nextEffect, effect);"},{"lineNumber":458,"author":{"gitId":"-"},"content":"                // to handle case when there is custom animation previously at ClickNo \u003d 0"},{"lineNumber":459,"author":{"gitId":"-"},"content":"                if (!StringUtility.IsPPTLShape(nextEffect.Shape.Name))"},{"lineNumber":460,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":461,"author":{"gitId":"-"},"content":"                    nextEffect.Timing.TriggerType \u003d MsoAnimTriggerType.msoAnimTriggerOnPageClick;"},{"lineNumber":462,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":463,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":464,"author":{"gitId":"-"},"content":"            else if (hasClickBefore)"},{"lineNumber":465,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":466,"author":{"gitId":"-"},"content":"                addedEffect \u003d AddShapeAsLastAutoplaying(shape, effect);"},{"lineNumber":467,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":468,"author":{"gitId":"-"},"content":"            else if (clickNumber \u003c\u003d 0)"},{"lineNumber":469,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":470,"author":{"gitId":"-"},"content":"                addedEffect \u003d mainSequence.AddEffect(shape, effect,"},{"lineNumber":471,"author":{"gitId":"-"},"content":"                    trigger: MsoAnimTriggerType.msoAnimTriggerWithPrevious);"},{"lineNumber":472,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":473,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":474,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":475,"author":{"gitId":"-"},"content":"                addedEffect \u003d mainSequence.AddEffect(shape, effect);"},{"lineNumber":476,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":477,"author":{"gitId":"-"},"content":""},{"lineNumber":478,"author":{"gitId":"-"},"content":"            return addedEffect;"},{"lineNumber":479,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":480,"author":{"gitId":"-"},"content":""},{"lineNumber":481,"author":{"gitId":"-"},"content":"        public void ShowShapeAfterClick(Shape shape, int clickNumber)"},{"lineNumber":482,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":483,"author":{"gitId":"-"},"content":"            SetShapeAsClickTriggered(shape, clickNumber, MsoAnimEffect.msoAnimEffectAppear);"},{"lineNumber":484,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":485,"author":{"gitId":"-"},"content":""},{"lineNumber":486,"author":{"gitId":"-"},"content":"        public void HideShapeAfterClick(Shape shape, int clickNumber)"},{"lineNumber":487,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":488,"author":{"gitId":"-"},"content":"            Effect addedEffect \u003d SetShapeAsClickTriggered(shape, clickNumber, MsoAnimEffect.msoAnimEffectAppear);"},{"lineNumber":489,"author":{"gitId":"-"},"content":"            addedEffect.Exit \u003d MsoTriState.msoTrue;"},{"lineNumber":490,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":491,"author":{"gitId":"-"},"content":""},{"lineNumber":492,"author":{"gitId":"-"},"content":"        public void HideShapeAsLastClickIfNeeded(Shape shape)"},{"lineNumber":493,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":494,"author":{"gitId":"-"},"content":"            if (IsNextSlideTransitionBlacklisted())"},{"lineNumber":495,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":496,"author":{"gitId":"-"},"content":"                Sequence animationSequence \u003d _slide.TimeLine.MainSequence;"},{"lineNumber":497,"author":{"gitId":"-"},"content":"                Effect effect \u003d animationSequence.AddEffect(shape, MsoAnimEffect.msoAnimEffectFade);"},{"lineNumber":498,"author":{"gitId":"-"},"content":"                effect.Exit \u003d MsoTriState.msoTrue;"},{"lineNumber":499,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":500,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":501,"author":{"gitId":"-"},"content":"        "},{"lineNumber":502,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":503,"author":{"gitId":"-"},"content":"        /// Translates the x and y coordinates a VML Path String (obtained from MotionEffect.Path) by a specified amount."},{"lineNumber":504,"author":{"gitId":"-"},"content":"        /// TODO: Not sure whether it works with any VML path string yet. Need to verify. It seems to. Idea: the numerical (non-alphabetical) values alternate between x and y coordinates. I translate every value this eay by either xShift or yShift."},{"lineNumber":505,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":506,"author":{"gitId":"-"},"content":"        public string TranslateVmlPath(string path, float xShift, float yShift)"},{"lineNumber":507,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":508,"author":{"gitId":"-"},"content":"            string[] splitPath \u003d path.Split(\u0027 \u0027);"},{"lineNumber":509,"author":{"gitId":"-"},"content":"            bool isXCoordinate \u003d true;"},{"lineNumber":510,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c splitPath.Length; ++i)"},{"lineNumber":511,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":512,"author":{"gitId":"-"},"content":"                string token \u003d splitPath[i].Trim();"},{"lineNumber":513,"author":{"gitId":"-"},"content":"                if (token.Length \u003c\u003d 1 \u0026\u0026 char.IsLetter(token, 0))"},{"lineNumber":514,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":515,"author":{"gitId":"-"},"content":"                    continue;"},{"lineNumber":516,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":517,"author":{"gitId":"-"},"content":""},{"lineNumber":518,"author":{"gitId":"-"},"content":"                float val \u003d float.Parse(token, CultureInfo.InvariantCulture);"},{"lineNumber":519,"author":{"gitId":"-"},"content":"                if (isXCoordinate)"},{"lineNumber":520,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":521,"author":{"gitId":"-"},"content":"                    val +\u003d xShift;"},{"lineNumber":522,"author":{"gitId":"-"},"content":"                    isXCoordinate \u003d false;"},{"lineNumber":523,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":524,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":525,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":526,"author":{"gitId":"-"},"content":"                    val +\u003d yShift;"},{"lineNumber":527,"author":{"gitId":"-"},"content":"                    isXCoordinate \u003d true;"},{"lineNumber":528,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":529,"author":{"gitId":"-"},"content":"                splitPath[i] \u003d val.ToString(CultureInfo.InvariantCulture);"},{"lineNumber":530,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":531,"author":{"gitId":"-"},"content":"            return string.Join(\" \", splitPath);"},{"lineNumber":532,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":533,"author":{"gitId":"-"},"content":""},{"lineNumber":534,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":535,"author":{"gitId":"-"},"content":"        /// Changes the Left, Top coordinates and Width, Height of the shape while maintaining the positions of motion paths. "},{"lineNumber":536,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":537,"author":{"gitId":"-"},"content":"        public void RelocateShapeWithoutPath(Shape shape, float newLeft, float newTop, float newWidth, float newHeight)"},{"lineNumber":538,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":539,"author":{"gitId":"-"},"content":"            float originalLeft \u003d shape.Left;"},{"lineNumber":540,"author":{"gitId":"-"},"content":"            float originalTop \u003d shape.Top;"},{"lineNumber":541,"author":{"gitId":"-"},"content":"            float originalWidth \u003d shape.Width;"},{"lineNumber":542,"author":{"gitId":"-"},"content":"            float originalHeight \u003d shape.Height;"},{"lineNumber":543,"author":{"gitId":"-"},"content":"            shape.Left \u003d newLeft;"},{"lineNumber":544,"author":{"gitId":"-"},"content":"            shape.Top \u003d newTop;"},{"lineNumber":545,"author":{"gitId":"-"},"content":"            shape.Width \u003d newWidth;"},{"lineNumber":546,"author":{"gitId":"-"},"content":"            shape.Height \u003d newHeight;"},{"lineNumber":547,"author":{"gitId":"-"},"content":""},{"lineNumber":548,"author":{"gitId":"-"},"content":"            IEnumerable\u003cEffect\u003e effects \u003d TimeLine.MainSequence.Cast\u003cEffect\u003e();"},{"lineNumber":549,"author":{"gitId":"-"},"content":"            // TODO: Generalize to paths other than msoAnimEffectPathDown?"},{"lineNumber":550,"author":{"gitId":"-"},"content":"            effects \u003d effects.Where(e \u003d\u003e e.Shape.Equals(shape) \u0026\u0026 e.EffectType \u003d\u003d MsoAnimEffect.msoAnimEffectPathDown).ToList();"},{"lineNumber":551,"author":{"gitId":"-"},"content":""},{"lineNumber":552,"author":{"gitId":"-"},"content":"            float xShift \u003d (originalLeft - newLeft) + (originalWidth - newWidth) / 2;"},{"lineNumber":553,"author":{"gitId":"-"},"content":"            float yShift \u003d (originalTop - newTop) + (originalHeight - newHeight) / 2;"},{"lineNumber":554,"author":{"gitId":"-"},"content":"            xShift /\u003d PowerPointPresentation.Current.SlideWidth;"},{"lineNumber":555,"author":{"gitId":"-"},"content":"            yShift /\u003d PowerPointPresentation.Current.SlideHeight;"},{"lineNumber":556,"author":{"gitId":"-"},"content":""},{"lineNumber":557,"author":{"gitId":"-"},"content":"            foreach (Effect effect in effects)"},{"lineNumber":558,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":559,"author":{"gitId":"-"},"content":"                MotionEffect motionEffect \u003d effect.Behaviors[1].MotionEffect;"},{"lineNumber":560,"author":{"gitId":"-"},"content":"                motionEffect.Path \u003d TranslateVmlPath(motionEffect.Path, xShift, yShift);"},{"lineNumber":561,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":562,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":563,"author":{"gitId":"-"},"content":""},{"lineNumber":564,"author":{"gitId":"-"},"content":"        public Shape GroupShapes(IEnumerable\u003cShape\u003e shapes)"},{"lineNumber":565,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":566,"author":{"gitId":"-"},"content":"            return ToShapeRange(shapes).Group();"},{"lineNumber":567,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":568,"author":{"gitId":"-"},"content":""},{"lineNumber":569,"author":{"gitId":"-"},"content":"        public ShapeRange ToShapeRange(Shape shape)"},{"lineNumber":570,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":571,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e shapeList \u003d new List\u003cShape\u003e { shape };"},{"lineNumber":572,"author":{"gitId":"-"},"content":"            return ToShapeRange(shapeList);"},{"lineNumber":573,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":574,"author":{"gitId":"-"},"content":""},{"lineNumber":575,"author":{"gitId":"-"},"content":"        public ShapeRange ToShapeRange(IEnumerable\u003cShape\u003e shapes)"},{"lineNumber":576,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":577,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e shapeList \u003d shapes.ToList();"},{"lineNumber":578,"author":{"gitId":"-"},"content":"            List\u003cstring\u003e oldNames \u003d shapeList.Select(shape \u003d\u003e shape.Name).ToList();"},{"lineNumber":579,"author":{"gitId":"-"},"content":""},{"lineNumber":580,"author":{"gitId":"-"},"content":"            IEnumerable\u003cstring\u003e currentShapeNames \u003d Shapes.Cast\u003cShape\u003e().Select(shape \u003d\u003e shape.Name);"},{"lineNumber":581,"author":{"gitId":"-"},"content":"            string[] unusedNames \u003d CommonUtil.GetUnusedStrings(currentShapeNames, shapeList.Count);"},{"lineNumber":582,"author":{"gitId":"-"},"content":"            shapeList.Zip(unusedNames, (shape, name) \u003d\u003e shape.Name \u003d name).ToList();"},{"lineNumber":583,"author":{"gitId":"-"},"content":""},{"lineNumber":584,"author":{"gitId":"-"},"content":""},{"lineNumber":585,"author":{"gitId":"-"},"content":"            ShapeRange shapeRange \u003d Shapes.Range(unusedNames);"},{"lineNumber":586,"author":{"gitId":"-"},"content":""},{"lineNumber":587,"author":{"gitId":"-"},"content":"            shapeList.Zip(oldNames, (shape, name) \u003d\u003e shape.Name \u003d name).ToList();"},{"lineNumber":588,"author":{"gitId":"-"},"content":""},{"lineNumber":589,"author":{"gitId":"-"},"content":"            return shapeRange;"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":591,"author":{"gitId":"-"},"content":""},{"lineNumber":592,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":593,"author":{"gitId":"-"},"content":"        /// Copies the shape into this slide, without the usual position offset when an existing shape is already there."},{"lineNumber":594,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":595,"author":{"gitId":"-"},"content":"        public Shape CopyShapeToSlide(Shape shape)"},{"lineNumber":596,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":597,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":598,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":599,"author":{"gitId":"-"},"content":"                // Will affect clipboard"},{"lineNumber":600,"author":{"gitId":"-"},"content":"                Shape newShape \u003d _slide.Shapes.SafeCopyPlaceholder(shape);"},{"lineNumber":601,"author":{"gitId":"-"},"content":""},{"lineNumber":602,"author":{"gitId":"-"},"content":"                newShape.Name \u003d shape.Name;"},{"lineNumber":603,"author":{"gitId":"-"},"content":"                newShape.Left \u003d shape.Left;"},{"lineNumber":604,"author":{"gitId":"-"},"content":"                newShape.Top \u003d shape.Top;"},{"lineNumber":605,"author":{"gitId":"-"},"content":"                ShapeUtil.MoveZToJustInFront(newShape, shape);"},{"lineNumber":606,"author":{"gitId":"-"},"content":""},{"lineNumber":607,"author":{"gitId":"-"},"content":"                DeleteShapeAnimations(newShape);"},{"lineNumber":608,"author":{"gitId":"-"},"content":"                TransferAnimation(shape, newShape);"},{"lineNumber":609,"author":{"gitId":"-"},"content":""},{"lineNumber":610,"author":{"gitId":"-"},"content":"                return newShape;"},{"lineNumber":611,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":612,"author":{"gitId":"-"},"content":"            catch (COMException)"},{"lineNumber":613,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":614,"author":{"gitId":"-"},"content":"                // invalid shape for copy paste (e.g. a placeholder title box with no content)"},{"lineNumber":615,"author":{"gitId":"-"},"content":"                return null;"},{"lineNumber":616,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":617,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":618,"author":{"gitId":"-"},"content":""},{"lineNumber":619,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":620,"author":{"gitId":"-"},"content":"        /// Clones the specified shape onto the slide, leaving the range unmodified."},{"lineNumber":621,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":622,"author":{"gitId":"-"},"content":"        public ShapeRange CloneShapeFromRange(ShapeRange range, Shape shapeToClone)"},{"lineNumber":623,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":624,"author":{"gitId":"-"},"content":"            Shape clonedShape \u003d this.CopyShapeToSlide(shapeToClone);"},{"lineNumber":625,"author":{"gitId":"-"},"content":""},{"lineNumber":626,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e result \u003d new List\u003cShape\u003e();"},{"lineNumber":627,"author":{"gitId":"-"},"content":"            foreach (Shape shape in range)"},{"lineNumber":628,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":629,"author":{"gitId":"-"},"content":"                if (shape \u003d\u003d shapeToClone)"},{"lineNumber":630,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":631,"author":{"gitId":"-"},"content":"                    result.Add(clonedShape);"},{"lineNumber":632,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":633,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":634,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":635,"author":{"gitId":"-"},"content":"                    result.Add(shape);"},{"lineNumber":636,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":637,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":638,"author":{"gitId":"-"},"content":"            return this.ToShapeRange(result);"},{"lineNumber":639,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":640,"author":{"gitId":"-"},"content":""},{"lineNumber":641,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":642,"author":{"gitId":"-"},"content":"        /// Copies the shaperange into this slide, without the usual position offset when pasting over an existing shape."},{"lineNumber":643,"author":{"gitId":"-"},"content":"        /// If you are having difficulty getting a shaperange, use the ToShapeRange method."},{"lineNumber":644,"author":{"gitId":"-"},"content":"        /// TODO: Test this method more thoroughly in more cases other than Graphics.SquashSlides"},{"lineNumber":645,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":646,"author":{"gitId":"-"},"content":"        public ShapeRange CopyShapesToSlide(ShapeRange shapes)"},{"lineNumber":647,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":648,"author":{"gitId":"-"},"content":"            // First Index all the shapes by name, so they can be identified later."},{"lineNumber":649,"author":{"gitId":"-"},"content":"            int index \u003d 0;"},{"lineNumber":650,"author":{"gitId":"-"},"content":"            Dictionary\u003cstring, Shape\u003e originalShapes \u003d new Dictionary\u003cstring, Shape\u003e();"},{"lineNumber":651,"author":{"gitId":"-"},"content":"            Dictionary\u003cstring, string\u003e originalNames \u003d new Dictionary\u003cstring, string\u003e();"},{"lineNumber":652,"author":{"gitId":"-"},"content":"            foreach (Shape shape in shapes)"},{"lineNumber":653,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":654,"author":{"gitId":"-"},"content":"                string tempName \u003d index.ToString();"},{"lineNumber":655,"author":{"gitId":"-"},"content":"                index++;"},{"lineNumber":656,"author":{"gitId":"-"},"content":""},{"lineNumber":657,"author":{"gitId":"-"},"content":"                originalNames.Add(tempName, shape.Name);"},{"lineNumber":658,"author":{"gitId":"-"},"content":"                originalShapes.Add(tempName, shape);"},{"lineNumber":659,"author":{"gitId":"-"},"content":"                // temporarily set the name before copy, so we can locate it again in the new slide."},{"lineNumber":660,"author":{"gitId":"-"},"content":"                shape.Name \u003d tempName;"},{"lineNumber":661,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":662,"author":{"gitId":"-"},"content":""},{"lineNumber":663,"author":{"gitId":"-"},"content":"            // Copy all the shapes over."},{"lineNumber":664,"author":{"gitId":"-"},"content":"            ShapeRange newShapes \u003d PPLClipboard.Instance.LockAndRelease(() \u003d\u003e"},{"lineNumber":665,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":666,"author":{"gitId":"-"},"content":"                shapes.Copy();"},{"lineNumber":667,"author":{"gitId":"-"},"content":"                return _slide.Shapes.Paste();"},{"lineNumber":668,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":669,"author":{"gitId":"-"},"content":""},{"lineNumber":670,"author":{"gitId":"-"},"content":"            // Now use the indexed names to set back the names and positions to the original shapes\u0027"},{"lineNumber":671,"author":{"gitId":"-"},"content":"            foreach (Shape shape in newShapes)"},{"lineNumber":672,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":673,"author":{"gitId":"-"},"content":"                string key \u003d shape.Name;"},{"lineNumber":674,"author":{"gitId":"-"},"content":"                string originalName \u003d originalNames[key];"},{"lineNumber":675,"author":{"gitId":"-"},"content":"                Shape originalShape \u003d originalShapes[key];"},{"lineNumber":676,"author":{"gitId":"-"},"content":""},{"lineNumber":677,"author":{"gitId":"-"},"content":"                originalShape.Name \u003d originalName;"},{"lineNumber":678,"author":{"gitId":"-"},"content":"                shape.Name \u003d originalName;"},{"lineNumber":679,"author":{"gitId":"-"},"content":"                shape.Left \u003d originalShape.Left;"},{"lineNumber":680,"author":{"gitId":"-"},"content":"                shape.Top \u003d originalShape.Top;"},{"lineNumber":681,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":682,"author":{"gitId":"-"},"content":""},{"lineNumber":683,"author":{"gitId":"-"},"content":"            return newShapes;"},{"lineNumber":684,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":685,"author":{"gitId":"-"},"content":""},{"lineNumber":686,"author":{"gitId":"-"},"content":"        public void TransferAnimation(Shape source, Shape destination)"},{"lineNumber":687,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":688,"author":{"gitId":"-"},"content":"            Sequence sequence \u003d _slide.TimeLine.MainSequence;"},{"lineNumber":689,"author":{"gitId":"iskandarzulkarnaien"},"content":"            List\u003cEffect\u003e effectList \u003d sequence.Cast\u003cEffect\u003e().ToList();"},{"lineNumber":690,"author":{"gitId":"-"},"content":""},{"lineNumber":691,"author":{"gitId":"iskandarzulkarnaien"},"content":"            foreach (Effect effect in effectList)"},{"lineNumber":692,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":693,"author":{"gitId":"iskandarzulkarnaien"},"content":"                if (effect.Shape.Equals(source))"},{"lineNumber":694,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":695,"author":{"gitId":"iskandarzulkarnaien"},"content":"                    InsertAnimationAtIndex(destination, effect.Index, effect.EffectType, effect.Timing.TriggerType, IsExitEffect(effect));"},{"lineNumber":696,"author":{"gitId":"iskandarzulkarnaien"},"content":"                }"},{"lineNumber":697,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":698,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":699,"author":{"gitId":"-"},"content":""},{"lineNumber":700,"author":{"gitId":"-"},"content":"        public void RemoveAnimationsForShape(Shape shape)"},{"lineNumber":701,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":702,"author":{"gitId":"-"},"content":"            IEnumerable\u003cEffect\u003e mainEffects \u003d _slide.TimeLine.MainSequence.Cast\u003cEffect\u003e();"},{"lineNumber":703,"author":{"gitId":"-"},"content":"            DeleteEffectsForShape(shape, mainEffects);"},{"lineNumber":704,"author":{"gitId":"-"},"content":""},{"lineNumber":705,"author":{"gitId":"-"},"content":"            foreach (Sequence sequence in _slide.TimeLine.InteractiveSequences)"},{"lineNumber":706,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":707,"author":{"gitId":"-"},"content":"                DeleteEffectsForShape(shape, sequence.Cast\u003cEffect\u003e());"},{"lineNumber":708,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":709,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":710,"author":{"gitId":"-"},"content":""},{"lineNumber":711,"author":{"gitId":"-"},"content":"        public void DeleteShapeAnimations(Shape sh)"},{"lineNumber":712,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":713,"author":{"gitId":"-"},"content":"            Sequence sequence \u003d _slide.TimeLine.MainSequence;"},{"lineNumber":714,"author":{"gitId":"-"},"content":"            for (int x \u003d sequence.Count; x \u003e\u003d 1; x--)"},{"lineNumber":715,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":716,"author":{"gitId":"-"},"content":"                Effect effect \u003d sequence[x];"},{"lineNumber":717,"author":{"gitId":"-"},"content":"                "},{"lineNumber":718,"author":{"gitId":"-"},"content":"                if (effect.Shape \u003d\u003d null || "},{"lineNumber":719,"author":{"gitId":"-"},"content":"                    (effect.Shape.Name \u003d\u003d sh.Name \u0026\u0026 effect.Shape.Id \u003d\u003d sh.Id))"},{"lineNumber":720,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":721,"author":{"gitId":"-"},"content":"                    effect.Delete();"},{"lineNumber":722,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":723,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":724,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":725,"author":{"gitId":"-"},"content":""},{"lineNumber":726,"author":{"gitId":"-"},"content":"        public void RemoveAnimationsForShapes(List\u003cShape\u003e shapes)"},{"lineNumber":727,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":728,"author":{"gitId":"-"},"content":"            foreach (Shape sh in shapes)"},{"lineNumber":729,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":730,"author":{"gitId":"-"},"content":"                DeleteShapeAnimations(sh);"},{"lineNumber":731,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":732,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":733,"author":{"gitId":"-"},"content":""},{"lineNumber":734,"author":{"gitId":"-"},"content":"        public List\u003cShape\u003e GetShapesWithPrefix(string prefix)"},{"lineNumber":735,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":736,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().ToList();"},{"lineNumber":737,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e current.Name.StartsWith(prefix)).ToList();"},{"lineNumber":738,"author":{"gitId":"-"},"content":""},{"lineNumber":739,"author":{"gitId":"-"},"content":"            return matchingShapes;"},{"lineNumber":740,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":741,"author":{"gitId":"-"},"content":""},{"lineNumber":742,"author":{"gitId":"-"},"content":"        public List\u003cShape\u003e GetShapeWithName(string name)"},{"lineNumber":743,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":744,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().ToList();"},{"lineNumber":745,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e current.Name \u003d\u003d name).ToList();"},{"lineNumber":746,"author":{"gitId":"-"},"content":""},{"lineNumber":747,"author":{"gitId":"-"},"content":"            return matchingShapes;"},{"lineNumber":748,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":749,"author":{"gitId":"-"},"content":""},{"lineNumber":750,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":751,"author":{"gitId":"-"},"content":"        /// Returns a dictionary shapeName \u003d\u003e shape,"},{"lineNumber":752,"author":{"gitId":"-"},"content":"        /// where shape refers to the first (any) shape found in the slide with that name."},{"lineNumber":753,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":754,"author":{"gitId":"-"},"content":"        public Dictionary\u003cstring, Shape\u003e GetNameToShapeDictionary()"},{"lineNumber":755,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":756,"author":{"gitId":"-"},"content":"            IEnumerable\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e();"},{"lineNumber":757,"author":{"gitId":"-"},"content":"            Dictionary\u003cstring, Shape\u003e dictionary \u003d new Dictionary\u003cstring, Shape\u003e(shapes.Count());"},{"lineNumber":758,"author":{"gitId":"-"},"content":"            foreach (Shape shape in shapes)"},{"lineNumber":759,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":760,"author":{"gitId":"-"},"content":"                if (!dictionary.ContainsKey(shape.Name))"},{"lineNumber":761,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":762,"author":{"gitId":"-"},"content":"                    dictionary.Add(shape.Name, shape);"},{"lineNumber":763,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":764,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":765,"author":{"gitId":"-"},"content":"            return dictionary;"},{"lineNumber":766,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":767,"author":{"gitId":"-"},"content":""},{"lineNumber":768,"author":{"gitId":"-"},"content":"        public Shape GetShape(Func\u003cShape, bool\u003e condition)"},{"lineNumber":769,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":770,"author":{"gitId":"-"},"content":"            return _slide.Shapes.Cast\u003cShape\u003e().Where(condition).FirstOrDefault();"},{"lineNumber":771,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":772,"author":{"gitId":"-"},"content":""},{"lineNumber":773,"author":{"gitId":"-"},"content":"        public List\u003cShape\u003e GetShapesWithMediaType(PpMediaType type, Regex nameRule)"},{"lineNumber":774,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":775,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().ToList();"},{"lineNumber":776,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e current.Type \u003d\u003d MsoShapeType.msoMedia \u0026\u0026"},{"lineNumber":777,"author":{"gitId":"-"},"content":"                                                                 current.MediaType \u003d\u003d type \u0026\u0026"},{"lineNumber":778,"author":{"gitId":"-"},"content":"                                                                 nameRule.IsMatch(current.Name)).ToList();"},{"lineNumber":779,"author":{"gitId":"-"},"content":""},{"lineNumber":780,"author":{"gitId":"-"},"content":"            return matchingShapes;"},{"lineNumber":781,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":782,"author":{"gitId":"-"},"content":""},{"lineNumber":783,"author":{"gitId":"-"},"content":"        public List\u003cShape\u003e GetShapesWithRule(Regex nameRule)"},{"lineNumber":784,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":785,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().ToList();"},{"lineNumber":786,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e nameRule.IsMatch(current.Name)).ToList();"},{"lineNumber":787,"author":{"gitId":"-"},"content":""},{"lineNumber":788,"author":{"gitId":"-"},"content":"            return matchingShapes;"},{"lineNumber":789,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":790,"author":{"gitId":"-"},"content":""},{"lineNumber":791,"author":{"gitId":"-"},"content":"        public List\u003cShape\u003e GetShapesWithTypeAndRule(MsoShapeType type, Regex nameRule)"},{"lineNumber":792,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":793,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().ToList();"},{"lineNumber":794,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e current.Type \u003d\u003d type \u0026\u0026"},{"lineNumber":795,"author":{"gitId":"-"},"content":"                                              nameRule.IsMatch(current.Name)).ToList();"},{"lineNumber":796,"author":{"gitId":"-"},"content":""},{"lineNumber":797,"author":{"gitId":"-"},"content":"            return matchingShapes;"},{"lineNumber":798,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":799,"author":{"gitId":"-"},"content":""},{"lineNumber":800,"author":{"gitId":"-"},"content":"        public bool HasShapeWithRule(Regex nameRule)"},{"lineNumber":801,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":802,"author":{"gitId":"-"},"content":"            return GetShapesWithRule(nameRule).Count \u003e 0;"},{"lineNumber":803,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":804,"author":{"gitId":"-"},"content":""},{"lineNumber":805,"author":{"gitId":"-"},"content":"        public bool HasShapeWithSameName(string name)"},{"lineNumber":806,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":807,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().ToList();"},{"lineNumber":808,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e current.Name \u003d\u003d name).ToList();"},{"lineNumber":809,"author":{"gitId":"-"},"content":""},{"lineNumber":810,"author":{"gitId":"-"},"content":"            return matchingShapes.Count !\u003d 0;"},{"lineNumber":811,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":812,"author":{"gitId":"-"},"content":""},{"lineNumber":813,"author":{"gitId":"-"},"content":"        public PowerPointSlide CreateSpotlightSlide()"},{"lineNumber":814,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":815,"author":{"gitId":"-"},"content":"            Slide duplicatedSlide \u003d _slide.Duplicate()[1];"},{"lineNumber":816,"author":{"gitId":"-"},"content":"            return PowerPointSpotlightSlide.FromSlideFactory(duplicatedSlide);"},{"lineNumber":817,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":818,"author":{"gitId":"-"},"content":""},{"lineNumber":819,"author":{"gitId":"-"},"content":"        public PowerPointSlide CreateAutoAnimateSlide()"},{"lineNumber":820,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":821,"author":{"gitId":"-"},"content":"            Slide duplicatedSlide \u003d _slide.Duplicate()[1];"},{"lineNumber":822,"author":{"gitId":"-"},"content":"            return PowerPointAutoAnimateSlide.FromSlideFactory(duplicatedSlide);"},{"lineNumber":823,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":824,"author":{"gitId":"-"},"content":""},{"lineNumber":825,"author":{"gitId":"-"},"content":"        public PowerPointSlide CreateDrillDownSlide()"},{"lineNumber":826,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":827,"author":{"gitId":"-"},"content":"            Slide duplicatedSlide \u003d _slide.Duplicate()[1];"},{"lineNumber":828,"author":{"gitId":"-"},"content":"            return PowerPointDrillDownSlide.FromSlideFactory(duplicatedSlide);"},{"lineNumber":829,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":830,"author":{"gitId":"-"},"content":""},{"lineNumber":831,"author":{"gitId":"-"},"content":"        public PowerPointSlide CreateStepBackSlide()"},{"lineNumber":832,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":833,"author":{"gitId":"-"},"content":"            Slide duplicatedSlide \u003d _slide.Duplicate()[1];"},{"lineNumber":834,"author":{"gitId":"-"},"content":"            return PowerPointStepBackSlide.FromSlideFactory(duplicatedSlide);"},{"lineNumber":835,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":836,"author":{"gitId":"-"},"content":""},{"lineNumber":837,"author":{"gitId":"-"},"content":"        public PowerPointSlide CreateZoomMagnifyingSlide()"},{"lineNumber":838,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":839,"author":{"gitId":"-"},"content":"            Slide duplicatedSlide \u003d _slide.Duplicate()[1];"},{"lineNumber":840,"author":{"gitId":"-"},"content":"            return PowerPointMagnifyingSlide.FromSlideFactory(duplicatedSlide);"},{"lineNumber":841,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":842,"author":{"gitId":"-"},"content":""},{"lineNumber":843,"author":{"gitId":"-"},"content":"        public PowerPointSlide CreateZoomMagnifiedSlide()"},{"lineNumber":844,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":845,"author":{"gitId":"-"},"content":"            Slide duplicatedSlide \u003d _slide.Duplicate()[1];"},{"lineNumber":846,"author":{"gitId":"-"},"content":"            return PowerPointMagnifiedSlide.FromSlideFactory(duplicatedSlide);"},{"lineNumber":847,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":848,"author":{"gitId":"-"},"content":""},{"lineNumber":849,"author":{"gitId":"-"},"content":"        public PowerPointSlide CreateZoomDeMagnifyingSlide()"},{"lineNumber":850,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":851,"author":{"gitId":"-"},"content":"            Slide duplicatedSlide \u003d _slide.Duplicate()[1];"},{"lineNumber":852,"author":{"gitId":"-"},"content":"            return PowerPointDeMagnifyingSlide.FromSlideFactory(duplicatedSlide);"},{"lineNumber":853,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":854,"author":{"gitId":"-"},"content":""},{"lineNumber":855,"author":{"gitId":"-"},"content":"        public PowerPointSlide CreateZoomPanSlide()"},{"lineNumber":856,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":857,"author":{"gitId":"-"},"content":"            Slide duplicatedSlide \u003d _slide.Duplicate()[1];"},{"lineNumber":858,"author":{"gitId":"-"},"content":"            return PowerPointMagnifiedPanSlide.FromSlideFactory(duplicatedSlide);"},{"lineNumber":859,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":860,"author":{"gitId":"-"},"content":"        public bool HasExitAnimation(Shape shape)"},{"lineNumber":861,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":862,"author":{"gitId":"-"},"content":"            Sequence sequence \u003d _slide.TimeLine.MainSequence;"},{"lineNumber":863,"author":{"gitId":"-"},"content":"            for (int x \u003d sequence.Count; x \u003e\u003d 1; x--)"},{"lineNumber":864,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":865,"author":{"gitId":"-"},"content":"                Effect effect \u003d sequence[x];"},{"lineNumber":866,"author":{"gitId":"-"},"content":"                if (effect.Shape.Name \u003d\u003d shape.Name \u0026\u0026 effect.Shape.Id \u003d\u003d shape.Id)"},{"lineNumber":867,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":868,"author":{"gitId":"-"},"content":"                    if (effect.Exit \u003d\u003d Office.MsoTriState.msoTrue)"},{"lineNumber":869,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":870,"author":{"gitId":"-"},"content":"                        return true;"},{"lineNumber":871,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":872,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":873,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":874,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":875,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":876,"author":{"gitId":"-"},"content":""},{"lineNumber":877,"author":{"gitId":"-"},"content":"        public bool HasEntryAnimation(Shape shape)"},{"lineNumber":878,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":879,"author":{"gitId":"-"},"content":"            Sequence sequence \u003d _slide.TimeLine.MainSequence;"},{"lineNumber":880,"author":{"gitId":"-"},"content":"            for (int x \u003d sequence.Count; x \u003e\u003d 1; x--)"},{"lineNumber":881,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":882,"author":{"gitId":"-"},"content":"                Effect effect \u003d sequence[x];"},{"lineNumber":883,"author":{"gitId":"-"},"content":"                if (effect.Shape.Name \u003d\u003d shape.Name \u0026\u0026 effect.Shape.Id \u003d\u003d shape.Id)"},{"lineNumber":884,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":885,"author":{"gitId":"-"},"content":"                    if (IsEntryEffect(effect))"},{"lineNumber":886,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":887,"author":{"gitId":"-"},"content":"                        return true;"},{"lineNumber":888,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":889,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":890,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":891,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":892,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":893,"author":{"gitId":"-"},"content":""},{"lineNumber":894,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":895,"author":{"gitId":"-"},"content":"        /// Returns the index of the first effect in the slide that belongs to the shape."},{"lineNumber":896,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":897,"author":{"gitId":"-"},"content":"        public int IndexOfFirstEffect(Shape shape)"},{"lineNumber":898,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":899,"author":{"gitId":"-"},"content":"            Sequence sequence \u003d _slide.TimeLine.MainSequence;"},{"lineNumber":900,"author":{"gitId":"-"},"content":"            for (int i \u003d 1; i \u003c\u003d sequence.Count; i++)"},{"lineNumber":901,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":902,"author":{"gitId":"-"},"content":"                Effect effect \u003d sequence[i];"},{"lineNumber":903,"author":{"gitId":"-"},"content":"                if (effect.Shape.Name \u003d\u003d shape.Name \u0026\u0026 effect.Shape.Id \u003d\u003d shape.Id)"},{"lineNumber":904,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":905,"author":{"gitId":"-"},"content":"                    return i;"},{"lineNumber":906,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":907,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":908,"author":{"gitId":"-"},"content":"            return -1;"},{"lineNumber":909,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":910,"author":{"gitId":"-"},"content":""},{"lineNumber":911,"author":{"gitId":"-"},"content":"        public void DeletePlaceholderShapes()"},{"lineNumber":912,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":913,"author":{"gitId":"-"},"content":"            _slide.Shapes.Placeholders.Cast\u003cShape\u003e().ToList().ForEach(shape \u003d\u003e shape.SafeDelete());"},{"lineNumber":914,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":915,"author":{"gitId":"-"},"content":""},{"lineNumber":916,"author":{"gitId":"-"},"content":"        public Shape AddTemplateSlideMarker()"},{"lineNumber":917,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":918,"author":{"gitId":"-"},"content":"            if (HasTemplateSlideMarker())"},{"lineNumber":919,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":920,"author":{"gitId":"-"},"content":"                return null;"},{"lineNumber":921,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":922,"author":{"gitId":"-"},"content":""},{"lineNumber":923,"author":{"gitId":"-"},"content":"            float ratio \u003d 22.5f;"},{"lineNumber":924,"author":{"gitId":"-"},"content":"            float slideWidth \u003d PowerPointPresentation.Current.SlideWidth;"},{"lineNumber":925,"author":{"gitId":"-"},"content":"            float slideHeight \u003d PowerPointPresentation.Current.SlideHeight;"},{"lineNumber":926,"author":{"gitId":"-"},"content":"            float shapeWidth \u003d Math.Min(slideWidth, 900);"},{"lineNumber":927,"author":{"gitId":"-"},"content":"            float shapeHeight \u003d shapeWidth/ratio;"},{"lineNumber":928,"author":{"gitId":"-"},"content":""},{"lineNumber":929,"author":{"gitId":"-"},"content":"            Shape markerShape \u003d _slide.Shapes.AddTextbox(MsoTextOrientation.msoTextOrientationHorizontal, 0, 0, shapeWidth, shapeHeight);"},{"lineNumber":930,"author":{"gitId":"-"},"content":""},{"lineNumber":931,"author":{"gitId":"-"},"content":"            markerShape.TextEffect.Alignment \u003d MsoTextEffectAlignment.msoTextEffectAlignmentCentered;"},{"lineNumber":932,"author":{"gitId":"-"},"content":""},{"lineNumber":933,"author":{"gitId":"-"},"content":"            markerShape.TextFrame2.TextRange.Text \u003d AgendaLabText.TemplateSlideInstructions;"},{"lineNumber":934,"author":{"gitId":"-"},"content":"            markerShape.Fill.ForeColor.RGB \u003d 0x0000C0;"},{"lineNumber":935,"author":{"gitId":"-"},"content":"            markerShape.TextFrame2.TextRange.Font.Bold \u003d MsoTriState.msoTrue;"},{"lineNumber":936,"author":{"gitId":"-"},"content":"            markerShape.TextFrame2.TextRange.Font.Fill.ForeColor.RGB \u003d 0x00FFFF;"},{"lineNumber":937,"author":{"gitId":"-"},"content":"            markerShape.TextFrame2.TextRange.Paragraphs[2].Font.Fill.ForeColor.RGB \u003d 0xFFFFFF;"},{"lineNumber":938,"author":{"gitId":"-"},"content":"            markerShape.TextFrame2.TextRange.Paragraphs[2].Font.Bold \u003d MsoTriState.msoFalse;"},{"lineNumber":939,"author":{"gitId":"-"},"content":""},{"lineNumber":940,"author":{"gitId":"-"},"content":"            markerShape.TextFrame2.AutoSize \u003d MsoAutoSize.msoAutoSizeTextToFitShape;"},{"lineNumber":941,"author":{"gitId":"-"},"content":"            markerShape.ZOrder(MsoZOrderCmd.msoSendToBack);"},{"lineNumber":942,"author":{"gitId":"-"},"content":"            "},{"lineNumber":943,"author":{"gitId":"-"},"content":"            markerShape.Left \u003d (slideWidth - markerShape.Width) / 2;"},{"lineNumber":944,"author":{"gitId":"-"},"content":"            markerShape.Top \u003d slideHeight - markerShape.Height;"},{"lineNumber":945,"author":{"gitId":"-"},"content":"            markerShape.Name \u003d PptLabsTemplateMarkerShapeName;"},{"lineNumber":946,"author":{"gitId":"-"},"content":""},{"lineNumber":947,"author":{"gitId":"-"},"content":"            ShapeUtil.MakeShapeViewTimeInvisible(markerShape, _slide);"},{"lineNumber":948,"author":{"gitId":"-"},"content":"            return markerShape;"},{"lineNumber":949,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":950,"author":{"gitId":"-"},"content":""},{"lineNumber":951,"author":{"gitId":"-"},"content":"        public bool HasTemplateSlideMarker()"},{"lineNumber":952,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":953,"author":{"gitId":"-"},"content":"            return _slide.Shapes.Cast\u003cShape\u003e().Any(IsTemplateSlideMarker);"},{"lineNumber":954,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":955,"author":{"gitId":"-"},"content":""},{"lineNumber":956,"author":{"gitId":"-"},"content":"        public static bool IsTemplateSlideMarker(Shape shape)"},{"lineNumber":957,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":958,"author":{"gitId":"-"},"content":"            return shape.Name \u003d\u003d PptLabsTemplateMarkerShapeName;"},{"lineNumber":959,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":960,"author":{"gitId":"-"},"content":""},{"lineNumber":961,"author":{"gitId":"-"},"content":"        public static bool IsNotTemplateSlideMarker(Shape shape)"},{"lineNumber":962,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":963,"author":{"gitId":"-"},"content":"            return !IsTemplateSlideMarker(shape);"},{"lineNumber":964,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":965,"author":{"gitId":"-"},"content":""},{"lineNumber":966,"author":{"gitId":"-"},"content":"        public void DeleteIndicator()"},{"lineNumber":967,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":968,"author":{"gitId":"-"},"content":"            _slide.Shapes.Cast\u003cShape\u003e()"},{"lineNumber":969,"author":{"gitId":"-"},"content":"                        .Where(IsIndicator)"},{"lineNumber":970,"author":{"gitId":"-"},"content":"                        .ToList()"},{"lineNumber":971,"author":{"gitId":"-"},"content":"                        .ForEach(shape \u003d\u003e shape.SafeDelete());"},{"lineNumber":972,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":973,"author":{"gitId":"-"},"content":""},{"lineNumber":974,"author":{"gitId":"-"},"content":""},{"lineNumber":975,"author":{"gitId":"-"},"content":"        public void HideIndicator()"},{"lineNumber":976,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":977,"author":{"gitId":"-"},"content":"            _slide.Shapes.Cast\u003cShape\u003e()"},{"lineNumber":978,"author":{"gitId":"-"},"content":"                        .Where(IsIndicator)"},{"lineNumber":979,"author":{"gitId":"-"},"content":"                        .ToList()"},{"lineNumber":980,"author":{"gitId":"-"},"content":"                        .ForEach(shape \u003d\u003e shape.Visible \u003d MsoTriState.msoFalse);"},{"lineNumber":981,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":982,"author":{"gitId":"-"},"content":""},{"lineNumber":983,"author":{"gitId":"-"},"content":"        public void ShowIndicator()"},{"lineNumber":984,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":985,"author":{"gitId":"-"},"content":"            _slide.Shapes.Cast\u003cShape\u003e()"},{"lineNumber":986,"author":{"gitId":"-"},"content":"                        .Where(IsIndicator)"},{"lineNumber":987,"author":{"gitId":"-"},"content":"                        .ToList()"},{"lineNumber":988,"author":{"gitId":"-"},"content":"                        .ForEach(shape \u003d\u003e shape.Visible \u003d MsoTriState.msoTrue);"},{"lineNumber":989,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":990,"author":{"gitId":"-"},"content":""},{"lineNumber":991,"author":{"gitId":"-"},"content":"        public void BringIndicatorToFront()"},{"lineNumber":992,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":993,"author":{"gitId":"-"},"content":"            _slide.Shapes.Cast\u003cShape\u003e()"},{"lineNumber":994,"author":{"gitId":"-"},"content":"                        .Where(IsIndicator)"},{"lineNumber":995,"author":{"gitId":"-"},"content":"                        .ToList()"},{"lineNumber":996,"author":{"gitId":"-"},"content":"                        .ForEach(shape \u003d\u003e shape.ZOrder(MsoZOrderCmd.msoBringToFront));"},{"lineNumber":997,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":998,"author":{"gitId":"-"},"content":""},{"lineNumber":999,"author":{"gitId":"-"},"content":"        public static bool IsIndicator(Shape shape)"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"            return shape.Name.StartsWith(PptLabsIndicatorShapeName);"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1003,"author":{"gitId":"-"},"content":""},{"lineNumber":1004,"author":{"gitId":"-"},"content":"        public void MoveMotionAnimation()"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"            Sequence sequence \u003d _slide.TimeLine.MainSequence;"},{"lineNumber":1007,"author":{"gitId":"-"},"content":"            foreach (Effect eff in _slide.TimeLine.MainSequence)"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"                if ((eff.EffectType \u003e\u003d MsoAnimEffect.msoAnimEffectPathCircle \u0026\u0026 eff.EffectType \u003c\u003d MsoAnimEffect.msoAnimEffectPathRight) || eff.EffectType \u003d\u003d MsoAnimEffect.msoAnimEffectCustom)"},{"lineNumber":1010,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"                    AnimationBehavior motion \u003d eff.Behaviors[1];"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"                    if (motion.Type \u003d\u003d MsoAnimType.msoAnimTypeMotion)"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"                        Shape sh \u003d eff.Shape;"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"                        string motionPath \u003d motion.MotionEffect.Path.Trim();"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"                        if (motionPath.Last() \u003c \u0027A\u0027 || motionPath.Last() \u003e \u0027Z\u0027)"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"                        {"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"                            motionPath +\u003d \" X\";"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":1020,"author":{"gitId":"-"},"content":""},{"lineNumber":1021,"author":{"gitId":"-"},"content":"                        string[] path \u003d motionPath.Split(\u0027 \u0027);"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"                        int count \u003d path.Length;"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"                        float xVal \u003d Convert.ToSingle(path[count - 3]);"},{"lineNumber":1024,"author":{"gitId":"-"},"content":"                        float yVal \u003d Convert.ToSingle(path[count - 2]);"},{"lineNumber":1025,"author":{"gitId":"-"},"content":"                        sh.Left +\u003d (xVal * PowerPointPresentation.Current.SlideWidth);"},{"lineNumber":1026,"author":{"gitId":"-"},"content":"                        sh.Top +\u003d (yVal * PowerPointPresentation.Current.SlideHeight);"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1030,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1031,"author":{"gitId":"-"},"content":""},{"lineNumber":1032,"author":{"gitId":"-"},"content":"        public void AddAppearDisappearAnimation(Shape sh)"},{"lineNumber":1033,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1034,"author":{"gitId":"-"},"content":"            Sequence sequence \u003d _slide.TimeLine.MainSequence;"},{"lineNumber":1035,"author":{"gitId":"-"},"content":"            Effect effectAppear \u003d sequence.AddEffect(sh, MsoAnimEffect.msoAnimEffectAppear, MsoAnimateByLevel.msoAnimateLevelNone, MsoAnimTriggerType.msoAnimTriggerWithPrevious);"},{"lineNumber":1036,"author":{"gitId":"-"},"content":"            effectAppear.Timing.Duration \u003d 0;"},{"lineNumber":1037,"author":{"gitId":"-"},"content":""},{"lineNumber":1038,"author":{"gitId":"-"},"content":"            Effect effectDisappear \u003d sequence.AddEffect(sh, MsoAnimEffect.msoAnimEffectAppear, MsoAnimateByLevel.msoAnimateLevelNone, MsoAnimTriggerType.msoAnimTriggerWithPrevious);"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"            effectDisappear.Exit \u003d Office.MsoTriState.msoTrue;"},{"lineNumber":1040,"author":{"gitId":"-"},"content":"            effectDisappear.Timing.Duration \u003d 0;"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1042,"author":{"gitId":"-"},"content":""},{"lineNumber":1043,"author":{"gitId":"-"},"content":"        public Shape GetShapeWithSameIDAndName(Shape shapeToMatch)"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"            Shape tempMatchingShape \u003d null;"},{"lineNumber":1046,"author":{"gitId":"-"},"content":"            foreach (Shape sh in _slide.Shapes)"},{"lineNumber":1047,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1048,"author":{"gitId":"-"},"content":"                if (shapeToMatch.Id \u003d\u003d sh.Id \u0026\u0026 HaveSameNames(shapeToMatch, sh))"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"                    if (tempMatchingShape \u003d\u003d null)"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"                        tempMatchingShape \u003d sh;"},{"lineNumber":1053,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1054,"author":{"gitId":"-"},"content":"                    else"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1056,"author":{"gitId":"-"},"content":"                        if (GetDistanceBetweenShapes(shapeToMatch, sh) \u003c GetDistanceBetweenShapes(shapeToMatch, tempMatchingShape))"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"                        {"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"                            tempMatchingShape \u003d sh;"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1062,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"            return tempMatchingShape;"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1065,"author":{"gitId":"-"},"content":""},{"lineNumber":1066,"author":{"gitId":"-"},"content":"        public Shape GetShapeWithSameName(Shape shapeToMatch)"},{"lineNumber":1067,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1068,"author":{"gitId":"-"},"content":"            Shape tempMatchingShape \u003d null;"},{"lineNumber":1069,"author":{"gitId":"-"},"content":"            foreach (Shape sh in _slide.Shapes)"},{"lineNumber":1070,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"                if (HaveSameNames(shapeToMatch, sh))"},{"lineNumber":1072,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"                    if (tempMatchingShape \u003d\u003d null)"},{"lineNumber":1074,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1075,"author":{"gitId":"-"},"content":"                        tempMatchingShape \u003d sh;"},{"lineNumber":1076,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1077,"author":{"gitId":"-"},"content":"                    else"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"                        if (GetDistanceBetweenShapes(shapeToMatch, sh) \u003c GetDistanceBetweenShapes(shapeToMatch, tempMatchingShape))"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"                        {"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"                            tempMatchingShape \u003d sh;"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":1083,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1084,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1086,"author":{"gitId":"-"},"content":"            return tempMatchingShape;"},{"lineNumber":1087,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1088,"author":{"gitId":"-"},"content":""},{"lineNumber":1089,"author":{"gitId":"-"},"content":"        public bool IsSpotlightSlide()"},{"lineNumber":1090,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1091,"author":{"gitId":"-"},"content":"            return _slide.Name.Contains(\"PPTLabsSpotlight\");"},{"lineNumber":1092,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1093,"author":{"gitId":"-"},"content":""},{"lineNumber":1094,"author":{"gitId":"-"},"content":"        public bool IsAckSlide()"},{"lineNumber":1095,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1096,"author":{"gitId":"-"},"content":"            return PowerPointAckSlide.IsAckSlide(this);"},{"lineNumber":1097,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1098,"author":{"gitId":"-"},"content":""},{"lineNumber":1099,"author":{"gitId":"-"},"content":"        public PowerPointSlide CreateAckSlide()"},{"lineNumber":1100,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"            Slide ackSlide \u003d PowerPointPresentation.Current.Presentation.Slides.Add(PowerPointPresentation.Current.SlideCount + 1, PpSlideLayout.ppLayoutBlank);"},{"lineNumber":1102,"author":{"gitId":"-"},"content":"            return PowerPointAckSlide.FromSlideFactory(ackSlide);"},{"lineNumber":1103,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1104,"author":{"gitId":"-"},"content":""},{"lineNumber":1105,"author":{"gitId":"-"},"content":"        public bool HasTextFragments()"},{"lineNumber":1106,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1107,"author":{"gitId":"-"},"content":"            foreach (Shape sh in _slide.Shapes)"},{"lineNumber":1108,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"                if (sh.Name.StartsWith(\"PPTLabsHighlightTextFragmentsShape\"))"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"                    return true;"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1114,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1116,"author":{"gitId":"-"},"content":""},{"lineNumber":1117,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":1118,"author":{"gitId":"-"},"content":"        /// Get all shapes in the slide, ordered by when they appear in the animation timeline."},{"lineNumber":1119,"author":{"gitId":"-"},"content":"        /// Shapes with entry animations are ordered behind shapes without entry animations."},{"lineNumber":1120,"author":{"gitId":"-"},"content":"        /// Shapes without animations are placed at the back."},{"lineNumber":1121,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":1122,"author":{"gitId":"-"},"content":"        public List\u003cShape\u003e GetShapesOrderedByTimeline()"},{"lineNumber":1123,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1124,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e shapesWithEntry \u003d new List\u003cShape\u003e();"},{"lineNumber":1125,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e shapesWithoutEntry \u003d new List\u003cShape\u003e();"},{"lineNumber":1126,"author":{"gitId":"-"},"content":"            HashSet\u003cint\u003e identifiedShapeIds \u003d new HashSet\u003cint\u003e();"},{"lineNumber":1127,"author":{"gitId":"-"},"content":""},{"lineNumber":1128,"author":{"gitId":"-"},"content":"            Sequence seq \u003d _slide.TimeLine.MainSequence;"},{"lineNumber":1129,"author":{"gitId":"-"},"content":"            for (int i \u003d 1; i \u003c\u003d seq.Count; ++i)"},{"lineNumber":1130,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1131,"author":{"gitId":"-"},"content":"                Effect effect \u003d seq[i];"},{"lineNumber":1132,"author":{"gitId":"-"},"content":"                Shape shape \u003d effect.Shape;"},{"lineNumber":1133,"author":{"gitId":"-"},"content":"                if (!identifiedShapeIds.Contains(shape.Id))"},{"lineNumber":1134,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1135,"author":{"gitId":"-"},"content":"                    identifiedShapeIds.Add(shape.Id);"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"                    if (IsEntryEffect(effect))"},{"lineNumber":1137,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1138,"author":{"gitId":"-"},"content":"                        shapesWithEntry.Add(shape);"},{"lineNumber":1139,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1140,"author":{"gitId":"-"},"content":"                    else"},{"lineNumber":1141,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1142,"author":{"gitId":"-"},"content":"                        shapesWithoutEntry.Add(shape);"},{"lineNumber":1143,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1144,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1145,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1146,"author":{"gitId":"-"},"content":""},{"lineNumber":1147,"author":{"gitId":"-"},"content":"            IEnumerable\u003cShape\u003e remainingShapes \u003d _slide.Shapes.Cast\u003cShape\u003e().Where(shape \u003d\u003e !identifiedShapeIds.Contains(shape.Id));"},{"lineNumber":1148,"author":{"gitId":"-"},"content":""},{"lineNumber":1149,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e shapes \u003d shapesWithoutEntry;"},{"lineNumber":1150,"author":{"gitId":"-"},"content":"            shapes.AddRange(shapesWithEntry);"},{"lineNumber":1151,"author":{"gitId":"-"},"content":"            shapes.AddRange(remainingShapes);"},{"lineNumber":1152,"author":{"gitId":"-"},"content":"            return shapes;"},{"lineNumber":1153,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1154,"author":{"gitId":"-"},"content":""},{"lineNumber":1155,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":1156,"author":{"gitId":"-"},"content":"        /// Returns all HighlightTextFragmentsShapes in the order they appear in the animation timeline."},{"lineNumber":1157,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":1158,"author":{"gitId":"-"},"content":"        public List\u003cShape\u003e GetTextFragments()"},{"lineNumber":1159,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1160,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e allShapes \u003d GetShapesOrderedByTimeline();"},{"lineNumber":1161,"author":{"gitId":"-"},"content":"            return allShapes.Where(shape \u003d\u003e shape.Name.StartsWith(\"PPTLabsHighlightTextFragmentsShape\")).ToList();"},{"lineNumber":1162,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1163,"author":{"gitId":"-"},"content":""},{"lineNumber":1164,"author":{"gitId":"-"},"content":"        public bool HasCaptions()"},{"lineNumber":1165,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1166,"author":{"gitId":"-"},"content":"            foreach (Shape shape in this.Shapes)"},{"lineNumber":1167,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1168,"author":{"gitId":"-"},"content":"                if (shape.Name.StartsWith(\"PowerPointLabs Caption\"))"},{"lineNumber":1169,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1170,"author":{"gitId":"-"},"content":"                    return true;"},{"lineNumber":1171,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1172,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1173,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":1174,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1175,"author":{"gitId":"-"},"content":""},{"lineNumber":1176,"author":{"gitId":"-"},"content":"        public bool HasAudio()"},{"lineNumber":1177,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1178,"author":{"gitId":"-"},"content":"            foreach (Shape shape in this.Shapes)"},{"lineNumber":1179,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1180,"author":{"gitId":"-"},"content":"                if (shape.Name.Contains(ComputerVoiceRuntimeService.SpeechShapePrefix) || "},{"lineNumber":1181,"author":{"gitId":"-"},"content":"                    shape.Name.Contains(ComputerVoiceRuntimeService.SpeechShapePrefixOld))"},{"lineNumber":1182,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1183,"author":{"gitId":"-"},"content":"                    return true;"},{"lineNumber":1184,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1185,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1186,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":1187,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1188,"author":{"gitId":"-"},"content":""},{"lineNumber":1189,"author":{"gitId":"-"},"content":"        public Effect AddShapeAsLastAutoplaying(Shape shape, MsoAnimEffect effect)"},{"lineNumber":1190,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1191,"author":{"gitId":"-"},"content":"            Effect addedEffect \u003d _slide.TimeLine.MainSequence.AddEffect(shape, effect,"},{"lineNumber":1192,"author":{"gitId":"-"},"content":"                MsoAnimateByLevel.msoAnimateLevelNone, MsoAnimTriggerType.msoAnimTriggerWithPrevious);"},{"lineNumber":1193,"author":{"gitId":"-"},"content":"            return addedEffect;"},{"lineNumber":1194,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1195,"author":{"gitId":"-"},"content":""},{"lineNumber":1196,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":1197,"author":{"gitId":"-"},"content":"        /// Default shapes have the property where if you duplicate them (or copy/paste), they change names."},{"lineNumber":1198,"author":{"gitId":"-"},"content":"        /// This command renames the shapes in the slide so that they don\u0027t have the default names."},{"lineNumber":1199,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":1200,"author":{"gitId":"-"},"content":"        public void MakeShapeNamesNonDefault()"},{"lineNumber":1201,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1202,"author":{"gitId":"-"},"content":"            IEnumerable\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e();"},{"lineNumber":1203,"author":{"gitId":"-"},"content":"            foreach (Shape shape in shapes)"},{"lineNumber":1204,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1205,"author":{"gitId":"-"},"content":"                if (shape.HasDefaultName())"},{"lineNumber":1206,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1207,"author":{"gitId":"-"},"content":"                    shape.Name \u003d UnnamedShapeName + CommonUtil.UniqueDigitString();"},{"lineNumber":1208,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1209,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1210,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1211,"author":{"gitId":"-"},"content":""},{"lineNumber":1212,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":1213,"author":{"gitId":"-"},"content":"        /// Gives all shapes in the slide unique names. Good to call before sync logic."},{"lineNumber":1214,"author":{"gitId":"-"},"content":"        /// Note: If the name of the shape is used to identify the shape (e.g. through AgendaShape),"},{"lineNumber":1215,"author":{"gitId":"-"},"content":"        /// this can be dangerous if there are duplicates as it overrides the original name."},{"lineNumber":1216,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":1217,"author":{"gitId":"-"},"content":"        public void MakeShapeNamesUnique(Func\u003cShape, bool\u003e restrictTo \u003d null)"},{"lineNumber":1218,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1219,"author":{"gitId":"-"},"content":"            if (restrictTo \u003d\u003d null)"},{"lineNumber":1220,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1221,"author":{"gitId":"-"},"content":"                restrictTo \u003d shape \u003d\u003e true;"},{"lineNumber":1222,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1223,"author":{"gitId":"-"},"content":""},{"lineNumber":1224,"author":{"gitId":"-"},"content":"            HashSet\u003cstring\u003e currentNames \u003d new HashSet\u003cstring\u003e();"},{"lineNumber":1225,"author":{"gitId":"-"},"content":"            IEnumerable\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().Where(restrictTo);"},{"lineNumber":1226,"author":{"gitId":"-"},"content":""},{"lineNumber":1227,"author":{"gitId":"-"},"content":"            foreach (Shape shape in shapes)"},{"lineNumber":1228,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1229,"author":{"gitId":"-"},"content":"                if (currentNames.Contains(shape.Name))"},{"lineNumber":1230,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1231,"author":{"gitId":"-"},"content":"                    shape.Name \u003d UnnamedShapeName + CommonUtil.UniqueDigitString();"},{"lineNumber":1232,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1233,"author":{"gitId":"-"},"content":"                currentNames.Add(shape.Name);"},{"lineNumber":1234,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1235,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1236,"author":{"gitId":"-"},"content":""},{"lineNumber":1237,"author":{"gitId":"-"},"content":"        public void DeleteSlideNumberShapes()"},{"lineNumber":1238,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1239,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().ToList();"},{"lineNumber":1240,"author":{"gitId":"-"},"content":""},{"lineNumber":1241,"author":{"gitId":"-"},"content":"            IEnumerable\u003cShape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e current.Type \u003d\u003d MsoShapeType.msoPlaceholder \u0026\u0026 current.PlaceholderFormat.Type \u003d\u003d PpPlaceholderType.ppPlaceholderSlideNumber);"},{"lineNumber":1242,"author":{"gitId":"-"},"content":""},{"lineNumber":1243,"author":{"gitId":"-"},"content":"            foreach (Shape s in matchingShapes)"},{"lineNumber":1244,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1245,"author":{"gitId":"-"},"content":"                s.SafeDelete();"},{"lineNumber":1246,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1247,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1248,"author":{"gitId":"-"},"content":""},{"lineNumber":1249,"author":{"gitId":"-"},"content":""},{"lineNumber":1250,"author":{"gitId":"-"},"content":"        protected Shape AddPowerPointLabsIndicator()"},{"lineNumber":1251,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1252,"author":{"gitId":"-"},"content":"            String tempFileName \u003d Path.GetTempFileName();"},{"lineNumber":1253,"author":{"gitId":"-"},"content":"            Properties.Resources.Indicator.Save(tempFileName);"},{"lineNumber":1254,"author":{"gitId":"-"},"content":"            Shape indicatorShape \u003d _slide.Shapes.AddPicture(tempFileName, Office.MsoTriState.msoFalse, Office.MsoTriState.msoTrue, PowerPointPresentation.Current.SlideWidth - 120, 0, 120, 84);"},{"lineNumber":1255,"author":{"gitId":"-"},"content":""},{"lineNumber":1256,"author":{"gitId":"-"},"content":"            indicatorShape.Left \u003d PowerPointPresentation.Current.SlideWidth - 120;"},{"lineNumber":1257,"author":{"gitId":"-"},"content":"            indicatorShape.Top \u003d 0;"},{"lineNumber":1258,"author":{"gitId":"-"},"content":"            indicatorShape.Width \u003d 120;"},{"lineNumber":1259,"author":{"gitId":"-"},"content":"            indicatorShape.Height \u003d 84;"},{"lineNumber":1260,"author":{"gitId":"-"},"content":"            indicatorShape.Name \u003d PptLabsIndicatorShapeName + DateTime.Now.ToString(\"yyyyMMddHHmmssffff\");"},{"lineNumber":1261,"author":{"gitId":"-"},"content":""},{"lineNumber":1262,"author":{"gitId":"-"},"content":"            ShapeUtil.MakeShapeViewTimeInvisible(indicatorShape, _slide);"},{"lineNumber":1263,"author":{"gitId":"-"},"content":""},{"lineNumber":1264,"author":{"gitId":"-"},"content":"            return indicatorShape;"},{"lineNumber":1265,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1266,"author":{"gitId":"-"},"content":""},{"lineNumber":1267,"author":{"gitId":"-"},"content":"        protected void DeleteSlideNotes()"},{"lineNumber":1268,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1269,"author":{"gitId":"-"},"content":"            if (_slide.HasNotesPage \u003d\u003d MsoTriState.msoTrue)"},{"lineNumber":1270,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1271,"author":{"gitId":"-"},"content":"                foreach (Shape sh in _slide.NotesPage.Shapes)"},{"lineNumber":1272,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1273,"author":{"gitId":"-"},"content":"                    if (sh.TextFrame.HasText \u003d\u003d MsoTriState.msoTrue)"},{"lineNumber":1274,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1275,"author":{"gitId":"-"},"content":"                        sh.TextEffect.Text \u003d \"\";"},{"lineNumber":1276,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1277,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1278,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1279,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1280,"author":{"gitId":"-"},"content":""},{"lineNumber":1281,"author":{"gitId":"-"},"content":"        protected void DeleteSlideMedia()"},{"lineNumber":1282,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1283,"author":{"gitId":"-"},"content":"            foreach (Shape sh in _slide.Shapes)"},{"lineNumber":1284,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1285,"author":{"gitId":"-"},"content":"                if (sh.Type \u003d\u003d MsoShapeType.msoMedia)"},{"lineNumber":1286,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1287,"author":{"gitId":"-"},"content":"                    sh.SafeDelete();"},{"lineNumber":1288,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1289,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1290,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1291,"author":{"gitId":"-"},"content":""},{"lineNumber":1292,"author":{"gitId":"-"},"content":"        protected void RemoveSlideTransitions()"},{"lineNumber":1293,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1294,"author":{"gitId":"-"},"content":"            _slide.SlideShowTransition.EntryEffect \u003d PpEntryEffect.ppEffectNone;"},{"lineNumber":1295,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1296,"author":{"gitId":"-"},"content":""},{"lineNumber":1297,"author":{"gitId":"-"},"content":"        private Effect InsertAnimationAtIndex(Shape shape, int index, MsoAnimEffect animationEffect,"},{"lineNumber":1298,"author":{"gitId":"iskandarzulkarnaien"},"content":"            MsoAnimTriggerType triggerType, bool isExitEffect \u003d false)"},{"lineNumber":1299,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1300,"author":{"gitId":"-"},"content":"            Sequence animationSequence \u003d _slide.TimeLine.MainSequence;"},{"lineNumber":1301,"author":{"gitId":"-"},"content":"            Effect effect \u003d animationSequence.AddEffect(shape, animationEffect, MsoAnimateByLevel.msoAnimateLevelNone,"},{"lineNumber":1302,"author":{"gitId":"-"},"content":"                triggerType);"},{"lineNumber":1303,"author":{"gitId":"iskandarzulkarnaien"},"content":""},{"lineNumber":1304,"author":{"gitId":"iskandarzulkarnaien"},"content":"            if (isExitEffect)"},{"lineNumber":1305,"author":{"gitId":"iskandarzulkarnaien"},"content":"            {"},{"lineNumber":1306,"author":{"gitId":"iskandarzulkarnaien"},"content":"                effect.Exit \u003d MsoTriState.msoTrue;"},{"lineNumber":1307,"author":{"gitId":"iskandarzulkarnaien"},"content":"            }"},{"lineNumber":1308,"author":{"gitId":"iskandarzulkarnaien"},"content":""},{"lineNumber":1309,"author":{"gitId":"-"},"content":"            effect.MoveTo(index);"},{"lineNumber":1310,"author":{"gitId":"-"},"content":"            return effect;"},{"lineNumber":1311,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1312,"author":{"gitId":"-"},"content":""},{"lineNumber":1313,"author":{"gitId":"-"},"content":"        private bool IsNextSlideTransitionBlacklisted()"},{"lineNumber":1314,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1315,"author":{"gitId":"-"},"content":"            bool isLastSlide \u003d _slide.SlideIndex \u003d\u003d PowerPointPresentation.Current.SlideCount;"},{"lineNumber":1316,"author":{"gitId":"-"},"content":"            if (isLastSlide)"},{"lineNumber":1317,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1318,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":1319,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1320,"author":{"gitId":"-"},"content":""},{"lineNumber":1321,"author":{"gitId":"-"},"content":"            // Indexes are from 1, while the slide collection starts from 0."},{"lineNumber":1322,"author":{"gitId":"-"},"content":"            PowerPointSlide nextSlide \u003d PowerPointPresentation.Current.Slides[Index];"},{"lineNumber":1323,"author":{"gitId":"-"},"content":"            switch (nextSlide.Transition.EntryEffect)"},{"lineNumber":1324,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1325,"author":{"gitId":"-"},"content":"                case PpEntryEffect.ppEffectCoverUp:"},{"lineNumber":1326,"author":{"gitId":"-"},"content":"                case PpEntryEffect.ppEffectCoverLeftUp:"},{"lineNumber":1327,"author":{"gitId":"-"},"content":"                case PpEntryEffect.ppEffectCoverRightUp:"},{"lineNumber":1328,"author":{"gitId":"-"},"content":"                case PpEntryEffect.ppEffectFlyFromBottom:"},{"lineNumber":1329,"author":{"gitId":"-"},"content":"                case PpEntryEffect.ppEffectPushUp:"},{"lineNumber":1330,"author":{"gitId":"-"},"content":"                case PpEntryEffect.ppEffectPushDown:"},{"lineNumber":1331,"author":{"gitId":"-"},"content":"                case PpEntryEffect.ppEffectSwitchUp:"},{"lineNumber":1332,"author":{"gitId":"-"},"content":"                case PpEntryEffect.ppEffectFlipUp:"},{"lineNumber":1333,"author":{"gitId":"-"},"content":"                case PpEntryEffect.ppEffectCubeUp:"},{"lineNumber":1334,"author":{"gitId":"-"},"content":"                case PpEntryEffect.ppEffectRotateUp:"},{"lineNumber":1335,"author":{"gitId":"-"},"content":"                case PpEntryEffect.ppEffectBoxUp:"},{"lineNumber":1336,"author":{"gitId":"-"},"content":"                case PpEntryEffect.ppEffectOrbitUp:"},{"lineNumber":1337,"author":{"gitId":"-"},"content":"                case PpEntryEffect.ppEffectPanUp:"},{"lineNumber":1338,"author":{"gitId":"-"},"content":"                    return true;"},{"lineNumber":1339,"author":{"gitId":"-"},"content":"                default:"},{"lineNumber":1340,"author":{"gitId":"-"},"content":"                    return false;"},{"lineNumber":1341,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1342,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1343,"author":{"gitId":"-"},"content":""},{"lineNumber":1344,"author":{"gitId":"-"},"content":"        private static void DeleteEffectsForShape(Shape shape, IEnumerable\u003cEffect\u003e mainEffects)"},{"lineNumber":1345,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1346,"author":{"gitId":"-"},"content":"            List\u003cEffect\u003e shapeToDeleteList \u003d mainEffects.Where(e \u003d\u003e e.Shape.Equals(shape)).ToList();"},{"lineNumber":1347,"author":{"gitId":"-"},"content":""},{"lineNumber":1348,"author":{"gitId":"-"},"content":"            foreach (Effect e in shapeToDeleteList)"},{"lineNumber":1349,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1350,"author":{"gitId":"-"},"content":"                e.Delete();"},{"lineNumber":1351,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1352,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1353,"author":{"gitId":"-"},"content":""},{"lineNumber":1354,"author":{"gitId":"-"},"content":"        private float GetDistanceBetweenShapes(Shape sh1, Shape sh2)"},{"lineNumber":1355,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1356,"author":{"gitId":"-"},"content":"            float sh1CenterX \u003d (sh1.Left + (sh1.Width / 2));"},{"lineNumber":1357,"author":{"gitId":"-"},"content":"            float sh2CenterX \u003d (sh2.Left + (sh2.Width / 2));"},{"lineNumber":1358,"author":{"gitId":"-"},"content":"            float sh1CenterY \u003d (sh1.Top + (sh1.Height / 2));"},{"lineNumber":1359,"author":{"gitId":"-"},"content":"            float sh2CenterY \u003d (sh2.Top + (sh2.Height / 2));"},{"lineNumber":1360,"author":{"gitId":"-"},"content":"            float distSquared \u003d (float)(Math.Pow((sh2CenterX - sh1CenterX), 2) + Math.Pow((sh2CenterY - sh1CenterY), 2));"},{"lineNumber":1361,"author":{"gitId":"-"},"content":"            return (float)(Math.Sqrt(distSquared));"},{"lineNumber":1362,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1363,"author":{"gitId":"-"},"content":""},{"lineNumber":1364,"author":{"gitId":"-"},"content":"        private bool HaveSameNames(Shape sh1, Shape sh2)"},{"lineNumber":1365,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1366,"author":{"gitId":"-"},"content":"            String name1 \u003d sh1.Name;"},{"lineNumber":1367,"author":{"gitId":"-"},"content":"            String name2 \u003d sh2.Name;"},{"lineNumber":1368,"author":{"gitId":"-"},"content":""},{"lineNumber":1369,"author":{"gitId":"-"},"content":"            return (name1.ToUpper().CompareTo(name2.ToUpper()) \u003d\u003d 0);"},{"lineNumber":1370,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1371,"author":{"gitId":"-"},"content":""},{"lineNumber":1372,"author":{"gitId":"-"},"content":"        private Effect InsertAnimationBeforeExisting(Shape shape, Effect existing, MsoAnimEffect effect)"},{"lineNumber":1373,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1374,"author":{"gitId":"-"},"content":"            Sequence sequence \u003d _slide.TimeLine.MainSequence;"},{"lineNumber":1375,"author":{"gitId":"-"},"content":""},{"lineNumber":1376,"author":{"gitId":"-"},"content":"            Effect newAnimation \u003d sequence.AddEffect(shape, effect, MsoAnimateByLevel.msoAnimateLevelNone,"},{"lineNumber":1377,"author":{"gitId":"-"},"content":"                MsoAnimTriggerType.msoAnimTriggerWithPrevious);"},{"lineNumber":1378,"author":{"gitId":"-"},"content":"            newAnimation.MoveBefore(existing);"},{"lineNumber":1379,"author":{"gitId":"-"},"content":""},{"lineNumber":1380,"author":{"gitId":"-"},"content":"            return newAnimation;"},{"lineNumber":1381,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1382,"author":{"gitId":"-"},"content":""},{"lineNumber":1383,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":1384,"author":{"gitId":"-"},"content":"        /// TODO: What does \"Entry Animation\" mean? entryEffects.Contains(effectType) could mean that it is either an entry or exit animation. Perhaps change it to entryEffects.Contains(effectType) \u0026\u0026 entryEffects.Exit \u003d\u003d Mso False"},{"lineNumber":1385,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":1386,"author":{"gitId":"-"},"content":"        private bool IsEntryEffect(Effect effect)"},{"lineNumber":1387,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1388,"author":{"gitId":"-"},"content":"            return effect.Exit \u003d\u003d MsoTriState.msoFalse \u0026\u0026 entryEffects.Contains(effect.EffectType);"},{"lineNumber":1389,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1390,"author":{"gitId":"iskandarzulkarnaien"},"content":""},{"lineNumber":1391,"author":{"gitId":"iskandarzulkarnaien"},"content":"        private bool IsExitEffect(Effect effect)"},{"lineNumber":1392,"author":{"gitId":"iskandarzulkarnaien"},"content":"        {"},{"lineNumber":1393,"author":{"gitId":"iskandarzulkarnaien"},"content":"            return effect.Exit \u003d\u003d MsoTriState.msoTrue;"},{"lineNumber":1394,"author":{"gitId":"iskandarzulkarnaien"},"content":"        }"},{"lineNumber":1395,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1396,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"iskandarzulkarnaien":17,"-":1379}},{"path":"PowerPointLabs/PowerPointLabs/PasteLab/ReplaceWithClipboard.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"iskandarzulkarnaien"},"content":"using System.Collections.Generic;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"using Microsoft.Office.Interop.PowerPoint;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Extension;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"using PowerPointLabs.Models;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"using PowerPointLabs.SyncLab.ObjectFormats;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"using PowerPointLabs.Utils;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.PasteLab"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    static internal class ReplaceWithClipboard"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        public static ShapeRange Execute(PowerPointPresentation presentation, PowerPointSlide slide, "},{"lineNumber":14,"author":{"gitId":"-"},"content":"                                        ShapeRange selectedShapes, ShapeRange selectedChildShapes, ShapeRange pastingShapes)"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            // ignore height \u0026 width, it doesn\u0027t always make sense to sync the height \u0026 width especially for circles, squares"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            List\u003cFormat\u003e formatsToIgnore \u003d new List\u003cFormat\u003e {new PositionHeightFormat(), new PositionWidthFormat()};"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"iskandarzulkarnaien"},"content":"            // the following effects are not useful for pictures and cause degradation of picture quality"},{"lineNumber":20,"author":{"gitId":"iskandarzulkarnaien"},"content":"            List\u003cFormat\u003e formatsToIgnoreIfPicture \u003d new List\u003cFormat\u003e"},{"lineNumber":21,"author":{"gitId":"iskandarzulkarnaien"},"content":"            {"},{"lineNumber":22,"author":{"gitId":"iskandarzulkarnaien"},"content":"                new ContourColorFormat(), new ContourWidthFormat(), new DepthSizeFormat(), new LightingAngleFormat(),"},{"lineNumber":23,"author":{"gitId":"iskandarzulkarnaien"},"content":"                new MaterialEffectFormat(), new PositionHeightFormat(), new PositionWidthFormat(), new ThreeDRotationEffectFormat()"},{"lineNumber":24,"author":{"gitId":"iskandarzulkarnaien"},"content":"            };"},{"lineNumber":25,"author":{"gitId":"iskandarzulkarnaien"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"            // Replacing individual shape"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            if (selectedChildShapes.Count \u003d\u003d 0)"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                Shape selectedShape \u003d selectedShapes[1];"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"                Shape pastingShape \u003d pastingShapes[1];"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                if (pastingShapes.Count \u003e 1)"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    pastingShape \u003d pastingShapes.Group();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                pastingShape.Left \u003d selectedShape.Left;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                pastingShape.Top \u003d selectedShape.Top;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                ShapeUtil.MoveZToJustInFront(pastingShape, selectedShape);"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"                slide.DeleteShapeAnimations(pastingShape);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                slide.TransferAnimation(selectedShape, pastingShape);"},{"lineNumber":42,"author":{"gitId":"iskandarzulkarnaien"},"content":"                // Must remove animations from source shape or else undo will fail"},{"lineNumber":43,"author":{"gitId":"iskandarzulkarnaien"},"content":"                slide.RemoveAnimationsForShape(selectedShape);"},{"lineNumber":44,"author":{"gitId":"iskandarzulkarnaien"},"content":""},{"lineNumber":45,"author":{"gitId":"iskandarzulkarnaien"},"content":"                if (pastingShape.IsPicture())"},{"lineNumber":46,"author":{"gitId":"iskandarzulkarnaien"},"content":"                {"},{"lineNumber":47,"author":{"gitId":"iskandarzulkarnaien"},"content":"                    ShapeUtil.ApplyAllPossibleFormats(selectedShape, pastingShape, formatsToIgnoreIfPicture);"},{"lineNumber":48,"author":{"gitId":"iskandarzulkarnaien"},"content":"                }"},{"lineNumber":49,"author":{"gitId":"iskandarzulkarnaien"},"content":"                else"},{"lineNumber":50,"author":{"gitId":"iskandarzulkarnaien"},"content":"                {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                    ShapeUtil.ApplyAllPossibleFormats(selectedShape, pastingShape, formatsToIgnore);"},{"lineNumber":52,"author":{"gitId":"iskandarzulkarnaien"},"content":"                }"},{"lineNumber":53,"author":{"gitId":"iskandarzulkarnaien"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"                selectedShape.SafeDelete();"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"                return slide.ToShapeRange(pastingShape);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            // Replacing shape within a group"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                Shape selectedGroup \u003d selectedShapes[1];"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                Shape selectedChildShape \u003d selectedChildShapes[1];"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                string originalGroupName \u003d selectedGroup.Name;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                int zOrder \u003d selectedChildShape.ZOrderPosition;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Shape shapeAbove \u003d null;"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"                float posLeft \u003d selectedChildShape.Left;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                float posTop \u003d selectedChildShape.Top;"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"                Shape tempShapeForAnimation \u003d slide.Shapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType.msoShapeRectangle, 0, 0, 1, 1);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                slide.TransferAnimation(selectedGroup, tempShapeForAnimation);"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"                // Get all siblings of selected child"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                List\u003cShape\u003e selectedGroupShapeList \u003d new List\u003cShape\u003e();"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                for (int i \u003d 1; i \u003c\u003d selectedGroup.GroupItems.Count; i++)"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                    Shape shape \u003d selectedGroup.GroupItems.Range(i)[1];"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                    if (shape \u003d\u003d selectedChildShape)"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                        continue;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                    selectedGroupShapeList.Add(shape);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                    if (shape.ZOrderPosition - 1 \u003d\u003d zOrder)"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                        shapeAbove \u003d shape;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"                // apply all styles from shapes to be pasted, but ignore x,y positions"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                // x,y must be applied individually"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                // each item replaced has a different positioneach shape in PasteIntoGroup.Execute(...),"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"                List\u003cFormat\u003e positionFormats \u003d new List\u003cFormat\u003e {new PositionXFormat(), new PositionYFormat()};"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                formatsToIgnore.AddRange(positionFormats);"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"                for (int i \u003d 1; i \u003c\u003d pastingShapes.Count; i++)"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":98,"author":{"gitId":"iskandarzulkarnaien"},"content":"                    if (pastingShapes[i].IsPicture())"},{"lineNumber":99,"author":{"gitId":"iskandarzulkarnaien"},"content":"                    {"},{"lineNumber":100,"author":{"gitId":"iskandarzulkarnaien"},"content":"                        ShapeUtil.ApplyAllPossibleFormats(selectedChildShape, pastingShapes[i], formatsToIgnoreIfPicture);"},{"lineNumber":101,"author":{"gitId":"iskandarzulkarnaien"},"content":"                    }"},{"lineNumber":102,"author":{"gitId":"iskandarzulkarnaien"},"content":"                    else"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                        ShapeUtil.ApplyAllPossibleFormats(selectedChildShape, pastingShapes[i], formatsToIgnore);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"                // Remove selected child since it is being replaced"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                ShapeRange shapesToGroup \u003d slide.ToShapeRange(selectedGroupShapeList);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                selectedGroup.Ungroup();"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                selectedChildShape.SafeDelete();"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"                ShapeRange result \u003d PasteIntoGroup.Execute(presentation, slide, shapesToGroup, pastingShapes, posLeft, posTop, shapeAbove);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                result[1].Name \u003d originalGroupName;"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                slide.TransferAnimation(tempShapeForAnimation, result[1]);"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"                tempShapeForAnimation.SafeDelete();"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                return result;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"iskandarzulkarnaien":24,"-":98}},{"path":"PowerPointLabs/PowerPointLabs/PictureSlidesLab/Util/StoragePath.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using System;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"using System.Collections.Generic;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"using System.Collections.ObjectModel;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"using System.IO;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"using System.Xml.Serialization;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Log;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"using PowerPointLabs.PictureSlidesLab.Model;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"using PowerPointLabs.Properties;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"using PowerPointLabs.Views;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.PictureSlidesLab.Util"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public class StoragePath"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        public static string AggregatedFolder \u003d Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) + @\"\\\" + \"pptlabs_pictureSlidesLab\" + @\"\\\";"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"        public static readonly string LoadingImgPath \u003d AggregatedFolder + \"loading\";"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        public static readonly string ChoosePicturesImgPath \u003d AggregatedFolder + \"choosePicture\";"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        public static readonly string NoPicturePlaceholderImgPath \u003d AggregatedFolder + \"noPicturePlaceholder\";"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        public static readonly string SampleImg1Path \u003d AggregatedFolder + \"sample1\";"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        public static readonly string SampleImg2Path \u003d AggregatedFolder + \"sample2\";"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"        private const string PictureSlidesLabImagesList \u003d \"PictureSlidesLabImagesList\";"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        private const string PictureSlidesLabSettings \u003d \"PictureSlidesLabSettings\";"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"        private static bool _isInit;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        private static bool _isFirstTimeUsage;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"        public static bool InitPersistentFolder()"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            if (!Directory.Exists(AggregatedFolder))"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                _isFirstTimeUsage \u003d true;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                try"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    Directory.CreateDirectory(AggregatedFolder);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                catch"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    return false;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"            InitResources();"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            _isInit \u003d true;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"        public static bool IsFirstTimeUsage()"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return _isFirstTimeUsage;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"        public static void CleanPersistentFolder(ICollection\u003cstring\u003e filesInUse)"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                Empty(new DirectoryInfo(AggregatedFolder), filesInUse);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            catch (Exception e)"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                ErrorDialogBox.ShowDialog(\"Failed to remove unused images.\", e.Message, e);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"        public static string GetPath(string name)"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            if (!_isInit)"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                throw new Exception(\"StoragePath is not initialized!\");"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return AggregatedFolder + name;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /// Save images list"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"list\"\u003e\u003c/param\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public static void Save(Collection\u003cImageItem\u003e list)"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                using (StreamWriter writer \u003d new StreamWriter(GetPath(PictureSlidesLabImagesList)))"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                    XmlSerializer serializer \u003d new XmlSerializer(list.GetType());"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                    serializer.Serialize(writer, list);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                    writer.Flush();"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            catch (Exception e)"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Logger.LogException(e, \"Failed to save Picture Slides Lab images list\");"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        "},{"lineNumber":97,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        /// Save PSL settings"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"settings\"\u003e\u003c/param\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public static void Save(Model.Settings settings)"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                using (StreamWriter writer \u003d new StreamWriter(GetPath(PictureSlidesLabSettings)))"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                    XmlSerializer serializer \u003d new XmlSerializer(settings.GetType());"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                    serializer.Serialize(writer, settings);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                    writer.Flush();"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            catch (Exception e)"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                Logger.LogException(e, \"Failed to save Picture Slides Lab settings\");"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        /// Load images list"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        /// \u003creturns\u003e\u003c/returns\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public static ObservableCollection\u003cImageItem\u003e LoadPictures()"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                using (FileStream stream \u003d File.OpenRead(GetPath(PictureSlidesLabImagesList)))"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                    XmlSerializer serializer \u003d new XmlSerializer(typeof(ObservableCollection\u003cImageItem\u003e));"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                    ObservableCollection\u003cImageItem\u003e list \u003d serializer.Deserialize(stream) as ObservableCollection\u003cImageItem\u003e "},{"lineNumber":130,"author":{"gitId":"-"},"content":"                        ?? new ObservableCollection\u003cImageItem\u003e();"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return list;"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            catch (Exception e)"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                Logger.LogException(e, \"Failed to load Picture Slides Lab images list\");"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                return new ObservableCollection\u003cImageItem\u003e();"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        /// Load PSL settings"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        /// \u003creturns\u003e\u003c/returns\u003e"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public static Model.Settings LoadSettings()"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                using (FileStream stream \u003d File.OpenRead(GetPath(PictureSlidesLabSettings)))"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    XmlSerializer serializer \u003d new XmlSerializer(typeof(Model.Settings));"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    Model.Settings settings \u003d serializer.Deserialize(stream) as Model.Settings"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                        ?? new Model.Settings();"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                    return settings;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            catch (Exception e)"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                Logger.LogException(e, \"Failed to load Picture Slides Lab settings\");"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                return new Model.Settings();"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"        private static void Empty(DirectoryInfo directory, ICollection\u003cstring\u003e filesInUse)"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            if (!directory.Exists)"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                filesInUse.Add(AggregatedFolder + PictureSlidesLabImagesList);"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                filesInUse.Add(AggregatedFolder + PictureSlidesLabSettings);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                filesInUse.Add(LoadingImgPath);"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                filesInUse.Add(ChoosePicturesImgPath);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                filesInUse.Add(NoPicturePlaceholderImgPath);"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                filesInUse.Add(SampleImg1Path);"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                filesInUse.Add(SampleImg2Path);"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                foreach (FileInfo file in directory.GetFiles())"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                    if (!filesInUse.Contains(file.FullName))"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                        try"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                        {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                            file.Delete();"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                        catch"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                        {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                            // may be still in use, which is fine"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            catch (Exception)"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                // ignore ex, if cannot delete trash"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"        private static void InitResources()"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":205,"author":{"gitId":"xantho09"},"content":"                Properties.Resources.Loading.Save(LoadingImgPath);"},{"lineNumber":206,"author":{"gitId":"xantho09"},"content":"                Properties.Resources.ChoosePicturesIcon.Save(ChoosePicturesImgPath);"},{"lineNumber":207,"author":{"gitId":"xantho09"},"content":"                Properties.Resources.DefaultPicture.Save(NoPicturePlaceholderImgPath);"},{"lineNumber":208,"author":{"gitId":"xantho09"},"content":"                Properties.Resources.PslSample1.Save(SampleImg1Path);"},{"lineNumber":209,"author":{"gitId":"xantho09"},"content":"                Properties.Resources.PslSample2.Save(SampleImg2Path);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            catch"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                // may fail to save it, which is fine"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":212,"xantho09":5}},{"path":"PowerPointLabs/PowerPointLabs/PositionsLab/PositionsPaneWPF.xaml.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using System;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"using System.Collections.Generic;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"using System.Diagnostics.CodeAnalysis;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"using System.Windows;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"using System.Windows.Controls.Primitives;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"using System.Windows.Input;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"using System.Windows.Threading;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"using Microsoft.Office.Interop.PowerPoint;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Extension;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Log;"},{"lineNumber":12,"author":{"gitId":"xantho09"},"content":"using PowerPointLabs.ColorThemes;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"using PowerPointLabs.ColorThemes.Extensions;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"using PowerPointLabs.PositionsLab.Views;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"using PowerPointLabs.TextCollection;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"using PowerPointLabs.Utils;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"using PowerPointLabs.Views;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"using PPExtraEventHelper;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"using Office \u003d Microsoft.Office.Core;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.PositionsLab"},{"lineNumber":25,"author":{"gitId":"-"},"content":"{"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    [SuppressMessage(\"Microsoft.StyleCop.CSharp.OrderingRules\", \"SA1202:ElementsMustBeOrderedByAccess\", Justification \u003d \"To refactor to partials\")]"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /// \u003csummary\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /// Interaction logic for PositionsPaneWPF.xaml"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /// \u003c/summary\u003e"},{"lineNumber":30,"author":{"gitId":"xantho09"},"content":"    public partial class PositionsPaneWpf : INotifyOnThemeChanged"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        private PositionsDistributeGridDialog _positionsDistributeGridDialog;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"        #pragma warning disable 0618"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        private LMouseUpListener _leftMouseUpListener;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        private LMouseDownListener _leftMouseDownListener;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        private DispatcherTimer _dispatcherTimer;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Variable for preview"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        private bool _previewIsExecuted \u003d false;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private delegate void PreviewCallBack();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        private PreviewCallBack _previewCallBack;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        private static Dictionary\u003cint, PositionShapeProperties\u003e allShapePos \u003d new Dictionary\u003cint, PositionShapeProperties\u003e();"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"        //Variables for lock axis"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        private const int Left \u003d 0;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        private const int Top \u003d 1;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        private static List\u003cShape\u003e _shapesToBeMoved;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        private static System.Drawing.Point _initialMousePos;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        private float[,] _initialPos;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        //Variables for rotation"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        private const float RefpointRadius \u003d 10;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        private static Shape _refPoint;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        private static List\u003cShape\u003e _shapesToBeRotated \u003d new List\u003cShape\u003e();"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        private static List\u003cShape\u003e _allShapesInSlide \u003d new List\u003cShape\u003e();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        private static System.Drawing.Point _prevMousePos;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        private static ShapeRange _selectedRange;"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        //Variables for key binding"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        private const int CtrlProportion \u003d 5;"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        public PositionsPaneWpf()"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            PositionsLabMain.InitPositionsLab();"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            InitializeComponent();"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            InitializeHotKeys();"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            _dispatcherTimer \u003d new DispatcherTimer(DispatcherPriority.Background, Dispatcher);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            _dispatcherTimer.Interval \u003d TimeSpan.FromMilliseconds(10);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            Focusable \u003d true;"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"        ~PositionsPaneWpf()"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            ClearAllEventHandlers();"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"xantho09"},"content":"        #region INotifyOnThemeChanged Interface methods"},{"lineNumber":80,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":81,"author":{"gitId":"xantho09"},"content":"        /// \u003csummary\u003e"},{"lineNumber":82,"author":{"gitId":"xantho09"},"content":"        /// Changes the MahApps accent of this pane based on the Color Theme."},{"lineNumber":83,"author":{"gitId":"xantho09"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":84,"author":{"gitId":"xantho09"},"content":"        /// \u003cremarks\u003e"},{"lineNumber":85,"author":{"gitId":"xantho09"},"content":"        /// The Steel accent will be used on all themes, except for the DarkGray"},{"lineNumber":86,"author":{"gitId":"xantho09"},"content":"        /// theme, which will use the Teal accent."},{"lineNumber":87,"author":{"gitId":"xantho09"},"content":"        /// \u003c/remarks\u003e"},{"lineNumber":88,"author":{"gitId":"xantho09"},"content":"        /// \u003cparam name\u003d\"updatedColorTheme\"\u003eThe new color theme\u003c/param\u003e"},{"lineNumber":89,"author":{"gitId":"xantho09"},"content":"        public void OnThemeChanged(ColorTheme updatedColorTheme)"},{"lineNumber":90,"author":{"gitId":"xantho09"},"content":"        {"},{"lineNumber":91,"author":{"gitId":"xantho09"},"content":"            // The Steel accent doesn\u0027t look good on the DarkGray background."},{"lineNumber":92,"author":{"gitId":"xantho09"},"content":"            // The closest accent that looks okay is Teal."},{"lineNumber":93,"author":{"gitId":"xantho09"},"content":"            switch (updatedColorTheme.ThemeId)"},{"lineNumber":94,"author":{"gitId":"xantho09"},"content":"            {"},{"lineNumber":95,"author":{"gitId":"xantho09"},"content":"                case ColorTheme.DARK_GRAY:"},{"lineNumber":96,"author":{"gitId":"xantho09"},"content":"                    ThemeExtensions.ChangeMahAppsAccent(this, \"Teal\");"},{"lineNumber":97,"author":{"gitId":"xantho09"},"content":"                    break;"},{"lineNumber":98,"author":{"gitId":"xantho09"},"content":"                default:"},{"lineNumber":99,"author":{"gitId":"xantho09"},"content":"                    ThemeExtensions.ChangeMahAppsAccent(this, \"Steel\");"},{"lineNumber":100,"author":{"gitId":"xantho09"},"content":"                    break;"},{"lineNumber":101,"author":{"gitId":"xantho09"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"xantho09"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":104,"author":{"gitId":"xantho09"},"content":"        #endregion"},{"lineNumber":105,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"        private void InitializeHotKeys()"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Dictionary\u003cToggleButton, Action\u003cbool, bool\u003e\u003e buttonActionMapping \u003d new Dictionary\u003cToggleButton, Action\u003cbool, bool\u003e\u003e();"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            buttonActionMapping.Add(rotationButton, RotateSlightly);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            buttonActionMapping.Add(duplicateRotationButton, RotateSlightly);"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"            Action\u003cNative.VirtualKey, bool\u003e bindHotKeys \u003d"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                (key, direction) \u003d\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                    PPKeyboard.AddKeydownAction(key, RunOnlyWhenActivated(buttonActionMapping, direction, true));"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                    PPKeyboard.AddKeydownAction(key, RunOnlyWhenActivated(buttonActionMapping, direction, false), ctrl: true);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                };"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"            bindHotKeys(Native.VirtualKey.VK_LEFT, false);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            bindHotKeys(Native.VirtualKey.VK_UP, false);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            bindHotKeys(Native.VirtualKey.VK_RIGHT, true);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            bindHotKeys(Native.VirtualKey.VK_DOWN, true);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"        private Func\u003cbool\u003e RunOnlyWhenActivated(Dictionary\u003cToggleButton, Action\u003cbool, bool\u003e\u003e buttonActionMapping, bool direction, bool isLarge)"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return () \u003d\u003e"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                Microsoft.Office.Tools.CustomTaskPane positionsPane \u003d this.GetTaskPane(typeof(PositionsPane));"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                if (positionsPane \u003d\u003d null || !positionsPane.Visible)"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                    return false;"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"                foreach (KeyValuePair\u003cToggleButton, Action\u003cbool, bool\u003e\u003e mapping in buttonActionMapping)"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                    ToggleButton button \u003d mapping.Key;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                    Action\u003cbool, bool\u003e action \u003d mapping.Value;"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"                    if ((bool)button.IsChecked)"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                        action(direction, isLarge);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                        return true;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        "},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private void RotateSlightly(bool isClockwise, bool isLarge)"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            System.Drawing.PointF origin \u003d _refPoint.GetCenterPoint();"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            float angle \u003d (isClockwise) ? 1f : -1f;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            if (isLarge)"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                angle *\u003d CtrlProportion;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"            foreach (Shape currentShape in _shapesToBeRotated)"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                PositionsLabMain.Rotate(currentShape, origin, angle, PositionsLabSettings.ReorientShapeOrientation);"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"        #region Click Behaviour"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        #region Align"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        private void AlignLeftButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            Action\u003cShapeRange\u003e positionsAction \u003d shapes \u003d\u003e PositionsLabMain.AlignLeft(shapes);"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            ExecutePositionsAction(positionsAction, false, true);"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"        private void AlignRightButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            float slideWidth \u003d this.GetCurrentPresentation().SlideWidth;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            Action\u003cShapeRange, float\u003e positionsAction \u003d (shapes, width) \u003d\u003e PositionsLabMain.AlignRight(shapes, width);"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            ExecutePositionsAction(positionsAction, slideWidth, false);"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"        private void AlignTopButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            Action\u003cShapeRange\u003e positionsAction \u003d shapes \u003d\u003e PositionsLabMain.AlignTop(shapes);"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            ExecutePositionsAction(positionsAction, false, true);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"        private void AlignBottomButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            float slideHeight \u003d this.GetCurrentPresentation().SlideHeight;"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            Action\u003cShapeRange, float\u003e positionsAction \u003d (shapes, height) \u003d\u003e PositionsLabMain.AlignBottom(shapes, height);"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            ExecutePositionsAction(positionsAction, slideHeight, false);"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"        private void AlignHorizontalCenterButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            float slideHeight \u003d this.GetCurrentPresentation().SlideHeight;"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            Action\u003cShapeRange, float\u003e positionsAction \u003d (shapes, height) \u003d\u003e PositionsLabMain.AlignHorizontalCenter(shapes, height);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            ExecutePositionsAction(positionsAction, slideHeight, false);"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"        private void AlignVerticalCenterButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            float slideWidth \u003d this.GetCurrentPresentation().SlideWidth;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            Action\u003cShapeRange, float\u003e positionsAction \u003d (shapes, width) \u003d\u003e PositionsLabMain.AlignVerticalCenter(shapes, width);"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            ExecutePositionsAction(positionsAction, slideWidth, false);"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"        private void AlignCenterButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            float slideHeight \u003d this.GetCurrentPresentation().SlideHeight;"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            float slideWidth \u003d this.GetCurrentPresentation().SlideWidth;"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            Action\u003cShapeRange, float, float\u003e positionsAction \u003d (shapes, height, width) \u003d\u003e PositionsLabMain.AlignCenter(shapes, height, width);"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            ExecutePositionsAction(positionsAction, slideHeight, slideWidth, false);"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"        private void AlignRadialButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            Action\u003cShapeRange\u003e positionsAction \u003d (shapes) \u003d\u003e PositionsLabMain.AlignRadial(shapes);"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            ExecutePositionsAction(positionsAction, false, isConvertPPShape: false);"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"        #region Adjoin"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        private void AdjoinHorizontalButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            PositionsLabMain.AdjoinWithoutAligning();"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            Action\u003cList\u003cPPShape\u003e\u003e positionsAction \u003d (shapes) \u003d\u003e PositionsLabMain.AdjoinHorizontal(shapes);"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            ExecutePositionsAction(positionsAction, false);"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        private void AdjoinHorizontalWithAlignButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            PositionsLabMain.AdjoinWithAligning();"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            Action\u003cList\u003cPPShape\u003e\u003e positionsAction \u003d (shapes) \u003d\u003e PositionsLabMain.AdjoinHorizontal(shapes);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            ExecutePositionsAction(positionsAction, false);"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"        private void AdjoinVerticalButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            PositionsLabMain.AdjoinWithoutAligning();"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            Action\u003cList\u003cPPShape\u003e\u003e positionsAction \u003d (shapes) \u003d\u003e PositionsLabMain.AdjoinVertical(shapes);"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            ExecutePositionsAction(positionsAction, false);"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":243,"author":{"gitId":"-"},"content":""},{"lineNumber":244,"author":{"gitId":"-"},"content":"        private void AdjoinVerticalWithAlignButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            PositionsLabMain.AdjoinWithAligning();"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            Action\u003cList\u003cPPShape\u003e\u003e positionsAction \u003d (shapes) \u003d\u003e PositionsLabMain.AdjoinVertical(shapes);"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            ExecutePositionsAction(positionsAction, false);"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"        #region Distribute"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        private void DistributeHorizontalButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            float slideWidth \u003d this.GetCurrentPresentation().SlideWidth;"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            Action\u003cList\u003cPPShape\u003e, float\u003e positionsAction \u003d (shapes, width) \u003d\u003e PositionsLabMain.DistributeHorizontal(shapes, width);"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            ExecutePositionsAction(positionsAction, slideWidth, false);"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"-"},"content":"        private void DistributeVerticalButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            float slideHeight \u003d this.GetCurrentPresentation().SlideHeight;"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            Action\u003cList\u003cPPShape\u003e, float\u003e positionsAction \u003d (shapes, height) \u003d\u003e PositionsLabMain.DistributeVertical(shapes, height);"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            ExecutePositionsAction(positionsAction, slideHeight, false);"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":266,"author":{"gitId":"-"},"content":""},{"lineNumber":267,"author":{"gitId":"-"},"content":"        private void DistributeCenterButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            float slideWidth \u003d this.GetCurrentPresentation().SlideWidth;"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            float slideHeight \u003d this.GetCurrentPresentation().SlideHeight;"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            Action\u003cList\u003cPPShape\u003e, float, float\u003e positionsAction \u003d (shapes, width, height) \u003d\u003e PositionsLabMain.DistributeCenter(shapes, width, height);"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            ExecutePositionsAction(positionsAction, slideWidth, slideHeight, false);"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        "},{"lineNumber":275,"author":{"gitId":"-"},"content":"        private void DistributeGridButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            if (this.GetCurrentSelection().Type !\u003d PpSelectionType.ppSelectionShapes)"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                ShowErrorMessageBox(PositionsLabText.ErrorNoSelection);"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                ShapeRange selectedShapes \u003d this.GetCurrentSelection().ShapeRange;"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                int numShapesSelected \u003d selectedShapes.Count;"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                int colLength \u003d (int)Math.Ceiling(Math.Sqrt(numShapesSelected));"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                int rowLength \u003d (int)Math.Ceiling((double)numShapesSelected / colLength);"},{"lineNumber":289,"author":{"gitId":"-"},"content":""},{"lineNumber":290,"author":{"gitId":"-"},"content":"                _positionsDistributeGridDialog \u003d new PositionsDistributeGridDialog(numShapesSelected, rowLength, colLength,"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                                                                                    PositionsLabSettings.DistributeGridAlignment,"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                                                                                    PositionsLabSettings.GridMarginTop,"},{"lineNumber":293,"author":{"gitId":"-"},"content":"                                                                                    PositionsLabSettings.GridMarginBottom,"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                                                                                    PositionsLabSettings.GridMarginLeft,"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                                                                                    PositionsLabSettings.GridMarginRight);"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                _positionsDistributeGridDialog.DialogConfirmedHandler +\u003d OnDistributeGridDialogConfirmed;"},{"lineNumber":297,"author":{"gitId":"-"},"content":"                _positionsDistributeGridDialog.ShowThematicDialog();"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            catch (Exception ex)"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":301,"author":{"gitId":"-"},"content":"                ShowErrorMessageBox(ex.Message, ex);"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            }  "},{"lineNumber":303,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"        private void OnDistributeGridDialogConfirmed(int rowLength, int colLength,"},{"lineNumber":306,"author":{"gitId":"-"},"content":"                                        PositionsLabSettings.GridAlignment gridAlignment,"},{"lineNumber":307,"author":{"gitId":"-"},"content":"                                        float gridMarginTop, float gridMarginBottom,"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                                        float gridMarginLeft, float gridMarginRight)"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            PositionsLabSettings.DistributeGridAlignment \u003d gridAlignment;"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            PositionsLabSettings.GridMarginTop \u003d gridMarginTop;"},{"lineNumber":312,"author":{"gitId":"-"},"content":"            PositionsLabSettings.GridMarginBottom \u003d gridMarginBottom;"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            PositionsLabSettings.GridMarginLeft \u003d gridMarginLeft;"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            PositionsLabSettings.GridMarginRight \u003d gridMarginRight;"},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"            ExecuteDistributeGrid(rowLength, colLength);"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":318,"author":{"gitId":"-"},"content":""},{"lineNumber":319,"author":{"gitId":"-"},"content":"        private void DistributeRadialButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":321,"author":{"gitId":"-"},"content":"            Action\u003cShapeRange\u003e positionsAction \u003d (shapes) \u003d\u003e PositionsLabMain.DistributeRadial(shapes);"},{"lineNumber":322,"author":{"gitId":"-"},"content":"            ExecutePositionsAction(positionsAction, false, isConvertPPShape: false);"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":324,"author":{"gitId":"-"},"content":""},{"lineNumber":325,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"        #region Reorder"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        private void SwapPositionsButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            Action\u003cList\u003cPPShape\u003e, bool\u003e positionsAction \u003d (shapes, isPreview) \u003d\u003e PositionsLabMain.Swap(shapes, isPreview);"},{"lineNumber":331,"author":{"gitId":"-"},"content":"            ExecutePositionsAction(positionsAction, false, false);"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"        #region Adjustment"},{"lineNumber":336,"author":{"gitId":"-"},"content":""},{"lineNumber":337,"author":{"gitId":"-"},"content":"        private void RotationButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":339,"author":{"gitId":"-"},"content":"            bool noShapesSelected \u003d this.GetCurrentSelection().Type !\u003d PpSelectionType.ppSelectionShapes;"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            ToggleButton button \u003d (ToggleButton)sender;"},{"lineNumber":341,"author":{"gitId":"-"},"content":""},{"lineNumber":342,"author":{"gitId":"-"},"content":"            if (noShapesSelected)"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":344,"author":{"gitId":"-"},"content":"                button.IsChecked \u003d false;"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                ShowErrorMessageBox(PositionsLabText.ErrorFewerThanTwoSelection);"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":347,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":348,"author":{"gitId":"-"},"content":""},{"lineNumber":349,"author":{"gitId":"-"},"content":"            ShapeRange selectedShapes \u003d this.GetCurrentSelection().ShapeRange;"},{"lineNumber":350,"author":{"gitId":"-"},"content":""},{"lineNumber":351,"author":{"gitId":"-"},"content":"            if (selectedShapes.Count \u003c\u003d 1)"},{"lineNumber":352,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":353,"author":{"gitId":"-"},"content":"                button.IsChecked \u003d false;"},{"lineNumber":354,"author":{"gitId":"-"},"content":"                ShowErrorMessageBox(PositionsLabText.ErrorFewerThanTwoSelection);"},{"lineNumber":355,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":357,"author":{"gitId":"-"},"content":""},{"lineNumber":358,"author":{"gitId":"-"},"content":"            ClearAllEventHandlers();"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"            Models.PowerPointSlide currentSlide \u003d this.GetCurrentSlide();"},{"lineNumber":361,"author":{"gitId":"-"},"content":""},{"lineNumber":362,"author":{"gitId":"-"},"content":"            _refPoint \u003d selectedShapes[1];"},{"lineNumber":363,"author":{"gitId":"-"},"content":"            _shapesToBeRotated \u003d ConvertShapeRangeToShapeList(selectedShapes, 2);"},{"lineNumber":364,"author":{"gitId":"-"},"content":"            _allShapesInSlide \u003d ConvertShapesToShapeList(currentSlide.Shapes);"},{"lineNumber":365,"author":{"gitId":"-"},"content":"            _selectedRange \u003d selectedShapes;"},{"lineNumber":366,"author":{"gitId":"-"},"content":""},{"lineNumber":367,"author":{"gitId":"-"},"content":"            StartRotationMode();"},{"lineNumber":368,"author":{"gitId":"-"},"content":""},{"lineNumber":369,"author":{"gitId":"-"},"content":"            // for key binding to work when select shapes first, then open panel and click button"},{"lineNumber":370,"author":{"gitId":"-"},"content":"            PPKeyboard.SetSlideViewWindowFocused();"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":372,"author":{"gitId":"-"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"        private void RotationHandler(object sender, EventArgs e)"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":375,"author":{"gitId":"-"},"content":"            //Remove dragging control of user"},{"lineNumber":376,"author":{"gitId":"-"},"content":"            this.GetCurrentSelection().Unselect();"},{"lineNumber":377,"author":{"gitId":"-"},"content":"            System.Drawing.Point p \u003d System.Windows.Forms.Control.MousePosition;"},{"lineNumber":378,"author":{"gitId":"-"},"content":""},{"lineNumber":379,"author":{"gitId":"-"},"content":"            float prevAngle \u003d (float)PositionsLabMain.AngleBetweenTwoPoints(ConvertSlidePointToScreenPoint(_refPoint.GetCenterPoint()), _prevMousePos);"},{"lineNumber":380,"author":{"gitId":"-"},"content":"            float angle \u003d (float)PositionsLabMain.AngleBetweenTwoPoints(ConvertSlidePointToScreenPoint(_refPoint.GetCenterPoint()), p) - prevAngle;"},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"-"},"content":"            System.Drawing.PointF origin \u003d _refPoint.GetCenterPoint();"},{"lineNumber":383,"author":{"gitId":"-"},"content":""},{"lineNumber":384,"author":{"gitId":"-"},"content":"            foreach (Shape currentShape in _shapesToBeRotated)"},{"lineNumber":385,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":386,"author":{"gitId":"-"},"content":"                PositionsLabMain.Rotate(currentShape, origin, angle, PositionsLabSettings.ReorientShapeOrientation);"},{"lineNumber":387,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":388,"author":{"gitId":"-"},"content":""},{"lineNumber":389,"author":{"gitId":"-"},"content":"            _prevMousePos \u003d p;"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":391,"author":{"gitId":"-"},"content":""},{"lineNumber":392,"author":{"gitId":"-"},"content":"        void _leftMouseUpListener_Rotation(object sender, SysMouseEventInfo e)"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":394,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":395,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":396,"author":{"gitId":"-"},"content":"                _dispatcherTimer.Stop();"},{"lineNumber":397,"author":{"gitId":"-"},"content":"                _selectedRange.Select();"},{"lineNumber":398,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":399,"author":{"gitId":"-"},"content":"            catch (Exception ex)"},{"lineNumber":400,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":401,"author":{"gitId":"-"},"content":"                rotationButton.IsChecked \u003d false;"},{"lineNumber":402,"author":{"gitId":"-"},"content":"                duplicateRotationButton.IsChecked \u003d false;"},{"lineNumber":403,"author":{"gitId":"-"},"content":"                Logger.LogException(ex, \"Rotation\");"},{"lineNumber":404,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":406,"author":{"gitId":"-"},"content":""},{"lineNumber":407,"author":{"gitId":"-"},"content":"        void _leftMouseDownListener_Rotation(object sender, SysMouseEventInfo e)"},{"lineNumber":408,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":409,"author":{"gitId":"-"},"content":"            ToggleButton button \u003d ((bool)rotationButton.IsChecked) ? rotationButton :"},{"lineNumber":410,"author":{"gitId":"-"},"content":"                             ((bool)duplicateRotationButton.IsChecked) ? duplicateRotationButton"},{"lineNumber":411,"author":{"gitId":"-"},"content":"                                                                       : null;"},{"lineNumber":412,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":413,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":414,"author":{"gitId":"-"},"content":"                if (button \u003d\u003d null || button.IsMouseOver)"},{"lineNumber":415,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"                    DisableRotationMode();"},{"lineNumber":417,"author":{"gitId":"-"},"content":"                    return;"},{"lineNumber":418,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":419,"author":{"gitId":"-"},"content":""},{"lineNumber":420,"author":{"gitId":"-"},"content":"                System.Drawing.Point p \u003d System.Windows.Forms.Control.MousePosition;"},{"lineNumber":421,"author":{"gitId":"-"},"content":"                Shape selectedShape \u003d GetShapeDirectlyBelowMousePos(_allShapesInSlide, p);"},{"lineNumber":422,"author":{"gitId":"-"},"content":""},{"lineNumber":423,"author":{"gitId":"-"},"content":"                if (selectedShape \u003d\u003d null)"},{"lineNumber":424,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":425,"author":{"gitId":"-"},"content":"                    DisableRotationMode();"},{"lineNumber":426,"author":{"gitId":"-"},"content":"                    button.IsChecked \u003d false;"},{"lineNumber":427,"author":{"gitId":"-"},"content":"                    return;"},{"lineNumber":428,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":429,"author":{"gitId":"-"},"content":""},{"lineNumber":430,"author":{"gitId":"-"},"content":"                bool isShapeToBeRotated \u003d _shapesToBeRotated.Contains(selectedShape);"},{"lineNumber":431,"author":{"gitId":"-"},"content":"                bool isRefPoint \u003d _refPoint.Id \u003d\u003d selectedShape.Id;"},{"lineNumber":432,"author":{"gitId":"-"},"content":""},{"lineNumber":433,"author":{"gitId":"-"},"content":"                if (!isShapeToBeRotated \u0026\u0026 !isRefPoint)"},{"lineNumber":434,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":435,"author":{"gitId":"-"},"content":"                    DisableRotationMode();"},{"lineNumber":436,"author":{"gitId":"-"},"content":"                    button.IsChecked \u003d false;"},{"lineNumber":437,"author":{"gitId":"-"},"content":"                    return;"},{"lineNumber":438,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":439,"author":{"gitId":"-"},"content":""},{"lineNumber":440,"author":{"gitId":"-"},"content":"                this.StartNewUndoEntry();"},{"lineNumber":441,"author":{"gitId":"-"},"content":""},{"lineNumber":442,"author":{"gitId":"-"},"content":"                if (isRefPoint)"},{"lineNumber":443,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":444,"author":{"gitId":"-"},"content":"                    this.GetCurrentSelection().Unselect();"},{"lineNumber":445,"author":{"gitId":"-"},"content":"                    return;"},{"lineNumber":446,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":447,"author":{"gitId":"-"},"content":""},{"lineNumber":448,"author":{"gitId":"-"},"content":"                if (button \u003d\u003d duplicateRotationButton)"},{"lineNumber":449,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":450,"author":{"gitId":"-"},"content":"                    foreach (Shape currentShape in _shapesToBeRotated)"},{"lineNumber":451,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":452,"author":{"gitId":"-"},"content":"                        Shape duplicatedShape \u003d currentShape.Duplicate()[1];"},{"lineNumber":453,"author":{"gitId":"-"},"content":"                        duplicatedShape.Left -\u003d 12;"},{"lineNumber":454,"author":{"gitId":"-"},"content":"                        duplicatedShape.Top -\u003d 12;"},{"lineNumber":455,"author":{"gitId":"-"},"content":"                        ShapeUtil.MoveZToJustBehind(duplicatedShape, currentShape);"},{"lineNumber":456,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":457,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":458,"author":{"gitId":"-"},"content":""},{"lineNumber":459,"author":{"gitId":"-"},"content":"                _prevMousePos \u003d p;"},{"lineNumber":460,"author":{"gitId":"-"},"content":"                _dispatcherTimer.Start();"},{"lineNumber":461,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":462,"author":{"gitId":"-"},"content":"            catch (Exception ex)"},{"lineNumber":463,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":464,"author":{"gitId":"-"},"content":"                Logger.LogException(ex, \"Rotation\");"},{"lineNumber":465,"author":{"gitId":"-"},"content":"                DisableRotationMode();"},{"lineNumber":466,"author":{"gitId":"-"},"content":"                button.IsChecked \u003d false;"},{"lineNumber":467,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":468,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":469,"author":{"gitId":"-"},"content":""},{"lineNumber":470,"author":{"gitId":"-"},"content":"        private void LockAxisButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":472,"author":{"gitId":"-"},"content":"            bool noShapesSelected \u003d this.GetCurrentSelection().Type !\u003d PpSelectionType.ppSelectionShapes;"},{"lineNumber":473,"author":{"gitId":"-"},"content":""},{"lineNumber":474,"author":{"gitId":"-"},"content":"            if (noShapesSelected)"},{"lineNumber":475,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":476,"author":{"gitId":"-"},"content":"                lockAxisButton.IsChecked \u003d false;"},{"lineNumber":477,"author":{"gitId":"-"},"content":"                ShowErrorMessageBox(PositionsLabText.ErrorNoSelection);"},{"lineNumber":478,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":479,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":480,"author":{"gitId":"-"},"content":""},{"lineNumber":481,"author":{"gitId":"-"},"content":"            ShapeRange selectedShapes \u003d this.GetCurrentSelection().ShapeRange;"},{"lineNumber":482,"author":{"gitId":"-"},"content":""},{"lineNumber":483,"author":{"gitId":"-"},"content":"            ClearAllEventHandlers();"},{"lineNumber":484,"author":{"gitId":"-"},"content":""},{"lineNumber":485,"author":{"gitId":"-"},"content":"            Models.PowerPointSlide currentSlide \u003d this.GetCurrentSlide();"},{"lineNumber":486,"author":{"gitId":"-"},"content":""},{"lineNumber":487,"author":{"gitId":"-"},"content":"            _shapesToBeMoved \u003d ConvertShapeRangeToShapeList(selectedShapes, 1);"},{"lineNumber":488,"author":{"gitId":"-"},"content":"            _allShapesInSlide \u003d ConvertShapesToShapeList(currentSlide.Shapes);"},{"lineNumber":489,"author":{"gitId":"-"},"content":"            _selectedRange \u003d selectedShapes;"},{"lineNumber":490,"author":{"gitId":"-"},"content":""},{"lineNumber":491,"author":{"gitId":"-"},"content":"            StartLockAxisMode();"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":493,"author":{"gitId":"-"},"content":""},{"lineNumber":494,"author":{"gitId":"-"},"content":"        private void LockAxisHandler(object sender, EventArgs e)"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":496,"author":{"gitId":"-"},"content":"            //Remove dragging control of user"},{"lineNumber":497,"author":{"gitId":"-"},"content":"            this.GetCurrentSelection().Unselect();"},{"lineNumber":498,"author":{"gitId":"-"},"content":""},{"lineNumber":499,"author":{"gitId":"-"},"content":"            System.Drawing.Point currentMousePos \u003d System.Windows.Forms.Control.MousePosition;"},{"lineNumber":500,"author":{"gitId":"-"},"content":""},{"lineNumber":501,"author":{"gitId":"-"},"content":"            float diffX \u003d currentMousePos.X - _initialMousePos.X;"},{"lineNumber":502,"author":{"gitId":"-"},"content":"            float diffY \u003d currentMousePos.Y - _initialMousePos.Y;"},{"lineNumber":503,"author":{"gitId":"-"},"content":""},{"lineNumber":504,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c _shapesToBeMoved.Count; i++)"},{"lineNumber":505,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":506,"author":{"gitId":"-"},"content":"                Shape s \u003d _shapesToBeMoved[i];"},{"lineNumber":507,"author":{"gitId":"-"},"content":"                if (Math.Abs(diffX) \u003e Math.Abs(diffY))"},{"lineNumber":508,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":509,"author":{"gitId":"-"},"content":"                    s.Left \u003d _initialPos[i, Left] + diffX;"},{"lineNumber":510,"author":{"gitId":"-"},"content":"                    s.Top \u003d _initialPos[i, Top];"},{"lineNumber":511,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":512,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":513,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":514,"author":{"gitId":"-"},"content":"                    s.Left \u003d _initialPos[i, Left];"},{"lineNumber":515,"author":{"gitId":"-"},"content":"                    s.Top \u003d _initialPos[i, Top] + diffY;"},{"lineNumber":516,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":517,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":518,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":519,"author":{"gitId":"-"},"content":""},{"lineNumber":520,"author":{"gitId":"-"},"content":"        void _leftMouseUpListener_LockAxis(object sender, SysMouseEventInfo e)"},{"lineNumber":521,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":522,"author":{"gitId":"-"},"content":"            _dispatcherTimer.Stop();"},{"lineNumber":523,"author":{"gitId":"-"},"content":"            _selectedRange.Select();"},{"lineNumber":524,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":525,"author":{"gitId":"-"},"content":""},{"lineNumber":526,"author":{"gitId":"-"},"content":"        void _leftMouseDownListener_LockAxis(object sender, SysMouseEventInfo e)"},{"lineNumber":527,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":528,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":529,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":530,"author":{"gitId":"-"},"content":"                if (lockAxisButton.IsMouseOver)"},{"lineNumber":531,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":532,"author":{"gitId":"-"},"content":"                    DisableLockAxisMode();"},{"lineNumber":533,"author":{"gitId":"-"},"content":"                    return;"},{"lineNumber":534,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":535,"author":{"gitId":"-"},"content":""},{"lineNumber":536,"author":{"gitId":"-"},"content":"                System.Drawing.Point p \u003d System.Windows.Forms.Control.MousePosition;"},{"lineNumber":537,"author":{"gitId":"-"},"content":"                Models.PowerPointSlide currentSlide \u003d this.GetCurrentSlide();"},{"lineNumber":538,"author":{"gitId":"-"},"content":"                Shape selectedShape \u003d GetShapeDirectlyBelowMousePos(_allShapesInSlide, p);"},{"lineNumber":539,"author":{"gitId":"-"},"content":""},{"lineNumber":540,"author":{"gitId":"-"},"content":"                if (selectedShape \u003d\u003d null)"},{"lineNumber":541,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":542,"author":{"gitId":"-"},"content":"                    DisableLockAxisMode();"},{"lineNumber":543,"author":{"gitId":"-"},"content":"                    lockAxisButton.IsChecked \u003d false;"},{"lineNumber":544,"author":{"gitId":"-"},"content":"                    return;"},{"lineNumber":545,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":546,"author":{"gitId":"-"},"content":""},{"lineNumber":547,"author":{"gitId":"-"},"content":"                bool isShapeToBeMoved \u003d _shapesToBeMoved.Contains(selectedShape);"},{"lineNumber":548,"author":{"gitId":"-"},"content":""},{"lineNumber":549,"author":{"gitId":"-"},"content":"                if (!isShapeToBeMoved)"},{"lineNumber":550,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":551,"author":{"gitId":"-"},"content":"                    DisableLockAxisMode();"},{"lineNumber":552,"author":{"gitId":"-"},"content":"                    lockAxisButton.IsChecked \u003d false;"},{"lineNumber":553,"author":{"gitId":"-"},"content":"                    return;"},{"lineNumber":554,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":555,"author":{"gitId":"-"},"content":""},{"lineNumber":556,"author":{"gitId":"-"},"content":"                this.StartNewUndoEntry();"},{"lineNumber":557,"author":{"gitId":"-"},"content":""},{"lineNumber":558,"author":{"gitId":"-"},"content":"                _initialPos \u003d new float[_shapesToBeMoved.Count, 2];"},{"lineNumber":559,"author":{"gitId":"-"},"content":"                for (int i \u003d 0; i \u003c _shapesToBeMoved.Count; i++)"},{"lineNumber":560,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":561,"author":{"gitId":"-"},"content":"                    Shape s \u003d _shapesToBeMoved[i];"},{"lineNumber":562,"author":{"gitId":"-"},"content":"                    _initialPos[i, Left] \u003d s.Left;"},{"lineNumber":563,"author":{"gitId":"-"},"content":"                    _initialPos[i, Top] \u003d s.Top;"},{"lineNumber":564,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":565,"author":{"gitId":"-"},"content":""},{"lineNumber":566,"author":{"gitId":"-"},"content":"                _initialMousePos \u003d p;"},{"lineNumber":567,"author":{"gitId":"-"},"content":"                _dispatcherTimer.Start();"},{"lineNumber":568,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":569,"author":{"gitId":"-"},"content":"            catch (Exception ex)"},{"lineNumber":570,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":571,"author":{"gitId":"-"},"content":"                Logger.LogException(ex, \"LockAxis\");"},{"lineNumber":572,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":573,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":574,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":575,"author":{"gitId":"-"},"content":""},{"lineNumber":576,"author":{"gitId":"-"},"content":"        #region Snap"},{"lineNumber":577,"author":{"gitId":"-"},"content":"        private void SnapHorizontalButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":578,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":579,"author":{"gitId":"-"},"content":"            Action\u003cList\u003cShape\u003e\u003e positionsAction \u003d (shapes) \u003d\u003e PositionsLabMain.SnapHorizontal(shapes);"},{"lineNumber":580,"author":{"gitId":"-"},"content":"            ExecutePositionsAction(positionsAction, false);"},{"lineNumber":581,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":582,"author":{"gitId":"-"},"content":""},{"lineNumber":583,"author":{"gitId":"-"},"content":"        private void SnapVerticalButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":584,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":585,"author":{"gitId":"-"},"content":"            Action\u003cList\u003cShape\u003e\u003e positionsAction \u003d (shapes) \u003d\u003e PositionsLabMain.SnapVertical(shapes);"},{"lineNumber":586,"author":{"gitId":"-"},"content":"            ExecutePositionsAction(positionsAction, false);"},{"lineNumber":587,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":588,"author":{"gitId":"-"},"content":""},{"lineNumber":589,"author":{"gitId":"-"},"content":"        private void SnapAwayButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":591,"author":{"gitId":"-"},"content":"            Action\u003cList\u003cShape\u003e\u003e positionsAction \u003d (shapes) \u003d\u003e PositionsLabMain.SnapAway(shapes);"},{"lineNumber":592,"author":{"gitId":"-"},"content":"            ExecutePositionsAction(positionsAction, false);"},{"lineNumber":593,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":594,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":595,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":596,"author":{"gitId":"-"},"content":""},{"lineNumber":597,"author":{"gitId":"-"},"content":"        #region Preview Behaviour"},{"lineNumber":598,"author":{"gitId":"-"},"content":"        private void AlignLeftButton_MouseEnter(object sender, System.Windows.Input.MouseEventArgs e)"},{"lineNumber":599,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":600,"author":{"gitId":"-"},"content":"            Action\u003cShapeRange\u003e positionsAction \u003d shapes \u003d\u003e PositionsLabMain.AlignLeft(shapes);"},{"lineNumber":601,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d delegate"},{"lineNumber":602,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":603,"author":{"gitId":"-"},"content":"                ExecutePositionsAction(positionsAction, true, true);"},{"lineNumber":604,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":605,"author":{"gitId":"-"},"content":"            PreviewHandler();"},{"lineNumber":606,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":607,"author":{"gitId":"-"},"content":""},{"lineNumber":608,"author":{"gitId":"-"},"content":"        private void AlignRightButton_MouseEnter(object sender, System.Windows.Input.MouseEventArgs e)"},{"lineNumber":609,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":610,"author":{"gitId":"-"},"content":"            float slideWidth \u003d this.GetCurrentPresentation().SlideWidth;"},{"lineNumber":611,"author":{"gitId":"-"},"content":"            Action\u003cShapeRange, float\u003e positionsAction \u003d (shapes, width) \u003d\u003e PositionsLabMain.AlignRight(shapes, width);"},{"lineNumber":612,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d delegate"},{"lineNumber":613,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":614,"author":{"gitId":"-"},"content":"                ExecutePositionsAction(positionsAction, slideWidth, true);"},{"lineNumber":615,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":616,"author":{"gitId":"-"},"content":"            PreviewHandler();"},{"lineNumber":617,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":618,"author":{"gitId":"-"},"content":""},{"lineNumber":619,"author":{"gitId":"-"},"content":"        private void AlignTopButton_MouseEnter(object sender, System.Windows.Input.MouseEventArgs e)"},{"lineNumber":620,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":621,"author":{"gitId":"-"},"content":"            Action\u003cShapeRange\u003e positionsAction \u003d shapes \u003d\u003e PositionsLabMain.AlignTop(shapes);"},{"lineNumber":622,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d delegate"},{"lineNumber":623,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":624,"author":{"gitId":"-"},"content":"                ExecutePositionsAction(positionsAction, true, true);"},{"lineNumber":625,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":626,"author":{"gitId":"-"},"content":"            PreviewHandler();"},{"lineNumber":627,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":628,"author":{"gitId":"-"},"content":""},{"lineNumber":629,"author":{"gitId":"-"},"content":"        private void AlignBottomButton_MouseEnter(object sender, System.Windows.Input.MouseEventArgs e)"},{"lineNumber":630,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":631,"author":{"gitId":"-"},"content":"            float slideHeight \u003d this.GetCurrentPresentation().SlideHeight;"},{"lineNumber":632,"author":{"gitId":"-"},"content":"            Action\u003cShapeRange, float\u003e positionsAction \u003d (shapes, height) \u003d\u003e PositionsLabMain.AlignBottom(shapes, height);"},{"lineNumber":633,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d delegate"},{"lineNumber":634,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":635,"author":{"gitId":"-"},"content":"                ExecutePositionsAction(positionsAction, slideHeight, true);"},{"lineNumber":636,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":637,"author":{"gitId":"-"},"content":"            PreviewHandler();"},{"lineNumber":638,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":639,"author":{"gitId":"-"},"content":""},{"lineNumber":640,"author":{"gitId":"-"},"content":"        private void AlignHorizontalCenterButton_MouseEnter(object sender, System.Windows.Input.MouseEventArgs e)"},{"lineNumber":641,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":642,"author":{"gitId":"-"},"content":"            float slideHeight \u003d this.GetCurrentPresentation().SlideHeight;"},{"lineNumber":643,"author":{"gitId":"-"},"content":"            Action\u003cShapeRange, float\u003e positionsAction \u003d (shapes, height) \u003d\u003e PositionsLabMain.AlignHorizontalCenter(shapes, height);"},{"lineNumber":644,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d delegate"},{"lineNumber":645,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":646,"author":{"gitId":"-"},"content":"                ExecutePositionsAction(positionsAction, slideHeight, true);"},{"lineNumber":647,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":648,"author":{"gitId":"-"},"content":"            PreviewHandler();"},{"lineNumber":649,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":650,"author":{"gitId":"-"},"content":""},{"lineNumber":651,"author":{"gitId":"-"},"content":"        private void AlignVerticalCenterButton_MouseEnter(object sender, System.Windows.Input.MouseEventArgs e)"},{"lineNumber":652,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":653,"author":{"gitId":"-"},"content":"            float slideWidth \u003d this.GetCurrentPresentation().SlideWidth;"},{"lineNumber":654,"author":{"gitId":"-"},"content":"            Action\u003cShapeRange, float\u003e positionsAction \u003d (shapes, width) \u003d\u003e PositionsLabMain.AlignVerticalCenter(shapes, width);"},{"lineNumber":655,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d delegate"},{"lineNumber":656,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":657,"author":{"gitId":"-"},"content":"                ExecutePositionsAction(positionsAction, slideWidth, true);"},{"lineNumber":658,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":659,"author":{"gitId":"-"},"content":"            PreviewHandler();"},{"lineNumber":660,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":661,"author":{"gitId":"-"},"content":""},{"lineNumber":662,"author":{"gitId":"-"},"content":"        private void AlignCenterButton_MouseEnter(object sender, System.Windows.Input.MouseEventArgs e)"},{"lineNumber":663,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":664,"author":{"gitId":"-"},"content":"            float slideHeight \u003d this.GetCurrentPresentation().SlideHeight;"},{"lineNumber":665,"author":{"gitId":"-"},"content":"            float slideWidth \u003d this.GetCurrentPresentation().SlideWidth;"},{"lineNumber":666,"author":{"gitId":"-"},"content":"            Action\u003cShapeRange, float, float\u003e positionsAction \u003d (shapes, height, width) \u003d\u003e PositionsLabMain.AlignCenter(shapes, height, width);"},{"lineNumber":667,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d delegate"},{"lineNumber":668,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":669,"author":{"gitId":"-"},"content":"                ExecutePositionsAction(positionsAction, slideHeight, slideWidth, true);"},{"lineNumber":670,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":671,"author":{"gitId":"-"},"content":"            PreviewHandler();"},{"lineNumber":672,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":673,"author":{"gitId":"-"},"content":""},{"lineNumber":674,"author":{"gitId":"-"},"content":"        private void AlignRadialButton_MouseEnter(object sender, MouseEventArgs e)"},{"lineNumber":675,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":676,"author":{"gitId":"-"},"content":"            Action\u003cShapeRange\u003e positionsAction \u003d (shapes) \u003d\u003e PositionsLabMain.AlignRadial(shapes);"},{"lineNumber":677,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d delegate"},{"lineNumber":678,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":679,"author":{"gitId":"-"},"content":"                ExecutePositionsAction(positionsAction, true, isConvertPPShape: false);"},{"lineNumber":680,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":681,"author":{"gitId":"-"},"content":"            PreviewHandler();"},{"lineNumber":682,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":683,"author":{"gitId":"-"},"content":""},{"lineNumber":684,"author":{"gitId":"-"},"content":"        private void AdjoinHorizontalButton_MouseEnter(object sender, System.Windows.Input.MouseEventArgs e)"},{"lineNumber":685,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":686,"author":{"gitId":"-"},"content":"            PositionsLabMain.AdjoinWithoutAligning();"},{"lineNumber":687,"author":{"gitId":"-"},"content":"            Action\u003cList\u003cPPShape\u003e\u003e positionsAction \u003d (shapes) \u003d\u003e PositionsLabMain.AdjoinHorizontal(shapes);"},{"lineNumber":688,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d delegate"},{"lineNumber":689,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":690,"author":{"gitId":"-"},"content":"                ExecutePositionsAction(positionsAction, true);"},{"lineNumber":691,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":692,"author":{"gitId":"-"},"content":"            PreviewHandler();"},{"lineNumber":693,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":694,"author":{"gitId":"-"},"content":""},{"lineNumber":695,"author":{"gitId":"-"},"content":"        private void AdjoinHorizontalWithAlignButton_MouseEnter(object sender, MouseEventArgs e)"},{"lineNumber":696,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":697,"author":{"gitId":"-"},"content":"            PositionsLabMain.AdjoinWithAligning();"},{"lineNumber":698,"author":{"gitId":"-"},"content":"            Action\u003cList\u003cPPShape\u003e\u003e positionsAction \u003d (shapes) \u003d\u003e PositionsLabMain.AdjoinHorizontal(shapes);"},{"lineNumber":699,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d delegate"},{"lineNumber":700,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":701,"author":{"gitId":"-"},"content":"                ExecutePositionsAction(positionsAction, true);"},{"lineNumber":702,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":703,"author":{"gitId":"-"},"content":"            PreviewHandler();"},{"lineNumber":704,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":705,"author":{"gitId":"-"},"content":""},{"lineNumber":706,"author":{"gitId":"-"},"content":"        private void AdjoinVerticalButton_MouseEnter(object sender, System.Windows.Input.MouseEventArgs e)"},{"lineNumber":707,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":708,"author":{"gitId":"-"},"content":"            PositionsLabMain.AdjoinWithoutAligning();"},{"lineNumber":709,"author":{"gitId":"-"},"content":"            Action\u003cList\u003cPPShape\u003e\u003e positionsAction \u003d (shapes) \u003d\u003e PositionsLabMain.AdjoinVertical(shapes);"},{"lineNumber":710,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d delegate"},{"lineNumber":711,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":712,"author":{"gitId":"-"},"content":"                ExecutePositionsAction(positionsAction, true);"},{"lineNumber":713,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":714,"author":{"gitId":"-"},"content":"            PreviewHandler();"},{"lineNumber":715,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":716,"author":{"gitId":"-"},"content":""},{"lineNumber":717,"author":{"gitId":"-"},"content":"        private void AdjoinVerticalWithAlignButton_MouseEnter(object sender, MouseEventArgs e)"},{"lineNumber":718,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":719,"author":{"gitId":"-"},"content":"            PositionsLabMain.AdjoinWithAligning();"},{"lineNumber":720,"author":{"gitId":"-"},"content":"            Action\u003cList\u003cPPShape\u003e\u003e positionsAction \u003d (shapes) \u003d\u003e PositionsLabMain.AdjoinVertical(shapes);"},{"lineNumber":721,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d delegate"},{"lineNumber":722,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":723,"author":{"gitId":"-"},"content":"                ExecutePositionsAction(positionsAction, true);"},{"lineNumber":724,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":725,"author":{"gitId":"-"},"content":"            PreviewHandler();"},{"lineNumber":726,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":727,"author":{"gitId":"-"},"content":""},{"lineNumber":728,"author":{"gitId":"-"},"content":"        private void DistributeHorizontalButton_MouseEnter(object sender, System.Windows.Input.MouseEventArgs e)"},{"lineNumber":729,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":730,"author":{"gitId":"-"},"content":"            float slideWidth \u003d this.GetCurrentPresentation().SlideWidth;"},{"lineNumber":731,"author":{"gitId":"-"},"content":"            Action\u003cList\u003cPPShape\u003e, float\u003e positionsAction \u003d (shapes, width) \u003d\u003e PositionsLabMain.DistributeHorizontal(shapes, width);"},{"lineNumber":732,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d delegate"},{"lineNumber":733,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":734,"author":{"gitId":"-"},"content":"                ExecutePositionsAction(positionsAction, slideWidth, true);"},{"lineNumber":735,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":736,"author":{"gitId":"-"},"content":"            PreviewHandler();"},{"lineNumber":737,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":738,"author":{"gitId":"-"},"content":""},{"lineNumber":739,"author":{"gitId":"-"},"content":"        private void DistributeVerticalButton_MouseEnter(object sender, System.Windows.Input.MouseEventArgs e)"},{"lineNumber":740,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":741,"author":{"gitId":"-"},"content":"            float slideHeight \u003d this.GetCurrentPresentation().SlideHeight;"},{"lineNumber":742,"author":{"gitId":"-"},"content":"            Action\u003cList\u003cPPShape\u003e, float\u003e positionsAction \u003d (shapes, height) \u003d\u003e PositionsLabMain.DistributeVertical(shapes, height);"},{"lineNumber":743,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d delegate"},{"lineNumber":744,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":745,"author":{"gitId":"-"},"content":"                ExecutePositionsAction(positionsAction, slideHeight, true);"},{"lineNumber":746,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":747,"author":{"gitId":"-"},"content":"            PreviewHandler();"},{"lineNumber":748,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":749,"author":{"gitId":"-"},"content":""},{"lineNumber":750,"author":{"gitId":"-"},"content":"        private void DistributeCenterButton_MouseEnter(object sender, System.Windows.Input.MouseEventArgs e)"},{"lineNumber":751,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":752,"author":{"gitId":"-"},"content":"            float slideWidth \u003d this.GetCurrentPresentation().SlideWidth;"},{"lineNumber":753,"author":{"gitId":"-"},"content":"            float slideHeight \u003d this.GetCurrentPresentation().SlideHeight;"},{"lineNumber":754,"author":{"gitId":"-"},"content":"            Action\u003cList\u003cPPShape\u003e, float, float\u003e positionsAction \u003d (shapes, width, height) \u003d\u003e PositionsLabMain.DistributeCenter(shapes, width, height);"},{"lineNumber":755,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d delegate"},{"lineNumber":756,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":757,"author":{"gitId":"-"},"content":"                ExecutePositionsAction(positionsAction, slideWidth, slideHeight, true);"},{"lineNumber":758,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":759,"author":{"gitId":"-"},"content":"            PreviewHandler();"},{"lineNumber":760,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":761,"author":{"gitId":"-"},"content":""},{"lineNumber":762,"author":{"gitId":"-"},"content":"        private void DistributeRadialButton_MouseEnter(object sender, MouseEventArgs e)"},{"lineNumber":763,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":764,"author":{"gitId":"-"},"content":"            Action\u003cShapeRange\u003e positionsAction \u003d (shapes) \u003d\u003e PositionsLabMain.DistributeRadial(shapes);"},{"lineNumber":765,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d delegate"},{"lineNumber":766,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":767,"author":{"gitId":"-"},"content":"                ExecutePositionsAction(positionsAction, true, isConvertPPShape: false);"},{"lineNumber":768,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":769,"author":{"gitId":"-"},"content":"            PreviewHandler();"},{"lineNumber":770,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":771,"author":{"gitId":"-"},"content":""},{"lineNumber":772,"author":{"gitId":"-"},"content":"        private void SwapPositionsButton_MouseEnter(object sender, System.Windows.Input.MouseEventArgs e)"},{"lineNumber":773,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":774,"author":{"gitId":"-"},"content":"            Action\u003cList\u003cPPShape\u003e, bool\u003e positionsAction \u003d (shapes, isPreview) \u003d\u003e PositionsLabMain.Swap(shapes, isPreview);"},{"lineNumber":775,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d delegate"},{"lineNumber":776,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":777,"author":{"gitId":"-"},"content":"                ExecutePositionsAction(positionsAction, true, true);"},{"lineNumber":778,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":779,"author":{"gitId":"-"},"content":"            PreviewHandler();"},{"lineNumber":780,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":781,"author":{"gitId":"-"},"content":""},{"lineNumber":782,"author":{"gitId":"-"},"content":"        private void SnapHorizontalButton_MouseEnter(object sender, System.Windows.Input.MouseEventArgs e)"},{"lineNumber":783,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":784,"author":{"gitId":"-"},"content":"            Action\u003cList\u003cShape\u003e\u003e positionsAction \u003d (shapes) \u003d\u003e PositionsLabMain.SnapHorizontal(shapes);"},{"lineNumber":785,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d delegate"},{"lineNumber":786,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":787,"author":{"gitId":"-"},"content":"                ExecutePositionsAction(positionsAction, true);"},{"lineNumber":788,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":789,"author":{"gitId":"-"},"content":"            PreviewHandler();"},{"lineNumber":790,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":791,"author":{"gitId":"-"},"content":""},{"lineNumber":792,"author":{"gitId":"-"},"content":"        private void SnapVerticalButton_MouseEnter(object sender, System.Windows.Input.MouseEventArgs e)"},{"lineNumber":793,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":794,"author":{"gitId":"-"},"content":"            Action\u003cList\u003cShape\u003e\u003e positionsAction \u003d (shapes) \u003d\u003e PositionsLabMain.SnapVertical(shapes);"},{"lineNumber":795,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d delegate"},{"lineNumber":796,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":797,"author":{"gitId":"-"},"content":"                ExecutePositionsAction(positionsAction, true);"},{"lineNumber":798,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":799,"author":{"gitId":"-"},"content":"            PreviewHandler();"},{"lineNumber":800,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":801,"author":{"gitId":"-"},"content":""},{"lineNumber":802,"author":{"gitId":"-"},"content":"        private void SnapAwayButton_MouseEnter(object sender, System.Windows.Input.MouseEventArgs e)"},{"lineNumber":803,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":804,"author":{"gitId":"-"},"content":"            Action\u003cList\u003cShape\u003e\u003e positionsAction \u003d (shapes) \u003d\u003e PositionsLabMain.SnapAway(shapes);"},{"lineNumber":805,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d delegate"},{"lineNumber":806,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":807,"author":{"gitId":"-"},"content":"                ExecutePositionsAction(positionsAction, true);"},{"lineNumber":808,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":809,"author":{"gitId":"-"},"content":"            PreviewHandler();"},{"lineNumber":810,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":811,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":812,"author":{"gitId":"-"},"content":""},{"lineNumber":813,"author":{"gitId":"-"},"content":"        #region Helper"},{"lineNumber":814,"author":{"gitId":"-"},"content":"        private Shape AddReferencePoint(Shapes shapes, float left, float top)"},{"lineNumber":815,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":816,"author":{"gitId":"-"},"content":"            return shapes.AddShape(Office.MsoAutoShapeType.msoShapeOval, left, top, RefpointRadius, RefpointRadius);"},{"lineNumber":817,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":818,"author":{"gitId":"-"},"content":""},{"lineNumber":819,"author":{"gitId":"-"},"content":"        private float PointsToScreenPixelsX(float point)"},{"lineNumber":820,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":821,"author":{"gitId":"-"},"content":"            return this.GetCurrentWindow().PointsToScreenPixelsX(point);"},{"lineNumber":822,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":823,"author":{"gitId":"-"},"content":""},{"lineNumber":824,"author":{"gitId":"-"},"content":"        private float PointsToScreenPixelsY(float point)"},{"lineNumber":825,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":826,"author":{"gitId":"-"},"content":"            return this.GetCurrentWindow().PointsToScreenPixelsY(point);"},{"lineNumber":827,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":828,"author":{"gitId":"-"},"content":""},{"lineNumber":829,"author":{"gitId":"-"},"content":"        private bool IsPointWithinShape(Shape shape, System.Drawing.Point p)"},{"lineNumber":830,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":831,"author":{"gitId":"-"},"content":"            float epsilon \u003d 0.00001f;"},{"lineNumber":832,"author":{"gitId":"-"},"content":""},{"lineNumber":833,"author":{"gitId":"-"},"content":"            System.Drawing.PointF centerPoint \u003d ConvertSlidePointToScreenPoint(shape.GetCenterPoint());"},{"lineNumber":834,"author":{"gitId":"-"},"content":"            System.Drawing.PointF rotatedMousePos \u003d CommonUtil.RotatePoint(p, centerPoint, -shape.Rotation);"},{"lineNumber":835,"author":{"gitId":"-"},"content":""},{"lineNumber":836,"author":{"gitId":"-"},"content":"            float x1 \u003d PointsToScreenPixelsX(shape.Left);"},{"lineNumber":837,"author":{"gitId":"-"},"content":"            float y1 \u003d PointsToScreenPixelsY(shape.Top);"},{"lineNumber":838,"author":{"gitId":"-"},"content":"            float x2 \u003d PointsToScreenPixelsX(shape.Left + shape.Width);"},{"lineNumber":839,"author":{"gitId":"-"},"content":"            float y2 \u003d PointsToScreenPixelsY(shape.Top + shape.Height);"},{"lineNumber":840,"author":{"gitId":"-"},"content":""},{"lineNumber":841,"author":{"gitId":"-"},"content":"            // Expand the bounding box with a standard padding"},{"lineNumber":842,"author":{"gitId":"-"},"content":"            // NOTE: PowerPoint transforms the mouse cursor when entering shapes before it actually"},{"lineNumber":843,"author":{"gitId":"-"},"content":"            // enters the shape. To account for that, add this extra \u0027padding\u0027"},{"lineNumber":844,"author":{"gitId":"-"},"content":"            // Testing reveals that the current value (in PowerPoint 2013) is 6px"},{"lineNumber":845,"author":{"gitId":"-"},"content":"            // http://stackoverflow.com/questions/22815084/catch-mouse-events-in-powerpoint-designer-through-vsto"},{"lineNumber":846,"author":{"gitId":"-"},"content":"            x1 -\u003d 6;"},{"lineNumber":847,"author":{"gitId":"-"},"content":"            x2 +\u003d 6;"},{"lineNumber":848,"author":{"gitId":"-"},"content":"            y1 -\u003d 6;"},{"lineNumber":849,"author":{"gitId":"-"},"content":"            y2 +\u003d 6;"},{"lineNumber":850,"author":{"gitId":"-"},"content":""},{"lineNumber":851,"author":{"gitId":"-"},"content":"            return (x1 - epsilon \u003c\u003d rotatedMousePos.X \u0026\u0026 rotatedMousePos.X  \u003c\u003d x2 + epsilon) \u0026\u0026 (y1 - epsilon \u003c\u003d rotatedMousePos.Y \u0026\u0026 rotatedMousePos.Y \u003c\u003d y2 + epsilon);"},{"lineNumber":852,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":853,"author":{"gitId":"-"},"content":""},{"lineNumber":854,"author":{"gitId":"-"},"content":"        private Shape GetShapeDirectlyBelowMousePos(List\u003cShape\u003e shapes, System.Drawing.Point p)"},{"lineNumber":855,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":856,"author":{"gitId":"-"},"content":"            Shape aShape \u003d null;"},{"lineNumber":857,"author":{"gitId":"-"},"content":""},{"lineNumber":858,"author":{"gitId":"-"},"content":"            foreach (Shape s in shapes)"},{"lineNumber":859,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":860,"author":{"gitId":"-"},"content":"                if (IsPointWithinShape(s, p))"},{"lineNumber":861,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":862,"author":{"gitId":"-"},"content":"                    if (aShape \u003d\u003d null || aShape.ZOrderPosition \u003c s.ZOrderPosition)"},{"lineNumber":863,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":864,"author":{"gitId":"-"},"content":"                        aShape \u003d s;"},{"lineNumber":865,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":866,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":867,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":868,"author":{"gitId":"-"},"content":""},{"lineNumber":869,"author":{"gitId":"-"},"content":"            return aShape;"},{"lineNumber":870,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":871,"author":{"gitId":"-"},"content":""},{"lineNumber":872,"author":{"gitId":"-"},"content":"        private List\u003cPPShape\u003e ConvertShapeRangeToPPShapeList (ShapeRange range, int index)"},{"lineNumber":873,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":874,"author":{"gitId":"-"},"content":"            List\u003cPPShape\u003e shapes \u003d new List\u003cPPShape\u003e();"},{"lineNumber":875,"author":{"gitId":"-"},"content":""},{"lineNumber":876,"author":{"gitId":"-"},"content":"            for (int i \u003d index; i \u003c\u003d range.Count; i++)"},{"lineNumber":877,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":878,"author":{"gitId":"-"},"content":"                Shape s \u003d range[i];"},{"lineNumber":879,"author":{"gitId":"-"},"content":"                if (s.Type.Equals(Office.MsoShapeType.msoPicture))"},{"lineNumber":880,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":881,"author":{"gitId":"-"},"content":"                    shapes.Add(new PPShape(range[i], false));"},{"lineNumber":882,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":883,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":884,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":885,"author":{"gitId":"-"},"content":"                    shapes.Add(new PPShape(range[i]));"},{"lineNumber":886,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":887,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":888,"author":{"gitId":"-"},"content":""},{"lineNumber":889,"author":{"gitId":"-"},"content":"            return shapes;"},{"lineNumber":890,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":891,"author":{"gitId":"-"},"content":""},{"lineNumber":892,"author":{"gitId":"-"},"content":"        private List\u003cShape\u003e ConvertShapeRangeToShapeList(ShapeRange range, int index)"},{"lineNumber":893,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":894,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e shapes \u003d new List\u003cShape\u003e();"},{"lineNumber":895,"author":{"gitId":"-"},"content":""},{"lineNumber":896,"author":{"gitId":"-"},"content":"            for (int i \u003d index; i \u003c\u003d range.Count; i++)"},{"lineNumber":897,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":898,"author":{"gitId":"-"},"content":"                shapes.Add(range[i]);"},{"lineNumber":899,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":900,"author":{"gitId":"-"},"content":""},{"lineNumber":901,"author":{"gitId":"-"},"content":"            return shapes;"},{"lineNumber":902,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":903,"author":{"gitId":"-"},"content":""},{"lineNumber":904,"author":{"gitId":"-"},"content":"        private List\u003cShape\u003e ConvertShapesToShapeList(Shapes shapes)"},{"lineNumber":905,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":906,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e listOfShapes \u003d new List\u003cShape\u003e();"},{"lineNumber":907,"author":{"gitId":"-"},"content":""},{"lineNumber":908,"author":{"gitId":"-"},"content":"            foreach (Shape s in shapes)"},{"lineNumber":909,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":910,"author":{"gitId":"-"},"content":"                listOfShapes.Add(s);"},{"lineNumber":911,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":912,"author":{"gitId":"-"},"content":""},{"lineNumber":913,"author":{"gitId":"-"},"content":"            return listOfShapes;"},{"lineNumber":914,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":915,"author":{"gitId":"-"},"content":""},{"lineNumber":916,"author":{"gitId":"-"},"content":"        private System.Drawing.PointF ConvertSlidePointToScreenPoint(System.Drawing.PointF pt)"},{"lineNumber":917,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":918,"author":{"gitId":"-"},"content":"            pt.X \u003d PointsToScreenPixelsX(pt.X);"},{"lineNumber":919,"author":{"gitId":"-"},"content":"            pt.Y \u003d PointsToScreenPixelsY(pt.Y);"},{"lineNumber":920,"author":{"gitId":"-"},"content":""},{"lineNumber":921,"author":{"gitId":"-"},"content":"            return pt;"},{"lineNumber":922,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":923,"author":{"gitId":"-"},"content":""},{"lineNumber":924,"author":{"gitId":"-"},"content":"        private void SelectShapes(List\u003cShape\u003e shapes)"},{"lineNumber":925,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":926,"author":{"gitId":"-"},"content":"            foreach (Shape s in shapes)"},{"lineNumber":927,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":928,"author":{"gitId":"-"},"content":"                s.Select(Office.MsoTriState.msoFalse);"},{"lineNumber":929,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":930,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":931,"author":{"gitId":"-"},"content":""},{"lineNumber":932,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":933,"author":{"gitId":"-"},"content":""},{"lineNumber":934,"author":{"gitId":"-"},"content":"        #region Settings Dialog"},{"lineNumber":935,"author":{"gitId":"-"},"content":"        private void AlignSettingsButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":936,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":937,"author":{"gitId":"-"},"content":"            PositionsLabSettings.ShowAlignSettingsDialog();"},{"lineNumber":938,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":939,"author":{"gitId":"-"},"content":""},{"lineNumber":940,"author":{"gitId":"-"},"content":"        private void DistributeSettingsButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":941,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":942,"author":{"gitId":"-"},"content":"            PositionsLabSettings.ShowDistributeSettingsDialog();"},{"lineNumber":943,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":944,"author":{"gitId":"-"},"content":""},{"lineNumber":945,"author":{"gitId":"-"},"content":"        private void ReorderSettingsButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":946,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":947,"author":{"gitId":"-"},"content":"            PositionsLabSettings.ShowReorderSettingsDialog();"},{"lineNumber":948,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":949,"author":{"gitId":"-"},"content":""},{"lineNumber":950,"author":{"gitId":"-"},"content":"        private void ReorientSettingsButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":951,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":952,"author":{"gitId":"-"},"content":"            PositionsLabSettings.ShowReorientSettingsDialog();"},{"lineNumber":953,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":954,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":955,"author":{"gitId":"-"},"content":""},{"lineNumber":956,"author":{"gitId":"-"},"content":"        public void ClearAllEventHandlers()"},{"lineNumber":957,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":958,"author":{"gitId":"-"},"content":"            if (_leftMouseUpListener !\u003d null)"},{"lineNumber":959,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":960,"author":{"gitId":"-"},"content":"                _leftMouseUpListener.Close();"},{"lineNumber":961,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":962,"author":{"gitId":"-"},"content":""},{"lineNumber":963,"author":{"gitId":"-"},"content":"            if (_leftMouseDownListener !\u003d null)"},{"lineNumber":964,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":965,"author":{"gitId":"-"},"content":"                _leftMouseDownListener.Close();"},{"lineNumber":966,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":967,"author":{"gitId":"-"},"content":""},{"lineNumber":968,"author":{"gitId":"-"},"content":"            _dispatcherTimer.Stop();"},{"lineNumber":969,"author":{"gitId":"-"},"content":"            _dispatcherTimer \u003d new DispatcherTimer(DispatcherPriority.Background, Dispatcher);"},{"lineNumber":970,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":971,"author":{"gitId":"-"},"content":""},{"lineNumber":972,"author":{"gitId":"-"},"content":"        private void StartRotationMode()"},{"lineNumber":973,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":974,"author":{"gitId":"-"},"content":"            _dispatcherTimer.Tick +\u003d RotationHandler;"},{"lineNumber":975,"author":{"gitId":"-"},"content":""},{"lineNumber":976,"author":{"gitId":"-"},"content":"            _leftMouseUpListener \u003d new LMouseUpListener();"},{"lineNumber":977,"author":{"gitId":"-"},"content":"            _leftMouseUpListener.LButtonUpClicked +\u003d _leftMouseUpListener_Rotation;"},{"lineNumber":978,"author":{"gitId":"-"},"content":""},{"lineNumber":979,"author":{"gitId":"-"},"content":"            _leftMouseDownListener \u003d new LMouseDownListener();"},{"lineNumber":980,"author":{"gitId":"-"},"content":"            _leftMouseDownListener.LButtonDownClicked +\u003d _leftMouseDownListener_Rotation;"},{"lineNumber":981,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":982,"author":{"gitId":"-"},"content":""},{"lineNumber":983,"author":{"gitId":"-"},"content":"        private void DisableRotationMode()"},{"lineNumber":984,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":985,"author":{"gitId":"-"},"content":"            ClearAllEventHandlers();"},{"lineNumber":986,"author":{"gitId":"-"},"content":"            _selectedRange \u003d null;"},{"lineNumber":987,"author":{"gitId":"-"},"content":"            _refPoint \u003d null;"},{"lineNumber":988,"author":{"gitId":"-"},"content":"            _shapesToBeRotated \u003d new List\u003cShape\u003e();"},{"lineNumber":989,"author":{"gitId":"-"},"content":"            _allShapesInSlide \u003d new List\u003cShape\u003e();"},{"lineNumber":990,"author":{"gitId":"-"},"content":"            _prevMousePos \u003d new System.Drawing.Point();"},{"lineNumber":991,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":992,"author":{"gitId":"-"},"content":""},{"lineNumber":993,"author":{"gitId":"-"},"content":"        private void StartLockAxisMode()"},{"lineNumber":994,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":995,"author":{"gitId":"-"},"content":"            _dispatcherTimer.Tick +\u003d LockAxisHandler;"},{"lineNumber":996,"author":{"gitId":"-"},"content":""},{"lineNumber":997,"author":{"gitId":"-"},"content":"            _leftMouseUpListener \u003d new LMouseUpListener();"},{"lineNumber":998,"author":{"gitId":"-"},"content":"            _leftMouseUpListener.LButtonUpClicked +\u003d _leftMouseUpListener_LockAxis;"},{"lineNumber":999,"author":{"gitId":"-"},"content":""},{"lineNumber":1000,"author":{"gitId":"-"},"content":"            _leftMouseDownListener \u003d new LMouseDownListener();"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"            _leftMouseDownListener.LButtonDownClicked +\u003d _leftMouseDownListener_LockAxis;"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1003,"author":{"gitId":"-"},"content":""},{"lineNumber":1004,"author":{"gitId":"-"},"content":"        private void DisableLockAxisMode()"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"            ClearAllEventHandlers();"},{"lineNumber":1007,"author":{"gitId":"-"},"content":"            _selectedRange \u003d null;"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"            _shapesToBeMoved \u003d null;"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"            _initialMousePos \u003d new System.Drawing.Point();"},{"lineNumber":1010,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1011,"author":{"gitId":"-"},"content":""},{"lineNumber":1012,"author":{"gitId":"-"},"content":"        #region Error Handling"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"        public void ShowErrorMessageBox(string content, Exception exception \u003d null)"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1015,"author":{"gitId":"-"},"content":""},{"lineNumber":1016,"author":{"gitId":"-"},"content":"            if (exception \u003d\u003d null)"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"                MessageBox.Show(content, PositionsLabText.ErrorDialogTitle);"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":1020,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"            "},{"lineNumber":1022,"author":{"gitId":"-"},"content":"            string errorMessage \u003d GetErrorMessage(exception.Message);"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"            if (!string.Equals(errorMessage, PositionsLabText.ErrorUndefined, StringComparison.Ordinal))"},{"lineNumber":1024,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1025,"author":{"gitId":"-"},"content":"                MessageBox.Show(content, PositionsLabText.ErrorDialogTitle);"},{"lineNumber":1026,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"                ErrorDialogBox.ShowDialog(PositionsLabText.ErrorDialogTitle, content, exception);"},{"lineNumber":1030,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1031,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1032,"author":{"gitId":"-"},"content":""},{"lineNumber":1033,"author":{"gitId":"-"},"content":"        private string GetErrorMessage(string errorMsg)"},{"lineNumber":1034,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1035,"author":{"gitId":"-"},"content":"            switch (errorMsg)"},{"lineNumber":1036,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"                case PositionsLabText.ErrorNoSelection:"},{"lineNumber":1038,"author":{"gitId":"-"},"content":"                    return PositionsLabText.ErrorNoSelection;"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"                case PositionsLabText.ErrorFewerThanTwoSelection:"},{"lineNumber":1040,"author":{"gitId":"-"},"content":"                    return PositionsLabText.ErrorFewerThanTwoSelection;"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"                case PositionsLabText.ErrorFewerThanThreeSelection:"},{"lineNumber":1042,"author":{"gitId":"-"},"content":"                    return PositionsLabText.ErrorFewerThanThreeSelection;"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"                case PositionsLabText.ErrorFewerThanFourSelection:"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"                    return PositionsLabText.ErrorFewerThanFourSelection;"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"                case PositionsLabText.ErrorFunctionNotSupportedForWithinShapes:"},{"lineNumber":1046,"author":{"gitId":"-"},"content":"                    return PositionsLabText.ErrorFunctionNotSupportedForWithinShapes;"},{"lineNumber":1047,"author":{"gitId":"-"},"content":"                case PositionsLabText.ErrorFunctionNotSupportedForSlide:"},{"lineNumber":1048,"author":{"gitId":"-"},"content":"                    return PositionsLabText.ErrorFunctionNotSupportedForSlide;"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"                case PositionsLabText.ErrorFunctionNotSupportedForOverlapRefShapeCenter:"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"                    return PositionsLabText.ErrorFunctionNotSupportedForOverlapRefShapeCenter;"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"                default:"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"                    return PositionsLabText.ErrorUndefined;"},{"lineNumber":1053,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1054,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1055,"author":{"gitId":"-"},"content":""},{"lineNumber":1056,"author":{"gitId":"-"},"content":"        private void IgnoreExceptionThrown() { }"},{"lineNumber":1057,"author":{"gitId":"-"},"content":""},{"lineNumber":1058,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":1059,"author":{"gitId":"-"},"content":""},{"lineNumber":1060,"author":{"gitId":"-"},"content":"        #region Helper"},{"lineNumber":1061,"author":{"gitId":"-"},"content":""},{"lineNumber":1062,"author":{"gitId":"-"},"content":"        // returns true if selection is valid"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"        public bool HandleInvalidSelection(bool isPreview, Selection selection)"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1065,"author":{"gitId":"-"},"content":"            if (!ShapeUtil.IsSelectionShape(selection))"},{"lineNumber":1066,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1067,"author":{"gitId":"-"},"content":"                if (!isPreview)"},{"lineNumber":1068,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1069,"author":{"gitId":"-"},"content":"                    ShowErrorMessageBox(PositionsLabText.ErrorNoSelection);"},{"lineNumber":1070,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":1072,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":1074,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1075,"author":{"gitId":"-"},"content":"        // Align left and top, Align/Distribute radial"},{"lineNumber":1076,"author":{"gitId":"-"},"content":"        public void ExecutePositionsAction(Action\u003cShapeRange\u003e positionsAction, bool isPreview, bool isConvertPPShape)"},{"lineNumber":1077,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"            Selection selection \u003d this.GetCurrentSelection();"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"            if (!HandleInvalidSelection(isPreview, selection))"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"                // invalid selection!"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":1083,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1084,"author":{"gitId":"-"},"content":""},{"lineNumber":1085,"author":{"gitId":"-"},"content":"            ShapeRange simulatedShapes \u003d null;"},{"lineNumber":1086,"author":{"gitId":"-"},"content":""},{"lineNumber":1087,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":1088,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1089,"author":{"gitId":"-"},"content":"                ShapeRange selectedShapes \u003d selection.ShapeRange;"},{"lineNumber":1090,"author":{"gitId":"-"},"content":""},{"lineNumber":1091,"author":{"gitId":"-"},"content":"                if (isPreview)"},{"lineNumber":1092,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1093,"author":{"gitId":"-"},"content":"                    SaveSelectedShapePositions(selectedShapes, allShapePos);"},{"lineNumber":1094,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1095,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":1096,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1097,"author":{"gitId":"-"},"content":"                    UndoPreview();"},{"lineNumber":1098,"author":{"gitId":"-"},"content":"                    _previewCallBack \u003d null;"},{"lineNumber":1099,"author":{"gitId":"-"},"content":"                    this.StartNewUndoEntry();"},{"lineNumber":1100,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1101,"author":{"gitId":"-"},"content":""},{"lineNumber":1102,"author":{"gitId":"-"},"content":"                // selectedShapes.Duplicate() may return a list with reversed sequence  "},{"lineNumber":1103,"author":{"gitId":"-"},"content":"                simulatedShapes \u003d DuplicateShapes(selectedShapes); "},{"lineNumber":1104,"author":{"gitId":"-"},"content":""},{"lineNumber":1105,"author":{"gitId":"-"},"content":"                if (PositionsLabSettings.AlignReference \u003d\u003d PositionsLabSettings.AlignReferenceObject.PowerpointDefaults)"},{"lineNumber":1106,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1107,"author":{"gitId":"-"},"content":"                    positionsAction.Invoke(selectedShapes);"},{"lineNumber":1108,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"                else if (isConvertPPShape)"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"                    List\u003cPPShape\u003e simulatedPPShapes \u003d ConvertShapeRangeToPPShapeList(simulatedShapes, 1);"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"                    float[,] initialPositions \u003d SaveOriginalPositions(simulatedPPShapes);"},{"lineNumber":1113,"author":{"gitId":"-"},"content":""},{"lineNumber":1114,"author":{"gitId":"-"},"content":"                    positionsAction.Invoke(simulatedShapes);"},{"lineNumber":1115,"author":{"gitId":"-"},"content":""},{"lineNumber":1116,"author":{"gitId":"-"},"content":"                    SyncShapes(selectedShapes, simulatedShapes, initialPositions);"},{"lineNumber":1117,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1118,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":1119,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1120,"author":{"gitId":"-"},"content":"                    positionsAction.Invoke(simulatedShapes);"},{"lineNumber":1121,"author":{"gitId":"-"},"content":""},{"lineNumber":1122,"author":{"gitId":"-"},"content":"                    SyncShapes(selectedShapes, simulatedShapes);"},{"lineNumber":1123,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1124,"author":{"gitId":"-"},"content":"                if (isPreview)"},{"lineNumber":1125,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1126,"author":{"gitId":"-"},"content":"                    _previewIsExecuted \u003d true;"},{"lineNumber":1127,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1128,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1129,"author":{"gitId":"-"},"content":"            catch (Exception ex)"},{"lineNumber":1130,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1131,"author":{"gitId":"-"},"content":"                if (!isPreview)"},{"lineNumber":1132,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1133,"author":{"gitId":"-"},"content":"                    ShowErrorMessageBox(ex.Message, ex);"},{"lineNumber":1134,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1135,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"            finally"},{"lineNumber":1137,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1138,"author":{"gitId":"-"},"content":"                if (simulatedShapes !\u003d null)"},{"lineNumber":1139,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1140,"author":{"gitId":"-"},"content":"                    try"},{"lineNumber":1141,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1142,"author":{"gitId":"-"},"content":"                        simulatedShapes.SafeDelete();"},{"lineNumber":1143,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1144,"author":{"gitId":"-"},"content":"                    // Catch corrupted shapes"},{"lineNumber":1145,"author":{"gitId":"-"},"content":"                    catch (System.Runtime.InteropServices.COMException)"},{"lineNumber":1146,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1147,"author":{"gitId":"-"},"content":"                        // Remove all simulated shapes manually"},{"lineNumber":1148,"author":{"gitId":"-"},"content":"                        for (int i \u003d 0; i \u003c simulatedShapes.Count; i++)"},{"lineNumber":1149,"author":{"gitId":"-"},"content":"                        {"},{"lineNumber":1150,"author":{"gitId":"-"},"content":"                            // This method to remove duplicated shapes might fail for non-corrupted shapes when mixing good/bad shapes"},{"lineNumber":1151,"author":{"gitId":"-"},"content":"                            if (this.GetCurrentSlide().Shapes[1].Name.Contains(\"_Copy\"))"},{"lineNumber":1152,"author":{"gitId":"-"},"content":"                            {"},{"lineNumber":1153,"author":{"gitId":"-"},"content":"                                this.GetCurrentSlide().Shapes[1].SafeDelete();"},{"lineNumber":1154,"author":{"gitId":"-"},"content":"                            }"},{"lineNumber":1155,"author":{"gitId":"-"},"content":"                            else"},{"lineNumber":1156,"author":{"gitId":"-"},"content":"                            {"},{"lineNumber":1157,"author":{"gitId":"-"},"content":"                                break;"},{"lineNumber":1158,"author":{"gitId":"-"},"content":"                            }"},{"lineNumber":1159,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":1160,"author":{"gitId":"-"},"content":"                        // Remove any outlier extra shapes not deleted previously"},{"lineNumber":1161,"author":{"gitId":"-"},"content":"                        // Only triggered for cases where Distribute is called for cases consisting of both"},{"lineNumber":1162,"author":{"gitId":"-"},"content":"                        // corrupted and non-corrupted shapes"},{"lineNumber":1163,"author":{"gitId":"-"},"content":"                        try"},{"lineNumber":1164,"author":{"gitId":"-"},"content":"                        {"},{"lineNumber":1165,"author":{"gitId":"-"},"content":"                            this.GetCurrentSelection().Delete();"},{"lineNumber":1166,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":1167,"author":{"gitId":"-"},"content":"                        catch (System.Runtime.InteropServices.COMException)"},{"lineNumber":1168,"author":{"gitId":"-"},"content":"                        {"},{"lineNumber":1169,"author":{"gitId":"-"},"content":"                            // Exception will trigger whenever Distribute is applied to cases where all shapes are "},{"lineNumber":1170,"author":{"gitId":"-"},"content":"                            // either corrupted or non-corrupted, which is already handled before this try-catch block"},{"lineNumber":1171,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":1172,"author":{"gitId":"-"},"content":"                        // Ask user to undo the operation to remove any excess duplicates"},{"lineNumber":1173,"author":{"gitId":"-"},"content":"                        MessageBox.Show(PositionsLabText.ErrorCorruptedSelection, PositionsLabText.ErrorCorruptedShapesTitle);"},{"lineNumber":1174,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1175,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1176,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1177,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1178,"author":{"gitId":"-"},"content":""},{"lineNumber":1179,"author":{"gitId":"-"},"content":"        // Align right, bottom, vertical center, horizontal center"},{"lineNumber":1180,"author":{"gitId":"-"},"content":"        public void ExecutePositionsAction(Action\u003cShapeRange, float\u003e positionsAction, float dimension, bool isPreview)"},{"lineNumber":1181,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1182,"author":{"gitId":"-"},"content":"            Selection selection \u003d this.GetCurrentSelection();"},{"lineNumber":1183,"author":{"gitId":"-"},"content":"            if (!HandleInvalidSelection(isPreview, selection))"},{"lineNumber":1184,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1185,"author":{"gitId":"-"},"content":"                // invalid selection!"},{"lineNumber":1186,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":1187,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1188,"author":{"gitId":"-"},"content":""},{"lineNumber":1189,"author":{"gitId":"-"},"content":"            ShapeRange simulatedShapes \u003d null;"},{"lineNumber":1190,"author":{"gitId":"-"},"content":""},{"lineNumber":1191,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":1192,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1193,"author":{"gitId":"-"},"content":"                ShapeRange selectedShapes \u003d selection.ShapeRange;"},{"lineNumber":1194,"author":{"gitId":"-"},"content":""},{"lineNumber":1195,"author":{"gitId":"-"},"content":"                if (isPreview)"},{"lineNumber":1196,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1197,"author":{"gitId":"-"},"content":"                    SaveSelectedShapePositions(selectedShapes, allShapePos);"},{"lineNumber":1198,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1199,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":1200,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1201,"author":{"gitId":"-"},"content":"                    UndoPreview();"},{"lineNumber":1202,"author":{"gitId":"-"},"content":"                    _previewCallBack \u003d null;"},{"lineNumber":1203,"author":{"gitId":"-"},"content":"                    this.StartNewUndoEntry();"},{"lineNumber":1204,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1205,"author":{"gitId":"-"},"content":""},{"lineNumber":1206,"author":{"gitId":"-"},"content":"                simulatedShapes \u003d DuplicateShapes(selectedShapes);"},{"lineNumber":1207,"author":{"gitId":"-"},"content":"                if (PositionsLabSettings.AlignReference \u003d\u003d PositionsLabSettings.AlignReferenceObject.PowerpointDefaults)"},{"lineNumber":1208,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1209,"author":{"gitId":"-"},"content":"                    positionsAction.Invoke(selectedShapes, dimension);"},{"lineNumber":1210,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1211,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":1212,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1213,"author":{"gitId":"-"},"content":"                    List\u003cPPShape\u003e simulatedPPShapes \u003d ConvertShapeRangeToPPShapeList(simulatedShapes, 1);"},{"lineNumber":1214,"author":{"gitId":"-"},"content":"                    float[,] initialPositions \u003d SaveOriginalPositions(simulatedPPShapes);"},{"lineNumber":1215,"author":{"gitId":"-"},"content":""},{"lineNumber":1216,"author":{"gitId":"-"},"content":"                    positionsAction.Invoke(simulatedShapes, dimension);"},{"lineNumber":1217,"author":{"gitId":"-"},"content":""},{"lineNumber":1218,"author":{"gitId":"-"},"content":"                    SyncShapes(selectedShapes, simulatedShapes, initialPositions);"},{"lineNumber":1219,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1220,"author":{"gitId":"-"},"content":"                if (isPreview)"},{"lineNumber":1221,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1222,"author":{"gitId":"-"},"content":"                    _previewIsExecuted \u003d true;"},{"lineNumber":1223,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1224,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1225,"author":{"gitId":"-"},"content":"            catch (Exception ex)"},{"lineNumber":1226,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1227,"author":{"gitId":"-"},"content":"                if (!isPreview)"},{"lineNumber":1228,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1229,"author":{"gitId":"-"},"content":"                    ShowErrorMessageBox(ex.Message, ex);"},{"lineNumber":1230,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1231,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1232,"author":{"gitId":"-"},"content":"            finally"},{"lineNumber":1233,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1234,"author":{"gitId":"-"},"content":"                if (simulatedShapes !\u003d null)"},{"lineNumber":1235,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1236,"author":{"gitId":"-"},"content":"                    simulatedShapes.SafeDelete();"},{"lineNumber":1237,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1238,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1239,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1240,"author":{"gitId":"-"},"content":""},{"lineNumber":1241,"author":{"gitId":"-"},"content":"        // Align center"},{"lineNumber":1242,"author":{"gitId":"-"},"content":"        public void ExecutePositionsAction(Action\u003cShapeRange, float, float\u003e positionsAction, float dimension1, float dimension2, bool isPreview)"},{"lineNumber":1243,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1244,"author":{"gitId":"-"},"content":"            Selection selection \u003d this.GetCurrentSelection();"},{"lineNumber":1245,"author":{"gitId":"-"},"content":"            if (!HandleInvalidSelection(isPreview, selection))"},{"lineNumber":1246,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1247,"author":{"gitId":"-"},"content":"                // invalid selection!"},{"lineNumber":1248,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":1249,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1250,"author":{"gitId":"-"},"content":""},{"lineNumber":1251,"author":{"gitId":"-"},"content":"            ShapeRange simulatedShapes \u003d null;"},{"lineNumber":1252,"author":{"gitId":"-"},"content":""},{"lineNumber":1253,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":1254,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1255,"author":{"gitId":"-"},"content":"                ShapeRange selectedShapes \u003d selection.ShapeRange;"},{"lineNumber":1256,"author":{"gitId":"-"},"content":""},{"lineNumber":1257,"author":{"gitId":"-"},"content":"                if (isPreview)"},{"lineNumber":1258,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1259,"author":{"gitId":"-"},"content":"                    SaveSelectedShapePositions(selectedShapes, allShapePos);"},{"lineNumber":1260,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1261,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":1262,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1263,"author":{"gitId":"-"},"content":"                    UndoPreview();"},{"lineNumber":1264,"author":{"gitId":"-"},"content":"                    _previewCallBack \u003d null;"},{"lineNumber":1265,"author":{"gitId":"-"},"content":"                    this.StartNewUndoEntry();"},{"lineNumber":1266,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1267,"author":{"gitId":"-"},"content":""},{"lineNumber":1268,"author":{"gitId":"-"},"content":"                simulatedShapes \u003d DuplicateShapes(selectedShapes);"},{"lineNumber":1269,"author":{"gitId":"-"},"content":"                simulatedShapes.Select();"},{"lineNumber":1270,"author":{"gitId":"-"},"content":"                if (PositionsLabSettings.AlignReference \u003d\u003d PositionsLabSettings.AlignReferenceObject.PowerpointDefaults)"},{"lineNumber":1271,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1272,"author":{"gitId":"-"},"content":"                    positionsAction.Invoke(selectedShapes, dimension1, dimension2);"},{"lineNumber":1273,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1274,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":1275,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1276,"author":{"gitId":"-"},"content":"                    List\u003cPPShape\u003e simulatedPPShapes \u003d ConvertShapeRangeToPPShapeList(simulatedShapes, 1);"},{"lineNumber":1277,"author":{"gitId":"-"},"content":"                    float[,] initialPositions \u003d SaveOriginalPositions(simulatedPPShapes);"},{"lineNumber":1278,"author":{"gitId":"-"},"content":""},{"lineNumber":1279,"author":{"gitId":"-"},"content":"                    positionsAction.Invoke(simulatedShapes, dimension1, dimension2);"},{"lineNumber":1280,"author":{"gitId":"-"},"content":""},{"lineNumber":1281,"author":{"gitId":"-"},"content":"                    SyncShapes(selectedShapes, simulatedShapes, initialPositions);"},{"lineNumber":1282,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1283,"author":{"gitId":"-"},"content":""},{"lineNumber":1284,"author":{"gitId":"-"},"content":"                if (isPreview)"},{"lineNumber":1285,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1286,"author":{"gitId":"-"},"content":"                    _previewIsExecuted \u003d true;"},{"lineNumber":1287,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1288,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1289,"author":{"gitId":"-"},"content":"            catch (Exception ex)"},{"lineNumber":1290,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1291,"author":{"gitId":"-"},"content":"                if (!isPreview)"},{"lineNumber":1292,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1293,"author":{"gitId":"-"},"content":"                    ShowErrorMessageBox(ex.Message, ex);"},{"lineNumber":1294,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1295,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1296,"author":{"gitId":"-"},"content":"            finally"},{"lineNumber":1297,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1298,"author":{"gitId":"-"},"content":"                if (simulatedShapes !\u003d null)"},{"lineNumber":1299,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1300,"author":{"gitId":"-"},"content":"                    simulatedShapes.SafeDelete();"},{"lineNumber":1301,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1302,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1303,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1304,"author":{"gitId":"-"},"content":"        // Adjoin operations"},{"lineNumber":1305,"author":{"gitId":"-"},"content":"        public void ExecutePositionsAction(Action\u003cList\u003cPPShape\u003e\u003e positionsAction, bool isPreview)"},{"lineNumber":1306,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1307,"author":{"gitId":"-"},"content":"            // Need to run the action 2 times because of the nature of PowerPoint default operations"},{"lineNumber":1308,"author":{"gitId":"-"},"content":"            // This has been determined via manual testing"},{"lineNumber":1309,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c 2; i++)"},{"lineNumber":1310,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1311,"author":{"gitId":"-"},"content":"                Selection selection \u003d this.GetCurrentSelection();"},{"lineNumber":1312,"author":{"gitId":"-"},"content":"                if (!HandleInvalidSelection(isPreview, selection))"},{"lineNumber":1313,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1314,"author":{"gitId":"-"},"content":"                    // invalid selection!"},{"lineNumber":1315,"author":{"gitId":"-"},"content":"                    return;"},{"lineNumber":1316,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1317,"author":{"gitId":"-"},"content":""},{"lineNumber":1318,"author":{"gitId":"-"},"content":"                ShapeRange simulatedShapes \u003d null;"},{"lineNumber":1319,"author":{"gitId":"-"},"content":""},{"lineNumber":1320,"author":{"gitId":"-"},"content":"                try"},{"lineNumber":1321,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1322,"author":{"gitId":"-"},"content":"                    ShapeRange selectedShapes \u003d selection.ShapeRange;"},{"lineNumber":1323,"author":{"gitId":"-"},"content":"                    if (isPreview)"},{"lineNumber":1324,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1325,"author":{"gitId":"-"},"content":"                        SaveSelectedShapePositions(selectedShapes, allShapePos);"},{"lineNumber":1326,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1327,"author":{"gitId":"-"},"content":"                    else"},{"lineNumber":1328,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1329,"author":{"gitId":"-"},"content":"                        UndoPreview();"},{"lineNumber":1330,"author":{"gitId":"-"},"content":"                        _previewCallBack \u003d null;"},{"lineNumber":1331,"author":{"gitId":"-"},"content":"                        this.StartNewUndoEntry();"},{"lineNumber":1332,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1333,"author":{"gitId":"-"},"content":"                    simulatedShapes \u003d selectedShapes.Duplicate();"},{"lineNumber":1334,"author":{"gitId":"-"},"content":"                    List\u003cPPShape\u003e simulatedPPShapes \u003d ConvertShapeRangeToPPShapeList(simulatedShapes, 1);"},{"lineNumber":1335,"author":{"gitId":"-"},"content":"                    float[,] initialPositions \u003d SaveOriginalPositions(simulatedPPShapes);"},{"lineNumber":1336,"author":{"gitId":"-"},"content":""},{"lineNumber":1337,"author":{"gitId":"-"},"content":"                    positionsAction.Invoke(simulatedPPShapes);"},{"lineNumber":1338,"author":{"gitId":"-"},"content":""},{"lineNumber":1339,"author":{"gitId":"-"},"content":"                    SyncShapes(selectedShapes, simulatedPPShapes, initialPositions);"},{"lineNumber":1340,"author":{"gitId":"-"},"content":""},{"lineNumber":1341,"author":{"gitId":"-"},"content":"                    if (isPreview)"},{"lineNumber":1342,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1343,"author":{"gitId":"-"},"content":"                        _previewIsExecuted \u003d true;"},{"lineNumber":1344,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1345,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1346,"author":{"gitId":"-"},"content":"                catch (Exception ex)"},{"lineNumber":1347,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1348,"author":{"gitId":"-"},"content":"                    if (!isPreview)"},{"lineNumber":1349,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1350,"author":{"gitId":"-"},"content":"                        ShowErrorMessageBox(ex.Message, ex);"},{"lineNumber":1351,"author":{"gitId":"-"},"content":"                        break;"},{"lineNumber":1352,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1353,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1354,"author":{"gitId":"-"},"content":"                finally"},{"lineNumber":1355,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1356,"author":{"gitId":"-"},"content":"                    if (simulatedShapes !\u003d null)"},{"lineNumber":1357,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1358,"author":{"gitId":"-"},"content":"                        simulatedShapes.SafeDelete();"},{"lineNumber":1359,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1360,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1361,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1362,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1363,"author":{"gitId":"-"},"content":""},{"lineNumber":1364,"author":{"gitId":"-"},"content":"        public void ExecutePositionsAction(Action\u003cList\u003cPPShape\u003e, bool\u003e positionsAction, bool booleanVal, bool isPreview)"},{"lineNumber":1365,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1366,"author":{"gitId":"-"},"content":"            Selection selection \u003d this.GetCurrentSelection();"},{"lineNumber":1367,"author":{"gitId":"-"},"content":"            if (!HandleInvalidSelection(isPreview, selection))"},{"lineNumber":1368,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1369,"author":{"gitId":"-"},"content":"                // invalid selection!"},{"lineNumber":1370,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":1371,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1372,"author":{"gitId":"-"},"content":""},{"lineNumber":1373,"author":{"gitId":"-"},"content":"            ShapeRange simulatedShapes \u003d null;"},{"lineNumber":1374,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":1375,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1376,"author":{"gitId":"-"},"content":"                ShapeRange selectedShapes \u003d selection.ShapeRange;"},{"lineNumber":1377,"author":{"gitId":"-"},"content":""},{"lineNumber":1378,"author":{"gitId":"-"},"content":"                if (isPreview)"},{"lineNumber":1379,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1380,"author":{"gitId":"-"},"content":"                    SaveSelectedShapePositions(selectedShapes, allShapePos);"},{"lineNumber":1381,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1382,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":1383,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1384,"author":{"gitId":"-"},"content":"                    UndoPreview();"},{"lineNumber":1385,"author":{"gitId":"-"},"content":"                    _previewCallBack \u003d null;"},{"lineNumber":1386,"author":{"gitId":"-"},"content":"                    this.StartNewUndoEntry();"},{"lineNumber":1387,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1388,"author":{"gitId":"-"},"content":""},{"lineNumber":1389,"author":{"gitId":"-"},"content":"                simulatedShapes \u003d DuplicateShapes(selectedShapes);"},{"lineNumber":1390,"author":{"gitId":"-"},"content":""},{"lineNumber":1391,"author":{"gitId":"-"},"content":"                // set the zOrder"},{"lineNumber":1392,"author":{"gitId":"-"},"content":"                for (int i \u003d 1; i \u003c\u003d selectedShapes.Count; i++)"},{"lineNumber":1393,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1394,"author":{"gitId":"-"},"content":"                    PPShape simulatedPPShape \u003d new PPShape(simulatedShapes[i], false);"},{"lineNumber":1395,"author":{"gitId":"-"},"content":"                    ShapeUtil.SwapZOrder(simulatedPPShape._shape, selectedShapes[i]);"},{"lineNumber":1396,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1397,"author":{"gitId":"-"},"content":""},{"lineNumber":1398,"author":{"gitId":"-"},"content":"                List\u003cPPShape\u003e simulatedPPShapes \u003d ConvertShapeRangeToPPShapeList(simulatedShapes, 1);"},{"lineNumber":1399,"author":{"gitId":"-"},"content":"                float[,] initialPositions \u003d SaveOriginalPositions(simulatedPPShapes);"},{"lineNumber":1400,"author":{"gitId":"-"},"content":""},{"lineNumber":1401,"author":{"gitId":"-"},"content":"                positionsAction.Invoke(simulatedPPShapes, booleanVal);"},{"lineNumber":1402,"author":{"gitId":"-"},"content":""},{"lineNumber":1403,"author":{"gitId":"-"},"content":"                SyncShapes(selectedShapes, simulatedPPShapes, initialPositions);"},{"lineNumber":1404,"author":{"gitId":"-"},"content":""},{"lineNumber":1405,"author":{"gitId":"-"},"content":"                if (isPreview)"},{"lineNumber":1406,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1407,"author":{"gitId":"-"},"content":"                    _previewIsExecuted \u003d true;"},{"lineNumber":1408,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1409,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1410,"author":{"gitId":"-"},"content":"            catch (Exception ex)"},{"lineNumber":1411,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1412,"author":{"gitId":"-"},"content":"                if (!isPreview)"},{"lineNumber":1413,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1414,"author":{"gitId":"-"},"content":"                    ShowErrorMessageBox(ex.Message, ex);"},{"lineNumber":1415,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1416,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1417,"author":{"gitId":"-"},"content":"            finally"},{"lineNumber":1418,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1419,"author":{"gitId":"-"},"content":"                if (simulatedShapes !\u003d null)"},{"lineNumber":1420,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1421,"author":{"gitId":"-"},"content":"                    simulatedShapes.SafeDelete();"},{"lineNumber":1422,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1423,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1424,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1425,"author":{"gitId":"-"},"content":""},{"lineNumber":1426,"author":{"gitId":"-"},"content":"        // Distribute horizontal and vertical"},{"lineNumber":1427,"author":{"gitId":"-"},"content":"        public void ExecutePositionsAction(Action\u003cList\u003cPPShape\u003e, float\u003e positionsAction, float dimension, bool isPreview)"},{"lineNumber":1428,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1429,"author":{"gitId":"-"},"content":"            // Need to run the action 2 times because of the nature of PowerPoint default operations"},{"lineNumber":1430,"author":{"gitId":"-"},"content":"            // This has been determined via manual testing"},{"lineNumber":1431,"author":{"gitId":"-"},"content":"            for (int numOfRuns \u003d 0; numOfRuns \u003c 2; numOfRuns++)"},{"lineNumber":1432,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1433,"author":{"gitId":"-"},"content":"                Selection selection \u003d this.GetCurrentSelection();"},{"lineNumber":1434,"author":{"gitId":"-"},"content":"                if (!HandleInvalidSelection(isPreview, selection))"},{"lineNumber":1435,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1436,"author":{"gitId":"-"},"content":"                    // invalid selection!"},{"lineNumber":1437,"author":{"gitId":"-"},"content":"                    return;"},{"lineNumber":1438,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1439,"author":{"gitId":"-"},"content":""},{"lineNumber":1440,"author":{"gitId":"-"},"content":"                ShapeRange simulatedShapes \u003d null;"},{"lineNumber":1441,"author":{"gitId":"-"},"content":""},{"lineNumber":1442,"author":{"gitId":"-"},"content":"                try"},{"lineNumber":1443,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1444,"author":{"gitId":"-"},"content":"                    ShapeRange selectedShapes \u003d selection.ShapeRange;"},{"lineNumber":1445,"author":{"gitId":"-"},"content":""},{"lineNumber":1446,"author":{"gitId":"-"},"content":"                    if (isPreview)"},{"lineNumber":1447,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1448,"author":{"gitId":"-"},"content":"                        SaveSelectedShapePositions(selectedShapes, allShapePos);"},{"lineNumber":1449,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1450,"author":{"gitId":"-"},"content":"                    else"},{"lineNumber":1451,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1452,"author":{"gitId":"-"},"content":"                        UndoPreview();"},{"lineNumber":1453,"author":{"gitId":"-"},"content":"                        _previewCallBack \u003d null;"},{"lineNumber":1454,"author":{"gitId":"-"},"content":"                        this.StartNewUndoEntry();"},{"lineNumber":1455,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1456,"author":{"gitId":"-"},"content":""},{"lineNumber":1457,"author":{"gitId":"-"},"content":"                    simulatedShapes \u003d selectedShapes.Duplicate();"},{"lineNumber":1458,"author":{"gitId":"-"},"content":"                    List\u003cPPShape\u003e simulatedPPShapes \u003d ConvertShapeRangeToPPShapeList(simulatedShapes, 1);"},{"lineNumber":1459,"author":{"gitId":"-"},"content":"                    float[,] initialPositions \u003d SaveOriginalPositions(simulatedPPShapes);"},{"lineNumber":1460,"author":{"gitId":"-"},"content":""},{"lineNumber":1461,"author":{"gitId":"-"},"content":"                    positionsAction.Invoke(simulatedPPShapes, dimension);"},{"lineNumber":1462,"author":{"gitId":"-"},"content":""},{"lineNumber":1463,"author":{"gitId":"-"},"content":"                    SyncShapes(selectedShapes, simulatedPPShapes, initialPositions);"},{"lineNumber":1464,"author":{"gitId":"-"},"content":""},{"lineNumber":1465,"author":{"gitId":"-"},"content":"                    if (isPreview)"},{"lineNumber":1466,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1467,"author":{"gitId":"-"},"content":"                        _previewIsExecuted \u003d true;"},{"lineNumber":1468,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1469,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1470,"author":{"gitId":"-"},"content":"                catch (Exception ex)"},{"lineNumber":1471,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1472,"author":{"gitId":"-"},"content":"                    if (!isPreview)"},{"lineNumber":1473,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1474,"author":{"gitId":"-"},"content":"                        ShowErrorMessageBox(ex.Message, ex);"},{"lineNumber":1475,"author":{"gitId":"-"},"content":"                        break;"},{"lineNumber":1476,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1477,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1478,"author":{"gitId":"-"},"content":"                finally"},{"lineNumber":1479,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1480,"author":{"gitId":"-"},"content":"                    if (simulatedShapes !\u003d null)"},{"lineNumber":1481,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1482,"author":{"gitId":"-"},"content":"                        simulatedShapes.SafeDelete();"},{"lineNumber":1483,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1484,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1485,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1486,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1487,"author":{"gitId":"-"},"content":""},{"lineNumber":1488,"author":{"gitId":"-"},"content":"        // Distribute center"},{"lineNumber":1489,"author":{"gitId":"-"},"content":"        public void ExecutePositionsAction(Action\u003cList\u003cPPShape\u003e, float, float\u003e positionsAction, float dimension1, float dimension2, bool isPreview)"},{"lineNumber":1490,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1491,"author":{"gitId":"-"},"content":"            // Need to run the action 2 times because of the nature of PowerPoint default operations"},{"lineNumber":1492,"author":{"gitId":"-"},"content":"            // This has been determined via manual testing"},{"lineNumber":1493,"author":{"gitId":"-"},"content":"            for (int numOfRuns \u003d 0; numOfRuns \u003c 2; numOfRuns++)"},{"lineNumber":1494,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1495,"author":{"gitId":"-"},"content":"                if (this.GetCurrentSelection().Type !\u003d PpSelectionType.ppSelectionShapes)"},{"lineNumber":1496,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1497,"author":{"gitId":"-"},"content":"                    if (!isPreview)"},{"lineNumber":1498,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1499,"author":{"gitId":"-"},"content":"                        ShowErrorMessageBox(PositionsLabText.ErrorNoSelection);"},{"lineNumber":1500,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1501,"author":{"gitId":"-"},"content":"                    return;"},{"lineNumber":1502,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1503,"author":{"gitId":"-"},"content":""},{"lineNumber":1504,"author":{"gitId":"-"},"content":"                ShapeRange simulatedShapes \u003d null;"},{"lineNumber":1505,"author":{"gitId":"-"},"content":""},{"lineNumber":1506,"author":{"gitId":"-"},"content":"                try"},{"lineNumber":1507,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1508,"author":{"gitId":"-"},"content":"                    ShapeRange selectedShapes \u003d this.GetCurrentSelection().ShapeRange;"},{"lineNumber":1509,"author":{"gitId":"-"},"content":""},{"lineNumber":1510,"author":{"gitId":"-"},"content":"                    if (isPreview)"},{"lineNumber":1511,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1512,"author":{"gitId":"-"},"content":"                        SaveSelectedShapePositions(selectedShapes, allShapePos);"},{"lineNumber":1513,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1514,"author":{"gitId":"-"},"content":"                    else"},{"lineNumber":1515,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1516,"author":{"gitId":"-"},"content":"                        UndoPreview();"},{"lineNumber":1517,"author":{"gitId":"-"},"content":"                        _previewCallBack \u003d null;"},{"lineNumber":1518,"author":{"gitId":"-"},"content":"                        this.StartNewUndoEntry();"},{"lineNumber":1519,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1520,"author":{"gitId":"-"},"content":""},{"lineNumber":1521,"author":{"gitId":"-"},"content":"                    simulatedShapes \u003d selectedShapes.Duplicate();"},{"lineNumber":1522,"author":{"gitId":"-"},"content":"                    List\u003cPPShape\u003e simulatedPPShapes \u003d ConvertShapeRangeToPPShapeList(simulatedShapes, 1);"},{"lineNumber":1523,"author":{"gitId":"-"},"content":"                    float[,] initialPositions \u003d SaveOriginalPositions(simulatedPPShapes);"},{"lineNumber":1524,"author":{"gitId":"-"},"content":""},{"lineNumber":1525,"author":{"gitId":"-"},"content":"                    positionsAction.Invoke(simulatedPPShapes, dimension1, dimension2);"},{"lineNumber":1526,"author":{"gitId":"-"},"content":""},{"lineNumber":1527,"author":{"gitId":"-"},"content":"                    SyncShapes(selectedShapes, simulatedPPShapes, initialPositions);"},{"lineNumber":1528,"author":{"gitId":"-"},"content":""},{"lineNumber":1529,"author":{"gitId":"-"},"content":"                    if (isPreview)"},{"lineNumber":1530,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1531,"author":{"gitId":"-"},"content":"                        _previewIsExecuted \u003d true;"},{"lineNumber":1532,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1533,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1534,"author":{"gitId":"-"},"content":"                catch (Exception ex)"},{"lineNumber":1535,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1536,"author":{"gitId":"-"},"content":"                    if (!isPreview)"},{"lineNumber":1537,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1538,"author":{"gitId":"-"},"content":"                        ShowErrorMessageBox(ex.Message, ex);"},{"lineNumber":1539,"author":{"gitId":"-"},"content":"                        break;"},{"lineNumber":1540,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1541,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1542,"author":{"gitId":"-"},"content":"                finally"},{"lineNumber":1543,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1544,"author":{"gitId":"-"},"content":"                    if (simulatedShapes !\u003d null)"},{"lineNumber":1545,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1546,"author":{"gitId":"-"},"content":"                        simulatedShapes.SafeDelete();"},{"lineNumber":1547,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1548,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1549,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1550,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1551,"author":{"gitId":"-"},"content":""},{"lineNumber":1552,"author":{"gitId":"-"},"content":"        public void ExecutePositionsAction(Action\u003cList\u003cShape\u003e\u003e positionsAction, bool isPreview)"},{"lineNumber":1553,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1554,"author":{"gitId":"-"},"content":"            if (this.GetCurrentSelection().Type !\u003d PpSelectionType.ppSelectionShapes)"},{"lineNumber":1555,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1556,"author":{"gitId":"-"},"content":"                if (!isPreview)"},{"lineNumber":1557,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1558,"author":{"gitId":"-"},"content":"                    ShowErrorMessageBox(PositionsLabText.ErrorNoSelection);"},{"lineNumber":1559,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1560,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":1561,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1562,"author":{"gitId":"-"},"content":""},{"lineNumber":1563,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":1564,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1565,"author":{"gitId":"-"},"content":"                ShapeRange selectedShapes \u003d this.GetCurrentSelection().ShapeRange;"},{"lineNumber":1566,"author":{"gitId":"-"},"content":""},{"lineNumber":1567,"author":{"gitId":"-"},"content":"                if (isPreview)"},{"lineNumber":1568,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1569,"author":{"gitId":"-"},"content":"                    SaveSelectedShapePositions(selectedShapes, allShapePos);"},{"lineNumber":1570,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1571,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":1572,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1573,"author":{"gitId":"-"},"content":"                    UndoPreview();"},{"lineNumber":1574,"author":{"gitId":"-"},"content":"                    _previewCallBack \u003d null;"},{"lineNumber":1575,"author":{"gitId":"-"},"content":"                    this.StartNewUndoEntry();"},{"lineNumber":1576,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1577,"author":{"gitId":"-"},"content":""},{"lineNumber":1578,"author":{"gitId":"-"},"content":"                positionsAction.Invoke(ConvertShapeRangeToShapeList(selectedShapes, 1));"},{"lineNumber":1579,"author":{"gitId":"-"},"content":""},{"lineNumber":1580,"author":{"gitId":"-"},"content":"                GC.Collect();"},{"lineNumber":1581,"author":{"gitId":"-"},"content":""},{"lineNumber":1582,"author":{"gitId":"-"},"content":"                if (isPreview)"},{"lineNumber":1583,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1584,"author":{"gitId":"-"},"content":"                    _previewIsExecuted \u003d true;"},{"lineNumber":1585,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1586,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1587,"author":{"gitId":"-"},"content":"            catch (Exception ex)"},{"lineNumber":1588,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1589,"author":{"gitId":"-"},"content":"                if (!isPreview)"},{"lineNumber":1590,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1591,"author":{"gitId":"-"},"content":"                    ShowErrorMessageBox(ex.Message, ex);"},{"lineNumber":1592,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1593,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1594,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1595,"author":{"gitId":"-"},"content":""},{"lineNumber":1596,"author":{"gitId":"-"},"content":"        // Distribute grid"},{"lineNumber":1597,"author":{"gitId":"-"},"content":"        private void ExecuteDistributeGrid(int rowLength, int colLength)"},{"lineNumber":1598,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1599,"author":{"gitId":"-"},"content":"            ShapeRange simulatedShapes \u003d null;"},{"lineNumber":1600,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":1601,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1602,"author":{"gitId":"-"},"content":"                this.StartNewUndoEntry();"},{"lineNumber":1603,"author":{"gitId":"-"},"content":"                ShapeRange selectedShapes \u003d this.GetCurrentSelection().ShapeRange;"},{"lineNumber":1604,"author":{"gitId":"-"},"content":"                simulatedShapes \u003d DuplicateShapes(selectedShapes);"},{"lineNumber":1605,"author":{"gitId":"-"},"content":"                List\u003cPPShape\u003e simulatedPPShapes \u003d ConvertShapeRangeToPPShapeList(simulatedShapes, 1);"},{"lineNumber":1606,"author":{"gitId":"-"},"content":""},{"lineNumber":1607,"author":{"gitId":"-"},"content":"                PositionsLabMain.DistributeGrid(simulatedPPShapes, rowLength, colLength);"},{"lineNumber":1608,"author":{"gitId":"-"},"content":""},{"lineNumber":1609,"author":{"gitId":"-"},"content":"                SyncShapes(selectedShapes, simulatedShapes);"},{"lineNumber":1610,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1611,"author":{"gitId":"-"},"content":"            catch (Exception ex)"},{"lineNumber":1612,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1613,"author":{"gitId":"-"},"content":"                ShowErrorMessageBox(ex.Message, ex);"},{"lineNumber":1614,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1615,"author":{"gitId":"-"},"content":"            finally"},{"lineNumber":1616,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1617,"author":{"gitId":"-"},"content":"                if (simulatedShapes !\u003d null)"},{"lineNumber":1618,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1619,"author":{"gitId":"-"},"content":"                    try"},{"lineNumber":1620,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1621,"author":{"gitId":"-"},"content":"                        simulatedShapes.SafeDelete();"},{"lineNumber":1622,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1623,"author":{"gitId":"-"},"content":"                    // Catch corrupted shapes"},{"lineNumber":1624,"author":{"gitId":"-"},"content":"                    catch (System.Runtime.InteropServices.COMException)"},{"lineNumber":1625,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1626,"author":{"gitId":"-"},"content":"                        // Remove all simulated shapes manually"},{"lineNumber":1627,"author":{"gitId":"-"},"content":"                        for (int i \u003d 0; i \u003c simulatedShapes.Count; i++)"},{"lineNumber":1628,"author":{"gitId":"-"},"content":"                        {"},{"lineNumber":1629,"author":{"gitId":"-"},"content":"                            // This method to remove duplicated shapes might fail for non-corrupted shapes when mixing good/bad shapes"},{"lineNumber":1630,"author":{"gitId":"-"},"content":"                            if (this.GetCurrentSlide().Shapes[1].Name.Contains(\"_Copy\"))"},{"lineNumber":1631,"author":{"gitId":"-"},"content":"                            {"},{"lineNumber":1632,"author":{"gitId":"-"},"content":"                                this.GetCurrentSlide().Shapes[1].SafeDelete();"},{"lineNumber":1633,"author":{"gitId":"-"},"content":"                            }"},{"lineNumber":1634,"author":{"gitId":"-"},"content":"                            else"},{"lineNumber":1635,"author":{"gitId":"-"},"content":"                            {"},{"lineNumber":1636,"author":{"gitId":"-"},"content":"                                break;"},{"lineNumber":1637,"author":{"gitId":"-"},"content":"                            }"},{"lineNumber":1638,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":1639,"author":{"gitId":"-"},"content":"                        // Remove any outlier extra shapes not deleted previously"},{"lineNumber":1640,"author":{"gitId":"-"},"content":"                        // Only triggered for cases where Distribute is called for cases consisting of both"},{"lineNumber":1641,"author":{"gitId":"-"},"content":"                        // corrupted and non-corrupted shapes"},{"lineNumber":1642,"author":{"gitId":"-"},"content":"                        try"},{"lineNumber":1643,"author":{"gitId":"-"},"content":"                        {"},{"lineNumber":1644,"author":{"gitId":"-"},"content":"                            this.GetCurrentSelection().Delete();"},{"lineNumber":1645,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":1646,"author":{"gitId":"-"},"content":"                        catch (System.Runtime.InteropServices.COMException)"},{"lineNumber":1647,"author":{"gitId":"-"},"content":"                        {"},{"lineNumber":1648,"author":{"gitId":"-"},"content":"                            // Exception will trigger whenever Distribute is applied to cases where all shapes are "},{"lineNumber":1649,"author":{"gitId":"-"},"content":"                            // either corrupted or non-corrupted, which is already handled before this try-catch block"},{"lineNumber":1650,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":1651,"author":{"gitId":"-"},"content":"                        // Ask user to undo the operation to remove any excess duplicates"},{"lineNumber":1652,"author":{"gitId":"-"},"content":"                        MessageBox.Show(PositionsLabText.ErrorCorruptedSelection, PositionsLabText.ErrorCorruptedShapesTitle);"},{"lineNumber":1653,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1654,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1655,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1656,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1657,"author":{"gitId":"-"},"content":""},{"lineNumber":1658,"author":{"gitId":"-"},"content":"        private void PreviewHandler()"},{"lineNumber":1659,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1660,"author":{"gitId":"-"},"content":"            Focus();"},{"lineNumber":1661,"author":{"gitId":"-"},"content":"            if (IsPreviewKeyPressed())"},{"lineNumber":1662,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1663,"author":{"gitId":"-"},"content":"                _previewCallBack.Invoke();"},{"lineNumber":1664,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1665,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1666,"author":{"gitId":"-"},"content":""},{"lineNumber":1667,"author":{"gitId":"-"},"content":"        private void UndoPreview(object sender, MouseEventArgs e)"},{"lineNumber":1668,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1669,"author":{"gitId":"-"},"content":"            UndoPreview();"},{"lineNumber":1670,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d null;"},{"lineNumber":1671,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1672,"author":{"gitId":"-"},"content":""},{"lineNumber":1673,"author":{"gitId":"-"},"content":"        private void UndoPreview()"},{"lineNumber":1674,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1675,"author":{"gitId":"-"},"content":"            if (_previewIsExecuted)"},{"lineNumber":1676,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1677,"author":{"gitId":"-"},"content":"                ShapeRange selectedShapes \u003d this.GetCurrentSelection().ShapeRange;"},{"lineNumber":1678,"author":{"gitId":"-"},"content":""},{"lineNumber":1679,"author":{"gitId":"-"},"content":"                foreach (Shape s in selectedShapes)"},{"lineNumber":1680,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1681,"author":{"gitId":"-"},"content":"                    PositionShapeProperties properties;"},{"lineNumber":1682,"author":{"gitId":"-"},"content":"                    bool isPresent \u003d allShapePos.TryGetValue(s.Id, out properties);"},{"lineNumber":1683,"author":{"gitId":"-"},"content":""},{"lineNumber":1684,"author":{"gitId":"-"},"content":"                    if (isPresent)"},{"lineNumber":1685,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1686,"author":{"gitId":"-"},"content":"                        s.Left \u003d properties.Position.X;"},{"lineNumber":1687,"author":{"gitId":"-"},"content":"                        s.Top \u003d properties.Position.Y;"},{"lineNumber":1688,"author":{"gitId":"-"},"content":"                        s.Rotation \u003d properties.Rotation;"},{"lineNumber":1689,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1690,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1691,"author":{"gitId":"-"},"content":""},{"lineNumber":1692,"author":{"gitId":"-"},"content":"                _previewIsExecuted \u003d false;"},{"lineNumber":1693,"author":{"gitId":"-"},"content":"                GC.Collect();"},{"lineNumber":1694,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1695,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1696,"author":{"gitId":"-"},"content":""},{"lineNumber":1697,"author":{"gitId":"-"},"content":"        private bool IsPreviewKeyPressed()"},{"lineNumber":1698,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1699,"author":{"gitId":"-"},"content":"            if (Keyboard.IsKeyDown(Key.LeftShift) || Keyboard.IsKeyDown(Key.RightShift))"},{"lineNumber":1700,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1701,"author":{"gitId":"-"},"content":"                return true;"},{"lineNumber":1702,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1703,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":1704,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1705,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":1706,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1707,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1708,"author":{"gitId":"-"},"content":""},{"lineNumber":1709,"author":{"gitId":"-"},"content":"        private bool IsChangeIconKeyPressed()"},{"lineNumber":1710,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1711,"author":{"gitId":"-"},"content":"            if (Keyboard.IsKeyDown(Key.LeftCtrl) || Keyboard.IsKeyDown(Key.RightCtrl))"},{"lineNumber":1712,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1713,"author":{"gitId":"-"},"content":"                return true;"},{"lineNumber":1714,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1715,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":1716,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1717,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":1718,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1719,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1720,"author":{"gitId":"-"},"content":""},{"lineNumber":1721,"author":{"gitId":"-"},"content":"        private void SyncShapes(ShapeRange selected, ShapeRange simulatedShapes)"},{"lineNumber":1722,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1723,"author":{"gitId":"-"},"content":"            for (int i \u003d 1; i \u003c\u003d selected.Count; i++)"},{"lineNumber":1724,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1725,"author":{"gitId":"-"},"content":"                Shape selectedShape \u003d selected[i];"},{"lineNumber":1726,"author":{"gitId":"-"},"content":"                Shape simulatedShape \u003d simulatedShapes[i];"},{"lineNumber":1727,"author":{"gitId":"-"},"content":""},{"lineNumber":1728,"author":{"gitId":"-"},"content":"                selectedShape.IncrementLeft(simulatedShape.GetCenterPoint().X - selectedShape.GetCenterPoint().X);"},{"lineNumber":1729,"author":{"gitId":"-"},"content":"                selectedShape.IncrementTop(simulatedShape.GetCenterPoint().Y - selectedShape.GetCenterPoint().Y);"},{"lineNumber":1730,"author":{"gitId":"-"},"content":"                selectedShape.Rotation \u003d simulatedShape.Rotation;"},{"lineNumber":1731,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1732,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1733,"author":{"gitId":"-"},"content":""},{"lineNumber":1734,"author":{"gitId":"-"},"content":"        private void SyncShapes(ShapeRange selected, ShapeRange simulatedShapes, float[,] originalPositions)"},{"lineNumber":1735,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1736,"author":{"gitId":"-"},"content":"            for (int i \u003d 1; i \u003c\u003d selected.Count; i++)"},{"lineNumber":1737,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1738,"author":{"gitId":"-"},"content":"                Shape selectedShape \u003d selected[i];"},{"lineNumber":1739,"author":{"gitId":"-"},"content":"                Shape simulatedShape \u003d simulatedShapes[i];"},{"lineNumber":1740,"author":{"gitId":"-"},"content":""},{"lineNumber":1741,"author":{"gitId":"-"},"content":"                selectedShape.IncrementLeft(simulatedShape.GetCenterPoint().X - originalPositions[i - 1, Left]);"},{"lineNumber":1742,"author":{"gitId":"-"},"content":"                selectedShape.IncrementTop(simulatedShape.GetCenterPoint().Y - originalPositions[i - 1, Top]);"},{"lineNumber":1743,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1744,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1745,"author":{"gitId":"-"},"content":""},{"lineNumber":1746,"author":{"gitId":"-"},"content":"        private void SyncShapes(ShapeRange selected, List\u003cPPShape\u003e simulatedShapes, float[,] originalPositions)"},{"lineNumber":1747,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1748,"author":{"gitId":"-"},"content":"            for (int i \u003d 1; i \u003c\u003d selected.Count; i++)"},{"lineNumber":1749,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1750,"author":{"gitId":"-"},"content":"                Shape selectedShape \u003d selected[i];"},{"lineNumber":1751,"author":{"gitId":"-"},"content":"                PPShape simulatedShape \u003d simulatedShapes[i - 1];"},{"lineNumber":1752,"author":{"gitId":"-"},"content":""},{"lineNumber":1753,"author":{"gitId":"-"},"content":"                selectedShape.IncrementLeft(simulatedShape.VisualCenter.X - originalPositions[i - 1, Left]);"},{"lineNumber":1754,"author":{"gitId":"-"},"content":"                selectedShape.IncrementTop(simulatedShape.VisualCenter.Y - originalPositions[i - 1, Top]);"},{"lineNumber":1755,"author":{"gitId":"-"},"content":"                ShapeUtil.SwapZOrder(simulatedShape._shape, selectedShape);"},{"lineNumber":1756,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1757,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1758,"author":{"gitId":"-"},"content":""},{"lineNumber":1759,"author":{"gitId":"-"},"content":"        private ShapeRange DuplicateShapes(ShapeRange range)"},{"lineNumber":1760,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1761,"author":{"gitId":"-"},"content":"            String[] duplicatedShapeNames \u003d new String[range.Count];"},{"lineNumber":1762,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c range.Count; i++)"},{"lineNumber":1763,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1764,"author":{"gitId":"-"},"content":"                Shape shape \u003d range[i + 1];"},{"lineNumber":1765,"author":{"gitId":"-"},"content":"                Shape duplicated \u003d shape.Duplicate()[1];"},{"lineNumber":1766,"author":{"gitId":"-"},"content":""},{"lineNumber":1767,"author":{"gitId":"-"},"content":"                // Add a number at end of name in case the name of shapes are same"},{"lineNumber":1768,"author":{"gitId":"-"},"content":"                duplicated.Name \u003d shape.Name + \"_Copy_\" + i.ToString();"},{"lineNumber":1769,"author":{"gitId":"-"},"content":""},{"lineNumber":1770,"author":{"gitId":"-"},"content":"                duplicated.Left \u003d shape.Left;"},{"lineNumber":1771,"author":{"gitId":"-"},"content":"                duplicated.Top \u003d shape.Top;"},{"lineNumber":1772,"author":{"gitId":"-"},"content":"                duplicatedShapeNames[i] \u003d duplicated.Name;"},{"lineNumber":1773,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1774,"author":{"gitId":"-"},"content":"            return this.GetCurrentSlide().Shapes.Range(duplicatedShapeNames);"},{"lineNumber":1775,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1776,"author":{"gitId":"-"},"content":""},{"lineNumber":1777,"author":{"gitId":"-"},"content":"        private float[,] SaveOriginalPositions(List\u003cPPShape\u003e shapes)"},{"lineNumber":1778,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1779,"author":{"gitId":"-"},"content":"            float[,] initialPositions \u003d new float[shapes.Count, 2];"},{"lineNumber":1780,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c shapes.Count; i++)"},{"lineNumber":1781,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1782,"author":{"gitId":"-"},"content":"                PPShape s \u003d shapes[i];"},{"lineNumber":1783,"author":{"gitId":"-"},"content":"                System.Drawing.PointF pt \u003d s.VisualCenter;"},{"lineNumber":1784,"author":{"gitId":"-"},"content":"                initialPositions[i, Left] \u003d pt.X;"},{"lineNumber":1785,"author":{"gitId":"-"},"content":"                initialPositions[i, Top] \u003d pt.Y;"},{"lineNumber":1786,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1787,"author":{"gitId":"-"},"content":""},{"lineNumber":1788,"author":{"gitId":"-"},"content":"            return initialPositions;"},{"lineNumber":1789,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1790,"author":{"gitId":"-"},"content":""},{"lineNumber":1791,"author":{"gitId":"-"},"content":"        private void SaveSelectedShapePositions(ShapeRange shapes, Dictionary\u003cint, PositionShapeProperties\u003e dictionary)"},{"lineNumber":1792,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1793,"author":{"gitId":"-"},"content":"            dictionary.Clear();"},{"lineNumber":1794,"author":{"gitId":"-"},"content":"            foreach (Shape s in shapes)"},{"lineNumber":1795,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1796,"author":{"gitId":"-"},"content":"                dictionary.Add(s.Id, new PositionShapeProperties(new System.Drawing.PointF(s.Left, s.Top), s.Rotation, s.HorizontalFlip, s.VerticalFlip));"},{"lineNumber":1797,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1798,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1799,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":1800,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1801,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":1772,"xantho09":29}},{"path":"PowerPointLabs/PowerPointLabs/ResizeLab/ResizeLabPaneWPF.xaml.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using System;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"using System.Collections.Generic;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"using System.Linq;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"using System.Windows;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"using System.Windows.Controls;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"using System.Windows.Input;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Extension;"},{"lineNumber":9,"author":{"gitId":"xantho09"},"content":"using PowerPointLabs.ColorThemes;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"using PowerPointLabs.ColorThemes.Extensions;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"using PowerPointLabs.ResizeLab.Views;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"using PowerPoint \u003d Microsoft.Office.Interop.PowerPoint;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.ResizeLab"},{"lineNumber":16,"author":{"gitId":"-"},"content":"{"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /// \u003csummary\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /// Interaction logic for ResizePane.xaml"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /// \u003c/summary\u003e"},{"lineNumber":20,"author":{"gitId":"xantho09"},"content":"    public partial class ResizeLabPaneWPF : IResizeLabPane, INotifyOnThemeChanged"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        private ResizeLabMain _resizeLab;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        private readonly ResizeLabErrorHandler _errorHandler;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        private Dictionary\u003cResizeLabMain.AnchorPoint, RadioButton\u003e _anchorButtonLookUp;"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"        public static bool IsAspectRatioLocked { get; set; }"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        "},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // Dialog windows"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        private StretchSettingsDialog _stretchSettingsDialog;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        private AdjustProportionallySettingsDialog _adjustProportionallySettingsDialog;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        private SlightAdjustSettingsDialog _slightAdjustSettingsDialog;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // For preview"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        private bool _isPreviewed;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        private delegate void PreviewCallBack();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        private PreviewCallBack _previewCallBack;"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        public ResizeLabPaneWPF()"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            InitializeComponent();"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            InitialiseLogicInstance();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            // Initialise settings"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            InitialiseAnchorButton();"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            UnlockAspectRatio();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            VisualHeightRadioBtn.IsChecked \u003d true;"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"            _errorHandler \u003d ResizeLabErrorHandler.InitializeErrorHandler(this);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            "},{"lineNumber":49,"author":{"gitId":"-"},"content":"            Focusable \u003d true;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"xantho09"},"content":"        #region INotifyOnThemeChanged Interface methods"},{"lineNumber":53,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":54,"author":{"gitId":"xantho09"},"content":"        /// \u003csummary\u003e"},{"lineNumber":55,"author":{"gitId":"xantho09"},"content":"        /// Changes the MahApps accent of this pane based on the Color Theme."},{"lineNumber":56,"author":{"gitId":"xantho09"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":57,"author":{"gitId":"xantho09"},"content":"        /// \u003cremarks\u003e"},{"lineNumber":58,"author":{"gitId":"xantho09"},"content":"        /// The Steel accent will be used on all themes, except for the DarkGray"},{"lineNumber":59,"author":{"gitId":"xantho09"},"content":"        /// theme, which will use the Teal accent."},{"lineNumber":60,"author":{"gitId":"xantho09"},"content":"        /// \u003c/remarks\u003e"},{"lineNumber":61,"author":{"gitId":"xantho09"},"content":"        /// \u003cparam name\u003d\"updatedColorTheme\"\u003eThe new color theme\u003c/param\u003e"},{"lineNumber":62,"author":{"gitId":"xantho09"},"content":"        public void OnThemeChanged(ColorTheme updatedColorTheme)"},{"lineNumber":63,"author":{"gitId":"xantho09"},"content":"        {"},{"lineNumber":64,"author":{"gitId":"xantho09"},"content":"            // The Steel accent doesn\u0027t look good on the DarkGray background."},{"lineNumber":65,"author":{"gitId":"xantho09"},"content":"            // The closest accent that looks okay is Teal."},{"lineNumber":66,"author":{"gitId":"xantho09"},"content":"            switch (updatedColorTheme.ThemeId)"},{"lineNumber":67,"author":{"gitId":"xantho09"},"content":"            {"},{"lineNumber":68,"author":{"gitId":"xantho09"},"content":"                case ColorTheme.DARK_GRAY:"},{"lineNumber":69,"author":{"gitId":"xantho09"},"content":"                    ThemeExtensions.ChangeMahAppsAccent(this, \"Teal\");"},{"lineNumber":70,"author":{"gitId":"xantho09"},"content":"                    break;"},{"lineNumber":71,"author":{"gitId":"xantho09"},"content":"                default:"},{"lineNumber":72,"author":{"gitId":"xantho09"},"content":"                    ThemeExtensions.ChangeMahAppsAccent(this, \"Steel\");"},{"lineNumber":73,"author":{"gitId":"xantho09"},"content":"                    break;"},{"lineNumber":74,"author":{"gitId":"xantho09"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"xantho09"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":77,"author":{"gitId":"xantho09"},"content":"        #endregion"},{"lineNumber":78,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"        #region Initialise"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        internal void InitialiseLogicInstance()"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (_resizeLab \u003d\u003d null)"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                _resizeLab \u003d new ResizeLabMain();"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        private void InitialiseAnchorButton()"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            _anchorButtonLookUp \u003d new Dictionary\u003cResizeLabMain.AnchorPoint, RadioButton\u003e()"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                { ResizeLabMain.AnchorPoint.TopLeft, AnchorTopLeftBtn},"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                { ResizeLabMain.AnchorPoint.TopCenter, AnchorTopMidBtn},"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                { ResizeLabMain.AnchorPoint.TopRight, AnchorTopRightBtn},"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                { ResizeLabMain.AnchorPoint.MiddleLeft, AnchorMidLeftBtn},"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                { ResizeLabMain.AnchorPoint.Center, AnchorMidBtn},"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                { ResizeLabMain.AnchorPoint.MiddleRight, AnchorMidRightBtn},"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                { ResizeLabMain.AnchorPoint.BottomLeft, AnchorBottomLeftBtn},"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                { ResizeLabMain.AnchorPoint.BottomCenter, AnchorBottomMidBtn},"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                { ResizeLabMain.AnchorPoint.BottomRight, AnchorBottomRightBtn}"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            AnchorTopLeftBtn.IsChecked \u003d true;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"        #region Execute Stretch and Shrink"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"        private void StretchLeftBtn_Click(object sender, RoutedEventArgs e)"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e resizeAction \u003d shapes \u003d\u003e _resizeLab.StretchLeft(shapes);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            ClickHandler(resizeAction, ResizeLabMain.Stretch_MinNoOfShapesRequired,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                ResizeLabMain.Stretch_ErrorParameters);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"        private void StretchRightBtn_Click(object sender, RoutedEventArgs e)"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e resizeAction \u003d shapes \u003d\u003e _resizeLab.StretchRight(shapes);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            ClickHandler(resizeAction, ResizeLabMain.Stretch_MinNoOfShapesRequired,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                ResizeLabMain.Stretch_ErrorParameters);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"        private void StretchTopBtn_Click(object sender, RoutedEventArgs e)"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e resizeAction \u003d shapes \u003d\u003e _resizeLab.StretchTop(shapes);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            ClickHandler(resizeAction, ResizeLabMain.Stretch_MinNoOfShapesRequired,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                ResizeLabMain.Stretch_ErrorParameters);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private void StretchBottomBtn_Click(object sender, RoutedEventArgs e)"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e resizeAction \u003d shapes \u003d\u003e _resizeLab.StretchBottom(shapes);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            ClickHandler(resizeAction, ResizeLabMain.Stretch_MinNoOfShapesRequired,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                ResizeLabMain.Stretch_ErrorParameters);"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private void StretchSettingsBtn_Click(object sender, RoutedEventArgs e)"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            if (_stretchSettingsDialog \u003d\u003d null || !_stretchSettingsDialog.IsOpen)"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                _stretchSettingsDialog \u003d new StretchSettingsDialog(_resizeLab);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                _stretchSettingsDialog.ShowThematicDialog();"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                _stretchSettingsDialog.Activate();"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            StretchUpdateToolTip();"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private void StretchUpdateToolTip()"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            if (_resizeLab.ReferenceType \u003d\u003d ResizeLabMain.StretchRefType.FirstSelected)"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                StretchLeftBtn.ToolTip \u003d ResizeLabTooltip.StretchLeftFirstRef;"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                StretchRightBtn.ToolTip \u003d ResizeLabTooltip.StretchRightFirstRef;"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                StretchTopBtn.ToolTip \u003d ResizeLabTooltip.StretchTopFirstRef;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                StretchBottomBtn.ToolTip \u003d ResizeLabTooltip.StretchBottomFirstRef;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            if (_resizeLab.ReferenceType \u003d\u003d ResizeLabMain.StretchRefType.Outermost)"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                StretchLeftBtn.ToolTip \u003d ResizeLabTooltip.StretchLeftOuterRef;"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                StretchRightBtn.ToolTip \u003d ResizeLabTooltip.StretchRightOuterRef;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                StretchTopBtn.ToolTip \u003d ResizeLabTooltip.StretchTopOuterRef;"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                StretchBottomBtn.ToolTip \u003d ResizeLabTooltip.StretchBottomOuterRef;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"        #region Execute Same Dimension"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"        private void SameWidthBtn_Click(object sender, RoutedEventArgs e)"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e resizeAction \u003d shapes \u003d\u003e _resizeLab.ResizeToSameWidth(shapes);"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            ClickHandler(resizeAction, ResizeLabMain.Equalize_MinNoOfShapesRequired,"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                ResizeLabMain.Equalize_ErrorParameters);"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"        private void SameHeightBtn_Click(object sender, RoutedEventArgs e)"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e resizeAction \u003d shapes \u003d\u003e _resizeLab.ResizeToSameHeight(shapes);"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            ClickHandler(resizeAction, ResizeLabMain.Equalize_MinNoOfShapesRequired,"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                            ResizeLabMain.Equalize_ErrorParameters);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"        private void SameSizeBtn_Click(object sender, RoutedEventArgs e)"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e resizeAction \u003d shapes \u003d\u003e _resizeLab.ResizeToSameHeightAndWidth(shapes);"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            ClickHandler(resizeAction, ResizeLabMain.Equalize_MinNoOfShapesRequired,"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                ResizeLabMain.Equalize_ErrorParameters);"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"        #region Execute Fit"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        private void FitWidthBtn_Click(object sender, RoutedEventArgs e)"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange, float, float, bool\u003e resizeAction \u003d"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                (shapes, referenceWidth, referenceHeight, isAspectRatio) \u003d\u003e"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                    _resizeLab.FitToWidth(shapes, referenceWidth, referenceHeight, isAspectRatio);"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                };"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            ClickHandler(resizeAction, ResizeLabMain.Fit_MinNoOfShapesRequired,"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                ResizeLabMain.Fit_ErrorParameters);"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"        private void FitHeightBtn_Click(object sender, RoutedEventArgs e)"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange, float, float, bool\u003e resizeAction \u003d"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                (shapes, referenceWidth, referenceHeight, isAspectRatio) \u003d\u003e"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                    _resizeLab.FitToHeight(shapes, referenceWidth, referenceHeight, isAspectRatio);"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                };"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            ClickHandler(resizeAction, ResizeLabMain.Fit_MinNoOfShapesRequired,"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                            ResizeLabMain.Fit_ErrorParameters);"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"        private void FillBtn_Click(object sender, RoutedEventArgs e)"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange, float, float, bool\u003e resizeAction \u003d"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                (shapes, referenceWidth, referenceHeight, isAspectRatio) \u003d\u003e"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    _resizeLab.FitToFill(shapes, referenceWidth, referenceHeight, isAspectRatio);"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                };"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            ClickHandler(resizeAction, ResizeLabMain.Fit_MinNoOfShapesRequired,"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                ResizeLabMain.Fit_ErrorParameters);"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"        #region Execute Slight Adjust"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        private void IncreaseHeightBtn_Click(object sender, RoutedEventArgs e)"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e resizeAction \u003d shapes \u003d\u003e _resizeLab.IncreaseHeight(shapes);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            ClickHandler(resizeAction, ResizeLabMain.SlightAdjust_MinNoOfShapesRequired,"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                ResizeLabMain.SlightAdjust_ErrorParameters);"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"        private void DecreaseHeightBtn_Click(object sender, RoutedEventArgs e)"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e resizeAction \u003d shapes \u003d\u003e _resizeLab.DecreaseHeight(shapes);"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            ClickHandler(resizeAction, ResizeLabMain.SlightAdjust_MinNoOfShapesRequired,"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                ResizeLabMain.SlightAdjust_ErrorParameters);"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"-"},"content":"        private void IncreaseWidthBtn_Click(object sender, RoutedEventArgs e)"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e resizeAction \u003d shapes \u003d\u003e _resizeLab.IncreaseWidth(shapes);"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            ClickHandler(resizeAction, ResizeLabMain.SlightAdjust_MinNoOfShapesRequired,"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                ResizeLabMain.SlightAdjust_ErrorParameters);"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"        private void DecreaseWidthBtn_Click(object sender, RoutedEventArgs e)"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e resizeAction \u003d shapes \u003d\u003e _resizeLab.DecreaseWidth(shapes);"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            ClickHandler(resizeAction, ResizeLabMain.SlightAdjust_MinNoOfShapesRequired,"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                ResizeLabMain.SlightAdjust_ErrorParameters);"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"        private void SlightAdjustSettingsBtn_Click(object sender, RoutedEventArgs e)"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            if (_slightAdjustSettingsDialog \u003d\u003d null || !_slightAdjustSettingsDialog.IsOpen)"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                _slightAdjustSettingsDialog \u003d new SlightAdjustSettingsDialog(_resizeLab);"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                _slightAdjustSettingsDialog.ShowThematicDialog();"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                _slightAdjustSettingsDialog.Activate();"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"        #region Execute Match"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        private void MatchWidthBtn_Click(object sender, RoutedEventArgs e)"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e resizeAction \u003d shapes \u003d\u003e _resizeLab.MatchWidth(shapes);"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            ClickHandler(resizeAction, ResizeLabMain.Match_MinNoOfShapesRequired,"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                ResizeLabMain.Match_ErrorParameters);"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"        private void MatchHeightBtn_Click(object sender, RoutedEventArgs e)"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e resizeAction \u003d shapes \u003d\u003e _resizeLab.MatchHeight(shapes);"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            ClickHandler(resizeAction, ResizeLabMain.Match_MinNoOfShapesRequired,"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                ResizeLabMain.Match_ErrorParameters);"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":290,"author":{"gitId":"-"},"content":""},{"lineNumber":291,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"-"},"content":"        #region Execute Adjust Proportionally"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        private void ProportionalWidthBtn_Click(object sender, RoutedEventArgs e)"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            if (ProportionalPromptProportion())"},{"lineNumber":297,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":298,"author":{"gitId":"-"},"content":"                Action\u003cPowerPoint.ShapeRange\u003e resizeAction \u003d shapes \u003d\u003e _resizeLab.AdjustWidthProportionally(shapes);"},{"lineNumber":299,"author":{"gitId":"-"},"content":"                ClickHandler(resizeAction, ResizeLabMain.AdjustProportionally_MinNoOfShapesRequired,"},{"lineNumber":300,"author":{"gitId":"-"},"content":"                    ResizeLabMain.AdjustProportionally_ErrorParameters);"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"        private void ProportionalHeightBtn_Click(object sender, RoutedEventArgs e)"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":306,"author":{"gitId":"-"},"content":"            if (ProportionalPromptProportion())"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                Action\u003cPowerPoint.ShapeRange\u003e resizeAction \u003d shapes \u003d\u003e _resizeLab.AdjustHeightProportionally(shapes);"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                ClickHandler(resizeAction, ResizeLabMain.AdjustProportionally_MinNoOfShapesRequired,"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                    ResizeLabMain.AdjustProportionally_ErrorParameters);"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":"        private void ProportionalAreaBtn_Click(object sender, RoutedEventArgs e)"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            if (ProportionalPromptProportion(isForSameShapes: true))"},{"lineNumber":317,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                Action\u003cPowerPoint.ShapeRange\u003e resizeAction \u003d shapes \u003d\u003e _resizeLab.AdjustAreaProportionally(shapes);"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                ClickHandler(resizeAction, ResizeLabMain.AdjustProportionally_MinNoOfShapesRequired,"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                    ResizeLabMain.AdjustProportionally_ErrorParameters);"},{"lineNumber":321,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":"        private bool ProportionalPromptProportion(bool isForSameShapes \u003d false)"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":326,"author":{"gitId":"-"},"content":"            int? noOfShapes \u003d GetSelectedShapes()?.Count;"},{"lineNumber":327,"author":{"gitId":"-"},"content":"            if (!noOfShapes.HasValue || noOfShapes \u003c 2)"},{"lineNumber":328,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":329,"author":{"gitId":"-"},"content":"                _errorHandler.ProcessErrorCode(ResizeLabErrorHandler.ErrorCodeInvalidSelection, ResizeLabMain.AdjustProportionally_ErrorParameters);"},{"lineNumber":330,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":331,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":332,"author":{"gitId":"-"},"content":"            if (isForSameShapes)"},{"lineNumber":333,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":334,"author":{"gitId":"-"},"content":"                int errorCode \u003d IsValidShapes(GetSelectedShapes());"},{"lineNumber":335,"author":{"gitId":"-"},"content":""},{"lineNumber":336,"author":{"gitId":"-"},"content":"                if (errorCode !\u003d -1)"},{"lineNumber":337,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":338,"author":{"gitId":"-"},"content":"                    _errorHandler.ProcessErrorCode(errorCode);"},{"lineNumber":339,"author":{"gitId":"-"},"content":"                    return false;"},{"lineNumber":340,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":342,"author":{"gitId":"-"},"content":"            if (_adjustProportionallySettingsDialog \u003d\u003d null || !_adjustProportionallySettingsDialog.IsOpen)"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":344,"author":{"gitId":"-"},"content":"                _adjustProportionallySettingsDialog \u003d new AdjustProportionallySettingsDialog(_resizeLab, noOfShapes.GetValueOrDefault());"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                _adjustProportionallySettingsDialog.ShowThematicDialog();"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":347,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":348,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                _adjustProportionallySettingsDialog.Activate();"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":351,"author":{"gitId":"-"},"content":""},{"lineNumber":352,"author":{"gitId":"-"},"content":"            if (_resizeLab.AdjustProportionallyProportionList?.Count !\u003d noOfShapes.Value) // User probably closed the dialog"},{"lineNumber":353,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":354,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":355,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":358,"author":{"gitId":"-"},"content":""},{"lineNumber":359,"author":{"gitId":"-"},"content":"        private int IsValidShapes(PowerPoint.ShapeRange selectedShapes)"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":361,"author":{"gitId":"-"},"content":"            PowerPoint.Shape referenceShape \u003d selectedShapes[1];"},{"lineNumber":362,"author":{"gitId":"-"},"content":""},{"lineNumber":363,"author":{"gitId":"-"},"content":"            if (referenceShape.Type \u003d\u003d Microsoft.Office.Core.MsoShapeType.msoGroup)"},{"lineNumber":364,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":365,"author":{"gitId":"-"},"content":"                return ResizeLabErrorHandler.ErrorCodeGroupShapeNotSupported;"},{"lineNumber":366,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":367,"author":{"gitId":"-"},"content":""},{"lineNumber":368,"author":{"gitId":"-"},"content":"            PowerPoint.Adjustments referenceAdjustments \u003d referenceShape.Adjustments;"},{"lineNumber":369,"author":{"gitId":"-"},"content":"            bool isAutoShapeOrCallout \u003d referenceShape.Type \u003d\u003d Microsoft.Office.Core.MsoShapeType.msoAutoShape"},{"lineNumber":370,"author":{"gitId":"-"},"content":"                                       || referenceShape.Type \u003d\u003d Microsoft.Office.Core.MsoShapeType.msoCallout;"},{"lineNumber":371,"author":{"gitId":"-"},"content":"            bool isFreeform \u003d referenceShape.Type \u003d\u003d Microsoft.Office.Core.MsoShapeType.msoFreeform;"},{"lineNumber":372,"author":{"gitId":"-"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"            Utils.PPShape referencePPShape;"},{"lineNumber":374,"author":{"gitId":"-"},"content":"            List\u003cSystem.Drawing.PointF\u003e referenceShapePoints \u003d null;"},{"lineNumber":375,"author":{"gitId":"-"},"content":""},{"lineNumber":376,"author":{"gitId":"-"},"content":"            if (isFreeform)"},{"lineNumber":377,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":378,"author":{"gitId":"-"},"content":"                referencePPShape \u003d new Utils.PPShape(referenceShape, false);"},{"lineNumber":379,"author":{"gitId":"-"},"content":"                referenceShapePoints \u003d referencePPShape.Points;"},{"lineNumber":380,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"-"},"content":"            for (int i \u003d 2; i \u003c\u003d selectedShapes.Count; i++)"},{"lineNumber":383,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":384,"author":{"gitId":"-"},"content":"                PowerPoint.Shape currentShape \u003d selectedShapes[i];"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"                if (currentShape.Type \u003d\u003d Microsoft.Office.Core.MsoShapeType.msoGroup)"},{"lineNumber":387,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":388,"author":{"gitId":"-"},"content":"                    return ResizeLabErrorHandler.ErrorCodeGroupShapeNotSupported;"},{"lineNumber":389,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":390,"author":{"gitId":"-"},"content":""},{"lineNumber":391,"author":{"gitId":"-"},"content":"                if (currentShape.Type !\u003d referenceShape.Type || currentShape.AutoShapeType !\u003d referenceShape.AutoShapeType)"},{"lineNumber":392,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":393,"author":{"gitId":"-"},"content":"                    return ResizeLabErrorHandler.ErrorCodeNotSameShapes;"},{"lineNumber":394,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"-"},"content":"                if (isAutoShapeOrCallout)"},{"lineNumber":397,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":398,"author":{"gitId":"-"},"content":"                    PowerPoint.Adjustments currentAdjustments \u003d currentShape.Adjustments;"},{"lineNumber":399,"author":{"gitId":"-"},"content":""},{"lineNumber":400,"author":{"gitId":"-"},"content":"                    if (currentAdjustments.Count !\u003d referenceAdjustments.Count)"},{"lineNumber":401,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":402,"author":{"gitId":"-"},"content":"                        return ResizeLabErrorHandler.ErrorCodeNotSameShapes;"},{"lineNumber":403,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":404,"author":{"gitId":"-"},"content":""},{"lineNumber":405,"author":{"gitId":"-"},"content":"                    for (int j \u003d 1; j \u003c\u003d referenceAdjustments.Count; j++)"},{"lineNumber":406,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":407,"author":{"gitId":"-"},"content":"                        if (currentAdjustments[j] !\u003d referenceAdjustments[j])"},{"lineNumber":408,"author":{"gitId":"-"},"content":"                        {"},{"lineNumber":409,"author":{"gitId":"-"},"content":"                            return ResizeLabErrorHandler.ErrorCodeNotSameShapes;"},{"lineNumber":410,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":411,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":412,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":413,"author":{"gitId":"-"},"content":"                else if (isFreeform)"},{"lineNumber":414,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":415,"author":{"gitId":"-"},"content":"                    Microsoft.Office.Core.MsoTriState isAspectRatio \u003d selectedShapes.LockAspectRatio;"},{"lineNumber":416,"author":{"gitId":"-"},"content":"                    selectedShapes.LockAspectRatio \u003d Microsoft.Office.Core.MsoTriState.msoFalse;"},{"lineNumber":417,"author":{"gitId":"-"},"content":""},{"lineNumber":418,"author":{"gitId":"-"},"content":"                    PowerPoint.Shape duplicateCurrentShape \u003d currentShape.Duplicate()[1];"},{"lineNumber":419,"author":{"gitId":"-"},"content":"                    duplicateCurrentShape.Width \u003d referenceShape.Width;"},{"lineNumber":420,"author":{"gitId":"-"},"content":"                    duplicateCurrentShape.Height \u003d referenceShape.Height;"},{"lineNumber":421,"author":{"gitId":"-"},"content":"                    duplicateCurrentShape.Rotation \u003d referenceShape.Rotation;"},{"lineNumber":422,"author":{"gitId":"-"},"content":"                    duplicateCurrentShape.Left \u003d referenceShape.Left;"},{"lineNumber":423,"author":{"gitId":"-"},"content":"                    duplicateCurrentShape.Top \u003d referenceShape.Top;"},{"lineNumber":424,"author":{"gitId":"-"},"content":"                    Utils.PPShape currentPPShape \u003d new Utils.PPShape(duplicateCurrentShape, false);"},{"lineNumber":425,"author":{"gitId":"-"},"content":"                    List\u003cSystem.Drawing.PointF\u003e currentShapePoints \u003d currentPPShape.Points;"},{"lineNumber":426,"author":{"gitId":"-"},"content":"                    duplicateCurrentShape.SafeDelete();"},{"lineNumber":427,"author":{"gitId":"-"},"content":""},{"lineNumber":428,"author":{"gitId":"-"},"content":"                    selectedShapes.LockAspectRatio \u003d isAspectRatio;"},{"lineNumber":429,"author":{"gitId":"-"},"content":""},{"lineNumber":430,"author":{"gitId":"-"},"content":"                    if (!currentShapePoints.SequenceEqual(referenceShapePoints))"},{"lineNumber":431,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":432,"author":{"gitId":"-"},"content":"                        return ResizeLabErrorHandler.ErrorCodeNotSameShapes;"},{"lineNumber":433,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":434,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":435,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":436,"author":{"gitId":"-"},"content":""},{"lineNumber":437,"author":{"gitId":"-"},"content":"            return -1;"},{"lineNumber":438,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":439,"author":{"gitId":"-"},"content":""},{"lineNumber":440,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":441,"author":{"gitId":"-"},"content":""},{"lineNumber":442,"author":{"gitId":"-"},"content":"        #region Preview Stretch and Shrink"},{"lineNumber":443,"author":{"gitId":"-"},"content":""},{"lineNumber":444,"author":{"gitId":"-"},"content":"        private void StretchLeftBtn_MouseEnter(object sender, MouseEventArgs e)"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":446,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e previewAction \u003d shapes \u003d\u003e _resizeLab.StretchLeft(shapes);"},{"lineNumber":447,"author":{"gitId":"-"},"content":"            PreviewHandler(previewAction, ResizeLabMain.Stretch_MinNoOfShapesRequired);"},{"lineNumber":448,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":449,"author":{"gitId":"-"},"content":""},{"lineNumber":450,"author":{"gitId":"-"},"content":"        private void StretchRightBtn_MouseEnter(object sender, MouseEventArgs e)"},{"lineNumber":451,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":452,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e previewAction \u003d shapes \u003d\u003e _resizeLab.StretchRight(shapes);"},{"lineNumber":453,"author":{"gitId":"-"},"content":"            PreviewHandler(previewAction, ResizeLabMain.Stretch_MinNoOfShapesRequired);"},{"lineNumber":454,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":455,"author":{"gitId":"-"},"content":""},{"lineNumber":456,"author":{"gitId":"-"},"content":"        private void StretchTopBtn_MouseEnter(object sender, MouseEventArgs e)"},{"lineNumber":457,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":458,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e previewAction \u003d shapes \u003d\u003e _resizeLab.StretchTop(shapes);"},{"lineNumber":459,"author":{"gitId":"-"},"content":"            PreviewHandler(previewAction, ResizeLabMain.Stretch_MinNoOfShapesRequired);"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":461,"author":{"gitId":"-"},"content":""},{"lineNumber":462,"author":{"gitId":"-"},"content":"        private void StretchBottomBtn_MouseEnter(object sender, MouseEventArgs e)"},{"lineNumber":463,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":464,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e previewAction \u003d shapes \u003d\u003e _resizeLab.StretchBottom(shapes);"},{"lineNumber":465,"author":{"gitId":"-"},"content":"            PreviewHandler(previewAction, ResizeLabMain.Stretch_MinNoOfShapesRequired);"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":467,"author":{"gitId":"-"},"content":""},{"lineNumber":468,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":469,"author":{"gitId":"-"},"content":""},{"lineNumber":470,"author":{"gitId":"-"},"content":"        #region Preview Same Dimension"},{"lineNumber":471,"author":{"gitId":"-"},"content":""},{"lineNumber":472,"author":{"gitId":"-"},"content":"        private void SameWidthBtn_MouseEnter(object sender, MouseEventArgs e)"},{"lineNumber":473,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":474,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e previewAction \u003d shapes \u003d\u003e _resizeLab.ResizeToSameWidth(shapes);"},{"lineNumber":475,"author":{"gitId":"-"},"content":"            PreviewHandler(previewAction, ResizeLabMain.Equalize_MinNoOfShapesRequired);"},{"lineNumber":476,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":477,"author":{"gitId":"-"},"content":"        "},{"lineNumber":478,"author":{"gitId":"-"},"content":"        private void SameHeightBtn_MouseEnter(object sender, MouseEventArgs e)"},{"lineNumber":479,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":480,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e previewAction \u003d shapes \u003d\u003e _resizeLab.ResizeToSameHeight(shapes);"},{"lineNumber":481,"author":{"gitId":"-"},"content":"            PreviewHandler(previewAction, ResizeLabMain.Equalize_MinNoOfShapesRequired);"},{"lineNumber":482,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":483,"author":{"gitId":"-"},"content":""},{"lineNumber":484,"author":{"gitId":"-"},"content":"        private void SameSizeBtn_MouseEnter(object sender, MouseEventArgs e)"},{"lineNumber":485,"author":{"gitId":"-"},"content":"        { "},{"lineNumber":486,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e previewAction \u003d shapes \u003d\u003e _resizeLab.ResizeToSameHeightAndWidth(shapes);"},{"lineNumber":487,"author":{"gitId":"-"},"content":""},{"lineNumber":488,"author":{"gitId":"-"},"content":"            PreviewHandler(previewAction, ResizeLabMain.Equalize_MinNoOfShapesRequired);"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":490,"author":{"gitId":"-"},"content":""},{"lineNumber":491,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":492,"author":{"gitId":"-"},"content":""},{"lineNumber":493,"author":{"gitId":"-"},"content":"        #region Preview Fit"},{"lineNumber":494,"author":{"gitId":"-"},"content":""},{"lineNumber":495,"author":{"gitId":"-"},"content":"        private void FitWidthBtn_MouseEnter(object sender, MouseEventArgs e)"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":497,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange, float, float, bool\u003e previewAction \u003d"},{"lineNumber":498,"author":{"gitId":"-"},"content":"                (shapes, referenceWidth, referenceHeight, isAspectRatio) \u003d\u003e"},{"lineNumber":499,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":500,"author":{"gitId":"-"},"content":"                    _resizeLab.FitToWidth(shapes, referenceWidth, referenceHeight, isAspectRatio);"},{"lineNumber":501,"author":{"gitId":"-"},"content":"                };"},{"lineNumber":502,"author":{"gitId":"-"},"content":""},{"lineNumber":503,"author":{"gitId":"-"},"content":"            PreviewHandler(previewAction);"},{"lineNumber":504,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":505,"author":{"gitId":"-"},"content":""},{"lineNumber":506,"author":{"gitId":"-"},"content":"        private void FitHeightBtn_MouseEnter(object sender, MouseEventArgs e)"},{"lineNumber":507,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":508,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange, float, float, bool\u003e previewAction \u003d"},{"lineNumber":509,"author":{"gitId":"-"},"content":"                (shapes, referenceWidth, referenceHeight, isAspectRatio) \u003d\u003e"},{"lineNumber":510,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":511,"author":{"gitId":"-"},"content":"                    _resizeLab.FitToHeight(shapes, referenceWidth, referenceHeight, isAspectRatio);"},{"lineNumber":512,"author":{"gitId":"-"},"content":"                };"},{"lineNumber":513,"author":{"gitId":"-"},"content":"            PreviewHandler(previewAction);"},{"lineNumber":514,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":515,"author":{"gitId":"-"},"content":""},{"lineNumber":516,"author":{"gitId":"-"},"content":"        private void FillBtn_MouseEnter(object sender, MouseEventArgs e)"},{"lineNumber":517,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":518,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange, float, float, bool\u003e previewAction \u003d"},{"lineNumber":519,"author":{"gitId":"-"},"content":"                (shapes, referenceWidth, referenceHeight, isAspectRatio) \u003d\u003e"},{"lineNumber":520,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":521,"author":{"gitId":"-"},"content":"                    _resizeLab.FitToFill(shapes, referenceWidth, referenceHeight, isAspectRatio);"},{"lineNumber":522,"author":{"gitId":"-"},"content":"                };"},{"lineNumber":523,"author":{"gitId":"-"},"content":"            PreviewHandler(previewAction);"},{"lineNumber":524,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":525,"author":{"gitId":"-"},"content":""},{"lineNumber":526,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":527,"author":{"gitId":"-"},"content":""},{"lineNumber":528,"author":{"gitId":"-"},"content":"        #region Preview Slight Adjust"},{"lineNumber":529,"author":{"gitId":"-"},"content":"        private void IncreaseHeightBtn_MouseEnter(object sender, MouseEventArgs e)"},{"lineNumber":530,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":531,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e previewAction \u003d shapes \u003d\u003e _resizeLab.IncreaseHeight(shapes);"},{"lineNumber":532,"author":{"gitId":"-"},"content":"            PreviewHandler(previewAction, ResizeLabMain.SlightAdjust_MinNoOfShapesRequired);"},{"lineNumber":533,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":534,"author":{"gitId":"-"},"content":""},{"lineNumber":535,"author":{"gitId":"-"},"content":"        private void DecreaseHeightBtn_MouseEnter(object sender, MouseEventArgs e)"},{"lineNumber":536,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":537,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e previewAction \u003d shapes \u003d\u003e _resizeLab.DecreaseHeight(shapes);"},{"lineNumber":538,"author":{"gitId":"-"},"content":"            PreviewHandler(previewAction, ResizeLabMain.SlightAdjust_MinNoOfShapesRequired);"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":540,"author":{"gitId":"-"},"content":""},{"lineNumber":541,"author":{"gitId":"-"},"content":"        private void IncreaseWidthBtn_MouseEnter(object sender, MouseEventArgs e)"},{"lineNumber":542,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":543,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e previewAction \u003d shapes \u003d\u003e _resizeLab.IncreaseWidth(shapes);"},{"lineNumber":544,"author":{"gitId":"-"},"content":"            PreviewHandler(previewAction, ResizeLabMain.SlightAdjust_MinNoOfShapesRequired);"},{"lineNumber":545,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":546,"author":{"gitId":"-"},"content":""},{"lineNumber":547,"author":{"gitId":"-"},"content":"        private void DecreaseWidthBtn_MouseEnter(object sender, MouseEventArgs e)"},{"lineNumber":548,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":549,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e previewAction \u003d shapes \u003d\u003e _resizeLab.DecreaseWidth(shapes);"},{"lineNumber":550,"author":{"gitId":"-"},"content":"            PreviewHandler(previewAction, ResizeLabMain.SlightAdjust_MinNoOfShapesRequired);"},{"lineNumber":551,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":552,"author":{"gitId":"-"},"content":""},{"lineNumber":553,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":554,"author":{"gitId":"-"},"content":""},{"lineNumber":555,"author":{"gitId":"-"},"content":"        #region Preview Match"},{"lineNumber":556,"author":{"gitId":"-"},"content":"        private void MatchWidthBtn_MouseEnter(object sender, MouseEventArgs e)"},{"lineNumber":557,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":558,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e previewAction \u003d shapes \u003d\u003e _resizeLab.MatchWidth(shapes);"},{"lineNumber":559,"author":{"gitId":"-"},"content":"            PreviewHandler(previewAction, ResizeLabMain.Match_MinNoOfShapesRequired);"},{"lineNumber":560,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":561,"author":{"gitId":"-"},"content":""},{"lineNumber":562,"author":{"gitId":"-"},"content":"        private void MatchHeightBtn_MouseEnter(object sender, MouseEventArgs e)"},{"lineNumber":563,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":564,"author":{"gitId":"-"},"content":"            Action\u003cPowerPoint.ShapeRange\u003e previewAction \u003d shapes \u003d\u003e _resizeLab.MatchHeight(shapes);"},{"lineNumber":565,"author":{"gitId":"-"},"content":"            PreviewHandler(previewAction, ResizeLabMain.Match_MinNoOfShapesRequired);"},{"lineNumber":566,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":567,"author":{"gitId":"-"},"content":""},{"lineNumber":568,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":569,"author":{"gitId":"-"},"content":""},{"lineNumber":570,"author":{"gitId":"-"},"content":"        #region Main Settings"},{"lineNumber":571,"author":{"gitId":"-"},"content":""},{"lineNumber":572,"author":{"gitId":"-"},"content":"        private void LockAspectRatio_UnChecked(object sender, RoutedEventArgs e)"},{"lineNumber":573,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":574,"author":{"gitId":"-"},"content":"            UnlockAspectRatio();"},{"lineNumber":575,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":576,"author":{"gitId":"-"},"content":""},{"lineNumber":577,"author":{"gitId":"-"},"content":"        private void LockAspectRatio_Checked(object sender, RoutedEventArgs e)"},{"lineNumber":578,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":579,"author":{"gitId":"-"},"content":"            LockAspectRatio();"},{"lineNumber":580,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":581,"author":{"gitId":"-"},"content":""},{"lineNumber":582,"author":{"gitId":"-"},"content":"        private void UnlockAspectRatio()"},{"lineNumber":583,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":584,"author":{"gitId":"-"},"content":"            IsAspectRatioLocked \u003d false;"},{"lineNumber":585,"author":{"gitId":"-"},"content":""},{"lineNumber":586,"author":{"gitId":"-"},"content":"            ModifySelectionAspectRatio();"},{"lineNumber":587,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":588,"author":{"gitId":"-"},"content":""},{"lineNumber":589,"author":{"gitId":"-"},"content":"        private void LockAspectRatio()"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":591,"author":{"gitId":"-"},"content":"            IsAspectRatioLocked \u003d true;"},{"lineNumber":592,"author":{"gitId":"-"},"content":""},{"lineNumber":593,"author":{"gitId":"-"},"content":"            ModifySelectionAspectRatio();"},{"lineNumber":594,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":595,"author":{"gitId":"-"},"content":""},{"lineNumber":596,"author":{"gitId":"-"},"content":"        private void ModifySelectionAspectRatio()"},{"lineNumber":597,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":598,"author":{"gitId":"-"},"content":"            if (_resizeLab.IsSelectionValid(GetSelection(), false))"},{"lineNumber":599,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":600,"author":{"gitId":"-"},"content":"                _resizeLab.ChangeShapesAspectRatio(GetSelectedShapes(), IsAspectRatioLocked);"},{"lineNumber":601,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":602,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":603,"author":{"gitId":"-"},"content":""},{"lineNumber":604,"author":{"gitId":"-"},"content":"        private void AnchorBtn_Checked(object sender, RoutedEventArgs e)"},{"lineNumber":605,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":606,"author":{"gitId":"-"},"content":"            RadioButton checkedButton \u003d sender as RadioButton;"},{"lineNumber":607,"author":{"gitId":"-"},"content":"            foreach (KeyValuePair\u003cResizeLabMain.AnchorPoint, RadioButton\u003e anAnchorPair in _anchorButtonLookUp)"},{"lineNumber":608,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":609,"author":{"gitId":"-"},"content":"                if (checkedButton.Equals(anAnchorPair.Value))"},{"lineNumber":610,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":611,"author":{"gitId":"-"},"content":"                    _resizeLab.AnchorPointType \u003d anAnchorPair.Key;"},{"lineNumber":612,"author":{"gitId":"-"},"content":"                    return;"},{"lineNumber":613,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":614,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":615,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":616,"author":{"gitId":"-"},"content":""},{"lineNumber":617,"author":{"gitId":"-"},"content":"        private void ResizeTypeVisualBtn_Checked(object sender, RoutedEventArgs e)"},{"lineNumber":618,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":619,"author":{"gitId":"-"},"content":"            _resizeLab.ResizeType \u003d ResizeLabMain.ResizeBy.Visual;"},{"lineNumber":620,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":621,"author":{"gitId":"-"},"content":""},{"lineNumber":622,"author":{"gitId":"-"},"content":"        private void ResizeTypeActualBtn_Checked(object sender, RoutedEventArgs e)"},{"lineNumber":623,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":624,"author":{"gitId":"-"},"content":"            _resizeLab.ResizeType \u003d ResizeLabMain.ResizeBy.Actual;"},{"lineNumber":625,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":626,"author":{"gitId":"-"},"content":""},{"lineNumber":627,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":628,"author":{"gitId":"-"},"content":""},{"lineNumber":629,"author":{"gitId":"-"},"content":"        #region Miscellaneous events"},{"lineNumber":630,"author":{"gitId":"-"},"content":"        private void Btn_MouseLeave(object sender, MouseEventArgs e)"},{"lineNumber":631,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":632,"author":{"gitId":"-"},"content":"            TryReset();"},{"lineNumber":633,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d null;"},{"lineNumber":634,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":635,"author":{"gitId":"-"},"content":""},{"lineNumber":636,"author":{"gitId":"-"},"content":"        private void ResizePane_KeyDown(object sender, KeyEventArgs e)"},{"lineNumber":637,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":638,"author":{"gitId":"-"},"content":"            if (IsPreviewKeyPressed() \u0026\u0026 !_isPreviewed)"},{"lineNumber":639,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":640,"author":{"gitId":"-"},"content":"                _previewCallBack?.Invoke();"},{"lineNumber":641,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":642,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":643,"author":{"gitId":"-"},"content":"        private void ResizePane_KeyUp(object sender, KeyEventArgs e)"},{"lineNumber":644,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":645,"author":{"gitId":"-"},"content":"            TryReset();"},{"lineNumber":646,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":647,"author":{"gitId":"-"},"content":""},{"lineNumber":648,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":649,"author":{"gitId":"-"},"content":""},{"lineNumber":650,"author":{"gitId":"-"},"content":"        #region Helper Functions"},{"lineNumber":651,"author":{"gitId":"-"},"content":""},{"lineNumber":652,"author":{"gitId":"-"},"content":"        private PowerPoint.ShapeRange GetSelectedShapes(bool handleError \u003d false)"},{"lineNumber":653,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":654,"author":{"gitId":"-"},"content":"            PowerPoint.Selection selection \u003d GetSelection();"},{"lineNumber":655,"author":{"gitId":"-"},"content":""},{"lineNumber":656,"author":{"gitId":"-"},"content":"            return _resizeLab.IsSelectionValid(selection, handleError) ? GetSelection().ShapeRange : null;"},{"lineNumber":657,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":658,"author":{"gitId":"-"},"content":""},{"lineNumber":659,"author":{"gitId":"-"},"content":"        private PowerPoint.Selection GetSelection()"},{"lineNumber":660,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":661,"author":{"gitId":"-"},"content":"            return this.GetCurrentSelection();"},{"lineNumber":662,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":663,"author":{"gitId":"-"},"content":""},{"lineNumber":664,"author":{"gitId":"-"},"content":"        private void ClickHandler(Action\u003cPowerPoint.ShapeRange\u003e resizeAction, int minNoOfSelectedShapes, string[] errorParameters)"},{"lineNumber":665,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":666,"author":{"gitId":"-"},"content":"            PowerPoint.ShapeRange selectedShapes \u003d GetSelectedShapes();"},{"lineNumber":667,"author":{"gitId":"-"},"content":""},{"lineNumber":668,"author":{"gitId":"-"},"content":"            if (selectedShapes \u003d\u003d null || selectedShapes.Count \u003c minNoOfSelectedShapes)"},{"lineNumber":669,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":670,"author":{"gitId":"-"},"content":"                _errorHandler.ProcessErrorCode(ResizeLabErrorHandler.ErrorCodeInvalidSelection, errorParameters);"},{"lineNumber":671,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":672,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":673,"author":{"gitId":"-"},"content":""},{"lineNumber":674,"author":{"gitId":"-"},"content":"            ModifySelectionAspectRatio();"},{"lineNumber":675,"author":{"gitId":"-"},"content":"            ExecuteResizeAction(selectedShapes, resizeAction);"},{"lineNumber":676,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":677,"author":{"gitId":"-"},"content":""},{"lineNumber":678,"author":{"gitId":"-"},"content":"        private void ClickHandler(Action\u003cPowerPoint.ShapeRange, float, float, bool\u003e resizeAction, int minNoOfSelectedShapes,"},{"lineNumber":679,"author":{"gitId":"-"},"content":"            string[] errorParameters)"},{"lineNumber":680,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":681,"author":{"gitId":"-"},"content":"            PowerPoint.ShapeRange selectedShapes \u003d GetSelectedShapes();"},{"lineNumber":682,"author":{"gitId":"-"},"content":"            float slideWidth \u003d this.GetCurrentPresentation().SlideWidth;"},{"lineNumber":683,"author":{"gitId":"-"},"content":"            float slideHeight \u003d this.GetCurrentPresentation().SlideHeight;"},{"lineNumber":684,"author":{"gitId":"-"},"content":""},{"lineNumber":685,"author":{"gitId":"-"},"content":"            if (selectedShapes \u003d\u003d null || selectedShapes.Count \u003c minNoOfSelectedShapes)"},{"lineNumber":686,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":687,"author":{"gitId":"-"},"content":"                _errorHandler.ProcessErrorCode(ResizeLabErrorHandler.ErrorCodeInvalidSelection, errorParameters);"},{"lineNumber":688,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":689,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":690,"author":{"gitId":"-"},"content":""},{"lineNumber":691,"author":{"gitId":"-"},"content":"            ModifySelectionAspectRatio();"},{"lineNumber":692,"author":{"gitId":"-"},"content":"            ExecuteResizeAction(selectedShapes, slideWidth, slideHeight, resizeAction);"},{"lineNumber":693,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":694,"author":{"gitId":"-"},"content":""},{"lineNumber":695,"author":{"gitId":"-"},"content":"        private void PreviewHandler(Action\u003cPowerPoint.ShapeRange\u003e previewAction, int minNoOfSelectedShapes)"},{"lineNumber":696,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":697,"author":{"gitId":"-"},"content":"            Focus();"},{"lineNumber":698,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d delegate"},{"lineNumber":699,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":700,"author":{"gitId":"-"},"content":"                PowerPoint.ShapeRange selectedShapes \u003d GetSelectedShapes();"},{"lineNumber":701,"author":{"gitId":"-"},"content":""},{"lineNumber":702,"author":{"gitId":"-"},"content":"                ModifySelectionAspectRatio();"},{"lineNumber":703,"author":{"gitId":"-"},"content":"                Preview(selectedShapes, previewAction, minNoOfSelectedShapes);"},{"lineNumber":704,"author":{"gitId":"-"},"content":"                _isPreviewed \u003d true;"},{"lineNumber":705,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":706,"author":{"gitId":"-"},"content":"            if (IsPreviewKeyPressed())"},{"lineNumber":707,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":708,"author":{"gitId":"-"},"content":"                _previewCallBack.Invoke();"},{"lineNumber":709,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":710,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":711,"author":{"gitId":"-"},"content":""},{"lineNumber":712,"author":{"gitId":"-"},"content":"        private void PreviewHandler(Action\u003cPowerPoint.ShapeRange, float, float, bool\u003e previewAction)"},{"lineNumber":713,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":714,"author":{"gitId":"-"},"content":"            Focus();"},{"lineNumber":715,"author":{"gitId":"-"},"content":"            _previewCallBack \u003d delegate"},{"lineNumber":716,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":717,"author":{"gitId":"-"},"content":"                PowerPoint.ShapeRange selectedShapes \u003d GetSelectedShapes();"},{"lineNumber":718,"author":{"gitId":"-"},"content":"                float slideWidth \u003d this.GetCurrentPresentation().SlideWidth;"},{"lineNumber":719,"author":{"gitId":"-"},"content":"                float slideHeight \u003d this.GetCurrentPresentation().SlideHeight;"},{"lineNumber":720,"author":{"gitId":"-"},"content":""},{"lineNumber":721,"author":{"gitId":"-"},"content":"                ModifySelectionAspectRatio();"},{"lineNumber":722,"author":{"gitId":"-"},"content":"                Preview(selectedShapes, slideWidth, slideHeight, previewAction);"},{"lineNumber":723,"author":{"gitId":"-"},"content":"                _isPreviewed \u003d true;"},{"lineNumber":724,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":725,"author":{"gitId":"-"},"content":"            if (IsPreviewKeyPressed())"},{"lineNumber":726,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":727,"author":{"gitId":"-"},"content":"                _previewCallBack.Invoke();"},{"lineNumber":728,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":729,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":730,"author":{"gitId":"-"},"content":""},{"lineNumber":731,"author":{"gitId":"-"},"content":"        private bool IsPreviewKeyPressed()"},{"lineNumber":732,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":733,"author":{"gitId":"-"},"content":"            if (Keyboard.IsKeyDown(Key.LeftShift) || Keyboard.IsKeyDown(Key.RightShift))"},{"lineNumber":734,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":735,"author":{"gitId":"-"},"content":"                return true;"},{"lineNumber":736,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":737,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":738,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":739,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":740,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":741,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":742,"author":{"gitId":"-"},"content":""},{"lineNumber":743,"author":{"gitId":"-"},"content":"        private void TryReset()"},{"lineNumber":744,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":745,"author":{"gitId":"-"},"content":"            if (_isPreviewed) // Preview was executed"},{"lineNumber":746,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":747,"author":{"gitId":"-"},"content":"                Reset();"},{"lineNumber":748,"author":{"gitId":"-"},"content":"                _isPreviewed \u003d false;"},{"lineNumber":749,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":750,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":751,"author":{"gitId":"-"},"content":""},{"lineNumber":752,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":753,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":754,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":725,"xantho09":29}},{"path":"PowerPointLabs/PowerPointLabs/SyncLab/SyncFormatConstants.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using System.Collections.Generic;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"using System.Drawing;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"using Microsoft.Office.Core;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"using PowerPointLabs.SyncLab.Views;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"using Font \u003d System.Drawing.Font;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.SyncLab.ObjectFormats"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public class SyncFormatConstants"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"ccyccyccy"},"content":"        public static readonly Size DisplayImageSize \u003d new Size(50, 50);"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        "},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // values for bevel display"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        public static readonly float DisplayImageDepth \u003d 15;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        public static readonly float DisplayBevelWidth \u003d 5;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        public static readonly float DisplayBevelHeight \u003d 5;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        public static readonly MsoBevelType DisplayBevelType \u003d MsoBevelType.msoBevelCircle;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        public static readonly MsoPresetCamera DisplayCameraPreset \u003d MsoPresetCamera.msoCameraIsometricOffAxis2Top;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"        public static readonly string DisplaySizeUnit \u003d \"pt\";"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        public static readonly string DisplayFontString \u003d \"Text\";"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        public static readonly string DisplayDegreeSymbol \u003d \"°\";"},{"lineNumber":27,"author":{"gitId":"ccyccyccy"},"content":"        public static readonly int DisplayImageFontSize \u003d 24;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        public static readonly Font DisplayImageFont \u003d new Font(\"Arial\", DisplayImageFontSize);"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"        public static readonly int ColorBlack \u003d 0;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        public static readonly int DisplayLineWeight \u003d 5;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"        public static readonly string FormatNameSeparator \u003d \"\u003e\";"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"        public static FormatTreeNode[] FormatCategories \u003d\u003e CreateFormatCategories();"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        public static List\u003cFormat\u003e Formats"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            get"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                List\u003cFormat\u003e list \u003d new List\u003cFormat\u003e();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                list.AddRange(GetFormatsFromFormatTreeNode(FormatCategories));"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                return list;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        "},{"lineNumber":47,"author":{"gitId":"-"},"content":"        /// \u003cSummary\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        /// Collect all format objects from an array of FormatTreeNodes"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        /// \u003c/Summary\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"nodes\"\u003e\u003c/param\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        /// \u003creturns\u003eCollected formats\u003c/returns\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        private static Format[] GetFormatsFromFormatTreeNode(FormatTreeNode[] nodes)"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            List\u003cFormat\u003e list \u003d new List\u003cFormat\u003e();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            foreach (FormatTreeNode node in nodes)"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                if (node.IsFormatNode)"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                    list.Add(node.Format);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                else if (node.ChildrenNodes !\u003d null)"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    list.AddRange(GetFormatsFromFormatTreeNode(node.ChildrenNodes));"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return list.ToArray();"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"        private static FormatTreeNode[] CreateFormatCategories()"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            FormatTreeNode[] formats \u003d"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                    new FormatTreeNode("},{"lineNumber":75,"author":{"gitId":"-"},"content":"                            \"Text\","},{"lineNumber":76,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"Font\", new FontFormat()),"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"Font Size\", new FontSizeFormat()),"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"Font Color\", new FontColorFormat()),"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"Style\", new FontStyleFormat()),"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"Alignment\","},{"lineNumber":81,"author":{"gitId":"-"},"content":"                                new FormatTreeNode(\"Horizontal Alignment\", new TextHorizontalAlignmentFormat()),"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                                new FormatTreeNode(\"Vertical Alignment\", new TextVerticalAlignmentFormat())),"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"Line Spacing\", new TextLineSpacingFormat()),"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"Orientation\", new TextOrientationFormat())),"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                    new FormatTreeNode("},{"lineNumber":86,"author":{"gitId":"-"},"content":"                            \"Fill\","},{"lineNumber":87,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"Color\", new FillFormat()),"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"Transparency\", new FillTransparencyFormat())),"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    new FormatTreeNode("},{"lineNumber":90,"author":{"gitId":"-"},"content":"                            \"Line\","},{"lineNumber":91,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"Width\", new LineWeightFormat()),"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"Compound Type\", new LineCompoundTypeFormat()),"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"Dash Type\", new LineDashTypeFormat()),"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"Arrow\", new LineArrowFormat()),"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"Color\", new LineFillFormat()),"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"Transparency\", new LineTransparencyFormat())),"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    new FormatTreeNode("},{"lineNumber":98,"author":{"gitId":"-"},"content":"                            \"Visual Effects\","},{"lineNumber":99,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"Artistic Effect\", new ArtisticEffectFormat()),"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"Glow\", "},{"lineNumber":101,"author":{"gitId":"-"},"content":"                                new FormatTreeNode(\"Color\", new GlowColorFormat()),"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                                new FormatTreeNode(\"Size\", new GlowSizeFormat()),"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                                new FormatTreeNode(\"Transparency\", new GlowTransparencyFormat())),"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"Reflection\", "},{"lineNumber":105,"author":{"gitId":"-"},"content":"                                new FormatTreeNode(\"Transparency\", new ReflectionTransparencyFormat()),"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                                new FormatTreeNode(\"Size\", new ReflectionSizeFormat()),"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                                new FormatTreeNode(\"Blur\", new ReflectionBlurFormat()),"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                                new FormatTreeNode(\"Distance\", new ReflectionDistanceFormat())),"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"Shadow\", new ShadowEffectFormat()),"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"Soft Edge\", new SoftEdgeEffectFormat()),"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"3D Effects\", "},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                new FormatTreeNode(\"Bevel Top\", new BevelTopFormat()),"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                                new FormatTreeNode(\"Bevel Bottom\", new BevelBottomFormat()),"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                                new FormatTreeNode(\"Contour\", "},{"lineNumber":115,"author":{"gitId":"-"},"content":"                                    new FormatTreeNode(\"Color\", new ContourColorFormat()),"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                                    new FormatTreeNode(\"Width\", new ContourWidthFormat())),"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                new FormatTreeNode(\"Depth\", "},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                    new FormatTreeNode(\"Color\", new DepthColorFormat()),"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                                    new FormatTreeNode(\"Size\", new DepthSizeFormat())),"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                                new FormatTreeNode(\"Lighting\", "},{"lineNumber":121,"author":{"gitId":"-"},"content":"                                    new FormatTreeNode(\"Angle\", new LightingAngleFormat()),"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                                    new FormatTreeNode(\"Preset Lighting\", new LightingEffectFormat())),"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                                new FormatTreeNode(\"Material\", new MaterialEffectFormat())),"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"3D Rotation\", new ThreeDRotationEffectFormat())),"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                    new FormatTreeNode("},{"lineNumber":126,"author":{"gitId":"-"},"content":"                            \"Size/Position\","},{"lineNumber":127,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"Width\", new PositionWidthFormat()),"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"Height\", new PositionHeightFormat()),"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"X\", new PositionXFormat()),"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                            new FormatTreeNode(\"Y\", new PositionYFormat()))"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                };"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return formats;"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ccyccyccy":2,"-":133}},{"path":"PowerPointLabs/PowerPointLabs/SyncLab/SyncLabShapeStorage.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using System;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"using System.Collections.Generic;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"using Microsoft.Office.Core;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Extension;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"using PowerPointLabs.Models;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"using PowerPointLabs.SyncLab.ObjectFormats;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"using PowerPointLabs.TextCollection;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"using PowerPointLabs.Utils;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"using FillFormat \u003d PowerPointLabs.SyncLab.ObjectFormats.FillFormat;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"using Shapes \u003d Microsoft.Office.Interop.PowerPoint.Shapes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.SyncLab"},{"lineNumber":16,"author":{"gitId":"-"},"content":"{"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /// \u003csummary\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /// Saves shapes into a PowerPointPresentation that exists in the background."},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /// The exact saved shapes may change in type but style will be retained."},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /// Eg: PlaceHolders are saved as Textboxes"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /// "},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /// 2013 only:"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /// We use a workabout to sync fill color, copying shapes gives the wrong fill"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /// We use a workabout to sync ArtisticEffecs"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /// \u003c/summary\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public sealed class SyncLabShapeStorage : PowerPointPresentation"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        public const int FormatStorageSlide \u003d 0;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"        private int nextKey \u003d 0;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // only for 2013"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        private readonly Dictionary\u003cString, List\u003cMsoPictureEffectType\u003e\u003e _backupArtisticEffects \u003d"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Dictionary\u003cstring, List\u003cMsoPictureEffectType\u003e\u003e();"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // only for 2013"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // need to sync all glow formats, syncing color alone resets transparency \u0026 radius"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // color must be synced first, it resets the transparency"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        private readonly List\u003cFormat\u003e _glowFormats \u003d"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new List\u003cFormat\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                new GlowColorFormat(),"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                new GlowTransparencyFormat(),"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new GlowSizeFormat()"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // only for 2013"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        private readonly List\u003cFormat\u003e _fillFormats \u003d"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            new List\u003cFormat\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new FillFormat()"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"        private static Lazy\u003cSyncLabShapeStorage\u003e storageInstance \u003d"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            new Lazy\u003cSyncLabShapeStorage\u003e(() \u003d\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                try"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                    return new SyncLabShapeStorage();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                catch"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    throw new SyncLabShapeStorageException("},{"lineNumber":64,"author":{"gitId":"-"},"content":"                        \"Failed to initialized sync lab shape storage\");"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"        public static SyncLabShapeStorage Instance"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            get { return storageInstance.Value; }"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"        public static void ReInit()"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            storageInstance \u003d new Lazy\u003cSyncLabShapeStorage\u003e(() \u003d\u003e new SyncLabShapeStorage());"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"        private SyncLabShapeStorage() : base()"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            Path \u003d System.IO.Path.GetTempPath();"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            Name \u003d SyncLabText.StorageFileName;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            Open(withWindow: false, focus: false);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            ClearShapes();"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public Shapes GetTemplateShapes()"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return Slides[FormatStorageSlide].Shapes;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /// \u003csummary\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        /// Saves shape in storage"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        /// Returns a key to find the shape by,"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /// or null if the shape cannot be copied"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"shape\"\u003e\u003c/param\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        /// \u003cparam name\u003d\"formats\"\u003eRequired for msoPlaceholder\u003c/param\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        /// \u003creturns\u003eidentifier of copied shape\u003c/returns\u003e"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public string CopyShape(Shape shape, Format[] formats)"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":101,"author":{"gitId":"iskandarzulkarnaien"},"content":"            #pragma warning disable 618"},{"lineNumber":102,"author":{"gitId":"iskandarzulkarnaien"},"content":"            PowerPointPresentation pres \u003d PowerPointPresentation.Current;"},{"lineNumber":103,"author":{"gitId":"iskandarzulkarnaien"},"content":"            PowerPointSlide slide \u003d PowerPointCurrentPresentationInfo.CurrentSlide;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Shape copiedShape \u003d null;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            if (shape.Type \u003d\u003d MsoShapeType.msoPlaceholder)"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":107,"author":{"gitId":"iskandarzulkarnaien"},"content":"                ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                    copiedShape \u003d ShapeUtil.CopyMsoPlaceHolder(formats, shape, GetTemplateShapes());"},{"lineNumber":110,"author":{"gitId":"iskandarzulkarnaien"},"content":"                    return ClipboardUtil.ClipboardRestoreSuccess;"},{"lineNumber":111,"author":{"gitId":"iskandarzulkarnaien"},"content":"                }, pres, slide);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                try"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":117,"author":{"gitId":"iskandarzulkarnaien"},"content":"                    ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                        copiedShape \u003d Slides[0].Shapes.SafeCopyPlaceholder(shape);"},{"lineNumber":120,"author":{"gitId":"iskandarzulkarnaien"},"content":"                        return ClipboardUtil.ClipboardRestoreSuccess;"},{"lineNumber":121,"author":{"gitId":"iskandarzulkarnaien"},"content":"                    }, pres, slide);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                catch"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                    copiedShape \u003d null;"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":128,"author":{"gitId":"iskandarzulkarnaien"},"content":"            #pragma warning restore 618"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"            if (copiedShape \u003d\u003d null)"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                return null;"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"            string shapeKey \u003d nextKey.ToString();"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            nextKey++;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            copiedShape.Name \u003d shapeKey;"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"            #pragma warning disable 618"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            if (Globals.ThisAddIn.IsApplicationVersion2013())"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                // sync glow, 2013 gives the wrong Glow.Fill color after copying the shape"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                SyncFormats(shape, copiedShape, _glowFormats);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                // sync shape fill, 2013 gives the wrong fill color after copying the shape"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                SyncFormats(shape, copiedShape, _fillFormats);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                "},{"lineNumber":147,"author":{"gitId":"-"},"content":"                // backup artistic effects for 2013"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                // ForceSave() will make artistic effect permanent on the shapes for 2013 and no longer retrievable"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                List\u003cMsoPictureEffectType\u003e extractedEffects \u003d ArtisticEffectFormat.GetArtisticEffects(copiedShape);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                _backupArtisticEffects.Add(shapeKey, extractedEffects);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            #pragma warning restore 618"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            "},{"lineNumber":154,"author":{"gitId":"-"},"content":"            ForceSave();"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return shapeKey;"},{"lineNumber":156,"author":{"gitId":"iskandarzulkarnaien"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public Shape GetShape(string shapeKey)"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            Shapes shapes \u003d Slides[0].Shapes;"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            for (int i \u003d 1; i \u003c\u003d shapes.Count; i++)"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                if (shapes[i].Name.Equals(shapeKey))"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                    Shape shape \u003d shapes[i];"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                    if (_backupArtisticEffects.ContainsKey(shapeKey))"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                        // apply artistic effect from backup only when shape is retrieved, to reduce loading time of CopyShape"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                        List\u003cMsoPictureEffectType\u003e extractedEffects \u003d _backupArtisticEffects[shapeKey];"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                        ArtisticEffectFormat.ClearArtisticEffects(shape);"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                        ArtisticEffectFormat.ApplyArtisticEffects(shape, extractedEffects);"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                    return shape;"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public void RemoveShape(string shapeKey)"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            int index \u003d 1;"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            Shapes shapes \u003d Slides[0].Shapes;"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            while (index \u003c\u003d shapes.Count)"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                if (shapes[index].Name.Equals(shapeKey))"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                    shapes[index].SafeDelete();"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                    _backupArtisticEffects.Remove(shapeKey);"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                    index++;"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public void ForceSave()"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            Save();"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            Close();"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            Open(withWindow: false, focus: false);"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void ClearShapes()"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            while (SlideCount \u003e 0)"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                GetSlide(1).Delete();"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            AddSlide();"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            Slides[FormatStorageSlide].DeleteAllShapes();"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            _backupArtisticEffects.Clear();"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        "},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // Convenience method for syncing formats"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        private void SyncFormats(Shape source, Shape destination, List\u003cFormat\u003e formats)"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            foreach (var format in formats)"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                if (format.CanCopy(source))"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    format.SyncFormat(source, destination);"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"iskandarzulkarnaien":11,"-":218}},{"path":"PowerPointLabs/PowerPointLabs/SyncLab/Views/SyncFormatListItem.xaml.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using System;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"using System.Drawing;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"using System.Windows;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"using System.Windows.Controls;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"using System.Windows.Interop;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"using System.Windows.Media.Imaging;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"using PowerPointLabs.Utils;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.SyncLab.Views"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /// \u003csummary\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /// Interaction logic for SyncFormatListItem.xaml"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /// \u003c/summary\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public partial class SyncFormatListItem : UserControl"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Bitmap image;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"        public SyncFormatListItem()"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            InitializeComponent();"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            UpdateImage();"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"        public bool? IsChecked"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":27,"author":{"gitId":"xantho09"},"content":"            get \u003d\u003e checkBox.IsChecked;"},{"lineNumber":28,"author":{"gitId":"xantho09"},"content":"            set \u003d\u003e checkBox.IsChecked \u003d value;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"        public Bitmap Image"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":33,"author":{"gitId":"xantho09"},"content":"            get \u003d\u003e image;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            set"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                image \u003d value;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                UpdateImage();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private void UpdateImage()"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":43,"author":{"gitId":"xantho09"},"content":"            // if image isn\u0027t set, hide the image border."},{"lineNumber":44,"author":{"gitId":"-"},"content":"            if (image \u003d\u003d null)"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":46,"author":{"gitId":"xantho09"},"content":"                imageBorder.Visibility \u003d Visibility.Collapsed;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":50,"author":{"gitId":"xantho09"},"content":"            imageBorder.Visibility \u003d Visibility.Visible;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            BitmapSource source \u003d GraphicsUtil.BitmapToImageSource(image);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            imageBox.Source \u003d source;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"xantho09"},"content":"        public string Text"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":57,"author":{"gitId":"xantho09"},"content":"            get \u003d\u003e label.Content.ToString();"},{"lineNumber":58,"author":{"gitId":"xantho09"},"content":"            set \u003d\u003e label.Content \u003d value;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":51,"xantho09":10}},{"path":"PowerPointLabs/PowerPointLabs/TimerLab/TimerLabPaneWPF.xaml.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using System;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"using System.Collections.Generic;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"using System.Text.RegularExpressions;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"using System.Windows;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"using System.Windows.Controls;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"using System.Windows.Input;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Extension;"},{"lineNumber":9,"author":{"gitId":"xantho09"},"content":"using PowerPointLabs.ColorThemes;"},{"lineNumber":10,"author":{"gitId":"xantho09"},"content":"using PowerPointLabs.ColorThemes.Extensions;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"using PowerPointLabs.Utils;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"using PowerPoint \u003d Microsoft.Office.Interop.PowerPoint;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.TimerLab"},{"lineNumber":17,"author":{"gitId":"-"},"content":"{"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /// \u003csummary\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /// Interaction logic for TimerLabPaneWPF.xaml"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /// \u003c/summary\u003e"},{"lineNumber":21,"author":{"gitId":"xantho09"},"content":"    public partial class TimerLabPaneWPF : UserControl, INotifyOnThemeChanged"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Shape timerBody \u003d null;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Shape lineMarkerGroup \u003d null;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Shape timeMarkerGroup \u003d null;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Shape sliderHead \u003d null;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Shape sliderBody \u003d null;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Shape progressBar \u003d null;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        bool isProgressBar \u003d false;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"        public TimerLabPaneWPF()"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            InitializeComponent();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"xantho09"},"content":"        #region INotifyOnThemeChanged Interface methods"},{"lineNumber":37,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":38,"author":{"gitId":"xantho09"},"content":"        /// \u003csummary\u003e"},{"lineNumber":39,"author":{"gitId":"xantho09"},"content":"        /// Changes the MahApps accent of this pane based on the Color Theme."},{"lineNumber":40,"author":{"gitId":"xantho09"},"content":"        /// \u003c/summary\u003e"},{"lineNumber":41,"author":{"gitId":"xantho09"},"content":"        /// \u003cremarks\u003e"},{"lineNumber":42,"author":{"gitId":"xantho09"},"content":"        /// The Steel accent will be used on all themes, except for the DarkGray"},{"lineNumber":43,"author":{"gitId":"xantho09"},"content":"        /// theme, which will use the Teal accent."},{"lineNumber":44,"author":{"gitId":"xantho09"},"content":"        /// \u003c/remarks\u003e"},{"lineNumber":45,"author":{"gitId":"xantho09"},"content":"        /// \u003cparam name\u003d\"updatedColorTheme\"\u003eThe new color theme\u003c/param\u003e"},{"lineNumber":46,"author":{"gitId":"xantho09"},"content":"        public void OnThemeChanged(ColorTheme updatedColorTheme)"},{"lineNumber":47,"author":{"gitId":"xantho09"},"content":"        {"},{"lineNumber":48,"author":{"gitId":"xantho09"},"content":"            // The Steel accent doesn\u0027t look good on the DarkGray background."},{"lineNumber":49,"author":{"gitId":"xantho09"},"content":"            // The closest accent that looks okay is Teal."},{"lineNumber":50,"author":{"gitId":"xantho09"},"content":"            switch (updatedColorTheme.ThemeId)"},{"lineNumber":51,"author":{"gitId":"xantho09"},"content":"            {"},{"lineNumber":52,"author":{"gitId":"xantho09"},"content":"                case ColorTheme.DARK_GRAY:"},{"lineNumber":53,"author":{"gitId":"xantho09"},"content":"                    ThemeExtensions.ChangeMahAppsAccent(this, \"Teal\");"},{"lineNumber":54,"author":{"gitId":"xantho09"},"content":"                    break;"},{"lineNumber":55,"author":{"gitId":"xantho09"},"content":"                default:"},{"lineNumber":56,"author":{"gitId":"xantho09"},"content":"                    ThemeExtensions.ChangeMahAppsAccent(this, \"Steel\");"},{"lineNumber":57,"author":{"gitId":"xantho09"},"content":"                    break;"},{"lineNumber":58,"author":{"gitId":"xantho09"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"xantho09"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":61,"author":{"gitId":"xantho09"},"content":"        #endregion"},{"lineNumber":62,"author":{"gitId":"xantho09"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        #region Timer Properties"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        private int Duration()"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            int duration \u003d TimerLabConstants.SecondsInMinute;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            if (DurationTextBox.Value !\u003d null)"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                double value \u003d Math.Round(DurationTextBox.Value.Value, 2);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                int minutes \u003d (int)value;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                int seconds \u003d (int)(Math.Round(value - minutes, 2) * 100);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                duration \u003d (minutes * TimerLabConstants.SecondsInMinute) + seconds;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return duration;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"        private bool Countdown()"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            bool isCountdown \u003d TimerLabConstants.DefaultCountdownSetting;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            if (CountdownCheckBox.IsChecked.HasValue)"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                isCountdown \u003d CountdownCheckBox.IsChecked.Value;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return isCountdown;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"        private bool ProgressBar()"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            if (ProgressBarCheckBox.IsChecked.HasValue)"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                isProgressBar \u003d ProgressBarCheckBox.IsChecked.Value;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return isProgressBar;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private float TimerWidth()"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            float width \u003d (float)WidthSlider.Value;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return width;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"        private float TimerHeight()"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            float height \u003d (float)HeightSlider.Value;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return height;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"        private float DefaultTimerLeft(float slideWidth, float timerWidth)"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return (slideWidth - timerWidth) / 2;"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"        private float DefaultTimerTop(float slideHeight, float timerHeight)"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return (slideHeight - timerHeight) / 2;"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"        private int TimerBodyColor()"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return GraphicsUtil.PackRgbInt(68, 84, 106);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"        private int ProgressBarTimerBodyColor()"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return GraphicsUtil.PackRgbInt(247, 150, 70);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private int SliderColor()"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return GraphicsUtil.PackRgbInt(247, 150, 70);"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private int TimeMarkerColor()"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return GraphicsUtil.PackRgbInt(90, 90, 90);"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private int LineMarkerColor()"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return GraphicsUtil.PackRgbInt(68, 114, 196);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"        #region Timer Creation"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private void CreateBlocksTimer(int duration, float timerWidth, float timerHeight, float timerLeft,"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            float timerTop, bool isCountdown, bool isProgressBar)"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            if (isProgressBar)"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                AddTimerBody(timerWidth, timerHeight, timerLeft, timerTop, ProgressBarTimerBodyColor());"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                AddProgressBar(duration, timerWidth, timerHeight, TimerBodyColor(), SlideWidth());"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                AddTimerBody(timerWidth, timerHeight, timerLeft, timerTop, TimerBodyColor());"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                AddSlider(duration, timerWidth, timerHeight, SliderColor(), SlideWidth());"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"            AddMarkers(duration, timerWidth, timerHeight, TimeMarkerColor(), LineMarkerColor(), isCountdown);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"        #region Body"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        private void AddTimerBody(float timerWidth, float timerHeight, float timerLeft, float timerTop, int timerBodyColor)"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            timerBody \u003d this.GetCurrentSlide().Shapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType.msoShapeRectangle,"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                                                                timerLeft, timerTop, timerWidth, timerHeight);"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            timerBody.Name \u003d TimerLabConstants.TimerBodyId;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            timerBody.Tags.Add(TimerLabConstants.ShapeId, TimerLabConstants.TimerBodyId);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            timerBody.Fill.ForeColor.RGB \u003d timerBodyColor;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            timerBody.Line.ForeColor.RGB \u003d timerBodyColor;"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"        #region Markers"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        private void AddMarkers(int duration, float timerWidth, float timerHeight, int timeMarkerColor, int lineMarkerColor, bool isCountdown)"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            if (duration \u003c\u003d TimerLabConstants.SecondsInMinute)"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                AddSecondsMarker(duration, TimerLabConstants.DefaultDenomination, timerWidth, timerHeight, "},{"lineNumber":180,"author":{"gitId":"-"},"content":"                                TimerLabConstants.DefaultMinutesLineMarkerWidth, "},{"lineNumber":181,"author":{"gitId":"-"},"content":"                                TimerLabConstants.DefaultTimeMarkerWidth, TimerLabConstants.DefaultTimeMarkerHeight,"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                                timeMarkerColor, lineMarkerColor, isCountdown);"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                AddMinutesMarker(duration, TimerLabConstants.DefaultDenomination, timerWidth, timerHeight,"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                                TimerLabConstants.DefaultMinutesLineMarkerWidth,"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                                TimerLabConstants.DefaultTimeMarkerWidth, TimerLabConstants.DefaultTimeMarkerHeight,"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                                timeMarkerColor, lineMarkerColor, isCountdown);"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            UpdateMarkerPosition();"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"        private void AddSecondsMarker(int duration, int denomination, float timerWidth, float timerHeight, "},{"lineNumber":195,"author":{"gitId":"-"},"content":"                                    float lineMarkerWidth, float timeMarkerWidth, float timeMarkerHeight,"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                                    int timeMarkerColor, int lineMarkerColor, bool isCountdown)"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e lineMarkers \u003d new List\u003cShape\u003e();"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e timeMarkers \u003d new List\u003cShape\u003e();"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"            float widthPerSec \u003d timerWidth / duration;"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            int currentMarker \u003d TimerLabConstants.StartTime;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            while (currentMarker \u003c\u003d duration) "},{"lineNumber":204,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                // Get the marker text to be printed"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                String markerText \u003d isCountdown ? (duration - currentMarker).ToString() : currentMarker.ToString();"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"                // Add time marker"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                Shape timeMarker \u003d AddTimeMarker(currentMarker, widthPerSec, timerHeight, timeMarkerWidth, timeMarkerHeight, timeMarkerColor, markerText);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                timeMarkers.Add(timeMarker);"},{"lineNumber":211,"author":{"gitId":"-"},"content":""},{"lineNumber":212,"author":{"gitId":"-"},"content":"                // Add line marker if it is not the start or end"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                if (currentMarker !\u003d TimerLabConstants.StartTime \u0026\u0026 currentMarker !\u003d duration)"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                    Shape lineMarker \u003d AddLineMarker(currentMarker, widthPerSec, timerHeight, "},{"lineNumber":216,"author":{"gitId":"-"},"content":"                                                    TimerLabConstants.DefaultSecondsLineMarkerWidth, lineMarkerColor);"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                    lineMarkers.Add(lineMarker);"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"                if (currentMarker \u003e\u003d duration)"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"                currentMarker \u003d GetNextMarkerPosition(currentMarker, duration, denomination, isCountdown);"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"            lineMarkerGroup \u003d null;"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            if (lineMarkers.Count \u003d\u003d 1)"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                lineMarkerGroup \u003d lineMarkers[0];"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            else if (lineMarkers.Count \u003e 1)"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                lineMarkerGroup \u003d GroupShapes(TimerLabConstants.TimerLineMarkerId, TimerLabConstants.TimerLineMarkerGroupId);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            timeMarkerGroup \u003d GroupShapes(TimerLabConstants.TimerTimeMarkerId, TimerLabConstants.TimerTimeMarkerGroupId);"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"        private void AddMinutesMarker(int duration, int denomination, float timerWidth, float timerHeight, "},{"lineNumber":241,"author":{"gitId":"-"},"content":"                                    float lineMarkerWidth, float timeMarkerWidth, float timeMarkerHeight, "},{"lineNumber":242,"author":{"gitId":"-"},"content":"                                    int timeMarkerColor, int lineMarkerColor, bool isCountdown)"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e lineMarkers \u003d new List\u003cShape\u003e();"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            List\u003cShape\u003e timeMarkers \u003d new List\u003cShape\u003e();"},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"-"},"content":"            float widthPerSec \u003d timerWidth / duration;"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            int currentMarker \u003d TimerLabConstants.StartTime;"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            while (currentMarker \u003c\u003d duration)"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                bool isStart \u003d currentMarker \u003d\u003d 0;"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                bool isMinuteMark \u003d isCountdown ? (duration - currentMarker) % TimerLabConstants.SecondsInMinute \u003d\u003d 0 : currentMarker % TimerLabConstants.SecondsInMinute \u003d\u003d 0;"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                bool isEnd \u003d currentMarker \u003d\u003d duration;"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"                // Add time markers for start, every minute, and end"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                if (isStart || isMinuteMark || isEnd)"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                    // Add time marker"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                    Shape timeMarker \u003d AddMinuteTimeMarker(duration, currentMarker, widthPerSec, timerHeight, timeMarkerWidth, timeMarkerHeight, timeMarkerColor, isCountdown);"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                    timeMarkers.Add(timeMarker);"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"-"},"content":"                // Add line marker if it is not the start or end"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                if (currentMarker !\u003d TimerLabConstants.StartTime \u0026\u0026 currentMarker !\u003d duration)"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                    // Thicken the line if it is a minute marker"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                    Shape lineMarker \u003d AddMinuteLineMarker(duration, currentMarker, widthPerSec, timerHeight, lineMarkerColor, isCountdown);"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                    lineMarkers.Add(lineMarker);"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"                if (currentMarker \u003e\u003d duration)"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"                currentMarker \u003d GetNextMarkerPosition(currentMarker, duration, denomination, isCountdown);"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"-"},"content":"            lineMarkerGroup \u003d GroupShapes(TimerLabConstants.TimerLineMarkerId, TimerLabConstants.TimerLineMarkerGroupId);"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            timeMarkerGroup \u003d GroupShapes(TimerLabConstants.TimerTimeMarkerId, TimerLabConstants.TimerTimeMarkerGroupId);"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"        private int GetNextMarkerPosition(int currentMarker, int duration, int denomination, bool isCountdown)"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            // If it\u0027s Countdown Timer and we are at the start, take into account specified durations that are not multiple of denomination"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            if (isCountdown \u0026\u0026 currentMarker \u003d\u003d 0 \u0026\u0026 duration % denomination !\u003d 0)"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                return duration % denomination;"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":293,"author":{"gitId":"-"},"content":"                return Math.Min(currentMarker + denomination, duration);"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":296,"author":{"gitId":"-"},"content":""},{"lineNumber":297,"author":{"gitId":"-"},"content":"        private Shape AddMinuteTimeMarker(int duration, int currentMarker, float widthPerSec, float timerHeight,"},{"lineNumber":298,"author":{"gitId":"-"},"content":"                                    float timeMarkerWidth, float timeMarkerHeight, int timeMarkerColor, bool isCountdown)"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            // Get the marker text to be printed"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            int remainingDuration \u003d duration - currentMarker;"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            String markerText \u003d isCountdown ? remainingDuration.ToString() : currentMarker.ToString();"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"            Shape timeMarker \u003d AddTimeMarker(currentMarker, widthPerSec, timerHeight, timeMarkerWidth, timeMarkerHeight, timeMarkerColor, markerText);"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"            if (!isCountdown)"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                int remainingSeconds \u003d currentMarker % TimerLabConstants.SecondsInMinute;"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                if (currentMarker \u003d\u003d duration \u0026\u0026 remainingSeconds !\u003d 0)"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                    timeMarker.TextFrame.TextRange.Text \u003d (currentMarker / TimerLabConstants.SecondsInMinute).ToString() +"},{"lineNumber":312,"author":{"gitId":"-"},"content":"                                                            \".\" + remainingSeconds.ToString(\"D2\");"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                    timeMarker.TextFrame.TextRange.Text \u003d (currentMarker / TimerLabConstants.SecondsInMinute).ToString();"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":318,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":320,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                int leftoverSeconds \u003d remainingDuration % TimerLabConstants.SecondsInMinute;"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                if (currentMarker \u003d\u003d 0 \u0026\u0026 leftoverSeconds !\u003d 0)"},{"lineNumber":323,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                    timeMarker.TextFrame.TextRange.Text \u003d (remainingDuration / TimerLabConstants.SecondsInMinute).ToString() +"},{"lineNumber":325,"author":{"gitId":"-"},"content":"                                                            \".\" + leftoverSeconds.ToString(\"D2\");"},{"lineNumber":326,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":327,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":328,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":329,"author":{"gitId":"-"},"content":"                    timeMarker.TextFrame.TextRange.Text \u003d (remainingDuration / TimerLabConstants.SecondsInMinute).ToString();"},{"lineNumber":330,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":331,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":332,"author":{"gitId":"-"},"content":""},{"lineNumber":333,"author":{"gitId":"-"},"content":"            return timeMarker;"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":335,"author":{"gitId":"-"},"content":""},{"lineNumber":336,"author":{"gitId":"-"},"content":"        private Shape AddMinuteLineMarker(int duration, int currentMarker, float widthPerSec, float timerHeight, "},{"lineNumber":337,"author":{"gitId":"-"},"content":"                                          int lineMarkerColor, bool isCountdown)"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":339,"author":{"gitId":"-"},"content":"            bool isMinuteMarker \u003d isCountdown ? ((duration - currentMarker) % TimerLabConstants.SecondsInMinute \u003d\u003d 0) :"},{"lineNumber":340,"author":{"gitId":"-"},"content":"                                                         (currentMarker % TimerLabConstants.SecondsInMinute \u003d\u003d 0);"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            float markerLineWeight \u003d isMinuteMarker ? TimerLabConstants.DefaultMinutesLineMarkerWidth :"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                                                        TimerLabConstants.DefaultSecondsLineMarkerWidth;"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            Shape lineMarker \u003d AddLineMarker(currentMarker, widthPerSec, timerHeight, markerLineWeight, lineMarkerColor);"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            return lineMarker;"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":346,"author":{"gitId":"-"},"content":""},{"lineNumber":347,"author":{"gitId":"-"},"content":"        private Shape AddTimeMarker(int currentMarker, float widthPerSec, float timerHeight, "},{"lineNumber":348,"author":{"gitId":"-"},"content":"                                    float timeMarkerWidth, float timeMarkerHeight, int timeMarkerColor, string markerText)"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            Shape timeMarker \u003d this.GetCurrentSlide().Shapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType.msoShapeRectangle,"},{"lineNumber":351,"author":{"gitId":"-"},"content":"                                                                    currentMarker * widthPerSec, 0, "},{"lineNumber":352,"author":{"gitId":"-"},"content":"                                                                    timeMarkerWidth, timeMarkerHeight);"},{"lineNumber":353,"author":{"gitId":"-"},"content":"            timeMarker.Name \u003d TimerLabConstants.TimerTimeMarkerId + markerText;"},{"lineNumber":354,"author":{"gitId":"-"},"content":"            timeMarker.Tags.Add(TimerLabConstants.ShapeId, TimerLabConstants.TimerTimeMarkerId);"},{"lineNumber":355,"author":{"gitId":"-"},"content":"            timeMarker.TextFrame.WordWrap \u003d Microsoft.Office.Core.MsoTriState.msoFalse;"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            timeMarker.Fill.Transparency \u003d TimerLabConstants.TransparencyTransparent;"},{"lineNumber":357,"author":{"gitId":"-"},"content":"            timeMarker.Line.Transparency \u003d TimerLabConstants.TransparencyTransparent;"},{"lineNumber":358,"author":{"gitId":"-"},"content":"            timeMarker.TextFrame.TextRange.Font.Color.RGB \u003d timeMarkerColor;"},{"lineNumber":359,"author":{"gitId":"-"},"content":"            timeMarker.TextFrame.TextRange.Text \u003d markerText;"},{"lineNumber":360,"author":{"gitId":"-"},"content":"            return timeMarker;"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        "},{"lineNumber":363,"author":{"gitId":"-"},"content":"        private Shape AddLineMarker(int currentMarker, float widthPerSec, float timerHeight, float lineWeight, int lineMarkerColor)"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":365,"author":{"gitId":"-"},"content":"            string markerText \u003d currentMarker.ToString();"},{"lineNumber":366,"author":{"gitId":"-"},"content":"            float beginX \u003d currentMarker * widthPerSec;"},{"lineNumber":367,"author":{"gitId":"-"},"content":"            float beginY \u003d 0;"},{"lineNumber":368,"author":{"gitId":"-"},"content":"            float endX \u003d currentMarker * widthPerSec;"},{"lineNumber":369,"author":{"gitId":"-"},"content":"            float endY \u003d timerHeight;"},{"lineNumber":370,"author":{"gitId":"-"},"content":""},{"lineNumber":371,"author":{"gitId":"-"},"content":"            Shape lineMarker \u003d this.GetCurrentSlide().Shapes.AddLine(beginX, beginY, endX, endY);"},{"lineNumber":372,"author":{"gitId":"-"},"content":"            lineMarker.Name \u003d TimerLabConstants.TimerLineMarkerId + markerText;"},{"lineNumber":373,"author":{"gitId":"-"},"content":"            lineMarker.Tags.Add(TimerLabConstants.ShapeId, TimerLabConstants.TimerLineMarkerId);"},{"lineNumber":374,"author":{"gitId":"-"},"content":"            lineMarker.Line.Weight \u003d lineWeight;"},{"lineNumber":375,"author":{"gitId":"-"},"content":"            lineMarker.Line.ForeColor.RGB \u003d lineMarkerColor;"},{"lineNumber":376,"author":{"gitId":"-"},"content":""},{"lineNumber":377,"author":{"gitId":"-"},"content":"            return lineMarker;"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":380,"author":{"gitId":"-"},"content":""},{"lineNumber":381,"author":{"gitId":"-"},"content":"        #region Progress Bar"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        private void AddProgressBar(int duration, float timerWidth, float timerHeight, int sliderColor, float slideWidth)"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":384,"author":{"gitId":"-"},"content":"            CreateProgressBarShape(timerWidth, timerHeight, sliderColor);"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"            // Positioning Progress Bar onto the timer"},{"lineNumber":387,"author":{"gitId":"-"},"content":"            UpdateProgressBarPosition();"},{"lineNumber":388,"author":{"gitId":"-"},"content":""},{"lineNumber":389,"author":{"gitId":"-"},"content":"            // Add effect"},{"lineNumber":390,"author":{"gitId":"-"},"content":"            AddProgressBarAnimation(duration);"},{"lineNumber":391,"author":{"gitId":"-"},"content":""},{"lineNumber":392,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":393,"author":{"gitId":"-"},"content":""},{"lineNumber":394,"author":{"gitId":"-"},"content":"        private void AddProgressBarAnimation(int duration)"},{"lineNumber":395,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":396,"author":{"gitId":"-"},"content":"            PowerPoint.Effect progressBarMotionEffect \u003d this.GetCurrentSlide().TimeLine.MainSequence.AddEffect("},{"lineNumber":397,"author":{"gitId":"-"},"content":"                    progressBar,"},{"lineNumber":398,"author":{"gitId":"-"},"content":"                    PowerPoint.MsoAnimEffect.msoAnimEffectGrowShrink,"},{"lineNumber":399,"author":{"gitId":"-"},"content":"                    PowerPoint.MsoAnimateByLevel.msoAnimateLevelNone,"},{"lineNumber":400,"author":{"gitId":"-"},"content":"                    PowerPoint.MsoAnimTriggerType.msoAnimTriggerOnPageClick);"},{"lineNumber":401,"author":{"gitId":"-"},"content":"            progressBarMotionEffect.Timing.Duration \u003d duration;"},{"lineNumber":402,"author":{"gitId":"-"},"content":"            progressBarMotionEffect.Timing.SmoothStart \u003d Microsoft.Office.Core.MsoTriState.msoFalse;"},{"lineNumber":403,"author":{"gitId":"-"},"content":"            progressBarMotionEffect.Timing.SmoothEnd \u003d Microsoft.Office.Core.MsoTriState.msoFalse;"},{"lineNumber":404,"author":{"gitId":"-"},"content":"            PowerPoint.AnimationBehavior shrinkBehavior \u003d progressBarMotionEffect.Behaviors[1];"},{"lineNumber":405,"author":{"gitId":"-"},"content":"            // Shrink width to 0"},{"lineNumber":406,"author":{"gitId":"-"},"content":"            shrinkBehavior.ScaleEffect.ByX \u003d 0f;"},{"lineNumber":407,"author":{"gitId":"-"},"content":"            shrinkBehavior.ScaleEffect.ByY \u003d 100f;"},{"lineNumber":408,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":410,"author":{"gitId":"-"},"content":""},{"lineNumber":411,"author":{"gitId":"-"},"content":"        #region Slider"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        private void AddSlider(int duration, float timerWidth, float timerHeight, int sliderColor, float slideWidth)"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":414,"author":{"gitId":"-"},"content":"            CreateSliderHeadAndBodyShape(timerHeight, sliderColor);"},{"lineNumber":415,"author":{"gitId":"-"},"content":""},{"lineNumber":416,"author":{"gitId":"-"},"content":"            UpdateSliderPosition();"},{"lineNumber":417,"author":{"gitId":"-"},"content":""},{"lineNumber":418,"author":{"gitId":"-"},"content":"            // Add slider animations"},{"lineNumber":419,"author":{"gitId":"-"},"content":"            AddSliderAnimations(duration, timerWidth, slideWidth);"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":421,"author":{"gitId":"-"},"content":""},{"lineNumber":422,"author":{"gitId":"-"},"content":"        private void AddSliderAnimations(int duration, float timerWidth, float slideWidth)"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":424,"author":{"gitId":"-"},"content":"            AddSliderMotionEffect(sliderHead, duration, timerWidth, slideWidth, PowerPoint.MsoAnimTriggerType.msoAnimTriggerOnPageClick);"},{"lineNumber":425,"author":{"gitId":"-"},"content":"            AddSliderMotionEffect(sliderBody, duration, timerWidth, slideWidth, PowerPoint.MsoAnimTriggerType.msoAnimTriggerWithPrevious);"},{"lineNumber":426,"author":{"gitId":"-"},"content":"            AddSliderEndEffect(sliderHead, PowerPoint.MsoAnimTriggerType.msoAnimTriggerAfterPrevious);"},{"lineNumber":427,"author":{"gitId":"-"},"content":"            AddSliderEndEffect(sliderBody, PowerPoint.MsoAnimTriggerType.msoAnimTriggerWithPrevious);"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":429,"author":{"gitId":"-"},"content":""},{"lineNumber":430,"author":{"gitId":"-"},"content":"        private void AddSliderMotionEffect(Shape shape, int duration, float timerWidth, float slideWidth, PowerPoint.MsoAnimTriggerType trigger)"},{"lineNumber":431,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":432,"author":{"gitId":"-"},"content":"            PowerPoint.Effect sliderMotionEffect \u003d this.GetCurrentSlide().TimeLine.MainSequence.AddEffect("},{"lineNumber":433,"author":{"gitId":"-"},"content":"                    shape,"},{"lineNumber":434,"author":{"gitId":"-"},"content":"                    PowerPoint.MsoAnimEffect.msoAnimEffectPathRight, "},{"lineNumber":435,"author":{"gitId":"-"},"content":"                    PowerPoint.MsoAnimateByLevel.msoAnimateLevelNone, "},{"lineNumber":436,"author":{"gitId":"-"},"content":"                    trigger);"},{"lineNumber":437,"author":{"gitId":"-"},"content":"            PowerPoint.AnimationBehavior motion \u003d sliderMotionEffect.Behaviors[1];"},{"lineNumber":438,"author":{"gitId":"-"},"content":"            float end \u003d timerWidth / slideWidth;"},{"lineNumber":439,"author":{"gitId":"-"},"content":"            motion.MotionEffect.Path \u003d \"M 0 0 L \" + end + \" 0 E\";"},{"lineNumber":440,"author":{"gitId":"-"},"content":"            sliderMotionEffect.Timing.Duration \u003d duration;"},{"lineNumber":441,"author":{"gitId":"-"},"content":"            sliderMotionEffect.Timing.SmoothStart \u003d Microsoft.Office.Core.MsoTriState.msoFalse;"},{"lineNumber":442,"author":{"gitId":"-"},"content":"            sliderMotionEffect.Timing.SmoothEnd \u003d Microsoft.Office.Core.MsoTriState.msoFalse;"},{"lineNumber":443,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":444,"author":{"gitId":"-"},"content":""},{"lineNumber":445,"author":{"gitId":"-"},"content":"        private void AddSliderEndEffect(Shape shape, PowerPoint.MsoAnimTriggerType trigger)"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":447,"author":{"gitId":"-"},"content":"            PowerPoint.Effect sliderEndEffect \u003d this.GetCurrentSlide().TimeLine.MainSequence.AddEffect("},{"lineNumber":448,"author":{"gitId":"-"},"content":"                    shape,"},{"lineNumber":449,"author":{"gitId":"-"},"content":"                    PowerPoint.MsoAnimEffect.msoAnimEffectDarken, "},{"lineNumber":450,"author":{"gitId":"-"},"content":"                    PowerPoint.MsoAnimateByLevel.msoAnimateLevelNone,"},{"lineNumber":451,"author":{"gitId":"-"},"content":"                    trigger);"},{"lineNumber":452,"author":{"gitId":"-"},"content":"            sliderEndEffect.Timing.Duration \u003d TimerLabConstants.ColorChangeDuration;"},{"lineNumber":453,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":454,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":455,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":456,"author":{"gitId":"-"},"content":""},{"lineNumber":457,"author":{"gitId":"-"},"content":"        #region Controls"},{"lineNumber":458,"author":{"gitId":"-"},"content":"        #region Create Button"},{"lineNumber":459,"author":{"gitId":"-"},"content":"        private void CreateButton_Click(object sender, RoutedEventArgs e)"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":461,"author":{"gitId":"-"},"content":"            // check if timer is already created"},{"lineNumber":462,"author":{"gitId":"-"},"content":"            if (FindTimer())"},{"lineNumber":463,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":464,"author":{"gitId":"-"},"content":"                ReformMissingComponents();"},{"lineNumber":465,"author":{"gitId":"-"},"content":"                UpdateMarkerPosition();"},{"lineNumber":466,"author":{"gitId":"-"},"content":"                if (isProgressBar)"},{"lineNumber":467,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":468,"author":{"gitId":"-"},"content":"                    UpdateProgressBarPosition();"},{"lineNumber":469,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":470,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":471,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":472,"author":{"gitId":"-"},"content":"                    UpdateSliderPosition();"},{"lineNumber":473,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":474,"author":{"gitId":"-"},"content":""},{"lineNumber":475,"author":{"gitId":"-"},"content":"                WidthTextBox.Text \u003d Math.Round(timerBody.Width).ToString();"},{"lineNumber":476,"author":{"gitId":"-"},"content":"                HeightTextBox.Text \u003d Math.Round(timerBody.Height).ToString();"},{"lineNumber":477,"author":{"gitId":"-"},"content":""},{"lineNumber":478,"author":{"gitId":"-"},"content":"                ShowErrorMessageBox(TimerLabConstants.ErrorMessageOneTimerOnly);"},{"lineNumber":479,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":480,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":481,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":482,"author":{"gitId":"-"},"content":"                // Properties"},{"lineNumber":483,"author":{"gitId":"-"},"content":"                int duration \u003d Duration();"},{"lineNumber":484,"author":{"gitId":"-"},"content":"                bool isCountdown \u003d Countdown();"},{"lineNumber":485,"author":{"gitId":"-"},"content":"                bool isProgressBar \u003d ProgressBar();"},{"lineNumber":486,"author":{"gitId":"-"},"content":"                float timerWidth \u003d TimerWidth();"},{"lineNumber":487,"author":{"gitId":"-"},"content":"                float timerHeight \u003d TimerHeight();"},{"lineNumber":488,"author":{"gitId":"-"},"content":""},{"lineNumber":489,"author":{"gitId":"-"},"content":"                // Position"},{"lineNumber":490,"author":{"gitId":"-"},"content":"                float timerLeft \u003d DefaultTimerLeft(SlideWidth(), timerWidth);"},{"lineNumber":491,"author":{"gitId":"-"},"content":"                float timerTop \u003d DefaultTimerTop(SlideHeight(), timerHeight);"},{"lineNumber":492,"author":{"gitId":"-"},"content":""},{"lineNumber":493,"author":{"gitId":"-"},"content":"                CreateBlocksTimer(duration, timerWidth, timerHeight, timerLeft, timerTop, isCountdown, isProgressBar);"},{"lineNumber":494,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":497,"author":{"gitId":"-"},"content":""},{"lineNumber":498,"author":{"gitId":"-"},"content":"        #region Duration Control"},{"lineNumber":499,"author":{"gitId":"-"},"content":"        private void DurationTextBox_ValueDecremented(object sender, "},{"lineNumber":500,"author":{"gitId":"-"},"content":"            MahApps.Metro.Controls.NumericUpDownChangedRoutedEventArgs args)"},{"lineNumber":501,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":502,"author":{"gitId":"-"},"content":"            if (DurationTextBox.Value \u003d\u003d null)"},{"lineNumber":503,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":504,"author":{"gitId":"-"},"content":"                DurationTextBox.Value \u003d TimerLabConstants.DefaultDisplayDuration;"},{"lineNumber":505,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":506,"author":{"gitId":"-"},"content":""},{"lineNumber":507,"author":{"gitId":"-"},"content":"            double value \u003d Math.Round(DurationTextBox.Value.Value, 2);"},{"lineNumber":508,"author":{"gitId":"-"},"content":"            int integerPart \u003d (int)value;"},{"lineNumber":509,"author":{"gitId":"-"},"content":"            double fractionalPart \u003d value - integerPart;"},{"lineNumber":510,"author":{"gitId":"-"},"content":""},{"lineNumber":511,"author":{"gitId":"-"},"content":"            if (Math.Round(fractionalPart, 2) \u003d\u003d TimerLabConstants.FractionalDecrementLowerBound)"},{"lineNumber":512,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":513,"author":{"gitId":"-"},"content":"                DurationTextBox.Value \u003d (integerPart - 1) + TimerLabConstants.FractionalDecrementOffset;"},{"lineNumber":514,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":515,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":516,"author":{"gitId":"-"},"content":""},{"lineNumber":517,"author":{"gitId":"-"},"content":"        private void DurationTextBox_ValueIncremented(object sender, "},{"lineNumber":518,"author":{"gitId":"-"},"content":"            MahApps.Metro.Controls.NumericUpDownChangedRoutedEventArgs args)"},{"lineNumber":519,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":520,"author":{"gitId":"-"},"content":"            if (DurationTextBox.Value \u003d\u003d null)"},{"lineNumber":521,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":522,"author":{"gitId":"-"},"content":"                DurationTextBox.Value \u003d TimerLabConstants.DefaultDisplayDuration;"},{"lineNumber":523,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":524,"author":{"gitId":"-"},"content":""},{"lineNumber":525,"author":{"gitId":"-"},"content":"            double value \u003d Math.Round(DurationTextBox.Value.Value, 2);"},{"lineNumber":526,"author":{"gitId":"-"},"content":"            int integerPart \u003d (int)value;"},{"lineNumber":527,"author":{"gitId":"-"},"content":"            double fractionalPart \u003d value - integerPart;"},{"lineNumber":528,"author":{"gitId":"-"},"content":""},{"lineNumber":529,"author":{"gitId":"-"},"content":"            if (Math.Round(fractionalPart, 2) \u003d\u003d TimerLabConstants.FractionalIncrementUpperBound)"},{"lineNumber":530,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":531,"author":{"gitId":"-"},"content":"                DurationTextBox.Value \u003d integerPart + TimerLabConstants.FractionalIncrementOffset;"},{"lineNumber":532,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":533,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":534,"author":{"gitId":"-"},"content":""},{"lineNumber":535,"author":{"gitId":"-"},"content":"        private void DurationTextBox_LostFocus(object sender, RoutedEventArgs e)"},{"lineNumber":536,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":537,"author":{"gitId":"-"},"content":"            if (DurationTextBox.Value \u003d\u003d null)"},{"lineNumber":538,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":539,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":540,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":541,"author":{"gitId":"-"},"content":""},{"lineNumber":542,"author":{"gitId":"-"},"content":"            double value \u003d Math.Round(DurationTextBox.Value.Value, 2);"},{"lineNumber":543,"author":{"gitId":"-"},"content":"            int integerPart \u003d (int)value;"},{"lineNumber":544,"author":{"gitId":"-"},"content":"            double fractionalPart \u003d value - integerPart;"},{"lineNumber":545,"author":{"gitId":"-"},"content":""},{"lineNumber":546,"author":{"gitId":"-"},"content":"            if (Math.Round(fractionalPart, 2) \u003e TimerLabConstants.FractionalIncrementUpperBound)"},{"lineNumber":547,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":548,"author":{"gitId":"-"},"content":"                DurationTextBox.Value \u003d integerPart + 1;"},{"lineNumber":549,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":550,"author":{"gitId":"-"},"content":""},{"lineNumber":551,"author":{"gitId":"-"},"content":"            if (!FindTimer())"},{"lineNumber":552,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":553,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":554,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":555,"author":{"gitId":"-"},"content":""},{"lineNumber":556,"author":{"gitId":"-"},"content":"            ReformMissingComponents();"},{"lineNumber":557,"author":{"gitId":"-"},"content":"            RecreateMarkers();"},{"lineNumber":558,"author":{"gitId":"-"},"content":"            AdjustZOrder();"},{"lineNumber":559,"author":{"gitId":"-"},"content":""},{"lineNumber":560,"author":{"gitId":"-"},"content":"            if (isProgressBar)"},{"lineNumber":561,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":562,"author":{"gitId":"-"},"content":"                UpdateProgressBarPosition();"},{"lineNumber":563,"author":{"gitId":"-"},"content":"                UpdateProgressBarAnimationDuration();"},{"lineNumber":564,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":565,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":566,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":567,"author":{"gitId":"-"},"content":"                UpdateSliderPosition();"},{"lineNumber":568,"author":{"gitId":"-"},"content":"                UpdateSliderAnimationDuration();"},{"lineNumber":569,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":570,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":571,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":572,"author":{"gitId":"-"},"content":""},{"lineNumber":573,"author":{"gitId":"-"},"content":"        #region Countdown Control"},{"lineNumber":574,"author":{"gitId":"-"},"content":""},{"lineNumber":575,"author":{"gitId":"-"},"content":"        private void CountdownCheckBox_StateChanged(object sender, RoutedEventArgs e)"},{"lineNumber":576,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":577,"author":{"gitId":"-"},"content":"            // CountdownCheckBox.isChecked can return null if checkbox is in indeterminate state in a 3-state checkbox (checked, unchecked, indeterminate)"},{"lineNumber":578,"author":{"gitId":"-"},"content":"            // In this application, the checkbox is only 2-state, but we guard against this because IsChecked returns a nullable boolean (bool?)"},{"lineNumber":579,"author":{"gitId":"-"},"content":"            if (CountdownCheckBox.IsChecked \u003d\u003d null)"},{"lineNumber":580,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":581,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":582,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":583,"author":{"gitId":"-"},"content":""},{"lineNumber":584,"author":{"gitId":"-"},"content":"            if (!FindTimer())"},{"lineNumber":585,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":586,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":587,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":588,"author":{"gitId":"-"},"content":""},{"lineNumber":589,"author":{"gitId":"-"},"content":"            ReformMissingComponents();"},{"lineNumber":590,"author":{"gitId":"-"},"content":"            RecreateMarkers();"},{"lineNumber":591,"author":{"gitId":"-"},"content":"            AdjustZOrder();"},{"lineNumber":592,"author":{"gitId":"-"},"content":""},{"lineNumber":593,"author":{"gitId":"-"},"content":"            if (isProgressBar)"},{"lineNumber":594,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":595,"author":{"gitId":"-"},"content":"                UpdateProgressBarPosition();"},{"lineNumber":596,"author":{"gitId":"-"},"content":"                UpdateProgressBarPosition();"},{"lineNumber":597,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":598,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":599,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":600,"author":{"gitId":"-"},"content":"                UpdateSliderPosition();"},{"lineNumber":601,"author":{"gitId":"-"},"content":"                UpdateSliderAnimationDuration();"},{"lineNumber":602,"author":{"gitId":"-"},"content":"            }  "},{"lineNumber":603,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":604,"author":{"gitId":"-"},"content":""},{"lineNumber":605,"author":{"gitId":"-"},"content":"        private void ProgressBarCheckBox_StateChanged(object sender, RoutedEventArgs e)"},{"lineNumber":606,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":607,"author":{"gitId":"-"},"content":"            // ProgressBarCheckBox.isChecked can return null if checkbox is in indeterminate state in a 3-state checkbox (checked, unchecked, indeterminate)"},{"lineNumber":608,"author":{"gitId":"-"},"content":"            // In this application, the checkbox is only 2-state, but we guard against this because IsChecked returns a nullable boolean (bool?)"},{"lineNumber":609,"author":{"gitId":"-"},"content":"            if (ProgressBarCheckBox.IsChecked \u003d\u003d null)"},{"lineNumber":610,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":611,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":612,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":613,"author":{"gitId":"-"},"content":""},{"lineNumber":614,"author":{"gitId":"-"},"content":"            ProgressBar();"},{"lineNumber":615,"author":{"gitId":"-"},"content":""},{"lineNumber":616,"author":{"gitId":"-"},"content":"            if (!FindTimer())"},{"lineNumber":617,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":618,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":619,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":620,"author":{"gitId":"-"},"content":""},{"lineNumber":621,"author":{"gitId":"-"},"content":"            ReformMissingComponents();"},{"lineNumber":622,"author":{"gitId":"-"},"content":"            RecreateMarkers();"},{"lineNumber":623,"author":{"gitId":"-"},"content":""},{"lineNumber":624,"author":{"gitId":"-"},"content":"            if (isProgressBar)"},{"lineNumber":625,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":626,"author":{"gitId":"-"},"content":"                RemoveSlider();"},{"lineNumber":627,"author":{"gitId":"-"},"content":"                ChangeTimerBodyColor(SliderColor());"},{"lineNumber":628,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":629,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":630,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":631,"author":{"gitId":"-"},"content":"                RemoveProgressBar();"},{"lineNumber":632,"author":{"gitId":"-"},"content":"                ChangeTimerBodyColor(TimerBodyColor());"},{"lineNumber":633,"author":{"gitId":"-"},"content":"                RecreateSlider();"},{"lineNumber":634,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":635,"author":{"gitId":"-"},"content":""},{"lineNumber":636,"author":{"gitId":"-"},"content":"            AdjustZOrder();"},{"lineNumber":637,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":638,"author":{"gitId":"-"},"content":""},{"lineNumber":639,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":640,"author":{"gitId":"-"},"content":""},{"lineNumber":641,"author":{"gitId":"-"},"content":"        #region Width Control"},{"lineNumber":642,"author":{"gitId":"-"},"content":"        private void WidthSlider_Loaded(object sender, RoutedEventArgs e)"},{"lineNumber":643,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":644,"author":{"gitId":"-"},"content":"            WidthSlider.Minimum \u003d TimerLabConstants.MinTimerWidth;"},{"lineNumber":645,"author":{"gitId":"-"},"content":"            WidthSlider.Maximum \u003d SlideWidth();"},{"lineNumber":646,"author":{"gitId":"-"},"content":"            WidthSlider.Value \u003d TimerLabConstants.DefaultTimerWidth;   "},{"lineNumber":647,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":648,"author":{"gitId":"-"},"content":""},{"lineNumber":649,"author":{"gitId":"-"},"content":"        private void WidthSlider_ValueChanged(object sender, RoutedPropertyChangedEventArgs\u003cdouble\u003e e)"},{"lineNumber":650,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":651,"author":{"gitId":"-"},"content":"            // update text box value"},{"lineNumber":652,"author":{"gitId":"-"},"content":"            float value \u003d (float)WidthSlider.Value;"},{"lineNumber":653,"author":{"gitId":"-"},"content":"            WidthTextBox.Text \u003d ((int)value).ToString();"},{"lineNumber":654,"author":{"gitId":"-"},"content":""},{"lineNumber":655,"author":{"gitId":"-"},"content":"            if (!FindTimer()) "},{"lineNumber":656,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":657,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":658,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":659,"author":{"gitId":"-"},"content":"            // update timer dimensions"},{"lineNumber":660,"author":{"gitId":"-"},"content":"            ReformMissingComponents();"},{"lineNumber":661,"author":{"gitId":"-"},"content":"                "},{"lineNumber":662,"author":{"gitId":"-"},"content":"            float increment \u003d value - timerBody.Width;"},{"lineNumber":663,"author":{"gitId":"-"},"content":"            timerBody.Left \u003d NewPosition(timerBody.Left, increment);"},{"lineNumber":664,"author":{"gitId":"-"},"content":"            timerBody.Width \u003d timerBody.Width + increment;"},{"lineNumber":665,"author":{"gitId":"-"},"content":""},{"lineNumber":666,"author":{"gitId":"-"},"content":"            if (isProgressBar)"},{"lineNumber":667,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":668,"author":{"gitId":"-"},"content":"                progressBar.Left \u003d timerBody.Left;"},{"lineNumber":669,"author":{"gitId":"-"},"content":"                progressBar.Width \u003d timerBody.Width * 2;"},{"lineNumber":670,"author":{"gitId":"-"},"content":"                UpdateProgressBarPositionX();"},{"lineNumber":671,"author":{"gitId":"-"},"content":"            } "},{"lineNumber":672,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":673,"author":{"gitId":"-"},"content":"            {                    "},{"lineNumber":674,"author":{"gitId":"-"},"content":"                UpdateSliderPositionX();"},{"lineNumber":675,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":676,"author":{"gitId":"-"},"content":""},{"lineNumber":677,"author":{"gitId":"-"},"content":"            UpdateMarkerPositionX();"},{"lineNumber":678,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":679,"author":{"gitId":"-"},"content":""},{"lineNumber":680,"author":{"gitId":"-"},"content":"        private void WidthTextBox_Loaded(object sender, RoutedEventArgs e)"},{"lineNumber":681,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":682,"author":{"gitId":"-"},"content":"            WidthTextBox.Text \u003d TimerLabConstants.DefaultTimerWidth.ToString();"},{"lineNumber":683,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":684,"author":{"gitId":"-"},"content":""},{"lineNumber":685,"author":{"gitId":"-"},"content":"        private void WidthTextBox_PreviewTextInput(object sender, TextCompositionEventArgs e)"},{"lineNumber":686,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":687,"author":{"gitId":"-"},"content":"            e.Handled \u003d !IsNumbersOnly(e.Text);"},{"lineNumber":688,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":689,"author":{"gitId":"-"},"content":""},{"lineNumber":690,"author":{"gitId":"-"},"content":"        private void WidthTextBox_TextBoxPasting(object sender, DataObjectPastingEventArgs e)"},{"lineNumber":691,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":692,"author":{"gitId":"-"},"content":"            if (e.DataObject.GetDataPresent(typeof(String)))"},{"lineNumber":693,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":694,"author":{"gitId":"-"},"content":"                String text \u003d (String)e.DataObject.GetData(typeof(String));"},{"lineNumber":695,"author":{"gitId":"-"},"content":"                if (!IsNumbersOnly(text))"},{"lineNumber":696,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":697,"author":{"gitId":"-"},"content":"                    e.CancelCommand();"},{"lineNumber":698,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":699,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":700,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":701,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":702,"author":{"gitId":"-"},"content":"                e.CancelCommand();"},{"lineNumber":703,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":704,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":705,"author":{"gitId":"-"},"content":""},{"lineNumber":706,"author":{"gitId":"-"},"content":"        private void WidthTextBox_LostFocus(object sender, RoutedEventArgs e)"},{"lineNumber":707,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":708,"author":{"gitId":"-"},"content":"            if (string.IsNullOrEmpty(WidthTextBox.Text))"},{"lineNumber":709,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":710,"author":{"gitId":"-"},"content":"                WidthTextBox.Text \u003d ((int)WidthSlider.Value).ToString();"},{"lineNumber":711,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":712,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":713,"author":{"gitId":"-"},"content":""},{"lineNumber":714,"author":{"gitId":"-"},"content":"            int value \u003d Convert.ToInt32(WidthTextBox.Text);"},{"lineNumber":715,"author":{"gitId":"-"},"content":"            value \u003d Math.Max(value, (int)TimerLabConstants.MinTimerWidth);"},{"lineNumber":716,"author":{"gitId":"-"},"content":"            value \u003d Math.Min(value, (int)SlideWidth());"},{"lineNumber":717,"author":{"gitId":"-"},"content":"            WidthTextBox.Text \u003d value.ToString();"},{"lineNumber":718,"author":{"gitId":"-"},"content":"            WidthSlider.Value \u003d value;"},{"lineNumber":719,"author":{"gitId":"-"},"content":""},{"lineNumber":720,"author":{"gitId":"-"},"content":"            // update timer dimensions"},{"lineNumber":721,"author":{"gitId":"-"},"content":"            if (FindTimer())"},{"lineNumber":722,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":723,"author":{"gitId":"-"},"content":"                ReformMissingComponents();"},{"lineNumber":724,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":725,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":726,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":727,"author":{"gitId":"-"},"content":""},{"lineNumber":728,"author":{"gitId":"-"},"content":"        #region Height Control"},{"lineNumber":729,"author":{"gitId":"-"},"content":"        private void HeightSlider_Loaded(object sender, RoutedEventArgs e)"},{"lineNumber":730,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":731,"author":{"gitId":"-"},"content":"            HeightSlider.Minimum \u003d TimerLabConstants.MinTimerHeight;"},{"lineNumber":732,"author":{"gitId":"-"},"content":"            HeightSlider.Maximum \u003d SlideHeight();"},{"lineNumber":733,"author":{"gitId":"-"},"content":"            HeightSlider.Value \u003d TimerLabConstants.DefaultTimerHeight;"},{"lineNumber":734,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":735,"author":{"gitId":"-"},"content":""},{"lineNumber":736,"author":{"gitId":"-"},"content":"        private void HeightSlider_ValueChanged(object sender, RoutedPropertyChangedEventArgs\u003cdouble\u003e e)"},{"lineNumber":737,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":738,"author":{"gitId":"-"},"content":"            // update text box value"},{"lineNumber":739,"author":{"gitId":"-"},"content":"            float value \u003d (float)HeightSlider.Value;"},{"lineNumber":740,"author":{"gitId":"-"},"content":"            HeightTextBox.Text \u003d ((int)value).ToString();"},{"lineNumber":741,"author":{"gitId":"-"},"content":""},{"lineNumber":742,"author":{"gitId":"-"},"content":"            if (!FindTimer())"},{"lineNumber":743,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":744,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":745,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":746,"author":{"gitId":"-"},"content":"            // update timer dimensions"},{"lineNumber":747,"author":{"gitId":"-"},"content":"            ReformMissingComponents();"},{"lineNumber":748,"author":{"gitId":"-"},"content":""},{"lineNumber":749,"author":{"gitId":"-"},"content":"            float increment \u003d value - timerBody.Height;"},{"lineNumber":750,"author":{"gitId":"-"},"content":"            timerBody.Top \u003d NewPosition(timerBody.Top, increment);"},{"lineNumber":751,"author":{"gitId":"-"},"content":"            timerBody.Height \u003d timerBody.Height + increment;"},{"lineNumber":752,"author":{"gitId":"-"},"content":""},{"lineNumber":753,"author":{"gitId":"-"},"content":"            if (isProgressBar)"},{"lineNumber":754,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":755,"author":{"gitId":"-"},"content":"                progressBar.Top \u003d timerBody.Top;"},{"lineNumber":756,"author":{"gitId":"-"},"content":"                progressBar.Height \u003d timerBody.Height;"},{"lineNumber":757,"author":{"gitId":"-"},"content":"                UpdateProgressBarPositionX();"},{"lineNumber":758,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":759,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":760,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":761,"author":{"gitId":"-"},"content":"                UpdateSliderPositionY();"},{"lineNumber":762,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":763,"author":{"gitId":"-"},"content":""},{"lineNumber":764,"author":{"gitId":"-"},"content":"            UpdateMarkerPositionY();"},{"lineNumber":765,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":766,"author":{"gitId":"-"},"content":""},{"lineNumber":767,"author":{"gitId":"-"},"content":"        private void HeightTextBox_Loaded(object sender, RoutedEventArgs e)"},{"lineNumber":768,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":769,"author":{"gitId":"-"},"content":"            HeightTextBox.Text \u003d TimerLabConstants.DefaultTimerHeight.ToString();"},{"lineNumber":770,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":771,"author":{"gitId":"-"},"content":""},{"lineNumber":772,"author":{"gitId":"-"},"content":"        private void HeightTextBox_PreviewTextInput(object sender, TextCompositionEventArgs e)"},{"lineNumber":773,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":774,"author":{"gitId":"-"},"content":"            e.Handled \u003d !IsNumbersOnly(e.Text);"},{"lineNumber":775,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":776,"author":{"gitId":"-"},"content":""},{"lineNumber":777,"author":{"gitId":"-"},"content":"        private void HeightTextBox_TextBoxPasting(object sender, DataObjectPastingEventArgs e)"},{"lineNumber":778,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":779,"author":{"gitId":"-"},"content":"            if (e.DataObject.GetDataPresent(typeof(String)))"},{"lineNumber":780,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":781,"author":{"gitId":"-"},"content":"                String text \u003d (String)e.DataObject.GetData(typeof(String));"},{"lineNumber":782,"author":{"gitId":"-"},"content":"                if (!IsNumbersOnly(text))"},{"lineNumber":783,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":784,"author":{"gitId":"-"},"content":"                    e.CancelCommand();"},{"lineNumber":785,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":786,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":787,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":788,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":789,"author":{"gitId":"-"},"content":"                e.CancelCommand();"},{"lineNumber":790,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":791,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":792,"author":{"gitId":"-"},"content":""},{"lineNumber":793,"author":{"gitId":"-"},"content":"        private void HeightTextBox_LostFocus(object sender, RoutedEventArgs e)"},{"lineNumber":794,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":795,"author":{"gitId":"-"},"content":"            if (string.IsNullOrEmpty(HeightTextBox.Text))"},{"lineNumber":796,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":797,"author":{"gitId":"-"},"content":"                HeightTextBox.Text \u003d ((int)HeightSlider.Value).ToString();"},{"lineNumber":798,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":799,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":800,"author":{"gitId":"-"},"content":""},{"lineNumber":801,"author":{"gitId":"-"},"content":"            int value \u003d Convert.ToInt32(HeightTextBox.Text);"},{"lineNumber":802,"author":{"gitId":"-"},"content":"            value \u003d Math.Max(value, (int)TimerLabConstants.MinTimerHeight);"},{"lineNumber":803,"author":{"gitId":"-"},"content":"            value \u003d Math.Min(value, (int)SlideHeight());"},{"lineNumber":804,"author":{"gitId":"-"},"content":"            HeightTextBox.Text \u003d value.ToString();"},{"lineNumber":805,"author":{"gitId":"-"},"content":"            HeightSlider.Value \u003d value;"},{"lineNumber":806,"author":{"gitId":"-"},"content":""},{"lineNumber":807,"author":{"gitId":"-"},"content":"            // update timer dimensions"},{"lineNumber":808,"author":{"gitId":"-"},"content":"            if (FindTimer())"},{"lineNumber":809,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":810,"author":{"gitId":"-"},"content":"                ReformMissingComponents();"},{"lineNumber":811,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":812,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":813,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":814,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":815,"author":{"gitId":"-"},"content":""},{"lineNumber":816,"author":{"gitId":"-"},"content":"        #region Timer Helper"},{"lineNumber":817,"author":{"gitId":"-"},"content":"        private void ChangeTimerBodyColor(int timerBodyColor)"},{"lineNumber":818,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":819,"author":{"gitId":"-"},"content":"            timerBody.Fill.ForeColor.RGB \u003d timerBodyColor;"},{"lineNumber":820,"author":{"gitId":"-"},"content":"            timerBody.Line.ForeColor.RGB \u003d timerBodyColor;"},{"lineNumber":821,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":822,"author":{"gitId":"-"},"content":""},{"lineNumber":823,"author":{"gitId":"-"},"content":"        private void CreateProgressBarShape(float timerWidth, float timerHeight, int sliderColor)"},{"lineNumber":824,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":825,"author":{"gitId":"-"},"content":"            // Creation of progress bar"},{"lineNumber":826,"author":{"gitId":"-"},"content":"            Shape visibleProgressBar \u003d this.GetCurrentSlide().Shapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType.msoShapeRectangle,"},{"lineNumber":827,"author":{"gitId":"-"},"content":"                                                                       0, 0, timerWidth, timerHeight);"},{"lineNumber":828,"author":{"gitId":"-"},"content":"            visibleProgressBar.Fill.ForeColor.RGB \u003d sliderColor;"},{"lineNumber":829,"author":{"gitId":"-"},"content":"            visibleProgressBar.Line.ForeColor.RGB \u003d sliderColor;"},{"lineNumber":830,"author":{"gitId":"-"},"content":"            float rightOfProgressBar \u003d visibleProgressBar.Left + visibleProgressBar.Width;"},{"lineNumber":831,"author":{"gitId":"-"},"content":"            float topOfProgressBar \u003d visibleProgressBar.Top;"},{"lineNumber":832,"author":{"gitId":"-"},"content":"            "},{"lineNumber":833,"author":{"gitId":"-"},"content":"            // Position invisible progress bar to the right of the visible one"},{"lineNumber":834,"author":{"gitId":"-"},"content":"            Shape invisibleProgressBar \u003d this.GetCurrentSlide().Shapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType.msoShapeRectangle,"},{"lineNumber":835,"author":{"gitId":"-"},"content":"                                                                       rightOfProgressBar, topOfProgressBar, timerWidth, timerHeight);"},{"lineNumber":836,"author":{"gitId":"-"},"content":"            invisibleProgressBar.Fill.Transparency \u003d TimerLabConstants.TransparencyTransparent;"},{"lineNumber":837,"author":{"gitId":"-"},"content":"            invisibleProgressBar.Line.Transparency \u003d TimerLabConstants.TransparencyTransparent;"},{"lineNumber":838,"author":{"gitId":"-"},"content":"            "},{"lineNumber":839,"author":{"gitId":"-"},"content":"            // Grouping the shapes together"},{"lineNumber":840,"author":{"gitId":"-"},"content":"            string[] progressBarNames \u003d new string[] { visibleProgressBar.Name, invisibleProgressBar.Name };"},{"lineNumber":841,"author":{"gitId":"-"},"content":"            progressBar \u003d this.GetCurrentSlide().Shapes.Range(progressBarNames).Group();"},{"lineNumber":842,"author":{"gitId":"-"},"content":"            progressBar.Name \u003d TimerLabConstants.ProgressBarId;"},{"lineNumber":843,"author":{"gitId":"-"},"content":"            progressBar.Tags.Add(TimerLabConstants.ShapeId, TimerLabConstants.ProgressBarId);"},{"lineNumber":844,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":845,"author":{"gitId":"-"},"content":""},{"lineNumber":846,"author":{"gitId":"-"},"content":"        private void CreateSliderHeadAndBodyShape(float timerHeight, int sliderColor)"},{"lineNumber":847,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":848,"author":{"gitId":"-"},"content":"            sliderHead \u003d this.GetCurrentSlide().Shapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType.msoShapeIsoscelesTriangle,"},{"lineNumber":849,"author":{"gitId":"-"},"content":"                                                                0, 0,"},{"lineNumber":850,"author":{"gitId":"-"},"content":"                                                                TimerLabConstants.DefaultSliderHeadSize,"},{"lineNumber":851,"author":{"gitId":"-"},"content":"                                                                TimerLabConstants.DefaultSliderHeadSize);"},{"lineNumber":852,"author":{"gitId":"-"},"content":"            sliderHead.Name \u003d TimerLabConstants.TimerSliderHeadId;"},{"lineNumber":853,"author":{"gitId":"-"},"content":"            sliderHead.Tags.Add(TimerLabConstants.ShapeId, TimerLabConstants.TimerSliderHeadId);"},{"lineNumber":854,"author":{"gitId":"-"},"content":"            sliderHead.Rotation \u003d TimerLabConstants.Rotate180Degrees;"},{"lineNumber":855,"author":{"gitId":"-"},"content":"            sliderHead.Fill.ForeColor.RGB \u003d sliderColor;"},{"lineNumber":856,"author":{"gitId":"-"},"content":"            sliderHead.Line.Transparency \u003d TimerLabConstants.TransparencyTransparent;"},{"lineNumber":857,"author":{"gitId":"-"},"content":""},{"lineNumber":858,"author":{"gitId":"-"},"content":"            sliderBody \u003d this.GetCurrentSlide().Shapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType.msoShapeRectangle,"},{"lineNumber":859,"author":{"gitId":"-"},"content":"                                                                0, 0,"},{"lineNumber":860,"author":{"gitId":"-"},"content":"                                                                TimerLabConstants.DefaultSliderBodyWidth,"},{"lineNumber":861,"author":{"gitId":"-"},"content":"                                                                timerHeight);"},{"lineNumber":862,"author":{"gitId":"-"},"content":"            sliderBody.Name \u003d TimerLabConstants.TimerSliderBodyId;"},{"lineNumber":863,"author":{"gitId":"-"},"content":"            sliderBody.Tags.Add(TimerLabConstants.ShapeId, TimerLabConstants.TimerSliderBodyId);"},{"lineNumber":864,"author":{"gitId":"-"},"content":"            sliderBody.Fill.ForeColor.RGB \u003d sliderColor;"},{"lineNumber":865,"author":{"gitId":"-"},"content":"            sliderBody.Line.Transparency \u003d TimerLabConstants.TransparencyTransparent;"},{"lineNumber":866,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":867,"author":{"gitId":"-"},"content":""},{"lineNumber":868,"author":{"gitId":"-"},"content":"        private void ReformMissingComponents()"},{"lineNumber":869,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":870,"author":{"gitId":"-"},"content":"            bool isTimerBodyRecreated \u003d ReformTimerBodyIfMissing();"},{"lineNumber":871,"author":{"gitId":"-"},"content":"            bool isMarkersRecreated \u003d ReformMarkersIfMissing();"},{"lineNumber":872,"author":{"gitId":"-"},"content":"            bool isTimerComponentRecreated \u003d ReformTimerComponentIfMissing();"},{"lineNumber":873,"author":{"gitId":"-"},"content":""},{"lineNumber":874,"author":{"gitId":"-"},"content":"            if (isTimerBodyRecreated || isMarkersRecreated || isTimerComponentRecreated)"},{"lineNumber":875,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":876,"author":{"gitId":"-"},"content":"                AdjustZOrder();"},{"lineNumber":877,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":878,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":879,"author":{"gitId":"-"},"content":""},{"lineNumber":880,"author":{"gitId":"-"},"content":"        private bool ReformTimerBodyIfMissing()"},{"lineNumber":881,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":882,"author":{"gitId":"-"},"content":"            if (timerBody \u003d\u003d null)"},{"lineNumber":883,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":884,"author":{"gitId":"-"},"content":"                int timerBodyColor;"},{"lineNumber":885,"author":{"gitId":"-"},"content":"                if (isProgressBar)"},{"lineNumber":886,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":887,"author":{"gitId":"-"},"content":"                    timerBodyColor \u003d SliderColor();"},{"lineNumber":888,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":889,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":890,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":891,"author":{"gitId":"-"},"content":"                    timerBodyColor \u003d TimerBodyColor();"},{"lineNumber":892,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":893,"author":{"gitId":"-"},"content":"                AddTimerBody(TimerWidth(), TimerHeight(), "},{"lineNumber":894,"author":{"gitId":"-"},"content":"                            DefaultTimerLeft(SlideWidth(), TimerWidth()),"},{"lineNumber":895,"author":{"gitId":"-"},"content":"                            DefaultTimerTop(SlideHeight(), TimerHeight()), "},{"lineNumber":896,"author":{"gitId":"-"},"content":"                            timerBodyColor);"},{"lineNumber":897,"author":{"gitId":"-"},"content":"                return true;"},{"lineNumber":898,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":899,"author":{"gitId":"-"},"content":"            timerBody.Rotation \u003d 0;"},{"lineNumber":900,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":901,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":902,"author":{"gitId":"-"},"content":""},{"lineNumber":903,"author":{"gitId":"-"},"content":"        private bool ReformMarkersIfMissing()"},{"lineNumber":904,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":905,"author":{"gitId":"-"},"content":"            if (lineMarkerGroup \u003d\u003d null || timeMarkerGroup \u003d\u003d null)"},{"lineNumber":906,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":907,"author":{"gitId":"-"},"content":"                RecreateMarkers();"},{"lineNumber":908,"author":{"gitId":"-"},"content":"                return true;"},{"lineNumber":909,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":910,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":911,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":912,"author":{"gitId":"-"},"content":""},{"lineNumber":913,"author":{"gitId":"-"},"content":"        private bool ReformTimerComponentIfMissing()"},{"lineNumber":914,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":915,"author":{"gitId":"-"},"content":"            if (isProgressBar)"},{"lineNumber":916,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":917,"author":{"gitId":"-"},"content":"                if (progressBar \u003d\u003d null)"},{"lineNumber":918,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":919,"author":{"gitId":"-"},"content":"                    RecreateProgressBar();"},{"lineNumber":920,"author":{"gitId":"-"},"content":"                    return true;"},{"lineNumber":921,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":922,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":923,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":924,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":925,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":926,"author":{"gitId":"-"},"content":"                if (sliderHead \u003d\u003d null || sliderBody \u003d\u003d null)"},{"lineNumber":927,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":928,"author":{"gitId":"-"},"content":"                    RecreateSlider();"},{"lineNumber":929,"author":{"gitId":"-"},"content":"                    return true;"},{"lineNumber":930,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":931,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":932,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":933,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":934,"author":{"gitId":"-"},"content":""},{"lineNumber":935,"author":{"gitId":"-"},"content":"        private void RecreateMarkers()"},{"lineNumber":936,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":937,"author":{"gitId":"-"},"content":"            // remove current markers"},{"lineNumber":938,"author":{"gitId":"-"},"content":"            int timeMarkerColor \u003d TimeMarkerColor();"},{"lineNumber":939,"author":{"gitId":"-"},"content":"            if (timeMarkerGroup !\u003d null)"},{"lineNumber":940,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":941,"author":{"gitId":"-"},"content":"                timeMarkerColor \u003d timeMarkerGroup.TextFrame.TextRange.Font.Color.RGB;"},{"lineNumber":942,"author":{"gitId":"-"},"content":"                timeMarkerGroup.SafeDelete();"},{"lineNumber":943,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":944,"author":{"gitId":"-"},"content":""},{"lineNumber":945,"author":{"gitId":"-"},"content":"            int lineMarkerColor \u003d LineMarkerColor();"},{"lineNumber":946,"author":{"gitId":"-"},"content":"            if (lineMarkerGroup !\u003d null)"},{"lineNumber":947,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":948,"author":{"gitId":"-"},"content":"                lineMarkerColor \u003d lineMarkerGroup.Line.ForeColor.RGB;"},{"lineNumber":949,"author":{"gitId":"-"},"content":"                lineMarkerGroup.SafeDelete();"},{"lineNumber":950,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":951,"author":{"gitId":"-"},"content":""},{"lineNumber":952,"author":{"gitId":"-"},"content":"            // add new markers"},{"lineNumber":953,"author":{"gitId":"-"},"content":"            AddMarkers(Duration(), timerBody.Width, timerBody.Height, timeMarkerColor, lineMarkerColor, Countdown());"},{"lineNumber":954,"author":{"gitId":"-"},"content":"            timeMarkerGroup.TextFrame.TextRange.Font.Color.RGB \u003d timeMarkerColor;"},{"lineNumber":955,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":956,"author":{"gitId":"-"},"content":""},{"lineNumber":957,"author":{"gitId":"-"},"content":"        private void RemoveSlider()"},{"lineNumber":958,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":959,"author":{"gitId":"-"},"content":"            sliderHead \u003d GetShapeByName(TimerLabConstants.TimerSliderHeadId);"},{"lineNumber":960,"author":{"gitId":"-"},"content":"            sliderBody \u003d GetShapeByName(TimerLabConstants.TimerSliderBodyId);"},{"lineNumber":961,"author":{"gitId":"-"},"content":"            sliderHead.SafeDelete();"},{"lineNumber":962,"author":{"gitId":"-"},"content":"            sliderBody.SafeDelete();"},{"lineNumber":963,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":964,"author":{"gitId":"-"},"content":""},{"lineNumber":965,"author":{"gitId":"-"},"content":"        private void RecreateSlider()"},{"lineNumber":966,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":967,"author":{"gitId":"-"},"content":"            int sliderColor \u003d SliderColor();"},{"lineNumber":968,"author":{"gitId":"-"},"content":""},{"lineNumber":969,"author":{"gitId":"-"},"content":"            // remove current Slider"},{"lineNumber":970,"author":{"gitId":"-"},"content":"            if (sliderHead !\u003d null)"},{"lineNumber":971,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":972,"author":{"gitId":"-"},"content":"                sliderColor \u003d sliderHead.Fill.ForeColor.RGB;"},{"lineNumber":973,"author":{"gitId":"-"},"content":"                sliderHead.SafeDelete();"},{"lineNumber":974,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":975,"author":{"gitId":"-"},"content":"            if (sliderBody !\u003d null)"},{"lineNumber":976,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":977,"author":{"gitId":"-"},"content":"                sliderColor \u003d sliderBody.Fill.ForeColor.RGB;"},{"lineNumber":978,"author":{"gitId":"-"},"content":"                sliderBody.SafeDelete();"},{"lineNumber":979,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":980,"author":{"gitId":"-"},"content":"            "},{"lineNumber":981,"author":{"gitId":"-"},"content":"            AddSlider(Duration(), timerBody.Width, timerBody.Height, sliderColor, SlideWidth());"},{"lineNumber":982,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":983,"author":{"gitId":"-"},"content":""},{"lineNumber":984,"author":{"gitId":"-"},"content":"        private void RemoveProgressBar()"},{"lineNumber":985,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":986,"author":{"gitId":"-"},"content":"            progressBar \u003d GetShapeByName(TimerLabConstants.ProgressBarId);"},{"lineNumber":987,"author":{"gitId":"-"},"content":"            progressBar.SafeDelete();"},{"lineNumber":988,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":989,"author":{"gitId":"-"},"content":""},{"lineNumber":990,"author":{"gitId":"-"},"content":"        private void RecreateProgressBar()"},{"lineNumber":991,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":992,"author":{"gitId":"-"},"content":"            int progressBarColor \u003d TimerBodyColor();"},{"lineNumber":993,"author":{"gitId":"-"},"content":"            AddProgressBar(Duration(), timerBody.Width, timerBody.Height, progressBarColor, SlideWidth());"},{"lineNumber":994,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":995,"author":{"gitId":"-"},"content":""},{"lineNumber":996,"author":{"gitId":"-"},"content":"        private void UpdateMarkerPosition()"},{"lineNumber":997,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":998,"author":{"gitId":"-"},"content":"            UpdateMarkerPositionX();"},{"lineNumber":999,"author":{"gitId":"-"},"content":"            UpdateMarkerPositionY();"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1001,"author":{"gitId":"-"},"content":""},{"lineNumber":1002,"author":{"gitId":"-"},"content":"        private void UpdateMarkerPositionX()"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1004,"author":{"gitId":"-"},"content":"            if (lineMarkerGroup !\u003d null)"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"                float widthPerSec \u003d timerBody.Width / Duration();"},{"lineNumber":1007,"author":{"gitId":"-"},"content":"                float lineSpacing \u003d TimerLabConstants.DefaultDenomination * widthPerSec;"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"                int numOfLineMarkers \u003d (int)(Math.Ceiling((double)Duration() / TimerLabConstants.DefaultDenomination)) - 2;"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"                lineMarkerGroup.Left \u003d timerBody.Left + lineSpacing;"},{"lineNumber":1010,"author":{"gitId":"-"},"content":"                lineMarkerGroup.Width \u003d numOfLineMarkers * lineSpacing;"},{"lineNumber":1011,"author":{"gitId":"-"},"content":""},{"lineNumber":1012,"author":{"gitId":"-"},"content":"                // Countdown timers have inconsistent starting points, espeically when duration of the timer is not a multiple of the denomination (10 sec)"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"                // So we need to take this into account by calculating the required space and resetting the lineMarkerGroup"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"                // This is unlike the default timer where the starting offset is always the same (1 lineSpacing from left)"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"                if (Countdown())"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"                    float requiredSpaceFromLeft \u003d timerBody.Width - lineSpacing - lineMarkerGroup.Width;"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"                    lineMarkerGroup.Left \u003d timerBody.Left + requiredSpaceFromLeft;"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1020,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"            timeMarkerGroup.Left \u003d timerBody.Left;"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"            timeMarkerGroup.Width \u003d timerBody.Width;"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1024,"author":{"gitId":"-"},"content":""},{"lineNumber":1025,"author":{"gitId":"-"},"content":"        private void UpdateMarkerPositionY()"},{"lineNumber":1026,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"            if (lineMarkerGroup !\u003d null)"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"                lineMarkerGroup.Top \u003d timerBody.Top;"},{"lineNumber":1030,"author":{"gitId":"-"},"content":"                lineMarkerGroup.Height \u003d timerBody.Height;"},{"lineNumber":1031,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1032,"author":{"gitId":"-"},"content":"            timeMarkerGroup.Top \u003d timerBody.Top + timerBody.Height;"},{"lineNumber":1033,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1034,"author":{"gitId":"-"},"content":""},{"lineNumber":1035,"author":{"gitId":"-"},"content":"        private void UpdateSliderPosition()"},{"lineNumber":1036,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"            UpdateSliderPositionX();"},{"lineNumber":1038,"author":{"gitId":"-"},"content":"            UpdateSliderPositionY();"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1040,"author":{"gitId":"-"},"content":""},{"lineNumber":1041,"author":{"gitId":"-"},"content":"        private void UpdateSliderPositionX()"},{"lineNumber":1042,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"            sliderHead.Left \u003d timerBody.Left - (TimerLabConstants.DefaultSliderHeadSize / 2);"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"            sliderBody.Left \u003d timerBody.Left - (TimerLabConstants.DefaultSliderBodyWidth / 2);"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"            UpdateSliderAnimationPath();"},{"lineNumber":1046,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1047,"author":{"gitId":"-"},"content":""},{"lineNumber":1048,"author":{"gitId":"-"},"content":"        private void UpdateSliderPositionY()"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"            sliderHead.Top \u003d timerBody.Top - (TimerLabConstants.DefaultSliderHeadSize / 2);"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"            sliderBody.Top \u003d timerBody.Top;"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"            sliderBody.Height \u003d timerBody.Height;"},{"lineNumber":1053,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1054,"author":{"gitId":"-"},"content":""},{"lineNumber":1055,"author":{"gitId":"-"},"content":"        private void UpdateProgressBarPosition()"},{"lineNumber":1056,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"            UpdateProgressBarPositionX();"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"            UpdateProgressBarPositionY();"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1060,"author":{"gitId":"-"},"content":""},{"lineNumber":1061,"author":{"gitId":"-"},"content":"        private void UpdateProgressBarPositionX()"},{"lineNumber":1062,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"            progressBar.Left \u003d timerBody.Left;"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1065,"author":{"gitId":"-"},"content":""},{"lineNumber":1066,"author":{"gitId":"-"},"content":"        private void UpdateProgressBarPositionY()"},{"lineNumber":1067,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1068,"author":{"gitId":"-"},"content":"            progressBar.Top \u003d timerBody.Top;"},{"lineNumber":1069,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1070,"author":{"gitId":"-"},"content":""},{"lineNumber":1071,"author":{"gitId":"-"},"content":"        private void UpdateSliderAnimationDuration()"},{"lineNumber":1072,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"            foreach (PowerPoint.Effect effect in this.GetCurrentSlide().TimeLine.MainSequence)"},{"lineNumber":1074,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1075,"author":{"gitId":"-"},"content":"                if (effect.EffectType \u003d\u003d PowerPoint.MsoAnimEffect.msoAnimEffectPathRight)"},{"lineNumber":1076,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1077,"author":{"gitId":"-"},"content":"                    if (effect.Shape.Tags[TimerLabConstants.ShapeId].Equals(TimerLabConstants.TimerSliderBodyId) ||"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"                        effect.Shape.Tags[TimerLabConstants.ShapeId].Equals(TimerLabConstants.TimerSliderHeadId))"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"                        effect.Timing.Duration \u003d Duration();"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1083,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1084,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1085,"author":{"gitId":"-"},"content":""},{"lineNumber":1086,"author":{"gitId":"-"},"content":"        private void UpdateProgressBarAnimationDuration()"},{"lineNumber":1087,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1088,"author":{"gitId":"-"},"content":"            foreach (PowerPoint.Effect effect in this.GetCurrentSlide().TimeLine.MainSequence)"},{"lineNumber":1089,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1090,"author":{"gitId":"-"},"content":"                if (effect.EffectType \u003d\u003d PowerPoint.MsoAnimEffect.msoAnimEffectGrowShrink)"},{"lineNumber":1091,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1092,"author":{"gitId":"-"},"content":"                    if (effect.Shape.Tags[TimerLabConstants.ShapeId].Equals(TimerLabConstants.ProgressBarId))"},{"lineNumber":1093,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1094,"author":{"gitId":"-"},"content":"                        effect.Timing.Duration \u003d Duration();"},{"lineNumber":1095,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1096,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1097,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1098,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1099,"author":{"gitId":"-"},"content":""},{"lineNumber":1100,"author":{"gitId":"-"},"content":"        private void UpdateSliderAnimationPath()"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1102,"author":{"gitId":"-"},"content":"            foreach (PowerPoint.Effect effect in this.GetCurrentSlide().TimeLine.MainSequence)"},{"lineNumber":1103,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1104,"author":{"gitId":"-"},"content":"                if (effect.EffectType \u003d\u003d PowerPoint.MsoAnimEffect.msoAnimEffectPathRight)"},{"lineNumber":1105,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1106,"author":{"gitId":"-"},"content":"                    if (effect.Shape.Tags[TimerLabConstants.ShapeId].Equals(TimerLabConstants.TimerSliderBodyId) ||"},{"lineNumber":1107,"author":{"gitId":"-"},"content":"                        effect.Shape.Tags[TimerLabConstants.ShapeId].Equals(TimerLabConstants.TimerSliderHeadId))"},{"lineNumber":1108,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"                        float end \u003d timerBody.Width / SlideWidth();"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"                        effect.Behaviors[1].MotionEffect.Path \u003d \"M 0 0 L \" + end + \" 0 E\";"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1114,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1115,"author":{"gitId":"-"},"content":""},{"lineNumber":1116,"author":{"gitId":"-"},"content":"        private void AdjustZOrder()"},{"lineNumber":1117,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1118,"author":{"gitId":"-"},"content":"            //Adjust z-order"},{"lineNumber":1119,"author":{"gitId":"-"},"content":""},{"lineNumber":1120,"author":{"gitId":"-"},"content":"            if (isProgressBar)"},{"lineNumber":1121,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1122,"author":{"gitId":"-"},"content":"                progressBar.ZOrder(Microsoft.Office.Core.MsoZOrderCmd.msoBringToFront);"},{"lineNumber":1123,"author":{"gitId":"-"},"content":"                timeMarkerGroup.ZOrder(Microsoft.Office.Core.MsoZOrderCmd.msoBringToFront);"},{"lineNumber":1124,"author":{"gitId":"-"},"content":"                if (lineMarkerGroup !\u003d null)"},{"lineNumber":1125,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1126,"author":{"gitId":"-"},"content":"                    lineMarkerGroup.ZOrder(Microsoft.Office.Core.MsoZOrderCmd.msoBringToFront);"},{"lineNumber":1127,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1128,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1129,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":1130,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1131,"author":{"gitId":"-"},"content":"                if (lineMarkerGroup !\u003d null)"},{"lineNumber":1132,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1133,"author":{"gitId":"-"},"content":"                    lineMarkerGroup.ZOrder(Microsoft.Office.Core.MsoZOrderCmd.msoBringToFront);"},{"lineNumber":1134,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1135,"author":{"gitId":"-"},"content":"                timeMarkerGroup.ZOrder(Microsoft.Office.Core.MsoZOrderCmd.msoBringToFront);"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"                sliderHead.ZOrder(Microsoft.Office.Core.MsoZOrderCmd.msoBringToFront);"},{"lineNumber":1137,"author":{"gitId":"-"},"content":"                sliderBody.ZOrder(Microsoft.Office.Core.MsoZOrderCmd.msoBringToFront);"},{"lineNumber":1138,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1139,"author":{"gitId":"-"},"content":""},{"lineNumber":1140,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1141,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":1142,"author":{"gitId":"-"},"content":""},{"lineNumber":1143,"author":{"gitId":"-"},"content":"        #region Shape Helper"},{"lineNumber":1144,"author":{"gitId":"-"},"content":"        private float NewPosition(float originalPosition, float objectSize)"},{"lineNumber":1145,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1146,"author":{"gitId":"-"},"content":"            return originalPosition - objectSize / 2;"},{"lineNumber":1147,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1148,"author":{"gitId":"-"},"content":""},{"lineNumber":1149,"author":{"gitId":"-"},"content":"        private Shape GetLineMarkerGroup()"},{"lineNumber":1150,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1151,"author":{"gitId":"-"},"content":"            Shape result \u003d GetShapeByName(TimerLabConstants.TimerLineMarkerGroupId);"},{"lineNumber":1152,"author":{"gitId":"-"},"content":"            if (result \u003d\u003d null)"},{"lineNumber":1153,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1154,"author":{"gitId":"-"},"content":"                result \u003d GetShapeByName(TimerLabConstants.TimerLineMarkerId);"},{"lineNumber":1155,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1156,"author":{"gitId":"-"},"content":"            return result;"},{"lineNumber":1157,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1158,"author":{"gitId":"-"},"content":""},{"lineNumber":1159,"author":{"gitId":"-"},"content":"        private Shape GetShapeByName(string name)"},{"lineNumber":1160,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1161,"author":{"gitId":"-"},"content":"            return GetShapeByName(name, this.GetCurrentSlide().Shapes);"},{"lineNumber":1162,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1163,"author":{"gitId":"-"},"content":""},{"lineNumber":1164,"author":{"gitId":"-"},"content":"        private Shape GetShapeByName(string name, dynamic shapes)"},{"lineNumber":1165,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1166,"author":{"gitId":"-"},"content":"            foreach (Shape shape in shapes)"},{"lineNumber":1167,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1168,"author":{"gitId":"-"},"content":"                if (shape.Tags[TimerLabConstants.ShapeId].Equals(name))"},{"lineNumber":1169,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1170,"author":{"gitId":"-"},"content":"                    return shape;"},{"lineNumber":1171,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1172,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1173,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":1174,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1175,"author":{"gitId":"-"},"content":""},{"lineNumber":1176,"author":{"gitId":"-"},"content":"        private Shape GroupShapes(string shapeName, string groupName)"},{"lineNumber":1177,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1178,"author":{"gitId":"-"},"content":"            bool firstInGroup \u003d true;"},{"lineNumber":1179,"author":{"gitId":"-"},"content":"            foreach (Shape shape in this.GetCurrentSlide().Shapes)"},{"lineNumber":1180,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1181,"author":{"gitId":"-"},"content":"                if (shape.Tags[TimerLabConstants.ShapeId].Equals(shapeName))"},{"lineNumber":1182,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":1183,"author":{"gitId":"-"},"content":"                    if (firstInGroup)"},{"lineNumber":1184,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1185,"author":{"gitId":"-"},"content":"                        shape.Select();"},{"lineNumber":1186,"author":{"gitId":"-"},"content":"                        firstInGroup \u003d false;"},{"lineNumber":1187,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1188,"author":{"gitId":"-"},"content":"                    else"},{"lineNumber":1189,"author":{"gitId":"-"},"content":"                    {"},{"lineNumber":1190,"author":{"gitId":"-"},"content":"                        shape.Select(Microsoft.Office.Core.MsoTriState.msoFalse);"},{"lineNumber":1191,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":1192,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1193,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1194,"author":{"gitId":"-"},"content":"            Shape group \u003d this.GetCurrentSelection().ShapeRange.Group();"},{"lineNumber":1195,"author":{"gitId":"-"},"content":"            group.Name \u003d groupName;"},{"lineNumber":1196,"author":{"gitId":"-"},"content":"            group.Tags.Add(TimerLabConstants.ShapeId, groupName);"},{"lineNumber":1197,"author":{"gitId":"-"},"content":"            return group;"},{"lineNumber":1198,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1199,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":1200,"author":{"gitId":"-"},"content":""},{"lineNumber":1201,"author":{"gitId":"-"},"content":"        #region Validation Helper"},{"lineNumber":1202,"author":{"gitId":"-"},"content":"        private bool FindTimer()"},{"lineNumber":1203,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1204,"author":{"gitId":"-"},"content":"            timerBody \u003d GetShapeByName(TimerLabConstants.TimerBodyId);"},{"lineNumber":1205,"author":{"gitId":"-"},"content":"            lineMarkerGroup \u003d GetLineMarkerGroup();"},{"lineNumber":1206,"author":{"gitId":"-"},"content":"            timeMarkerGroup \u003d GetShapeByName(TimerLabConstants.TimerTimeMarkerGroupId);"},{"lineNumber":1207,"author":{"gitId":"-"},"content":"            sliderHead \u003d GetShapeByName(TimerLabConstants.TimerSliderHeadId);"},{"lineNumber":1208,"author":{"gitId":"-"},"content":"            sliderBody \u003d GetShapeByName(TimerLabConstants.TimerSliderBodyId);"},{"lineNumber":1209,"author":{"gitId":"-"},"content":"            progressBar \u003d GetShapeByName(TimerLabConstants.ProgressBarId);"},{"lineNumber":1210,"author":{"gitId":"-"},"content":""},{"lineNumber":1211,"author":{"gitId":"-"},"content":"            if ((timerBody \u003d\u003d null) \u0026\u0026 (progressBar \u003d\u003d null) \u0026\u0026 (lineMarkerGroup \u003d\u003d null) \u0026\u0026 "},{"lineNumber":1212,"author":{"gitId":"-"},"content":"                (timeMarkerGroup \u003d\u003d null) \u0026\u0026 (sliderHead \u003d\u003d null) \u0026\u0026 (sliderBody \u003d\u003d null))"},{"lineNumber":1213,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":1214,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":1215,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1216,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":1217,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1218,"author":{"gitId":"-"},"content":""},{"lineNumber":1219,"author":{"gitId":"-"},"content":"        private bool IsNumbersOnly(string text)"},{"lineNumber":1220,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1221,"author":{"gitId":"-"},"content":"            Regex regex \u003d new Regex(\"[0-9]+\");"},{"lineNumber":1222,"author":{"gitId":"-"},"content":"            return regex.IsMatch(text);"},{"lineNumber":1223,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1224,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":1225,"author":{"gitId":"-"},"content":""},{"lineNumber":1226,"author":{"gitId":"-"},"content":"        #region Slide Dimensions"},{"lineNumber":1227,"author":{"gitId":"-"},"content":"        private float SlideWidth()"},{"lineNumber":1228,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1229,"author":{"gitId":"-"},"content":"            return this.GetCurrentPresentation().SlideWidth;"},{"lineNumber":1230,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1231,"author":{"gitId":"-"},"content":""},{"lineNumber":1232,"author":{"gitId":"-"},"content":"        private float SlideHeight()"},{"lineNumber":1233,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1234,"author":{"gitId":"-"},"content":"            return this.GetCurrentPresentation().SlideHeight;"},{"lineNumber":1235,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1236,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":1237,"author":{"gitId":"-"},"content":""},{"lineNumber":1238,"author":{"gitId":"-"},"content":"        #region Error Handling"},{"lineNumber":1239,"author":{"gitId":"-"},"content":"        private void ShowErrorMessageBox(string content)"},{"lineNumber":1240,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":1241,"author":{"gitId":"-"},"content":"            MessageBox.Show(content, TextCollection.CommonText.ErrorTitle);"},{"lineNumber":1242,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1243,"author":{"gitId":"-"},"content":""},{"lineNumber":1244,"author":{"gitId":"-"},"content":"        #endregion"},{"lineNumber":1245,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1246,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":1216,"xantho09":30}},{"path":"PowerPointLabs/PowerPointLabs/ZoomLab/AutoZoom.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using System;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"using System.Collections.Generic;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"using System.Linq;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Extension;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"using PowerPointLabs.ActionFramework.Common.Log;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"using PowerPointLabs.Models;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"using PowerPointLabs.Utils;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"using PowerPointLabs.Views;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"using Office \u003d Microsoft.Office.Core;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"using PowerPoint \u003d Microsoft.Office.Interop.PowerPoint;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"namespace PowerPointLabs.ZoomLab"},{"lineNumber":14,"author":{"gitId":"-"},"content":"{"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    internal static class AutoZoom"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#pragma warning disable 0618"},{"lineNumber":18,"author":{"gitId":"iskandarzulkarnaien"},"content":"        public static void AddDrillDownAnimation(PowerPointPresentation pres, PowerPointSlide slide)"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            if (!IsSelectingShapes())"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"iskandarzulkarnaien"},"content":"            ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"},{"lineNumber":26,"author":{"gitId":"iskandarzulkarnaien"},"content":"            {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                AddDrillDownAnimation(Globals.ThisAddIn.Application.ActiveWindow.Selection.ShapeRange[1],"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                PowerPointCurrentPresentationInfo.CurrentSlide);"},{"lineNumber":29,"author":{"gitId":"iskandarzulkarnaien"},"content":"                return ClipboardUtil.ClipboardRestoreSuccess;"},{"lineNumber":30,"author":{"gitId":"iskandarzulkarnaien"},"content":"            }, pres, slide);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"        public static void AddDrillDownAnimation(PowerPoint.Shape selectedShape, PowerPointSlide currentSlide)"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            PowerPointDrillDownSlide addedSlide;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            AddDrillDownAnimation(selectedShape, currentSlide, out addedSlide);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        public static void AddDrillDownAnimation(PowerPoint.Shape selectedShape, PowerPointSlide currentSlide,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            out PowerPointDrillDownSlide addedSlide, bool includeAckSlide \u003d true, bool deletePreviouslyAdded \u003d true)"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":44,"author":{"gitId":"iskandarzulkarnaien"},"content":"                //SlideCount - 1 due to #RestoreClipboardAfterAction creating a temporary slide to store clipboard"},{"lineNumber":45,"author":{"gitId":"iskandarzulkarnaien"},"content":"                if (currentSlide \u003d\u003d null || currentSlide.Index \u003d\u003d PowerPointPresentation.Current.SlideCount - 1)"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                    System.Windows.Forms.MessageBox.Show(TextCollection.ZoomLabText.ErrorInvalidNextSlide, TextCollection.ZoomLabText.ErrorUnableToAddAnimationsCaption);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    addedSlide \u003d null;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    return;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"                //Pick up the border and shadow style, to be applied to zoomed shape"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                selectedShape.PickUp();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                PrepareZoomShape(currentSlide, ref selectedShape);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                PowerPointSlide nextSlide \u003d GetNextSlide(currentSlide, deletePreviouslyAdded);"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"                PowerPoint.Shape nextSlidePicture \u003d null, shapeToZoom \u003d null;"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"                currentSlide.HideIndicator();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                if (ZoomLabSettings.BackgroundZoomChecked)"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                    nextSlidePicture \u003d GetNextSlidePictureWithBackground(currentSlide, nextSlide);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    nextSlidePicture.Apply();"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    PrepareNextSlidePicture(currentSlide, selectedShape, ref nextSlidePicture);"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"                    addedSlide \u003d (PowerPointDrillDownSlide)currentSlide.CreateDrillDownSlide();"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                    addedSlide.DeleteAllShapes();"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"                    shapeToZoom \u003d addedSlide.Shapes.SafeCopyPlaceholder(nextSlidePicture);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                    addedSlide.DeleteShapeAnimations(shapeToZoom);"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"                    PowerPoint.Shape backgroundShape \u003d GraphicsUtil.AddSlideAsShape(currentSlide, addedSlide);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                    backgroundShape.Apply();"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                    ShapeUtil.FitShapeToSlide(ref backgroundShape);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                    backgroundShape.ZOrder(Office.MsoZOrderCmd.msoSendBackward);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                    backgroundShape.Name \u003d \"PPTZoomInShape\" + DateTime.Now.ToString(\"yyyyMMddHHmmssffff\");"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"                    addedSlide.PrepareForDrillDown();"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                    addedSlide.AddDrillDownAnimationBackground(backgroundShape, shapeToZoom, nextSlidePicture);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                    PowerPoint.Shape pictureOnNextSlide \u003d null;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                    nextSlidePicture \u003d GetNextSlidePictureWithoutBackground(currentSlide, nextSlide, out pictureOnNextSlide);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                    nextSlidePicture.Apply();"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                    PrepareNextSlidePicture(currentSlide, selectedShape, ref nextSlidePicture);"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"                    addedSlide \u003d (PowerPointDrillDownSlide)currentSlide.CreateDrillDownSlide();"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    addedSlide.DeleteAllShapes();"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"                    shapeToZoom \u003d addedSlide.Shapes.SafeCopyPlaceholder(nextSlidePicture);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                    addedSlide.DeleteShapeAnimations(shapeToZoom);"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"                    PowerPoint.Shape backgroundShape \u003d GraphicsUtil.AddSlideAsShape(currentSlide, addedSlide);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                    backgroundShape.Apply();"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    ShapeUtil.FitShapeToSlide(ref backgroundShape);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    backgroundShape.ZOrder(Office.MsoZOrderCmd.msoSendBackward);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                    backgroundShape.Name \u003d \"PPTZoomInShape\" + DateTime.Now.ToString(\"yyyyMMddHHmmssffff\");"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    addedSlide.PrepareForDrillDown();"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                    addedSlide.AddDrillDownAnimationNoBackground(backgroundShape, shapeToZoom, pictureOnNextSlide);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                    pictureOnNextSlide.SafeDelete();"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                currentSlide.ShowIndicator();"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"                Globals.ThisAddIn.Application.ActiveWindow.View.GotoSlide(addedSlide.Index);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Globals.ThisAddIn.Application.CommandBars.ExecuteMso(\"AnimationPreview\");"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                if (includeAckSlide)"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                    PowerPointPresentation.Current.AddAckSlide();"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            catch (Exception e)"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                Logger.LogException(e, \"AddDrillDownAnimation\");"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                ErrorDialogBox.ShowDialog(\"Error when adding drill down animation\", \"An error occurred when adding drill down animation.\", e);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                throw;"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"iskandarzulkarnaien"},"content":"        public static void AddStepBackAnimation(PowerPointPresentation pres, PowerPointSlide slide)"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            if (!IsSelectingShapes())"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"iskandarzulkarnaien"},"content":"            ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"},{"lineNumber":129,"author":{"gitId":"iskandarzulkarnaien"},"content":"            {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                AddStepBackAnimation(Globals.ThisAddIn.Application.ActiveWindow.Selection.ShapeRange[1],"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    PowerPointCurrentPresentationInfo.CurrentSlide);"},{"lineNumber":132,"author":{"gitId":"iskandarzulkarnaien"},"content":"                return ClipboardUtil.ClipboardRestoreSuccess;"},{"lineNumber":133,"author":{"gitId":"iskandarzulkarnaien"},"content":"            }, pres, slide);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public static void AddStepBackAnimation(PowerPoint.Shape selectedShape, PowerPointSlide currentSlide)"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            PowerPointStepBackSlide addedSlide;"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            AddStepBackAnimation(selectedShape, currentSlide, out addedSlide);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public static void AddStepBackAnimation(PowerPoint.Shape selectedShape, PowerPointSlide currentSlide,"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            out PowerPointStepBackSlide addedSlide, bool includeAckSlide \u003d true, bool deletePreviouslyAdded \u003d true)"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            try"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                if (currentSlide \u003d\u003d null || currentSlide.Index \u003d\u003d 1)"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                    System.Windows.Forms.MessageBox.Show(TextCollection.ZoomLabText.ErrorInvalidPreviousSlide, TextCollection.ZoomLabText.ErrorUnableToAddAnimationsCaption);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                    addedSlide \u003d null;"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    return;"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"                //Pick up the border and shadow style, to be applied to zoomed shape"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                selectedShape.PickUp();"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                PrepareZoomShape(currentSlide, ref selectedShape);"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                PowerPointSlide previousSlide \u003d GetPreviousSlide(currentSlide, deletePreviouslyAdded);"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"                PowerPoint.Shape previousSlidePicture \u003d null, shapeToZoom \u003d null;"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"                currentSlide.HideIndicator();"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                if (ZoomLabSettings.BackgroundZoomChecked)"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                    previousSlidePicture \u003d GetPreviousSlidePictureWithBackground(currentSlide, previousSlide);"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                    previousSlidePicture.Apply();"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                    PreparePreviousSlidePicture(selectedShape, ref previousSlidePicture);"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"                    addedSlide \u003d (PowerPointStepBackSlide)previousSlide.CreateStepBackSlide();"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                    addedSlide.DeleteAllShapes();"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"                    PowerPoint.Shape backgroundShape \u003d null;"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                    shapeToZoom \u003d GetStepBackWithBackgroundShapeToZoom(currentSlide, addedSlide, previousSlidePicture, out backgroundShape);"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                    shapeToZoom.Apply();"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"                    addedSlide.PrepareForStepBack();"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                    addedSlide.AddStepBackAnimationBackground(shapeToZoom, backgroundShape, previousSlidePicture);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                else"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                    addedSlide \u003d (PowerPointStepBackSlide)previousSlide.CreateStepBackSlide();"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                    addedSlide.DeleteAllShapes();"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"                    shapeToZoom \u003d GetStepBackWithoutBackgroundShapeToZoom(addedSlide, previousSlide);"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                    shapeToZoom.Apply();"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                    previousSlidePicture \u003d currentSlide.Shapes.SafeCopyPNG(shapeToZoom);"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                    previousSlidePicture.Apply();"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                    PreparePreviousSlidePicture(selectedShape, ref previousSlidePicture);"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"                    addedSlide.PrepareForStepBack();"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                    addedSlide.AddStepBackAnimationNonBackground(shapeToZoom, previousSlidePicture);"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                currentSlide.ShowIndicator();"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"                currentSlide.Transition.EntryEffect \u003d PowerPoint.PpEntryEffect.ppEffectFadeSmoothly;"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                currentSlide.Transition.Duration \u003d 0.25f;"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                Globals.ThisAddIn.Application.ActiveWindow.View.GotoSlide(addedSlide.Index);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                Globals.ThisAddIn.Application.CommandBars.ExecuteMso(\"AnimationPreview\");"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                if (includeAckSlide)"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                    PowerPointPresentation.Current.AddAckSlide();"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            catch (Exception e)"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                Logger.LogException(e, \"AddStepBackAnimation\");"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                ErrorDialogBox.ShowDialog(\"Error when adding step back animation\", \"An error occurred when adding step back animation.\", e);"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                throw;"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"        private static void RemoveTextFromShape(PowerPoint.Shape shape)"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            if (shape.HasTextFrame \u003d\u003d Office.MsoTriState.msoTrue \u0026\u0026 shape.TextFrame.HasText \u003d\u003d Office.MsoTriState.msoTrue)"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                shape.TextFrame.TextRange.Text \u003d \"\";"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"        private static void PrepareZoomShape(PowerPointSlide currentSlide, ref PowerPoint.Shape selectedShape)"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            currentSlide.DeleteShapeAnimations(selectedShape);"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            RemoveTextFromShape(selectedShape);"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            selectedShape.Rotation \u003d 0;"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"        //Delete previously added drill down slides"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        private static PowerPointSlide GetNextSlide(PowerPointSlide currentSlide, bool deletePreviouslyAdded \u003d true)"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            PowerPointSlide nextSlide \u003d PowerPointPresentation.Current.Slides[currentSlide.Index];"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            PowerPointSlide tempSlide \u003d nextSlide;"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            while (nextSlide.Name.Contains(\"PPTLabsZoomIn\") \u0026\u0026 nextSlide.Index \u003c PowerPointPresentation.Current.SlideCount)"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                nextSlide \u003d PowerPointPresentation.Current.Slides[tempSlide.Index];"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                if (deletePreviouslyAdded)"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    tempSlide.Delete();"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"                tempSlide \u003d nextSlide;"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            nextSlide.Transition.EntryEffect \u003d PowerPoint.PpEntryEffect.ppEffectFadeSmoothly;"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            nextSlide.Transition.Duration \u003d 0.25f;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return nextSlide;"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"        //Delete previously added step back slides"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        private static PowerPointSlide GetPreviousSlide(PowerPointSlide currentSlide, bool deletePreviouslyAdded \u003d true)"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            PowerPointSlide previousSlide \u003d PowerPointPresentation.Current.Slides[currentSlide.Index - 2];"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            PowerPointSlide tempSlide \u003d previousSlide;"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            while (previousSlide.Name.Contains(\"PPTLabsZoomOut\") \u0026\u0026 previousSlide.Index \u003e 1)"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                previousSlide \u003d PowerPointPresentation.Current.Slides[tempSlide.Index - 2];"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                if (deletePreviouslyAdded)"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                    tempSlide.Delete();"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"                tempSlide \u003d previousSlide;"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"            return previousSlide;"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"        //Return picture copy of next slide where shapes with exit animations have been deleted"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        private static PowerPoint.Shape GetNextSlidePictureWithoutBackground(PowerPointSlide currentSlide, PowerPointSlide nextSlide, out PowerPoint.Shape pictureOnNextSlide)"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            Globals.ThisAddIn.Application.ActiveWindow.Selection.Unselect();"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            Globals.ThisAddIn.Application.ActiveWindow.View.GotoSlide(nextSlide.Index);"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"            List\u003cPowerPoint.Shape\u003e copiedShapes \u003d new List\u003cPowerPoint.Shape\u003e();"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            foreach (PowerPoint.Shape sh in nextSlide.Shapes)"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                if (!nextSlide.HasEntryAnimation(sh) \u0026\u0026 !sh.IsHidden())"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                    PowerPoint.Shape shapeCopy \u003d currentSlide.Shapes.SafeCopyPlaceholder(sh);"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                    LegacyShapeUtil.CopyShapeAttributes(sh, ref shapeCopy);"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                    copiedShapes.Add(shapeCopy);"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":281,"author":{"gitId":"-"},"content":""},{"lineNumber":282,"author":{"gitId":"-"},"content":"            Globals.ThisAddIn.Application.ActiveWindow.View.GotoSlide(currentSlide.Index);"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            SelectAllShape(copiedShapes);"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            PowerPoint.Selection sel \u003d Globals.ThisAddIn.Application.ActiveWindow.Selection;"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            PowerPoint.Shape shapeGroup \u003d sel.ShapeRange.SafeGroup();"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":"            pictureOnNextSlide \u003d nextSlide.Shapes.SafeCopyPNG(shapeGroup);"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            LegacyShapeUtil.CopyCenterShapePosition(shapeGroup, ref pictureOnNextSlide);"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            shapeGroup.SafeDelete();"},{"lineNumber":290,"author":{"gitId":"-"},"content":""},{"lineNumber":291,"author":{"gitId":"-"},"content":"            PowerPoint.Shape slidePicture \u003d currentSlide.Shapes.SafeCopyPNG(pictureOnNextSlide);"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            return slidePicture;"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"-"},"content":"        //Return picture copy of next slide where shapes with exit animations have been deleted"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        private static PowerPoint.Shape GetNextSlidePictureWithBackground(PowerPointSlide currentSlide, PowerPointSlide nextSlide)"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            PowerPointSlide nextSlideCopy \u003d nextSlide.Duplicate();"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            List\u003cPowerPoint.Shape\u003e shapes \u003d nextSlideCopy.Shapes.Cast\u003cPowerPoint.Shape\u003e().ToList();"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            IEnumerable\u003cPowerPoint.Shape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e nextSlideCopy.HasEntryAnimation(current));"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            foreach (PowerPoint.Shape s in matchingShapes)"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                s.SafeDelete();"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":305,"author":{"gitId":"-"},"content":"            PowerPoint.Shape slidePicture \u003d GraphicsUtil.AddSlideAsShape(nextSlideCopy, currentSlide);"},{"lineNumber":306,"author":{"gitId":"-"},"content":"            nextSlideCopy.Delete();"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            return slidePicture;"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"        //Return picture copy of previous slide where shapes with exit animations have been deleted"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        private static PowerPoint.Shape GetPreviousSlidePictureWithBackground(PowerPointSlide currentSlide, PowerPointSlide previousSlide)"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            PowerPointSlide previousSlideCopy \u003d previousSlide.Duplicate();"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            List\u003cPowerPoint.Shape\u003e shapes \u003d previousSlideCopy.Shapes.Cast\u003cPowerPoint.Shape\u003e().ToList();"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            IEnumerable\u003cPowerPoint.Shape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e previousSlideCopy.HasExitAnimation(current));"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            foreach (PowerPoint.Shape s in matchingShapes)"},{"lineNumber":317,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                s.SafeDelete();"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":320,"author":{"gitId":"-"},"content":"            PowerPoint.Shape slidePicture \u003d GraphicsUtil.AddSlideAsShape(previousSlideCopy, currentSlide);"},{"lineNumber":321,"author":{"gitId":"-"},"content":"            previousSlideCopy.Delete();"},{"lineNumber":322,"author":{"gitId":"-"},"content":"            return slidePicture;"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":324,"author":{"gitId":"-"},"content":""},{"lineNumber":325,"author":{"gitId":"-"},"content":"        //Set position, size and animations of the next slide copy"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        private static void PrepareNextSlidePicture(PowerPointSlide currentSlide, PowerPoint.Shape selectedShape, ref PowerPoint.Shape nextSlidePicture)"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":328,"author":{"gitId":"-"},"content":"            nextSlidePicture.LockAspectRatio \u003d Office.MsoTriState.msoTrue;"},{"lineNumber":329,"author":{"gitId":"-"},"content":"            if (selectedShape.Width \u003e selectedShape.Height)"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":331,"author":{"gitId":"-"},"content":"                nextSlidePicture.Height \u003d selectedShape.Height;"},{"lineNumber":332,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":333,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":334,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":335,"author":{"gitId":"-"},"content":"                nextSlidePicture.Width \u003d selectedShape.Width;"},{"lineNumber":336,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":337,"author":{"gitId":"-"},"content":""},{"lineNumber":338,"author":{"gitId":"-"},"content":"            LegacyShapeUtil.CopyCenterShapePosition(selectedShape, ref nextSlidePicture);"},{"lineNumber":339,"author":{"gitId":"-"},"content":""},{"lineNumber":340,"author":{"gitId":"-"},"content":"            selectedShape.Visible \u003d Office.MsoTriState.msoFalse;"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            nextSlidePicture.Name \u003d \"PPTZoomInShape\" + DateTime.Now.ToString(\"yyyyMMddHHmmssffff\");"},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"            PowerPoint.Effect effectAppear \u003d currentSlide.TimeLine.MainSequence.AddEffect(nextSlidePicture, PowerPoint.MsoAnimEffect.msoAnimEffectFade, PowerPoint.MsoAnimateByLevel.msoAnimateLevelNone, PowerPoint.MsoAnimTriggerType.msoAnimTriggerOnPageClick);"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            effectAppear.Timing.Duration \u003d 0.50f;"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":346,"author":{"gitId":"-"},"content":""},{"lineNumber":347,"author":{"gitId":"-"},"content":"        //Set position, size and animations of the previous slide copy"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        private static void PreparePreviousSlidePicture(PowerPoint.Shape selectedShape, ref PowerPoint.Shape previousSlidePicture)"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            previousSlidePicture.LockAspectRatio \u003d Office.MsoTriState.msoTrue;"},{"lineNumber":351,"author":{"gitId":"-"},"content":"            if (selectedShape.Width \u003e selectedShape.Height)"},{"lineNumber":352,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":353,"author":{"gitId":"-"},"content":"                previousSlidePicture.Height \u003d selectedShape.Height;"},{"lineNumber":354,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":355,"author":{"gitId":"-"},"content":"            else"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":357,"author":{"gitId":"-"},"content":"                previousSlidePicture.Width \u003d selectedShape.Width;"},{"lineNumber":358,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"            LegacyShapeUtil.CopyCenterShapePosition(selectedShape, ref previousSlidePicture);"},{"lineNumber":361,"author":{"gitId":"-"},"content":""},{"lineNumber":362,"author":{"gitId":"-"},"content":"            selectedShape.Visible \u003d Office.MsoTriState.msoFalse;"},{"lineNumber":363,"author":{"gitId":"-"},"content":"            previousSlidePicture.Name \u003d \"PPTZoomOutShape\" + DateTime.Now.ToString(\"yyyyMMddHHmmssffff\");"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"        private static bool IsSelectingShapes()"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":368,"author":{"gitId":"-"},"content":"            PowerPoint.Selection selection \u003d Globals.ThisAddIn.Application.ActiveWindow.Selection;"},{"lineNumber":369,"author":{"gitId":"-"},"content":"            return selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes \u0026\u0026 selection.ShapeRange.Count \u003e 0;"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":371,"author":{"gitId":"-"},"content":""},{"lineNumber":372,"author":{"gitId":"-"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"        private static PowerPoint.Shape GetStepBackWithBackgroundShapeToZoom(PowerPointSlide currentSlide, PowerPointSlide addedSlide, PowerPoint.Shape previousSlidePicture, out PowerPoint.Shape backgroundShape)"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":375,"author":{"gitId":"-"},"content":"            PowerPoint.Shape currentSlideCopy \u003d AddSlideAsShapeWithoutEntryAnimations(currentSlide, addedSlide);"},{"lineNumber":376,"author":{"gitId":"-"},"content":""},{"lineNumber":377,"author":{"gitId":"-"},"content":"            ShapeUtil.FitShapeToSlide(ref currentSlideCopy);"},{"lineNumber":378,"author":{"gitId":"-"},"content":"            currentSlideCopy.Name \u003d \"PPTZoomOutShape\" + DateTime.Now.ToString(\"yyyyMMddHHmmssffff\");"},{"lineNumber":379,"author":{"gitId":"-"},"content":""},{"lineNumber":380,"author":{"gitId":"-"},"content":"            PowerPoint.Shape previousSlidePictureCopy \u003d addedSlide.Shapes.SafeCopyPlaceholder(previousSlidePicture);"},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"-"},"content":"            Globals.ThisAddIn.Application.ActiveWindow.View.GotoSlide(addedSlide.Index);"},{"lineNumber":383,"author":{"gitId":"-"},"content":""},{"lineNumber":384,"author":{"gitId":"-"},"content":"            // Scale everything up by this ratio."},{"lineNumber":385,"author":{"gitId":"-"},"content":"            float ratio \u003d PowerPointPresentation.Current.SlideWidth / previousSlidePictureCopy.Width;"},{"lineNumber":386,"author":{"gitId":"-"},"content":""},{"lineNumber":387,"author":{"gitId":"-"},"content":"            currentSlideCopy.Width *\u003d ratio;"},{"lineNumber":388,"author":{"gitId":"-"},"content":"            currentSlideCopy.Height *\u003d ratio;"},{"lineNumber":389,"author":{"gitId":"-"},"content":"            currentSlideCopy.Left \u003d -ratio * previousSlidePictureCopy.Left;"},{"lineNumber":390,"author":{"gitId":"-"},"content":"            currentSlideCopy.Top \u003d -ratio * previousSlidePictureCopy.Top;"},{"lineNumber":391,"author":{"gitId":"-"},"content":""},{"lineNumber":392,"author":{"gitId":"-"},"content":"            // for some reason height is locked to width, so we only need to change width here."},{"lineNumber":393,"author":{"gitId":"-"},"content":"            previousSlidePictureCopy.Width *\u003d ratio;"},{"lineNumber":394,"author":{"gitId":"-"},"content":"            previousSlidePictureCopy.Left \u003d 0;"},{"lineNumber":395,"author":{"gitId":"-"},"content":"            previousSlidePictureCopy.Top \u003d 0;"},{"lineNumber":396,"author":{"gitId":"-"},"content":""},{"lineNumber":397,"author":{"gitId":"-"},"content":"            backgroundShape \u003d currentSlideCopy;"},{"lineNumber":398,"author":{"gitId":"-"},"content":"            return previousSlidePictureCopy;"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":400,"author":{"gitId":"-"},"content":""},{"lineNumber":401,"author":{"gitId":"-"},"content":"        private static PowerPoint.Shape GetStepBackWithoutBackgroundShapeToZoom(PowerPointSlide addedSlide, PowerPointSlide previousSlide)"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":403,"author":{"gitId":"-"},"content":"            Globals.ThisAddIn.Application.ActiveWindow.Selection.Unselect();"},{"lineNumber":404,"author":{"gitId":"-"},"content":"            Globals.ThisAddIn.Application.ActiveWindow.View.GotoSlide(addedSlide.Index);"},{"lineNumber":405,"author":{"gitId":"-"},"content":""},{"lineNumber":406,"author":{"gitId":"-"},"content":"            List\u003cPowerPoint.Shape\u003e copiedShapes \u003d new List\u003cPowerPoint.Shape\u003e();"},{"lineNumber":407,"author":{"gitId":"-"},"content":"            foreach (PowerPoint.Shape sh in previousSlide.Shapes)"},{"lineNumber":408,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":409,"author":{"gitId":"-"},"content":"                if (!previousSlide.HasExitAnimation(sh) \u0026\u0026 !sh.IsHidden())"},{"lineNumber":410,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":411,"author":{"gitId":"-"},"content":"                    PowerPoint.Shape shapeCopy \u003d addedSlide.Shapes.SafeCopyPlaceholder(sh);"},{"lineNumber":412,"author":{"gitId":"-"},"content":"                    LegacyShapeUtil.CopyShapeAttributes(sh, ref shapeCopy);"},{"lineNumber":413,"author":{"gitId":"-"},"content":"                    copiedShapes.Add(shapeCopy);"},{"lineNumber":414,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":415,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":416,"author":{"gitId":"-"},"content":""},{"lineNumber":417,"author":{"gitId":"-"},"content":"            Globals.ThisAddIn.Application.ActiveWindow.View.GotoSlide(addedSlide.Index);"},{"lineNumber":418,"author":{"gitId":"-"},"content":"            SelectAllShape(copiedShapes);"},{"lineNumber":419,"author":{"gitId":"-"},"content":"            PowerPoint.Selection sel \u003d Globals.ThisAddIn.Application.ActiveWindow.Selection;"},{"lineNumber":420,"author":{"gitId":"-"},"content":"            PowerPoint.Shape shapeGroup \u003d sel.ShapeRange.SafeGroup();"},{"lineNumber":421,"author":{"gitId":"-"},"content":""},{"lineNumber":422,"author":{"gitId":"-"},"content":"            PowerPoint.Shape previousSlidePicture \u003d addedSlide.Shapes.SafeCopyPNG(shapeGroup);"},{"lineNumber":423,"author":{"gitId":"-"},"content":"            LegacyShapeUtil.CopyCenterShapePosition(shapeGroup, ref previousSlidePicture);"},{"lineNumber":424,"author":{"gitId":"-"},"content":"            previousSlidePicture.Name \u003d \"PPTZoomOutShape\" + DateTime.Now.ToString(\"yyyyMMddHHmmssffff\");"},{"lineNumber":425,"author":{"gitId":"-"},"content":"            shapeGroup.SafeDelete();"},{"lineNumber":426,"author":{"gitId":"-"},"content":""},{"lineNumber":427,"author":{"gitId":"-"},"content":"            return previousSlidePicture;"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":429,"author":{"gitId":"-"},"content":""},{"lineNumber":430,"author":{"gitId":"-"},"content":"        private static void SelectAllShape(List\u003cPowerPoint.Shape\u003e shapes)"},{"lineNumber":431,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":432,"author":{"gitId":"-"},"content":"            foreach (PowerPoint.Shape shapeCopy in shapes)"},{"lineNumber":433,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":434,"author":{"gitId":"-"},"content":"                shapeCopy.Select(Office.MsoTriState.msoFalse);"},{"lineNumber":435,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":436,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":437,"author":{"gitId":"-"},"content":""},{"lineNumber":438,"author":{"gitId":"-"},"content":"        private static PowerPoint.Shape AddSlideAsShapeWithoutEntryAnimations(PowerPointSlide slideToAdd, PowerPointSlide targetSlide)"},{"lineNumber":439,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":440,"author":{"gitId":"-"},"content":"            PowerPointSlide slideWithoutEntryAnimations \u003d slideToAdd.Duplicate();"},{"lineNumber":441,"author":{"gitId":"-"},"content":"            slideWithoutEntryAnimations.DeleteEntryAnimationShapes();"},{"lineNumber":442,"author":{"gitId":"-"},"content":"            PowerPoint.Shape result \u003d GraphicsUtil.AddSlideAsShape(slideWithoutEntryAnimations, targetSlide);"},{"lineNumber":443,"author":{"gitId":"-"},"content":"            slideWithoutEntryAnimations.Delete();"},{"lineNumber":444,"author":{"gitId":"-"},"content":"            return result;"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":446,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":447,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"iskandarzulkarnaien":12,"-":435}},{"path":"PowerPointLabs/Test/FunctionalTest/PasteLabTest.cs","fileType":"cs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"﻿using System.Collections.Generic;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"using System.Drawing;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"using Microsoft.VisualStudio.TestTools.UnitTesting;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"using Test.Util;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"namespace Test.FunctionalTest"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    [TestClass]"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public class PasteLabTest : BaseFunctionalTest"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        private const string ShapeToCopyPrefix \u003d \"selectMe\";"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        private const string ShapeToClick \u003d \"Rectangle 1\";"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        private const string ShapeToReplace \u003d \"Rectangle 5\";"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        private const string GroupToPaste \u003d \"Group 1\";"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        private const string ShapeToCopyToClipboard \u003d \"pictocopy\";"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        private const string ShapeToCompareCopied \u003d \"copied\";"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"        //Slide Numbers"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        private const int OriginalPasteToFillSlideSlideNo \u003d 4;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        private const int ExpectedPasteToFillSlideSlideNo \u003d 5;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        private const int OriginalDiagonalPasteToFillSlideSlideNo \u003d 6;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        private const int ExpectedDiagonalPasteToFillSlideSlideNo \u003d 7;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        private const int OriginalMultiplePasteToFillSlideSlideNo \u003d 8;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        private const int ExpectedMultiplePasteToFillSlideSlideNo \u003d 9;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        private const int OriginalGroupPasteToFillSlideSlideNo \u003d 10;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        private const int ExpectedGroupPasteToFillSlideSlideNo \u003d 11;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"        private const int OriginalPasteAtCursorSlideNo \u003d 13;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        private const int ExpectedPasteAtCursorSlideNo \u003d 14;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        private const int OriginalPasteAtOriginalSlideNo \u003d 15;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        private const int ExpectedPasteAtOriginalSlideNo \u003d 16;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        private const int OriginalReplaceWithClipboardSlideNo \u003d 18;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        private const int ExpectedReplaceWithClipboardSlideNo \u003d 19;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        private const int OriginalGroupReplaceWithClipboardSlideNo \u003d 20;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        private const int ExpectedGroupReplaceWithClipboardSlideNo \u003d 21;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        private const int OriginalPasteIntoGroupSlideNo \u003d 23;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        private const int ExpectedPasteIntoGroupSlideNo \u003d 24;"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"        private const int OriginalPasteToFitSlideSlideNo \u003d 26;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        private const int ExpectedPasteToFitSlideSlideNo \u003d 27;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        private const int OriginalDiagonalPasteToFitSlideSlideNo \u003d 28;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        private const int ExpectedDiagonalPasteToFitSlideSlideNo \u003d 29;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        private const int OriginalMultiplePasteToFitSlideSlideNo \u003d 30;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        private const int ExpectedMultiplePasteToFitSlideSlideNo \u003d 31;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        private const int OriginalGroupPasteToFitSlideSlideNo \u003d 32;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        private const int ExpectedGroupPasteToFitSlideSlideNo \u003d 33;"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"        private const int OrigIsClipboardRestoredReplaceWithClipboardSlideNo \u003d 35;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        private const int ExpIsClipboardRestoredReplaceWithClipboardSlideNo \u003d 36;"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"        private const int OrigIsClipboardRestoredPasteIntoGroupSlideNo \u003d 37;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        private const int ExpIsClipboardRestoredPasteIntoGroupSlideNo \u003d 38;"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"iskandarzulkarnaien"},"content":"        private const int OriginalReplaceWithClipboardDegradationSlideNo \u003d 39;"},{"lineNumber":61,"author":{"gitId":"iskandarzulkarnaien"},"content":"        private const int ReplacedReplaceWithClipboardDegradationSlideNo \u003d 40;"},{"lineNumber":62,"author":{"gitId":"iskandarzulkarnaien"},"content":"        private const int DegradedReplaceWithClipboardDegradationSlideNo \u003d 41;"},{"lineNumber":63,"author":{"gitId":"iskandarzulkarnaien"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        protected override string GetTestingSlideName()"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return \"PasteLab\\\\PasteLab.pptx\";"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        [TestMethod]"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        [TestCategory(\"FT\")]"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        public void FT_PasteLabTest()"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            PasteToFillSlide(OriginalPasteToFillSlideSlideNo, ExpectedPasteToFillSlideSlideNo);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            PasteToFillSlide(OriginalDiagonalPasteToFillSlideSlideNo, ExpectedDiagonalPasteToFillSlideSlideNo);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            PasteToFillSlide(OriginalMultiplePasteToFillSlideSlideNo, ExpectedMultiplePasteToFillSlideSlideNo);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            PasteToFillSlide(OriginalGroupPasteToFillSlideSlideNo, ExpectedGroupPasteToFillSlideSlideNo);"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"            PasteAtCursorPosition(OriginalPasteAtCursorSlideNo, ExpectedPasteAtCursorSlideNo);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            PasteAtOriginalPosition(OriginalPasteAtOriginalSlideNo, ExpectedPasteAtOriginalSlideNo);"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"            ReplaceWithClipboard(OriginalReplaceWithClipboardSlideNo, ExpectedReplaceWithClipboardSlideNo);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            ReplaceWithClipboard(OriginalGroupReplaceWithClipboardSlideNo, ExpectedGroupReplaceWithClipboardSlideNo);"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"            PasteIntoGroup(OriginalPasteIntoGroupSlideNo, ExpectedPasteIntoGroupSlideNo);"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"            PasteToFitSlide(OriginalPasteToFitSlideSlideNo, ExpectedPasteToFitSlideSlideNo);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            PasteToFitSlide(OriginalDiagonalPasteToFitSlideSlideNo, ExpectedDiagonalPasteToFitSlideSlideNo);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            PasteToFitSlide(OriginalMultiplePasteToFitSlideSlideNo, ExpectedMultiplePasteToFitSlideSlideNo);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            PasteToFitSlide(OriginalGroupPasteToFitSlideSlideNo, ExpectedGroupPasteToFitSlideSlideNo);"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"            IsClipboardRestoredReplaceWithClipboard(OrigIsClipboardRestoredReplaceWithClipboardSlideNo, ExpIsClipboardRestoredReplaceWithClipboardSlideNo);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            IsClipboardRestoredPasteIntoGroup(OrigIsClipboardRestoredPasteIntoGroupSlideNo, ExpIsClipboardRestoredPasteIntoGroupSlideNo);"},{"lineNumber":93,"author":{"gitId":"iskandarzulkarnaien"},"content":""},{"lineNumber":94,"author":{"gitId":"iskandarzulkarnaien"},"content":"            IsDegradedAfterReplaceWithClipboard(OriginalReplaceWithClipboardDegradationSlideNo, ReplacedReplaceWithClipboardDegradationSlideNo,"},{"lineNumber":95,"author":{"gitId":"iskandarzulkarnaien"},"content":"                DegradedReplaceWithClipboardDegradationSlideNo);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"        private void PasteToFillSlide(int originalSlideNo, int expSlideNo)"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Microsoft.Office.Interop.PowerPoint.ShapeRange shapes \u003d GetShapesByPrefix(originalSlideNo, ShapeToCopyPrefix);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            shapes.Cut();"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"            PplFeatures.PasteToFillSlide();"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"            AssertIsSame(originalSlideNo, expSlideNo);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"        private void PasteAtCursorPosition(int originalSlideNo, int expSlideNo)"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            Microsoft.Office.Interop.PowerPoint.ShapeRange shapes \u003d GetShapesByPrefix(originalSlideNo, ShapeToCopyPrefix);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            shapes.Cut();"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"            RightClick(GetShapesByPrefix(originalSlideNo, ShapeToClick)[1]);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            // wait for awhile for click to register properly"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            ThreadUtil.WaitFor(500);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            PplFeatures.PasteAtCursorPosition();"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"            AssertIsSame(originalSlideNo, expSlideNo);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"        private void PasteAtOriginalPosition(int originalSlideNo, int expSlideNo)"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            Microsoft.Office.Interop.PowerPoint.ShapeRange shapes \u003d GetShapesByPrefix(originalSlideNo, ShapeToCopyPrefix);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            shapes.Cut();"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"            PplFeatures.PasteAtOriginalPosition();"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"            AssertIsSame(originalSlideNo, expSlideNo);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private void ReplaceWithClipboard(int originalSlideNo, int expSlideNo)"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            Microsoft.Office.Interop.PowerPoint.ShapeRange shapes \u003d GetShapesByPrefix(originalSlideNo, ShapeToCopyPrefix);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            shapes.Cut();"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"            PpOperations.SelectShapes(new List\u003cstring\u003e { ShapeToReplace });"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            PplFeatures.ReplaceWithClipboard();"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"            AssertIsSame(originalSlideNo, expSlideNo);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private void PasteIntoGroup(int originalSlideNo, int expSlideNo)"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            Microsoft.Office.Interop.PowerPoint.ShapeRange shapes \u003d GetShapesByPrefix(originalSlideNo, ShapeToCopyPrefix);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            shapes.Cut();"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"            PpOperations.SelectShape(GroupToPaste);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            PplFeatures.PasteIntoGroup();"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"            AssertIsSame(originalSlideNo, expSlideNo);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private void PasteToFitSlide(int originalSlideNo, int expSlideNo)"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            var shapes \u003d GetShapesByPrefix(originalSlideNo, ShapeToCopyPrefix);"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            shapes.Cut();"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"            PplFeatures.PasteToFitSlide();"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"            AssertIsSame(originalSlideNo, expSlideNo);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private void IsClipboardRestoredReplaceWithClipboard(int originalSlideNo, int expSlideNo)"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            CheckIfClipboardIsRestored(() \u003d\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                Microsoft.Office.Interop.PowerPoint.ShapeRange shapes \u003d GetShapesByPrefix(OrigIsClipboardRestoredReplaceWithClipboardSlideNo, ShapeToCopyPrefix);"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                // This should be restored to clipboard later"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                shapes.Cut();"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"                PpOperations.SelectShapes(new List\u003cstring\u003e { ShapeToReplace });"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                PplFeatures.ReplaceWithClipboard();"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"            }, originalSlideNo, ShapeToCopyPrefix, expSlideNo, \"\", ShapeToCompareCopied);"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"        private void IsClipboardRestoredPasteIntoGroup(int originalSlideNo, int expSlideNo)"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            CheckIfClipboardIsRestored(() \u003d\u003e"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                Microsoft.Office.Interop.PowerPoint.ShapeRange shapes \u003d GetShapesByPrefix(OrigIsClipboardRestoredPasteIntoGroupSlideNo, ShapeToCopyPrefix);"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                // This should be restored to clipboard later"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                shapes.Cut();"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"                PpOperations.SelectShape(GroupToPaste);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                PplFeatures.PasteIntoGroup();"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }, originalSlideNo, ShapeToCopyPrefix, expSlideNo, \"\", ShapeToCompareCopied);"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"iskandarzulkarnaien"},"content":"        private void IsDegradedAfterReplaceWithClipboard(int originalSlideNo, int replacedSlideNo, int degradedSlideNo)"},{"lineNumber":191,"author":{"gitId":"iskandarzulkarnaien"},"content":"        {"},{"lineNumber":192,"author":{"gitId":"iskandarzulkarnaien"},"content":"            Microsoft.Office.Interop.PowerPoint.ShapeRange shapes \u003d GetShapesByPrefix(replacedSlideNo, ShapeToCopyPrefix);"},{"lineNumber":193,"author":{"gitId":"iskandarzulkarnaien"},"content":"            shapes.Cut();"},{"lineNumber":194,"author":{"gitId":"iskandarzulkarnaien"},"content":""},{"lineNumber":195,"author":{"gitId":"iskandarzulkarnaien"},"content":"            PpOperations.SelectShapes(new List\u003cstring\u003e { ShapeToReplace });"},{"lineNumber":196,"author":{"gitId":"iskandarzulkarnaien"},"content":"            PplFeatures.ReplaceWithClipboard();"},{"lineNumber":197,"author":{"gitId":"iskandarzulkarnaien"},"content":""},{"lineNumber":198,"author":{"gitId":"iskandarzulkarnaien"},"content":"            // Degradation results in subtle differences, therefore comparison threshold must be stricter"},{"lineNumber":199,"author":{"gitId":"iskandarzulkarnaien"},"content":"            AssertIsSame(originalSlideNo, replacedSlideNo, 0.999999999);"},{"lineNumber":200,"author":{"gitId":"iskandarzulkarnaien"},"content":"            "},{"lineNumber":201,"author":{"gitId":"iskandarzulkarnaien"},"content":"            // Verify that the degradation is detectable"},{"lineNumber":202,"author":{"gitId":"iskandarzulkarnaien"},"content":"            AssertNotSame(originalSlideNo, degradedSlideNo, 0.999999999);"},{"lineNumber":203,"author":{"gitId":"iskandarzulkarnaien"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"iskandarzulkarnaien"},"content":""},{"lineNumber":205,"author":{"gitId":"iskandarzulkarnaien"},"content":"        private void AssertIsSame(int actualSlideNo, int expectedSlideNo, double similarityTolerance \u003d 0.95)"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            Microsoft.Office.Interop.PowerPoint.Slide actualSlide \u003d PpOperations.SelectSlide(actualSlideNo);"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            Microsoft.Office.Interop.PowerPoint.Slide expectedSlide \u003d PpOperations.SelectSlide(expectedSlideNo);"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"iskandarzulkarnaien"},"content":"            SlideUtil.IsSameLooking(expectedSlide, actualSlide, similarityTolerance);"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            SlideUtil.IsSameAnimations(expectedSlide, actualSlide);"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"iskandarzulkarnaien"},"content":"        private void AssertNotSame(int actualSlideNo, int expectedSlideNo, double similarityTolerance \u003d 0.95)"},{"lineNumber":215,"author":{"gitId":"iskandarzulkarnaien"},"content":"        {"},{"lineNumber":216,"author":{"gitId":"iskandarzulkarnaien"},"content":"            try"},{"lineNumber":217,"author":{"gitId":"iskandarzulkarnaien"},"content":"            {"},{"lineNumber":218,"author":{"gitId":"iskandarzulkarnaien"},"content":"                AssertIsSame(actualSlideNo, expectedSlideNo, similarityTolerance);"},{"lineNumber":219,"author":{"gitId":"iskandarzulkarnaien"},"content":"            }"},{"lineNumber":220,"author":{"gitId":"iskandarzulkarnaien"},"content":"            catch (AssertFailedException)"},{"lineNumber":221,"author":{"gitId":"iskandarzulkarnaien"},"content":"            {"},{"lineNumber":222,"author":{"gitId":"iskandarzulkarnaien"},"content":"                return;"},{"lineNumber":223,"author":{"gitId":"iskandarzulkarnaien"},"content":"            }"},{"lineNumber":224,"author":{"gitId":"iskandarzulkarnaien"},"content":"            throw new AssertFailedException(\"AssertNotSame failed. The slides look similar.\");"},{"lineNumber":225,"author":{"gitId":"iskandarzulkarnaien"},"content":"        }"},{"lineNumber":226,"author":{"gitId":"iskandarzulkarnaien"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":"        private Microsoft.Office.Interop.PowerPoint.ShapeRange GetShapesByPrefix(int slideNo, string shapePrefix)"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            PpOperations.SelectSlide(slideNo);"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return PpOperations.SelectShapesByPrefix(shapePrefix);"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"        private void RightClick(Shape target)"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            Point pt \u003d new Point("},{"lineNumber":236,"author":{"gitId":"-"},"content":"                PpOperations.PointsToScreenPixelsX(target.Left + target.Width / 2),"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                PpOperations.PointsToScreenPixelsY(target.Top + target.Height / 2));"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            MouseUtil.SendMouseRightClick(pt.X, pt.Y);"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"iskandarzulkarnaien":37,"-":204}}]

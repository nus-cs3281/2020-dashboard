{
  "authorDailyContributionsMap": {
    "Parcly-Taxel": [
      {
        "date": "2020-01-13",
        "commitResults": [
          {
            "hash": "5083fc88ba2a8410b14df63f07481fdbacd23b10",
            "messageTitle": "Actual initial commit",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 1,
                "deletions": 0
              },
              "md": {
                "insertions": 5,
                "deletions": 2
              },
              "py": {
                "insertions": 7,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "date": "2020-01-16",
        "commitResults": [
          {
            "hash": "4b0c631a85f0d52a39c5e1f0b55352c41a6235c3",
            "messageTitle": "Add main fetching code",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "py": {
                "insertions": 38,
                "deletions": 5
              }
            }
          }
        ]
      },
      {
        "date": "2020-01-18",
        "commitResults": [
          {
            "hash": "15ef8dfc7022dac34d37db19935519dccc1d604f",
            "messageTitle": "Split out methods, add setup.py",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "py": {
                "insertions": 90,
                "deletions": 31
              }
            }
          },
          {
            "hash": "55df3e4aabf524833d7308fa0a5dbb9b57260176",
            "messageTitle": "Add commit function, readme update",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 6,
                "deletions": 1
              },
              "py": {
                "insertions": 28,
                "deletions": 10
              }
            }
          },
          {
            "hash": "a3f2b74034091292af5e7d3482be8104d841d858",
            "messageTitle": "Complete commit and push functions",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 9,
                "deletions": 0
              },
              "py": {
                "insertions": 21,
                "deletions": 13
              }
            }
          }
        ]
      },
      {
        "date": "2020-01-19",
        "commitResults": [
          {
            "hash": "3d18eb542860f9969d9dc280b2833a6f51351c37",
            "messageTitle": "Explain the FET name",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 5,
                "deletions": 6
              },
              "py": {
                "insertions": 1,
                "deletions": 1
              }
            }
          },
          {
            "hash": "4c8b44c7108c8393e6896127b7c74f29b714458c",
            "messageTitle": "Use SLAP and expand short variable names",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 1,
                "deletions": 1
              },
              "py": {
                "insertions": 81,
                "deletions": 64
              }
            }
          },
          {
            "hash": "4848cd5d951577a4b170db53dc56fd9b5e0b7fce",
            "messageTitle": "Fix #3",
            "messageBody": "Also allow the program to proceed even if endpoint/files exists\n",
            "fileTypesAndContributionMap": {
              "py": {
                "insertions": 24,
                "deletions": 21
              }
            }
          }
        ]
      },
      {
        "date": "2020-02-03",
        "commitResults": [
          {
            "hash": "51e0196c19cd4af7f9b9b7797b5c701f8284cd2e",
            "messageTitle": "Fix #4 by adding list-reading function",
            "messageBody": "The transfer process keeps track of which usernames have not been read yet and dumps them into a file, allowing resumption after an interruption\n",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 4,
                "deletions": 2
              },
              "py": {
                "insertions": 21,
                "deletions": 11
              }
            }
          },
          {
            "hash": "394478d6355a2e0adf2b45b7952b6e71bf80532f",
            "messageTitle": "Use Python\u0027s argparser",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "py": {
                "insertions": 13,
                "deletions": 8
              }
            }
          }
        ]
      },
      {
        "date": "2020-02-10",
        "commitResults": [
          {
            "hash": "ccdebe82b1d8a8177e8066efdf6ba85caa5d0c57",
            "messageTitle": "Bare-bones issue fetcher",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "py": {
                "insertions": 8,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "date": "2020-02-26",
        "commitResults": [
          {
            "hash": "fa50ef6b28c272f2f70d0637d17daf5e2b48eb5f",
            "messageTitle": "Separate credential provisions into another file",
            "messageBody": "Previously, credentials had to be provided by editing the source. Now\nthey can be provided in a separate file; this not only hides private\ninformation better but allows them to be reused elsewhere more easily.\n",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 1,
                "deletions": 0
              },
              "md": {
                "insertions": 8,
                "deletions": 1
              },
              "py": {
                "insertions": 13,
                "deletions": 9
              }
            }
          },
          {
            "hash": "a64965758efd789b740ea6de7438d662525a77b5",
            "messageTitle": "Use GraphQL to fetch issues",
            "messageBody": "Only the title, body and labels are relevant here.\n",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 10,
                "deletions": 3
              },
              "py": {
                "insertions": 86,
                "deletions": 10
              }
            }
          }
        ]
      },
      {
        "date": "2020-02-27",
        "commitResults": [
          {
            "hash": "921f6c35f631ad1b70f53b13747084c88364f4a1",
            "messageTitle": "Finish up GraphQL-based issue transporter",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 13,
                "deletions": 7
              },
              "py": {
                "insertions": 125,
                "deletions": 13
              }
            }
          },
          {
            "hash": "844638d59a93df5eab67e4839df18e7cde95c072",
            "messageTitle": "Enable handling of UTF-16 surrogate pairs",
            "messageBody": "...which triggered the stop-and-restart system, and that went well\n",
            "fileTypesAndContributionMap": {
              "py": {
                "insertions": 11,
                "deletions": 5
              }
            }
          },
          {
            "hash": "42057ee43d433c45ba5f07a2eb1025680ed41839",
            "messageTitle": "Note on running time",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 2,
                "deletions": 0
              }
            }
          },
          {
            "hash": "49b1ba9bd99ea97f7654bf6a26056188d83f3196",
            "messageTitle": "Use REST API for creating issues",
            "messageBody": "This turned out to be much better than GraphQL.\n",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 9,
                "deletions": 3
              },
              "py": {
                "insertions": 117,
                "deletions": 202
              }
            }
          },
          {
            "hash": "67cec4362b5fd8c2444f93a0adf5288481b053f7",
            "messageTitle": "Fix lagging documentation",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 1,
                "deletions": 1
              }
            }
          },
          {
            "hash": "69397d5e7f695d0253f1f9d4569e430f41c644be",
            "messageTitle": "Ensure restartability of the import process",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "py": {
                "insertions": 2,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "date": "2020-04-10",
        "commitResults": [
          {
            "hash": "67992907b8d40efed045b850a0c79b7325f0a40b",
            "messageTitle": "Fix #2 (implement parallel repository transfers)",
            "messageBody": "The built-in multiprocessing module allows parallel processes. Since\ndownloading repositories is inherently I/O-bound, it makes sense to\nparallelise the downloads â€“ no conflicts are foreseen, as the processes\nonly write files with UUID names to a central location.\n\nNow a significant portion of the time is spent pushing the grand\nensemble of files back up.\n",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 4,
                "deletions": 4
              },
              "py": {
                "insertions": 17,
                "deletions": 10
              }
            }
          },
          {
            "hash": "110f9d83c72eccf904ebf7081973c096288203cb",
            "messageTitle": "Add option to control parallelism",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 2,
                "deletions": 2
              },
              "py": {
                "insertions": 9,
                "deletions": 4
              }
            }
          }
        ]
      }
    ]
  },
  "authorFileTypeContributionMap": {
    "Parcly-Taxel": {
      "py": 293,
      "md": 48,
      "txt": 2
    }
  },
  "authorContributionVariance": {
    "Parcly-Taxel": 2767.7034
  },
  "authorDisplayNameMap": {
    "Parcly-Taxel": "JERE..ERUI"
  }
}
